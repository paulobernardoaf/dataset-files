<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\deps\w32-pthreads\sched_get_priority_max.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pthread.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"implement.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sched.h"</cpp:file></cpp:include>

<function><type><name>int</name></type>

<name>sched_get_priority_max</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>policy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>policy</name> <argument_list type="generic">&lt; <argument><expr><name>SCHED_MIN</name> <operator>||</operator> <name>policy</name></expr></argument> &gt;</argument_list></name> <name>SCHED_MAX</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>errno</name> <operator>=</operator> <name>EINVAL</name></expr>;</expr_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>THREAD_PRIORITY_LOWEST</name> <operator>&gt;</operator> <name>THREAD_PRIORITY_NORMAL</name><operator>)</operator></expr></cpp:if>

<return>return <expr><call><name>PTW32_MAX</name> <argument_list>(<argument><expr><name>THREAD_PRIORITY_IDLE</name></expr></argument>, <argument><expr><name>THREAD_PRIORITY_TIME_CRITICAL</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<return>return <expr><call><name>PTW32_MAX</name> <argument_list>(<argument><expr><name>THREAD_PRIORITY_IDLE</name></expr></argument>, <argument><expr><name>THREAD_PRIORITY_TIME_CRITICAL</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

</unit>
