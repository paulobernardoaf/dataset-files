<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\deps\w32-pthreads\ptw32_tkAssocCreate.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pthread.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"implement.h"</cpp:file></cpp:include>

<function><type><name>int</name></type>

<name>ptw32_tkAssocCreate</name> <parameter_list>(<parameter><decl><type><name>ptw32_thread_t</name> <modifier>*</modifier></type> <name>sp</name></decl></parameter>, <parameter><decl><type><name>pthread_key_t</name></type> <name>key</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ThreadKeyAssoc</name> <modifier>*</modifier></type><name>assoc</name></decl>;</decl_stmt>

<expr_stmt><expr><name>assoc</name> <operator>=</operator> <operator>(</operator><name>ThreadKeyAssoc</name> <operator>*</operator><operator>)</operator> <call><name>calloc</name> <argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>assoc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>assoc</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<return>return <expr><name>ENOMEM</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>thread</name></name> <operator>=</operator> <name>sp</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>key</name></name> <operator>=</operator> <name>key</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>prevThread</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>nextThread</name></name> <operator>=</operator> <operator>(</operator><name>ThreadKeyAssoc</name> <operator>*</operator><operator>)</operator> <name><name>key</name><operator>-&gt;</operator><name>threads</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>assoc</name><operator>-&gt;</operator><name>nextThread</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>nextThread</name><operator>-&gt;</operator><name>prevThread</name></name> <operator>=</operator> <name>assoc</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>threads</name></name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator> <name>assoc</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>prevKey</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>nextKey</name></name> <operator>=</operator> <operator>(</operator><name>ThreadKeyAssoc</name> <operator>*</operator><operator>)</operator> <name><name>sp</name><operator>-&gt;</operator><name>keys</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>assoc</name><operator>-&gt;</operator><name>nextKey</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>assoc</name><operator>-&gt;</operator><name>nextKey</name><operator>-&gt;</operator><name>prevKey</name></name> <operator>=</operator> <name>assoc</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sp</name><operator>-&gt;</operator><name>keys</name></name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator> <name>assoc</name></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>

</block_content>}</block></function> 

</unit>
