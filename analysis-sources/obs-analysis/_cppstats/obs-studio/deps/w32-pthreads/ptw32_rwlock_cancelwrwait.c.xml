<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\deps\w32-pthreads\ptw32_rwlock_cancelwrwait.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pthread.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"implement.h"</cpp:file></cpp:include>

<function><type><name>void</name></type>

<name>ptw32_rwlock_cancelwrwait</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>pthread_rwlock_t</name></type> <name>rwl</name> <init>= <expr><operator>(</operator><name>pthread_rwlock_t</name><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>rwl</name><operator>-&gt;</operator><name>nSharedAccessCount</name></name> <operator>=</operator> <operator>-</operator><name><name>rwl</name><operator>-&gt;</operator><name>nCompletedSharedAccessCount</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rwl</name><operator>-&gt;</operator><name>nCompletedSharedAccessCount</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>pthread_mutex_unlock</name> <argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name><name>rwl</name><operator>-&gt;</operator><name>mtxSharedAccessCompleted</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>pthread_mutex_unlock</name> <argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name><name>rwl</name><operator>-&gt;</operator><name>mtxExclusiveAccess</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
