<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\deps\w32-pthreads\config.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PTW32_BUILD</name></cpp:macro></cpp:define>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SIGSET_T</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SIGNAL_H</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TASM32</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_DUPLICATEHANDLE</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_CREATETHREAD</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_ERRNO</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_CALLOC</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_FTIME</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_SEM</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_UNICODE_CONSTS</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_C_INLINE</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_MODE_T</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GCC_ATOMIC_BUILTINS</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_STRUCT_TIMESPEC</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NEED_PROCESS_AFFINITY_MASK</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>RETAIN_WSALASTERROR</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PTW32_THREAD_ID_REUSE_INCREMENT</name></cpp:undef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>WINCE</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEED_DUPLICATEHANDLE</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEED_CREATETHREAD</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEED_ERRNO</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEED_CALLOC</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEED_FTIME</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEED_UNICODE_CONSTS</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEED_PROCESS_AFFINITY_MASK</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RETAIN_WSALASTERROR</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_UWIN</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MODE_T</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRUCT_TIMESPEC</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_C_INLINE</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__MINGW64__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MODE_T</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRUCT_TIMESPEC</name></cpp:macro></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__MINGW32__</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MODE_T</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__BORLANDC__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__WATCOMC__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__DMC__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SIGNAL_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_C_INLINE</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
