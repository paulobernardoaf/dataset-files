













#ifndef LZMA_H_INTERNAL
#	error Never include this file directly. Use <lzma.h> instead.
#endif











typedef unsigned char lzma_bool;














typedef enum {
	LZMA_RESERVED_ENUM      = 0
} lzma_reserved_enum;










typedef enum {
	LZMA_OK                 = 0,
		



	LZMA_STREAM_END         = 1,
		










	LZMA_NO_CHECK           = 2,
		













	LZMA_UNSUPPORTED_CHECK  = 3,
		























	LZMA_GET_CHECK          = 4,
		











	LZMA_MEM_ERROR          = 5,
		










	LZMA_MEMLIMIT_ERROR     = 6,
		








	LZMA_FORMAT_ERROR       = 7,
		








	LZMA_OPTIONS_ERROR      = 8,
		










	LZMA_DATA_ERROR         = 9,
		

















	LZMA_BUF_ERROR          = 10,
		

























	LZMA_PROG_ERROR         = 11,
		

















} lzma_ret;












typedef enum {
	LZMA_RUN = 0,
		












	LZMA_SYNC_FLUSH = 1,
		























	LZMA_FULL_FLUSH = 2,
		













	LZMA_FINISH = 3
		















} lzma_action;


















typedef struct {
	

































	void *(LZMA_API_CALL *alloc)(void *opaque, size_t nmemb, size_t size);

	











	void (LZMA_API_CALL *free)(void *opaque, void *ptr);

	








	void *opaque;

} lzma_allocator;







typedef struct lzma_internal_s lzma_internal;









































typedef struct {
	const uint8_t *next_in; 
	size_t avail_in;    
	uint64_t total_in;  

	uint8_t *next_out;  
	size_t avail_out;   
	uint64_t total_out; 

	





	lzma_allocator *allocator;

	
	lzma_internal *internal;

	





	void *reserved_ptr1;
	void *reserved_ptr2;
	void *reserved_ptr3;
	void *reserved_ptr4;
	uint64_t reserved_int1;
	uint64_t reserved_int2;
	size_t reserved_int3;
	size_t reserved_int4;
	lzma_reserved_enum reserved_enum1;
	lzma_reserved_enum reserved_enum2;

} lzma_stream;




















#define LZMA_STREAM_INIT { NULL, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, LZMA_RESERVED_ENUM, LZMA_RESERVED_ENUM }

















extern LZMA_API(lzma_ret) lzma_code(lzma_stream *strm, lzma_action action)
		lzma_nothrow lzma_attr_warn_unused_result;















extern LZMA_API(void) lzma_end(lzma_stream *strm) lzma_nothrow;
























extern LZMA_API(uint64_t) lzma_memusage(const lzma_stream *strm)
		lzma_nothrow lzma_attr_pure;











extern LZMA_API(uint64_t) lzma_memlimit_get(const lzma_stream *strm)
		lzma_nothrow lzma_attr_pure;














extern LZMA_API(lzma_ret) lzma_memlimit_set(
		lzma_stream *strm, uint64_t memlimit) lzma_nothrow;
