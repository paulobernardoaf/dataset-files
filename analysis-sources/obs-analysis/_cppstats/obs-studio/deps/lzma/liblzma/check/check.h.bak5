














#include "common.h"




#if defined(HAVE_CHECK_SHA256)
#define LZMA_CHECK_BEST LZMA_CHECK_SHA256
#elif defined(HAVE_CHECK_CRC64)
#define LZMA_CHECK_BEST LZMA_CHECK_CRC64
#else
#define LZMA_CHECK_BEST LZMA_CHECK_CRC32
#endif






typedef struct {

union {
uint8_t u8[64];
uint32_t u32[16];
uint64_t u64[8];
} buffer;


union {
uint32_t crc32;
uint64_t crc64;

struct {

uint32_t state[8];


uint64_t size;
} sha256;
} state;

} lzma_check_state;




#if defined(HAVE_SMALL)
extern uint32_t lzma_crc32_table[1][256];
extern void lzma_crc32_init(void);
#else
extern const uint32_t lzma_crc32_table[8][256];
extern const uint64_t lzma_crc64_table[4][256];
#endif







extern void lzma_check_init(lzma_check_state *check, lzma_check type);


extern void lzma_check_update(lzma_check_state *check, lzma_check type,
const uint8_t *buf, size_t size);


extern void lzma_check_finish(lzma_check_state *check, lzma_check type);



extern void lzma_sha256_init(lzma_check_state *check);


extern void lzma_sha256_update(
const uint8_t *buf, size_t size, lzma_check_state *check);


extern void lzma_sha256_finish(lzma_check_state *check);


