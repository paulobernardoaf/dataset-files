<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\deps\libcaption\caption\srt.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"caption.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"eia608.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vtt.h"</cpp:file></cpp:include>

<typedef>typedef <type><name>vtt_t</name></type> <name>srt_t</name>;</typedef>

<typedef>typedef <type><name>vtt_block_t</name></type> <name>srt_cue_t</name>;</typedef>

<function_decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt_new</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt_free_head</name><parameter_list>(<parameter><decl><type><name>srt_t</name><modifier>*</modifier></type> <name>head</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt_parse</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>utf8_char_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>srt_free</name><parameter_list>(<parameter><decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vtt_block_t</name><modifier>*</modifier></type> <name>srt_next</name><parameter_list>(<parameter><decl><type><name>vtt_block_t</name><modifier>*</modifier></type> <name>srt</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><name><name>srt</name><operator>-&gt;</operator><name>next</name></name></expr>;</return> </block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>utf8_char_t</name><modifier>*</modifier></type> <name>srt_cue_data</name><parameter_list>(<parameter><decl><type><name>srt_cue_t</name><modifier>*</modifier></type> <name>cue</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>vtt_block_data</name><argument_list>(<argument><expr><name>cue</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>srt_cue_t</name><modifier>*</modifier></type> <name>srt_cue_from_caption_frame</name><parameter_list>(<parameter><decl><type><name>caption_frame_t</name><modifier>*</modifier></type> <name>frame</name></decl></parameter>, <parameter><decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>vtt_cue_from_caption_frame</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>srt</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function><empty_stmt>;</empty_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>srt_cue_free_head</name><parameter_list>(<parameter><decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt</name></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>vtt_cue_free_head</name><argument_list>(<argument><expr><name>srt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function><empty_stmt>;</empty_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>srt_cue_t</name><modifier>*</modifier></type> <name>srt_cue_new</name><parameter_list>(<parameter><decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>utf8_char_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>vtt_block_new</name><argument_list>(<argument><expr><name>srt</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>VTT_CUE</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function><empty_stmt>;</empty_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>srt_cue_to_caption_frame</name><parameter_list>(<parameter><decl><type><name>srt_cue_t</name><modifier>*</modifier></type> <name>cue</name></decl></parameter>, <parameter><decl><type><name>caption_frame_t</name><modifier>*</modifier></type> <name>frame</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>vtt_cue_to_caption_frame</name><argument_list>(<argument><expr><name>cue</name></expr></argument>, <argument><expr><name>frame</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function><empty_stmt>;</empty_stmt>

<function_decl><type><name>void</name></type> <name>srt_dump</name><parameter_list>(<parameter><decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vtt_dump</name><parameter_list>(<parameter><decl><type><name>srt_t</name><modifier>*</modifier></type> <name>srt</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
