<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\deps\libcaption\caption\cea708.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"caption.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CEA608_MAX_SIZE</name></cpp:macro> <cpp:value>(255)</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <block>{

<decl><name>cc_type_ntsc_cc_field_1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>cc_type_ntsc_cc_field_2</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>cc_type_dtvcc_packet_data</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>cc_type_dtvcc_packet_start</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

}</block></enum></type> <name>cea708_cc_type_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>marker_bits</name> <range>: <expr><literal type="number">5</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>cc_valid</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>cc_type</name> <range>: <expr><literal type="number">2</literal></expr></range></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>cc_data</name> <range>: <expr><literal type="number">16</literal></expr></range></decl>;</decl_stmt>

}</block></struct></type> <name>cc_data_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>process_em_data_flag</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>process_cc_data_flag</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>additional_data_flag</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>cc_count</name> <range>: <expr><literal type="number">5</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>em_data</name> <range>: <expr><literal type="number">8</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cc_data_t</name></type> <name><name>cc_data</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>user_data_t</name>;</typedef>

<function_decl><type><name>cc_data_t</name></type> <name>cea708_encode_cc_data</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>cc_valid</name></decl></parameter>, <parameter><decl><type><name>cea708_cc_type_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>cc_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>cea708_cc_count</name><parameter_list>(<parameter><decl><type><name>user_data_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint16_t</name></type> <name>cea708_cc_data</name><parameter_list>(<parameter><decl><type><name>user_data_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier></type> <name>valid</name></decl></parameter>, <parameter><decl><type><name>cea708_cc_type_t</name><modifier>*</modifier></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><enum>enum <block>{

<decl><name>country_united_states</name> <init>= <expr><literal type="number">181</literal></expr></init></decl>,

}</block></enum></type> <name>itu_t_t35_country_code_t</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{

<decl><name>t35_provider_direct_tv</name> <init>= <expr><literal type="number">47</literal></expr></init></decl>,

<decl><name>t35_provider_atsc</name> <init>= <expr><literal type="number">49</literal></expr></init></decl>,

}</block></enum></type> <name>itu_t_t35_provider_code_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>itu_t_t35_country_code_t</name></type> <name>country</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>itu_t_t35_provider_code_t</name></type> <name>provider</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>user_identifier</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>user_data_type_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>directv_user_data_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>user_data_t</name></type> <name>user_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>timestamp</name></decl>;</decl_stmt>

}</block></struct></type> <name>cea708_t</name>;</typedef>

<decl_stmt><decl><type><specifier>const</specifier> <specifier>static</specifier> <name>uint32_t</name></type> <name>GA94</name> <init>= <expr><operator>(</operator><operator>(</operator><literal type="char">'G'</literal> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><literal type="char">'A'</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><literal type="char">'9'</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="char">'4'</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <specifier>static</specifier> <name>uint32_t</name></type> <name>DTG1</name> <init>= <expr><operator>(</operator><operator>(</operator><literal type="char">'D'</literal> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><literal type="char">'T'</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><literal type="char">'G'</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="char">'1'</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> <name>cea708_init</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>timestamp</name></decl></parameter>)</parameter_list>;</function_decl> 

<function_decl><type><name>libcaption_stauts_t</name></type> <name>cea708_parse_h264</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>libcaption_stauts_t</name></type> <name>cea708_parse_h262</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>libcaption_stauts_t</name></type> <name>cea708_to_caption_frame</name><parameter_list>(<parameter><decl><type><name>caption_frame_t</name><modifier>*</modifier></type> <name>frame</name></decl></parameter>, <parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>cea708_add_cc_data</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>valid</name></decl></parameter>, <parameter><decl><type><name>cea708_cc_type_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>cc_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>cea708_render</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>cea708_dump</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
