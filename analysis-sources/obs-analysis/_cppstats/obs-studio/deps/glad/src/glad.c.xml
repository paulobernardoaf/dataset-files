<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\deps\glad\src\glad.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;glad/glad.h&gt;</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>void</name><modifier>*</modifier></type> <name>get_proc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>namez</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>HMODULE</name></type> <name>libGL</name></decl>;</decl_stmt>

<typedef>typedef <function_decl><type><name>void</name><modifier>*</modifier></type> (<name>APIENTRYP</name> <name>PFNWGLGETPROCADDRESSPROC_PRIVATE</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<decl_stmt><decl><type><name>PFNWGLGETPROCADDRESSPROC_PRIVATE</name></type> <name>gladGetProcAddressPtr</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier>

<name>int</name></type> <name>open_gl</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name>libGL</name> <operator>=</operator> <call><name>LoadLibraryA</name><argument_list>(<argument><expr><literal type="string">"opengl32.dll"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>libGL</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>gladGetProcAddressPtr</name> <operator>=</operator> <operator>(</operator><name>PFNWGLGETPROCADDRESSPROC_PRIVATE</name><operator>)</operator><call><name>GetProcAddress</name><argument_list>(

<argument><expr><name>libGL</name></expr></argument>, <argument><expr><literal type="string">"wglGetProcAddress"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>gladGetProcAddressPtr</name> <operator>!=</operator> <name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier>

<name>void</name></type> <name>close_gl</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name>libGL</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>FreeLibrary</name><argument_list>(<argument><expr><name>libGL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>libGL</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dlfcn.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>void</name><modifier>*</modifier></type> <name>libGL</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <function_decl><type><name>void</name><modifier>*</modifier></type> (<name>APIENTRYP</name> <name>PFNGLXGETPROCADDRESSPROC_PRIVATE</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<decl_stmt><decl><type><name>PFNGLXGETPROCADDRESSPROC_PRIVATE</name></type> <name>gladGetProcAddressPtr</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier>

<name>int</name></type> <name>open_gl</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>NAMES</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="string">"../Frameworks/OpenGL.framework/OpenGL"</literal></expr>,

<expr><literal type="string">"/Library/Frameworks/OpenGL.framework/OpenGL"</literal></expr>,

<expr><literal type="string">"/System/Library/Frameworks/OpenGL.framework/OpenGL"</literal></expr>,

<expr><literal type="string">"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL"</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>NAMES</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="string">"libGL.so.1"</literal></expr>, <expr><literal type="string">"libGL.so"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>index</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>index</name> <operator>&lt;</operator> <operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>NAMES</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>NAMES</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><name>index</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>libGL</name> <operator>=</operator> <call><name>dlopen</name><argument_list>(<argument><expr><name><name>NAMES</name><index>[<expr><name>index</name></expr>]</index></name></expr></argument>, <argument><expr><name>RTLD_NOW</name> <operator>|</operator> <name>RTLD_GLOBAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>libGL</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<return>return <expr><literal type="number">1</literal></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>gladGetProcAddressPtr</name> <operator>=</operator> <operator>(</operator><name>PFNGLXGETPROCADDRESSPROC_PRIVATE</name><operator>)</operator><call><name>dlsym</name><argument_list>(<argument><expr><name>libGL</name></expr></argument>,

<argument><expr><literal type="string">"glXGetProcAddressARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>gladGetProcAddressPtr</name> <operator>!=</operator> <name>NULL</name></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier>

<name>void</name></type> <name>close_gl</name><parameter_list>()</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name>libGL</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>dlclose</name><argument_list>(<argument><expr><name>libGL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>libGL</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier>

<name>void</name><modifier>*</modifier></type> <name>get_proc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>namez</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>result</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>libGL</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name>gladGetProcAddressPtr</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>gladGetProcAddressPtr</name><argument_list>(<argument><expr><name>namez</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if<condition>(<expr><name>result</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>result</name> <operator>=</operator> <operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><call><name>GetProcAddress</name><argument_list>(<argument><expr><name>libGL</name></expr></argument>, <argument><expr><name>namez</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>dlsym</name><argument_list>(<argument><expr><name>libGL</name></expr></argument>, <argument><expr><name>namez</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>result</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>gladLoadGL</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><call><name>open_gl</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>gladLoadGLLoader</name><argument_list>(<argument><expr><operator>&amp;</operator><name>get_proc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>close_gl</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name><name>struct</name> <name>gladGLversionStruct</name></name></type> <name>GLVersion</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>GL_ES_VERSION_3_0</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>GL_VERSION_3_0</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GLAD_IS_SOME_NEW_VERSION</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>int</name></type> <name>has_ext</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ext</name></decl></parameter>)</parameter_list> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_GLAD_IS_SOME_NEW_VERSION</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>GLVersion</name><operator>.</operator><name>major</name></name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>extensions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>terminator</name></decl>;</decl_stmt>

<expr_stmt><expr><name>extensions</name> <operator>=</operator> <operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><call><name>glGetString</name><argument_list>(<argument><expr><name>GL_EXTENSIONS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>extensions</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>ext</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<while>while<condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loc</name> <operator>=</operator> <call><name>strstr</name><argument_list>(<argument><expr><name>extensions</name></expr></argument>, <argument><expr><name>ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>loc</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>terminator</name> <operator>=</operator> <name>loc</name> <operator>+</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>loc</name> <operator>==</operator> <name>extensions</name> <operator>||</operator> <operator>*</operator><operator>(</operator><name>loc</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>==</operator> <literal type="char">' '</literal><operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><operator>*</operator><name>terminator</name> <operator>==</operator> <literal type="char">' '</literal> <operator>||</operator> <operator>*</operator><name>terminator</name> <operator>==</operator> <literal type="char">'\0'</literal><operator>)</operator></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>extensions</name> <operator>=</operator> <name>terminator</name></expr>;</expr_stmt>

</block_content>}</block></while>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_GLAD_IS_SOME_NEW_VERSION</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>glGetIntegerv</name><argument_list>(<argument><expr><name>GL_NUM_EXTENSIONS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>index</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>index</name> <operator>&lt;</operator> <name>num</name></expr>;</condition> <incr><expr><name>index</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>e</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><call><name>glGetStringi</name><argument_list>(<argument><expr><name>GL_EXTENSIONS</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>ext</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></else></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_1_0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_1_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_1_2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_1_3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_1_4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_1_5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_2_0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_2_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_3_0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_3_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_3_2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_3_3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_4_0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_4_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_4_2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_4_3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_VERSION_4_4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXIMAGE1DPROC</name></type> <name>glad_glCopyTexImage1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3UIPROC</name></type> <name>glad_glVertexAttribI3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILMASKSEPARATEPROC</name></type> <name>glad_glStencilMaskSeparate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMINSAMPLESHADINGPROC</name></type> <name>glad_glMinSampleShading</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERRENDERBUFFERPROC</name></type> <name>glad_glFramebufferRenderbuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMSUBROUTINESUIVPROC</name></type> <name>glad_glUniformSubroutinesuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC</name></type> <name>glad_glCompressedTexSubImage3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP3UIVPROC</name></type> <name>glad_glTexCoordP3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDOUBLEI_VPROC</name></type> <name>glad_glGetDoublei_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SVPROC</name></type> <name>glad_glVertexAttrib1sv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDSAMPLERPROC</name></type> <name>glad_glBindSampler</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLINEWIDTHPROC</name></type> <name>glad_glLineWidth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORP3UIVPROC</name></type> <name>glad_glColorP3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGERI_VPROC</name></type> <name>glad_glGetIntegeri_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPILESHADERPROC</name></type> <name>glad_glCompileShader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTRANSFORMFEEDBACKVARYINGPROC</name></type> <name>glad_glGetTransformFeedbackVarying</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHRANGEFPROC</name></type> <name>glad_glDepthRangef</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBIPOINTERPROC</name></type> <name>glad_glVertexAttribIPointer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP3UIPROC</name></type> <name>glad_glMultiTexCoordP3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXP4UIPROC</name></type> <name>glad_glVertexP4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC</name></type> <name>glad_glDrawElementsInstancedBaseInstance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEIPROC</name></type> <name>glad_glEnablei</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP4UIPROC</name></type> <name>glad_glVertexAttribP4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATESHADERPROC</name></type> <name>glad_glCreateShader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISBUFFERPROC</name></type> <name>glad_glIsBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTISAMPLEFVPROC</name></type> <name>glad_glGetMultisamplefv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2DVPROC</name></type> <name>glad_glProgramUniformMatrix2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENRENDERBUFFERSPROC</name></type> <name>glad_glGenRenderbuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXSUBIMAGE2DPROC</name></type> <name>glad_glCopyTexSubImage2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXIMAGE2DPROC</name></type> <name>glad_glCompressedTexImage2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FPROC</name></type> <name>glad_glVertexAttrib1f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCSEPARATEPROC</name></type> <name>glad_glBlendFuncSeparate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4FVPROC</name></type> <name>glad_glProgramUniformMatrix4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLHINTPROC</name></type> <name>glad_glHint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SPROC</name></type> <name>glad_glVertexAttrib1s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLEMASKIPROC</name></type> <name>glad_glSampleMaski</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXP2UIPROC</name></type> <name>glad_glVertexP2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX3X2FVPROC</name></type> <name>glad_glUniformMatrix3x2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGECONTROLPROC</name></type> <name>glad_glDebugMessageControl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTSIZEPROC</name></type> <name>glad_glPointSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DVPROC</name></type> <name>glad_glVertexAttrib2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPROGRAMPROC</name></type> <name>glad_glDeleteProgram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUIVPROC</name></type> <name>glad_glVertexAttrib4Nuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSTORAGE2DPROC</name></type> <name>glad_glTexStorage2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRENDERBUFFERSTORAGEPROC</name></type> <name>glad_glRenderbufferStorage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWAITSYNCPROC</name></type> <name>glad_glWaitSync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX4X3FVPROC</name></type> <name>glad_glUniformMatrix4x3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3IPROC</name></type> <name>glad_glUniform3i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARBUFFERFVPROC</name></type> <name>glad_glClearBufferfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UIPROC</name></type> <name>glad_glProgramUniform1ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONSEPARATEIPROC</name></type> <name>glad_glBlendEquationSeparatei</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3DPROC</name></type> <name>glad_glUniform3d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3FPROC</name></type> <name>glad_glUniform3f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UBVPROC</name></type> <name>glad_glVertexAttrib4ubv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERPARAMETERIVPROC</name></type> <name>glad_glGetBufferParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP2UIPROC</name></type> <name>glad_glTexCoordP2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORMASKIPROC</name></type> <name>glad_glColorMaski</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARBUFFERFIPROC</name></type> <name>glad_glClearBufferfi</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWARRAYSINDIRECTPROC</name></type> <name>glad_glDrawArraysIndirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENVERTEXARRAYSPROC</name></type> <name>glad_glGenVertexArrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPAUSETRANSFORMFEEDBACKPROC</name></type> <name>glad_glPauseTransformFeedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP2UIPROC</name></type> <name>glad_glMultiTexCoordP2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC</name></type> <name>glad_glProgramUniformMatrix3x2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC</name></type> <name>glad_glProgramUniformMatrix3x2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSAMPLERPARAMETERIIVPROC</name></type> <name>glad_glGetSamplerParameterIiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAGDATAINDEXPROC</name></type> <name>glad_glGetFragDataIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4DPROC</name></type> <name>glad_glVertexAttribL4d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDIMAGETEXTUREPROC</name></type> <name>glad_glBindImageTexture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBDVPROC</name></type> <name>glad_glGetVertexAttribdv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACTIVESHADERPROGRAMPROC</name></type> <name>glad_glActiveShaderProgram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX3X4FVPROC</name></type> <name>glad_glUniformMatrix3x4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX3DVPROC</name></type> <name>glad_glUniformMatrix3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC</name></type> <name>glad_glProgramUniformMatrix3x4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINVALIDATEBUFFERSUBDATAPROC</name></type> <name>glad_glInvalidateBufferSubData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRESUMETRANSFORMFEEDBACKPROC</name></type> <name>glad_glResumeTransformFeedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP4UIPROC</name></type> <name>glad_glMultiTexCoordP4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC</name></type> <name>glad_glProgramUniformMatrix4x3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIEWPORTARRAYVPROC</name></type> <name>glad_glViewportArrayv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEFRAMEBUFFERSPROC</name></type> <name>glad_glDeleteFramebuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWARRAYSPROC</name></type> <name>glad_glDrawArrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1UIPROC</name></type> <name>glad_glUniform1ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UIVPROC</name></type> <name>glad_glProgramUniform2uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2IPROC</name></type> <name>glad_glVertexAttribI2i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP3UIPROC</name></type> <name>glad_glTexCoordP3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DPROC</name></type> <name>glad_glVertexAttrib3d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARPROC</name></type> <name>glad_glClear</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETERIPROC</name></type> <name>glad_glProgramParameteri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEUNIFORMNAMEPROC</name></type> <name>glad_glGetActiveUniformName</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMEMORYBARRIERPROC</name></type> <name>glad_glMemoryBarrier</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISENABLEDPROC</name></type> <name>glad_glIsEnabled</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILOPPROC</name></type> <name>glad_glStencilOp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURE2DPROC</name></type> <name>glad_glFramebufferTexture2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC</name></type> <name>glad_glGetFramebufferAttachmentParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUBPROC</name></type> <name>glad_glVertexAttrib4Nub</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAGDATALOCATIONPROC</name></type> <name>glad_glGetFragDataLocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE1DPROC</name></type> <name>glad_glTexImage1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERIVPROC</name></type> <name>glad_glTexParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXIMAGEPROC</name></type> <name>glad_glGetTexImage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTI64VPROC</name></type> <name>glad_glGetQueryObjecti64v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENFRAMEBUFFERSPROC</name></type> <name>glad_glGenFramebuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARTEXSUBIMAGEPROC</name></type> <name>glad_glClearTexSubImage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETATTACHEDSHADERSPROC</name></type> <name>glad_glGetAttachedShaders</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISRENDERBUFFERPROC</name></type> <name>glad_glIsRenderbuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEVERTEXARRAYSPROC</name></type> <name>glad_glDeleteVertexArrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDVERTEXBUFFERSPROC</name></type> <name>glad_glBindVertexBuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UIVPROC</name></type> <name>glad_glProgramUniform1uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISVERTEXARRAYPROC</name></type> <name>glad_glIsVertexArray</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEVERTEXATTRIBARRAYPROC</name></type> <name>glad_glDisableVertexAttribArray</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2IVPROC</name></type> <name>glad_glProgramUniform2iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYIVPROC</name></type> <name>glad_glGetQueryiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSAMPLERPARAMETERFVPROC</name></type> <name>glad_glGetSamplerParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHADERSTORAGEBLOCKBINDINGPROC</name></type> <name>glad_glShaderStorageBlockBinding</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC</name></type> <name>glad_glProgramUniformMatrix4x2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMINDICESPROC</name></type> <name>glad_glGetUniformIndices</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISSHADERPROC</name></type> <name>glad_glIsShader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4UBVPROC</name></type> <name>glad_glVertexAttribI4ubv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINQUERYINDEXEDPROC</name></type> <name>glad_glBeginQueryIndexed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERIVPROC</name></type> <name>glad_glPointParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEPROC</name></type> <name>glad_glEnable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEUNIFORMSIVPROC</name></type> <name>glad_glGetActiveUniformsiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONIPROC</name></type> <name>glad_glBlendEquationi</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETATTRIBLOCATIONPROC</name></type> <name>glad_glGetAttribLocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DVPROC</name></type> <name>glad_glVertexAttrib4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMINTERFACEIVPROC</name></type> <name>glad_glGetProgramInterfaceiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2DVPROC</name></type> <name>glad_glUniform2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP3UIVPROC</name></type> <name>glad_glMultiTexCoordP3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP3UIPROC</name></type> <name>glad_glVertexAttribP3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1DVPROC</name></type> <name>glad_glVertexAttribL1dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UIPROC</name></type> <name>glad_glProgramUniform3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXBINDINGDIVISORPROC</name></type> <name>glad_glVertexBindingDivisor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMFVPROC</name></type> <name>glad_glGetUniformfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMUIVPROC</name></type> <name>glad_glGetUniformuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC</name></type> <name>glad_glProgramUniformMatrix2x3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIIVPROC</name></type> <name>glad_glGetVertexAttribIiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWBUFFERPROC</name></type> <name>glad_glDrawBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDQUERYINDEXEDPROC</name></type> <name>glad_glEndQueryIndexed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARBUFFERUIVPROC</name></type> <name>glad_glClearBufferuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSINSTANCEDPROC</name></type> <name>glad_glDrawElementsInstanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1IPROC</name></type> <name>glad_glProgramUniform1i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATCHPARAMETERIPROC</name></type> <name>glad_glPatchParameteri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1DPROC</name></type> <name>glad_glProgramUniform1d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1FPROC</name></type> <name>glad_glProgramUniform1f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHPROC</name></type> <name>glad_glFlush</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETRENDERBUFFERPARAMETERIVPROC</name></type> <name>glad_glGetRenderbufferParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3IVPROC</name></type> <name>glad_glProgramUniform3iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDEBUGMESSAGELOGPROC</name></type> <name>glad_glGetDebugMessageLog</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBPOINTERVPROC</name></type> <name>glad_glGetVertexAttribPointerv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFENCESYNCPROC</name></type> <name>glad_glFenceSync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORP3UIPROC</name></type> <name>glad_glColorP3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC</name></type> <name>glad_glDrawElementsInstancedBaseVertexBaseInstance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SVPROC</name></type> <name>glad_glVertexAttrib3sv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINCONDITIONALRENDERPROC</name></type> <name>glad_glBeginConditionalRender</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVALIDATEPROGRAMPIPELINEPROC</name></type> <name>glad_glValidateProgramPipeline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXLEVELPARAMETERIVPROC</name></type> <name>glad_glGetTexLevelParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP4UIVPROC</name></type> <name>glad_glMultiTexCoordP4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSTORAGE3DMULTISAMPLEPROC</name></type> <name>glad_glTexStorage3DMultisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILFUNCSEPARATEPROC</name></type> <name>glad_glStencilFuncSeparate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENSAMPLERSPROC</name></type> <name>glad_glGenSamplers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLAMPCOLORPROC</name></type> <name>glad_glClampColor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4IVPROC</name></type> <name>glad_glUniform4iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARSTENCILPROC</name></type> <name>glad_glClearStencil</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP1UIVPROC</name></type> <name>glad_glTexCoordP1uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC</name></type> <name>glad_glDrawTransformFeedbackInstanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENTEXTURESPROC</name></type> <name>glad_glGenTextures</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWTRANSFORMFEEDBACKPROC</name></type> <name>glad_glDrawTransformFeedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1DVPROC</name></type> <name>glad_glUniform1dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERIUIVPROC</name></type> <name>glad_glGetTexParameterIuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NBVPROC</name></type> <name>glad_glVertexAttrib4Nbv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISSYNCPROC</name></type> <name>glad_glIsSync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC</name></type> <name>glad_glGetActiveUniformBlockName</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2IPROC</name></type> <name>glad_glUniform2i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2FPROC</name></type> <name>glad_glUniform2f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2DPROC</name></type> <name>glad_glUniform2d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP4UIPROC</name></type> <name>glad_glTexCoordP4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMIVPROC</name></type> <name>glad_glGetProgramiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBPOINTERPROC</name></type> <name>glad_glVertexAttribPointer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURELAYERPROC</name></type> <name>glad_glFramebufferTextureLayer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4FVPROC</name></type> <name>glad_glProgramUniform4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTPTRLABELPROC</name></type> <name>glad_glGetObjectPtrLabel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHMAPPEDBUFFERRANGEPROC</name></type> <name>glad_glFlushMappedBufferRange</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2FVPROC</name></type> <name>glad_glProgramUniform2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX2X3DVPROC</name></type> <name>glad_glUniformMatrix2x3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4DVPROC</name></type> <name>glad_glProgramUniformMatrix4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3DPROC</name></type> <name>glad_glVertexAttribL3d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC</name></type> <name>glad_glProgramUniformMatrix2x4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISPATCHCOMPUTEPROC</name></type> <name>glad_glDispatchCompute</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENQUERIESPROC</name></type> <name>glad_glGenQueries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP1UIPROC</name></type> <name>glad_glVertexAttribP1ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSUBIMAGE3DPROC</name></type> <name>glad_glTexSubImage3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGER64I_VPROC</name></type> <name>glad_glGetInteger64i_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETESAMPLERSPROC</name></type> <name>glad_glDeleteSamplers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXIMAGE2DPROC</name></type> <name>glad_glCopyTexImage2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLITFRAMEBUFFERPROC</name></type> <name>glad_glBlitFramebuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISENABLEDIPROC</name></type> <name>glad_glIsEnabledi</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERSRANGEPROC</name></type> <name>glad_glBindBuffersRange</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLORP3UIPROC</name></type> <name>glad_glSecondaryColorP3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDFRAGDATALOCATIONINDEXEDPROC</name></type> <name>glad_glBindFragDataLocationIndexed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYIMAGESUBDATAPROC</name></type> <name>glad_glCopyImageSubData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2IVPROC</name></type> <name>glad_glUniform2iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FVPROC</name></type> <name>glad_glVertexAttrib1fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4UIVPROC</name></type> <name>glad_glUniform4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2DVPROC</name></type> <name>glad_glProgramUniform2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURE1DPROC</name></type> <name>glad_glFramebufferTexture1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSHADERIVPROC</name></type> <name>glad_glGetShaderiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3FVPROC</name></type> <name>glad_glProgramUniformMatrix3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLOBJECTPTRLABELPROC</name></type> <name>glad_glObjectPtrLabel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINVALIDATEFRAMEBUFFERPROC</name></type> <name>glad_glInvalidateFramebuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDTEXTURESPROC</name></type> <name>glad_glBindTextures</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDFRAGDATALOCATIONPROC</name></type> <name>glad_glBindFragDataLocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSCISSORARRAYVPROC</name></type> <name>glad_glScissorArrayv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOLYGONOFFSETPROC</name></type> <name>glad_glPolygonOffset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDOUBLEVPROC</name></type> <name>glad_glGetDoublev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DPROC</name></type> <name>glad_glVertexAttrib1d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4DVPROC</name></type> <name>glad_glUniform4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3DVPROC</name></type> <name>glad_glProgramUniform3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMIVPROC</name></type> <name>glad_glGetUniformiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINVALIDATEBUFFERDATAPROC</name></type> <name>glad_glInvalidateBufferData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP1UIVPROC</name></type> <name>glad_glMultiTexCoordP1uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3FVPROC</name></type> <name>glad_glUniform3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTSINDIRECTPROC</name></type> <name>glad_glMultiDrawElementsIndirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHRANGEPROC</name></type> <name>glad_glDepthRange</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINVALIDATESUBFRAMEBUFFERPROC</name></type> <name>glad_glInvalidateSubFramebuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPBUFFERPROC</name></type> <name>glad_glMapBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARTEXIMAGEPROC</name></type> <name>glad_glClearTexImage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBLFORMATPROC</name></type> <name>glad_glVertexAttribLFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXIMAGE3DPROC</name></type> <name>glad_glCompressedTexImage3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETESYNCPROC</name></type> <name>glad_glDeleteSync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXSUBIMAGE3DPROC</name></type> <name>glad_glCopyTexSubImage3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX4DVPROC</name></type> <name>glad_glUniformMatrix4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIVPROC</name></type> <name>glad_glGetVertexAttribiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX4X2DVPROC</name></type> <name>glad_glUniformMatrix4x2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTSPROC</name></type> <name>glad_glMultiDrawElements</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FVPROC</name></type> <name>glad_glVertexAttrib3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3IVPROC</name></type> <name>glad_glUniform3iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOLYGONMODEPROC</name></type> <name>glad_glPolygonMode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWBUFFERSPROC</name></type> <name>glad_glDrawBuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEUNIFORMBLOCKIVPROC</name></type> <name>glad_glGetActiveUniformBlockiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4IVPROC</name></type> <name>glad_glProgramUniform4iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMBINARYPROC</name></type> <name>glad_glGetProgramBinary</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUSEPROGRAMPROC</name></type> <name>glad_glUseProgram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMINFOLOGPROC</name></type> <name>glad_glGetProgramInfoLog</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDTRANSFORMFEEDBACKPROC</name></type> <name>glad_glBindTransformFeedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDVERTEXARRAYPROC</name></type> <name>glad_glBindVertexArray</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEBUFFERSPROC</name></type> <name>glad_glDeleteBuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLERPARAMETERIIVPROC</name></type> <name>glad_glSamplerParameterIiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC</name></type> <name>glad_glMultiDrawElementsBaseVertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2UIVPROC</name></type> <name>glad_glUniform2uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC</name></type> <name>glad_glCompressedTexSubImage1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFINISHPROC</name></type> <name>glad_glFinish</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHRANGEINDEXEDPROC</name></type> <name>glad_glDepthRangeIndexed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETESHADERPROC</name></type> <name>glad_glDeleteShader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTERNALFORMATI64VPROC</name></type> <name>glad_glGetInternalformati64v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPUSHDEBUGGROUPPROC</name></type> <name>glad_glPushDebugGroup</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NSVPROC</name></type> <name>glad_glVertexAttrib4Nsv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC</name></type> <name>glad_glGetProgramResourceLocationIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIEWPORTPROC</name></type> <name>glad_glViewport</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1UIVPROC</name></type> <name>glad_glUniform1uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRANSFORMFEEDBACKVARYINGSPROC</name></type> <name>glad_glTransformFeedbackVaryings</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2UIPROC</name></type> <name>glad_glUniform2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGECALLBACKPROC</name></type> <name>glad_glDebugMessageCallback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3IPROC</name></type> <name>glad_glVertexAttribI3i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINVALIDATETEXIMAGEPROC</name></type> <name>glad_glInvalidateTexImage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBFORMATPROC</name></type> <name>glad_glVertexAttribFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARDEPTHPROC</name></type> <name>glad_glClearDepth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4USVPROC</name></type> <name>glad_glVertexAttribI4usv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERFPROC</name></type> <name>glad_glTexParameterf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBBINDINGPROC</name></type> <name>glad_glVertexAttribBinding</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERIPROC</name></type> <name>glad_glTexParameteri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC</name></type> <name>glad_glGetActiveSubroutineUniformiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSHADERSOURCEPROC</name></type> <name>glad_glGetShaderSource</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXBUFFERPROC</name></type> <name>glad_glTexBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELSTOREIPROC</name></type> <name>glad_glPixelStorei</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVALIDATEPROGRAMPROC</name></type> <name>glad_glValidateProgram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELSTOREFPROC</name></type> <name>glad_glPixelStoref</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBOOLEANI_VPROC</name></type> <name>glad_glGetBooleani_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP2UIVPROC</name></type> <name>glad_glMultiTexCoordP2uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENPROGRAMPIPELINESPROC</name></type> <name>glad_glGenProgramPipelines</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTERNALFORMATIVPROC</name></type> <name>glad_glGetInternalformativ</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP1UIVPROC</name></type> <name>glad_glVertexAttribP1uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLINKPROGRAMPROC</name></type> <name>glad_glLinkProgram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDTEXTUREPROC</name></type> <name>glad_glBindTexture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWARRAYSINDIRECTPROC</name></type> <name>glad_glMultiDrawArraysIndirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTLABELPROC</name></type> <name>glad_glGetObjectLabel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMPIPELINEINFOLOGPROC</name></type> <name>glad_glGetProgramPipelineInfoLog</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSTRINGPROC</name></type> <name>glad_glGetString</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP2UIVPROC</name></type> <name>glad_glVertexAttribP2uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDETACHSHADERPROC</name></type> <name>glad_glDetachShader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3IPROC</name></type> <name>glad_glProgramUniform3i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX3X4DVPROC</name></type> <name>glad_glUniformMatrix3x4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDQUERYPROC</name></type> <name>glad_glEndQuery</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALP3UIPROC</name></type> <name>glad_glNormalP3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERPARAMETERIPROC</name></type> <name>glad_glFramebufferParameteri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMRESOURCENAMEPROC</name></type> <name>glad_glGetProgramResourceName</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX4X3DVPROC</name></type> <name>glad_glUniformMatrix4x3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHRANGEARRAYVPROC</name></type> <name>glad_glDepthRangeArrayv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2UIPROC</name></type> <name>glad_glVertexAttribI2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMRESOURCELOCATIONPROC</name></type> <name>glad_glGetProgramResourceLocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETETEXTURESPROC</name></type> <name>glad_glDeleteTextures</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC</name></type> <name>glad_glGetActiveAtomicCounterBufferiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILOPSEPARATEPROC</name></type> <name>glad_glStencilOpSeparate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEQUERIESPROC</name></type> <name>glad_glDeleteQueries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALP3UIVPROC</name></type> <name>glad_glNormalP3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FPROC</name></type> <name>glad_glVertexAttrib4f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DPROC</name></type> <name>glad_glVertexAttrib4d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIEWPORTINDEXEDFVPROC</name></type> <name>glad_glViewportIndexedfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERSBASEPROC</name></type> <name>glad_glBindBuffersBase</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4DVPROC</name></type> <name>glad_glVertexAttribL4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERIVPROC</name></type> <name>glad_glGetTexParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1DVPROC</name></type> <name>glad_glProgramUniform1dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SPROC</name></type> <name>glad_glVertexAttrib4s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSBASEVERTEXPROC</name></type> <name>glad_glDrawElementsBaseVertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLECOVERAGEPROC</name></type> <name>glad_glSampleCoverage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLERPARAMETERIPROC</name></type> <name>glad_glSamplerParameteri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARBUFFERSUBDATAPROC</name></type> <name>glad_glClearBufferSubData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLERPARAMETERFPROC</name></type> <name>glad_glSamplerParameterf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSTORAGE1DPROC</name></type> <name>glad_glTexStorage1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1FPROC</name></type> <name>glad_glUniform1f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBFVPROC</name></type> <name>glad_glGetVertexAttribfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1DPROC</name></type> <name>glad_glUniform1d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMPRESSEDTEXIMAGEPROC</name></type> <name>glad_glGetCompressedTexImage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1IPROC</name></type> <name>glad_glUniform1i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEATTRIBPROC</name></type> <name>glad_glGetActiveAttrib</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSUBIMAGE2DPROC</name></type> <name>glad_glTexSubImage2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEPROC</name></type> <name>glad_glDisable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOGICOPPROC</name></type> <name>glad_glLogicOp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC</name></type> <name>glad_glProgramUniformMatrix3x4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UIVPROC</name></type> <name>glad_glProgramUniform4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4UIPROC</name></type> <name>glad_glUniform4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDFRAMEBUFFERPROC</name></type> <name>glad_glBindFramebuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCULLFACEPROC</name></type> <name>glad_glCullFace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4IPROC</name></type> <name>glad_glProgramUniform4i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4FPROC</name></type> <name>glad_glProgramUniform4f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIEWPORTINDEXEDFPROC</name></type> <name>glad_glViewportIndexedf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4DPROC</name></type> <name>glad_glProgramUniform4d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSTRINGIPROC</name></type> <name>glad_glGetStringi</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSCISSORINDEXEDPROC</name></type> <name>glad_glScissorIndexed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC</name></type> <name>glad_glDrawTransformFeedbackStream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLATTACHSHADERPROC</name></type> <name>glad_glAttachShader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLQUERYCOUNTERPROC</name></type> <name>glad_glQueryCounter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROVOKINGVERTEXPROC</name></type> <name>glad_glProvokingVertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHADERBINARYPROC</name></type> <name>glad_glShaderBinary</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSPROC</name></type> <name>glad_glDrawElements</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4SVPROC</name></type> <name>glad_glVertexAttribI4sv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1IVPROC</name></type> <name>glad_glUniform1iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATESHADERPROGRAMVPROC</name></type> <name>glad_glCreateShaderProgramv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTIVPROC</name></type> <name>glad_glGetQueryObjectiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREADBUFFERPROC</name></type> <name>glad_glReadBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERIUIVPROC</name></type> <name>glad_glTexParameterIuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWARRAYSINSTANCEDPROC</name></type> <name>glad_glDrawArraysInstanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENERATEMIPMAPPROC</name></type> <name>glad_glGenerateMipmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2FVPROC</name></type> <name>glad_glProgramUniformMatrix2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLERPARAMETERIVPROC</name></type> <name>glad_glSamplerParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FPROC</name></type> <name>glad_glVertexAttrib3f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UIVPROC</name></type> <name>glad_glVertexAttrib4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERIPROC</name></type> <name>glad_glPointParameteri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDCOLORPROC</name></type> <name>glad_glBlendColor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLERPARAMETERIUIVPROC</name></type> <name>glad_glSamplerParameterIuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNMAPBUFFERPROC</name></type> <name>glad_glUnmapBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFPROC</name></type> <name>glad_glPointParameterf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1IVPROC</name></type> <name>glad_glProgramUniform1iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SPROC</name></type> <name>glad_glVertexAttrib3s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDRENDERBUFFERPROC</name></type> <name>glad_glBindRenderbuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP4UIVPROC</name></type> <name>glad_glVertexAttribP4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMSTAGEIVPROC</name></type> <name>glad_glGetProgramStageiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPROGRAMPROC</name></type> <name>glad_glIsProgram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4BVPROC</name></type> <name>glad_glVertexAttrib4bv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX3X2DVPROC</name></type> <name>glad_glUniformMatrix3x2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FVPROC</name></type> <name>glad_glVertexAttrib4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC</name></type> <name>glad_glProgramUniformMatrix2x3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISTRANSFORMFEEDBACKPROC</name></type> <name>glad_glIsTransformFeedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4IPROC</name></type> <name>glad_glUniform4i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACTIVETEXTUREPROC</name></type> <name>glad_glActiveTexture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEVERTEXATTRIBARRAYPROC</name></type> <name>glad_glEnableVertexAttribArray</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPROGRAMPIPELINEPROC</name></type> <name>glad_glIsProgramPipeline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREADPIXELSPROC</name></type> <name>glad_glReadPixels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3IVPROC</name></type> <name>glad_glVertexAttribI3iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4FPROC</name></type> <name>glad_glUniform4f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC</name></type> <name>glad_glRenderbufferStorageMultisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX3FVPROC</name></type> <name>glad_glUniformMatrix3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBLPOINTERPROC</name></type> <name>glad_glVertexAttribLPointer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC</name></type> <name>glad_glDrawElementsInstancedBaseVertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2DVPROC</name></type> <name>glad_glVertexAttribL2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC</name></type> <name>glad_glDrawTransformFeedbackStreamInstanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVESUBROUTINENAMEPROC</name></type> <name>glad_glGetActiveSubroutineName</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2DPROC</name></type> <name>glad_glVertexAttribL2d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILFUNCPROC</name></type> <name>glad_glStencilFunc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOPDEBUGGROUPPROC</name></type> <name>glad_glPopDebugGroup</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMBLOCKBINDINGPROC</name></type> <name>glad_glUniformBlockBinding</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORP4UIPROC</name></type> <name>glad_glColorP4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUSEPROGRAMSTAGESPROC</name></type> <name>glad_glUseProgramStages</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3FPROC</name></type> <name>glad_glProgramUniform3f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3DPROC</name></type> <name>glad_glProgramUniform3d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4IVPROC</name></type> <name>glad_glVertexAttribI4iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMPIPELINEIVPROC</name></type> <name>glad_glGetProgramPipelineiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSTORAGE3DPROC</name></type> <name>glad_glTexStorage3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYINDEXEDIVPROC</name></type> <name>glad_glGetQueryIndexediv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSHADERINFOLOGPROC</name></type> <name>glad_glGetShaderInfoLog</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLOBJECTLABELPROC</name></type> <name>glad_glObjectLabel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4IPROC</name></type> <name>glad_glVertexAttribI4i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERSUBDATAPROC</name></type> <name>glad_glGetBufferSubData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBLDVPROC</name></type> <name>glad_glGetVertexAttribLdv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONSEPARATEPROC</name></type> <name>glad_glBlendEquationSeparate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1UIPROC</name></type> <name>glad_glVertexAttribI1ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENBUFFERSPROC</name></type> <name>glad_glGenBuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSUBROUTINEINDEXPROC</name></type> <name>glad_glGetSubroutineIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SVPROC</name></type> <name>glad_glVertexAttrib2sv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCPROC</name></type> <name>glad_glBlendFunc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATEPROGRAMPROC</name></type> <name>glad_glCreateProgram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE3DPROC</name></type> <name>glad_glTexImage3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISFRAMEBUFFERPROC</name></type> <name>glad_glIsFramebuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPRIMITIVERESTARTINDEXPROC</name></type> <name>glad_glPrimitiveRestartIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINVALIDATETEXSUBIMAGEPROC</name></type> <name>glad_glInvalidateTexSubImage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDIMAGETEXTURESPROC</name></type> <name>glad_glBindImageTextures</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGER64VPROC</name></type> <name>glad_glGetInteger64v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDPROGRAMPIPELINEPROC</name></type> <name>glad_glBindProgramPipeline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSCISSORPROC</name></type> <name>glad_glScissor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP4UIVPROC</name></type> <name>glad_glTexCoordP4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBOOLEANVPROC</name></type> <name>glad_glGetBooleanv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXP2UIVPROC</name></type> <name>glad_glVertexP2uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3UIVPROC</name></type> <name>glad_glUniform3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARCOLORPROC</name></type> <name>glad_glClearColor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NIVPROC</name></type> <name>glad_glVertexAttrib4Niv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARBUFFERIVPROC</name></type> <name>glad_glClearBufferiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERPARAMETERI64VPROC</name></type> <name>glad_glGetBufferParameteri64v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4DVPROC</name></type> <name>glad_glProgramUniform4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORP4UIVPROC</name></type> <name>glad_glColorP4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2UIVPROC</name></type> <name>glad_glVertexAttribI2uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3UIPROC</name></type> <name>glad_glUniform3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UIVPROC</name></type> <name>glad_glProgramUniform3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4UIVPROC</name></type> <name>glad_glVertexAttribI4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFVPROC</name></type> <name>glad_glPointParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2FVPROC</name></type> <name>glad_glUniform2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC</name></type> <name>glad_glGetActiveSubroutineUniformName</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMRESOURCEINDEXPROC</name></type> <name>glad_glGetProgramResourceIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSINDIRECTPROC</name></type> <name>glad_glDrawElementsIndirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISPATCHCOMPUTEINDIRECTPROC</name></type> <name>glad_glDispatchComputeIndirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSAMPLERPARAMETERIUIVPROC</name></type> <name>glad_glGetSamplerParameterIuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERRANGEPROC</name></type> <name>glad_glBindBufferRange</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3DVPROC</name></type> <name>glad_glVertexAttribL3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMDVPROC</name></type> <name>glad_glGetUniformdv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARDEPTHFPROC</name></type> <name>glad_glClearDepthf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX2X3FVPROC</name></type> <name>glad_glUniformMatrix2x3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENTRANSFORMFEEDBACKSPROC</name></type> <name>glad_glGenTransformFeedbacks</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIUIVPROC</name></type> <name>glad_glGetVertexAttribIuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUSVPROC</name></type> <name>glad_glVertexAttrib4Nusv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC</name></type> <name>glad_glProgramUniformMatrix4x3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHFUNCPROC</name></type> <name>glad_glDepthFunc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC</name></type> <name>glad_glCompressedTexSubImage2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMBINARYPROC</name></type> <name>glad_glProgramBinary</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4BVPROC</name></type> <name>glad_glVertexAttribI4bv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERFVPROC</name></type> <name>glad_glGetTexParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDP1UIPROC</name></type> <name>glad_glMultiTexCoordP1ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBUFFERSTORAGEPROC</name></type> <name>glad_glBufferStorage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLIENTWAITSYNCPROC</name></type> <name>glad_glClientWaitSync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4UIPROC</name></type> <name>glad_glVertexAttribI4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFLOATI_VPROC</name></type> <name>glad_glGetFloati_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORMASKPROC</name></type> <name>glad_glColorMask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERIIVPROC</name></type> <name>glad_glTexParameterIiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONPROC</name></type> <name>glad_glBlendEquation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMLOCATIONPROC</name></type> <name>glad_glGetUniformLocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX2X4DVPROC</name></type> <name>glad_glUniformMatrix2x4dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDTRANSFORMFEEDBACKPROC</name></type> <name>glad_glEndTransformFeedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4USVPROC</name></type> <name>glad_glVertexAttrib4usv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMSUBROUTINEUIVPROC</name></type> <name>glad_glGetUniformSubroutineuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4FVPROC</name></type> <name>glad_glUniform4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDVERTEXBUFFERPROC</name></type> <name>glad_glBindVertexBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGEINSERTPROC</name></type> <name>glad_glDebugMessageInsert</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMRESOURCEIVPROC</name></type> <name>glad_glGetProgramResourceiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARBUFFERDATAPROC</name></type> <name>glad_glClearBufferData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINTRANSFORMFEEDBACKPROC</name></type> <name>glad_glBeginTransformFeedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1IVPROC</name></type> <name>glad_glVertexAttribI1iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISSAMPLERPROC</name></type> <name>glad_glIsSampler</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXP3UIPROC</name></type> <name>glad_glVertexP3ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBDIVISORPROC</name></type> <name>glad_glVertexAttribDivisor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDSAMPLERSPROC</name></type> <name>glad_glBindSamplers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXIMAGE1DPROC</name></type> <name>glad_glCompressedTexImage1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETETRANSFORMFEEDBACKSPROC</name></type> <name>glad_glDeleteTransformFeedbacks</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXSUBIMAGE1DPROC</name></type> <name>glad_glCopyTexSubImage1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC</name></type> <name>glad_glDrawRangeElementsBaseVertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCHECKFRAMEBUFFERSTATUSPROC</name></type> <name>glad_glCheckFramebufferStatus</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDCONDITIONALRENDERPROC</name></type> <name>glad_glEndConditionalRender</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXP3UIVPROC</name></type> <name>glad_glVertexP3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDATTRIBLOCATIONPROC</name></type> <name>glad_glBindAttribLocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX4X2FVPROC</name></type> <name>glad_glUniformMatrix4x2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX2DVPROC</name></type> <name>glad_glUniformMatrix2dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCIPROC</name></type> <name>glad_glBlendFunci</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DVPROC</name></type> <name>glad_glVertexAttrib1dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWRANGEELEMENTSPROC</name></type> <name>glad_glDrawRangeElements</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTUIVPROC</name></type> <name>glad_glGetQueryObjectuiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERBASEPROC</name></type> <name>glad_glBindBufferBase</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBUFFERSUBDATAPROC</name></type> <name>glad_glBufferSubData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4IVPROC</name></type> <name>glad_glVertexAttrib4iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPBUFFERRANGEPROC</name></type> <name>glad_glMapBufferRange</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTUREPROC</name></type> <name>glad_glFramebufferTexture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCSEPARATEIPROC</name></type> <name>glad_glBlendFuncSeparatei</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC</name></type> <name>glad_glProgramUniformMatrix4x2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1DPROC</name></type> <name>glad_glVertexAttribL1d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWARRAYSPROC</name></type> <name>glad_glMultiDrawArrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXP4UIVPROC</name></type> <name>glad_glVertexP4uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2IVPROC</name></type> <name>glad_glVertexAttribI2iv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSHADERPRECISIONFORMATPROC</name></type> <name>glad_glGetShaderPrecisionFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREVIEWPROC</name></type> <name>glad_glTextureView</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEIPROC</name></type> <name>glad_glDisablei</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC</name></type> <name>glad_glProgramUniformMatrix2x4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHADERSOURCEPROC</name></type> <name>glad_glShaderSource</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETERENDERBUFFERSPROC</name></type> <name>glad_glDeleteRenderbuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3UIVPROC</name></type> <name>glad_glVertexAttribI3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRELEASESHADERCOMPILERPROC</name></type> <name>glad_glReleaseShaderCompiler</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBIFORMATPROC</name></type> <name>glad_glVertexAttribIFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSYNCIVPROC</name></type> <name>glad_glGetSynciv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP2UIVPROC</name></type> <name>glad_glTexCoordP2uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATCHPARAMETERFVPROC</name></type> <name>glad_glPatchParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2IPROC</name></type> <name>glad_glProgramUniform2i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINQUERYPROC</name></type> <name>glad_glBeginQuery</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX4FVPROC</name></type> <name>glad_glUniformMatrix4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERPROC</name></type> <name>glad_glBindBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSTORAGE2DMULTISAMPLEPROC</name></type> <name>glad_glTexStorage2DMultisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2DPROC</name></type> <name>glad_glProgramUniform2d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2FPROC</name></type> <name>glad_glProgramUniform2f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX2FVPROC</name></type> <name>glad_glUniformMatrix2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX2X4FVPROC</name></type> <name>glad_glUniformMatrix2x4fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBUFFERDATAPROC</name></type> <name>glad_glBufferData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERIIVPROC</name></type> <name>glad_glGetTexParameterIiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDP1UIPROC</name></type> <name>glad_glTexCoordP1ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETERRORPROC</name></type> <name>glad_glGetError</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP2UIPROC</name></type> <name>glad_glVertexAttribP2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFLOATVPROC</name></type> <name>glad_glGetFloatv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSUBIMAGE1DPROC</name></type> <name>glad_glTexSubImage1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FVPROC</name></type> <name>glad_glVertexAttrib2fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXLEVELPARAMETERFVPROC</name></type> <name>glad_glGetTexLevelParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1IPROC</name></type> <name>glad_glVertexAttribI1i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBP3UIVPROC</name></type> <name>glad_glVertexAttribP3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4DPROC</name></type> <name>glad_glUniform4d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLORP3UIVPROC</name></type> <name>glad_glSecondaryColorP3uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGERVPROC</name></type> <name>glad_glGetIntegerv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERPOINTERVPROC</name></type> <name>glad_glGetBufferPointerv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3DVPROC</name></type> <name>glad_glProgramUniformMatrix3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURE3DPROC</name></type> <name>glad_glFramebufferTexture3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISQUERYPROC</name></type> <name>glad_glIsQuery</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UIPROC</name></type> <name>glad_glProgramUniform2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UIPROC</name></type> <name>glad_glProgramUniform4ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SVPROC</name></type> <name>glad_glVertexAttrib4sv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE2DPROC</name></type> <name>glad_glTexImage2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILMASKPROC</name></type> <name>glad_glStencilMask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLERPARAMETERFVPROC</name></type> <name>glad_glSamplerParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISTEXTUREPROC</name></type> <name>glad_glIsTexture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1FVPROC</name></type> <name>glad_glUniform1fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUBVPROC</name></type> <name>glad_glVertexAttrib4Nubv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERFVPROC</name></type> <name>glad_glTexParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSCISSORINDEXEDVPROC</name></type> <name>glad_glScissorIndexedv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3DVPROC</name></type> <name>glad_glUniform3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3FVPROC</name></type> <name>glad_glProgramUniform3fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC</name></type> <name>glad_glGetSubroutineUniformLocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAMEBUFFERPARAMETERIVPROC</name></type> <name>glad_glGetFramebufferParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSAMPLERPARAMETERIVPROC</name></type> <name>glad_glGetSamplerParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYBUFFERSUBDATAPROC</name></type> <name>glad_glCopyBufferSubData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1UIVPROC</name></type> <name>glad_glVertexAttribI1uiv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DPROC</name></type> <name>glad_glVertexAttrib2d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FPROC</name></type> <name>glad_glVertexAttrib2f</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DVPROC</name></type> <name>glad_glVertexAttrib3dv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTUI64VPROC</name></type> <name>glad_glGetQueryObjectui64v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHMASKPROC</name></type> <name>glad_glDepthMask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SPROC</name></type> <name>glad_glVertexAttrib2s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE3DMULTISAMPLEPROC</name></type> <name>glad_glTexImage3DMultisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1FVPROC</name></type> <name>glad_glProgramUniform1fv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMBLOCKINDEXPROC</name></type> <name>glad_glGetUniformBlockIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE2DMULTISAMPLEPROC</name></type> <name>glad_glTexImage2DMultisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEUNIFORMPROC</name></type> <name>glad_glGetActiveUniform</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRONTFACEPROC</name></type> <name>glad_glFrontFace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXBUFFERRANGEPROC</name></type> <name>glad_glTexBufferRange</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC</name></type> <name>glad_glDrawArraysInstancedBaseInstance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPROGRAMPIPELINESPROC</name></type> <name>glad_glDeleteProgramPipelines</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_pixel_tiles</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_point_sprite</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_element_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_multi_draw_indirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_blend_subtract</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_tag_sample_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_IBM_texture_mirrored_repeat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_transform_hint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_separate_stencil</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_program2_option</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_blend</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_program2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_program_interface_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_misc_attribute</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_multisample_coverage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shading_language_packing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_cube_map</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_stencil8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_index_func</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OES_compressed_paletted_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_depth_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_shader_buffer_load</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_color_subtable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SUNX_constant_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_multi_draw_arrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_atomic_counters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_arrays_of_arrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_conditional_render</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_env_combine</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_fog_distance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_async_histogram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_MESA_resize_buffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_light_max_exponent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_env_combine4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_view</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_env_combine</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_map_buffer_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_convolution</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_compute_program5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_attrib_integer_64bit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_paletted_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_pn_triangles</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_resample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_flush_raster</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_light_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_point_sprite</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_half_float_pixel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_tessellation_program5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_REND_screen_coordinates</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_shared_texture_palette</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_packed_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OML_subsample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_vertex_preclip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_texture_scale_bias</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_draw_buffers_blend</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_MESA_window_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_barrier</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_query_levels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texgen_emboss</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_swizzle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_rg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_type_2_10_10_10_rev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_fragment_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_3DFX_tbuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_GREMEDY_frame_terminator</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_blend_func_extended</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_separate_shader_objects</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_objects</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_framebuffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_envmap_bumpmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_robust_buffer_access_behavior</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_stencil_export</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_rectangle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_enhanced_layouts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_rectangle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGI_texture_color_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_map_object_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_robustness</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_pixel_data_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_framebuffer_blit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_gpu_shader_fp64</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_depth_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_vertex_weighting</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_GREMEDY_string_marker</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_compression_bptc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_subtexture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_pixel_transform_color_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_compression_rgtc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_depth_pass_instrument</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_precision</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_evaluators</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_texture_filter4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_performance_monitor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_geometry_shader4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_stencil_clear_tag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_program1_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_present_video</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_compression_rgtc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_HP_convolution_border_modes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_gpu_program_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_shader_integer_mix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_stencil_texturing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_fog_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_draw_elements_base_vertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_INGR_interlace_read</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_transform_feedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_fragment_program</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_stencil_operation_extended</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_seamless_cubemap_per_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_instanced_arrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_polygon_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_array_range2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_sparse_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_fence</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_buffer_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SUN_mesh_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_attrib_binding</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_framebuffer_no_attachments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_cl_event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_packed_depth_stencil</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OES_single_precision</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_primitive_restart</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SUN_global_alpha</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_name_gen_delete</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_compression_vtc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_ycrcb_subsample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_shader3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_shader2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_buffer_storage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_shader_atomic_counter_ops</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_vertex_program_evaluators</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_multi_bind</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_explicit_uniform_location</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_depth_buffer_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_shadow_ambient</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_cube_map</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_vertex_shader_viewport_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_list_priority</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_buffer_unified_memory</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_env_dot3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_texture_env_combine3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_map_buffer_alignment</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_blend_equation_advanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_sharpen_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_program</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_rgb10_a2ui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OML_interlace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_pixel_format_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_shadow_funcs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_text_fragment_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_array_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_fragment_lighting</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_expand_normal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_framebuffer_multisample_coverage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_timer_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_vertex_array_bgra</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_bindless_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_KHR_debug</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_texture_border_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_vertex_attrib_array_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_clipmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_geometry_shader4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_MESA_ycbcr_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_MESAX_texture_stack</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_seamless_cubemap_per_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_bindable_uniform</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_KHR_texture_compression_astc_hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_fragment_program_shadow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_element_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_texture_texture4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_reference_plane</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_stencil_two_side</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_texture_lod_bias</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_explicit_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_IBM_static_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_clip_volume_hint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_perturb_normal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_fragment_program2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_fragment_program4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_point_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_PGI_misc_hints</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_subsample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_shader_stencil_export</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_texture_lod</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_depth_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_texture_select</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texture_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_tessellation_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_draw_buffers2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_attrib_64bit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_WIN_specular_fog</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_interleaved_elements</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_fragment_program</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OML_resample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_ycbcr_422</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_texture_add_env</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shadow_ambient</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_storage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_pixel_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_copy_image</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_pixel_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_generate_mipmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_instruments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_HP_texture_lighting</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_storage_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_blend_minmax</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_MESA_pack_invert</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_base_instance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_convolution_accuracy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_PGI_vertex_hints</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_integer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_S3_s3tc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_query_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_vertex_shader_tessellator</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_invalidate_subdata</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_index_material</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_blend_equation_advanced_coherent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_INTEL_parallel_arrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_draw_buffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_cmyka</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_pixel_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_specular_vector</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_compatibility</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_timer_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_interlace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_parameter_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_shader_trinary_minmax</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_rescale_normal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_pixel_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_uniform_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_type_10f_11f_11f_rev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_swizzle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_transform_feedback2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_async_pixel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_fragment_program_option</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_explicit_attrib_location</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_blend_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_shader_thread_group</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_stencil_wrap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_index_array_formats</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_histogram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_point_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_direct_state_access</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_sample_positions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_program</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_shader_thread_shuffle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NVX_conditional_render</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_vertex_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_blend_func_separate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_fence</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OES_byte_coordinates</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_transpose_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_provoking_vertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_fog_coord</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_vertex_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_half_float_vertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_blend_equation_separate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_multi_draw_indirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_copy_image</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_fragment_layer_viewport</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_transform_feedback2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_transform_feedback3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_ycrcba</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_debug_marker</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_bgra</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_compression_s3tc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_pixel_transform</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_conservative_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_fragment_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_array_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SUN_triangle_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_env_add</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_packed_depth_stencil</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_mirror_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_multisample_filter_hint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_float_pixels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_transform_feedback_instanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_async</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_compression_latc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_shader_atomic_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shading_language_100</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_INTEL_performance_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_mirror_clamp_to_edge</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_gpu_shader5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_ES2_compatibility</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_indirect_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_half_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_coordinate_frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_texture_mirror_once</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_IBM_rasterpos_clip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_shadow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_deep_texture3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_draw_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_calligraphic_fragment</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_bit_encoding</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_compiled_vertex_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_depth_buffer_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_occlusion_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_flush_buffer_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_imaging</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_draw_buffers_blend</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_blend_square</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_blend_minmax_factor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_sRGB_decode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shading_language_420pack</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_meminfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_abgr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_pinned_memory</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_snorm</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_texture_coordinate_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_clear_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_debug_label</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_sample_shading</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_INTEL_map_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_env_crossbar</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_422_pixels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_compute_shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_blend_logic_op</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_IBM_cull_vertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_IBM_vertex_array_lists</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_color_buffer_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_bindless_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_window_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_internalformat_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shadow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_mirrored_repeat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_shader_image_load_store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_copy_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_register_combiners2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_ir_instrument1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_draw_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_shared_exponent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_draw_instanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_copy_depth_to_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_viewport_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_separate_shader_objects</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_depth_bounds_test</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_HP_image_transform</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_env_add</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_video_capture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_sampler_objects</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_matrix_palette</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_texture_color_mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_packed_pixels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_compression</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_aux_depth_stencil</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_subroutine</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_framebuffer_sRGB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_storage_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_vertex_attrib_64bit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_depth_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_shader_buffer_store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OES_query_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_texture_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_shader_storage_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_query_lod</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_copy_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_image_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_shader_atomic_counters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_object_purgeable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_occlusion_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_INGR_color_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGI_color_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_gpu_program5_mem_extended</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_cube_map_array</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_scalebias_hint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_gpu_shader4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_geometry_program4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_framebuffer_multisample_blit_scaled</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_debug_output</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_border_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_fragment_coord_conventions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_multitexture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_polynomial_ffd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_provoking_vertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_point_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_image_load_store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_HP_occlusion_test</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_ES3_compatibility</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_framezoom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_buffer_object_rgb32</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_bindless_multi_draw_indirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_texture_multi_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_transform_feedback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_KHR_texture_compression_astc_ldr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_3DFX_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_INTEL_fragment_shader_ordering</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_env_dot3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_gpu_program4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_gpu_program5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_float_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_texture_edge_clamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_framebuffer_sRGB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SUN_slice_accum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_index_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_shader_image_load_formatted</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_geometry_shader4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_separate_specular_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_depth_clamp_separate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SUN_convolution_border_modes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_sprite</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_get_program_binary</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_occlusion_query_event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_framebuffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_robustness_isolation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_vertex_array_bgra</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_vertex_array_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_query_buffer_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_register_combiners</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_draw_buffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_clear_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_debug_output</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGI_color_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_cull_vertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_sRGB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_row_bytes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_texgen_reflection</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_IBM_multimode_draw_arrays</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_vertex_array_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_3DFX_texture_compression_FXT1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_ycrcb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_conservative_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_compressed_texture_pixel_storage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_detail_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_draw_instanced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OES_read_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_texture_float</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_gather</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_vertex_shader_layer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shading_language_include</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_client_storage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_WIN_phong_shading</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_INGR_blend_func_separate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_path_rendering</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_vertex_streams</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_texture_non_power_of_two</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_APPLE_rgb_422</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_lod_bias</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_seamless_cube_map</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_shader_group_vote</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vdpau_interop</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_occlusion_query2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_internalformat_query2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture_filter_anisotropic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SUN_vertex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_igloo_interface</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_texture_lod</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_program3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_draw_indirect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_vertex_program4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_AMD_transform_feedback3_lines_triangles</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_fog_function</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_x11_sync_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_sync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_compute_variable_group_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_OES_fixed_point</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_framebuffer_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_gpu_shader5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_texture4D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_texture3D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_secondary_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NV_parameter_buffer_object2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ATI_vertex_array_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_NVX_gpu_memory_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_ARB_sparse_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIS_point_line_texgen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_EXT_draw_range_elements</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>GLAD_GL_SGIX_blend_alpha_minmax</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERINVPROC</name></type> <name>glad_glPointParameteriNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERIVNVPROC</name></type> <name>glad_glPointParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLELEMENTPOINTERAPPLEPROC</name></type> <name>glad_glElementPointerAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTARRAYAPPLEPROC</name></type> <name>glad_glDrawElementArrayAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC</name></type> <name>glad_glDrawRangeElementArrayAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC</name></type> <name>glad_glMultiDrawElementArrayAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC</name></type> <name>glad_glMultiDrawRangeElementArrayAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC</name></type> <name>glad_glMultiDrawArraysIndirectAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC</name></type> <name>glad_glMultiDrawElementsIndirectAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTAGSAMPLEBUFFERSGIXPROC</name></type> <name>glad_glTagSampleBufferSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILOPSEPARATEATIPROC</name></type> <name>glad_glStencilOpSeparateATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILFUNCSEPARATEATIPROC</name></type> <name>glad_glStencilFuncSeparateATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXBUFFEREXTPROC</name></type> <name>glad_glTexBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTBVARBPROC</name></type> <name>glad_glWeightbvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTSVARBPROC</name></type> <name>glad_glWeightsvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTIVARBPROC</name></type> <name>glad_glWeightivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTFVARBPROC</name></type> <name>glad_glWeightfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTDVARBPROC</name></type> <name>glad_glWeightdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTUBVARBPROC</name></type> <name>glad_glWeightubvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTUSVARBPROC</name></type> <name>glad_glWeightusvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTUIVARBPROC</name></type> <name>glad_glWeightuivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTPOINTERARBPROC</name></type> <name>glad_glWeightPointerARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXBLENDARBPROC</name></type> <name>glad_glVertexBlendARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINDEXFUNCEXTPROC</name></type> <name>glad_glIndexFuncEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKEBUFFERRESIDENTNVPROC</name></type> <name>glad_glMakeBufferResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKEBUFFERNONRESIDENTNVPROC</name></type> <name>glad_glMakeBufferNonResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISBUFFERRESIDENTNVPROC</name></type> <name>glad_glIsBufferResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKENAMEDBUFFERRESIDENTNVPROC</name></type> <name>glad_glMakeNamedBufferResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC</name></type> <name>glad_glMakeNamedBufferNonResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISNAMEDBUFFERRESIDENTNVPROC</name></type> <name>glad_glIsNamedBufferResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERPARAMETERUI64VNVPROC</name></type> <name>glad_glGetBufferParameterui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC</name></type> <name>glad_glGetNamedBufferParameterui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGERUI64VNVPROC</name></type> <name>glad_glGetIntegerui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMUI64NVPROC</name></type> <name>glad_glUniformui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMUI64VNVPROC</name></type> <name>glad_glUniformui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMUI64VNVPROC</name></type> <name>glad_glGetUniformui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMUI64NVPROC</name></type> <name>glad_glProgramUniformui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMUI64VNVPROC</name></type> <name>glad_glProgramUniformui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORSUBTABLEEXTPROC</name></type> <name>glad_glColorSubTableEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCOLORSUBTABLEEXTPROC</name></type> <name>glad_glCopyColorSubTableEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFINISHTEXTURESUNXPROC</name></type> <name>glad_glFinishTextureSUNX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWARRAYSEXTPROC</name></type> <name>glad_glMultiDrawArraysEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTSEXTPROC</name></type> <name>glad_glMultiDrawElementsEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINCONDITIONALRENDERNVPROC</name></type> <name>glad_glBeginConditionalRenderNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDCONDITIONALRENDERNVPROC</name></type> <name>glad_glEndConditionalRenderNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRESIZEBUFFERSMESAPROC</name></type> <name>glad_glResizeBuffersMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONFILTER1DEXTPROC</name></type> <name>glad_glConvolutionFilter1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONFILTER2DEXTPROC</name></type> <name>glad_glConvolutionFilter2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERFEXTPROC</name></type> <name>glad_glConvolutionParameterfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERFVEXTPROC</name></type> <name>glad_glConvolutionParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERIEXTPROC</name></type> <name>glad_glConvolutionParameteriEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERIVEXTPROC</name></type> <name>glad_glConvolutionParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC</name></type> <name>glad_glCopyConvolutionFilter1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC</name></type> <name>glad_glCopyConvolutionFilter2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCONVOLUTIONFILTEREXTPROC</name></type> <name>glad_glGetConvolutionFilterEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC</name></type> <name>glad_glGetConvolutionParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC</name></type> <name>glad_glGetConvolutionParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSEPARABLEFILTEREXTPROC</name></type> <name>glad_glGetSeparableFilterEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSEPARABLEFILTER2DEXTPROC</name></type> <name>glad_glSeparableFilter2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1I64NVPROC</name></type> <name>glad_glVertexAttribL1i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2I64NVPROC</name></type> <name>glad_glVertexAttribL2i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3I64NVPROC</name></type> <name>glad_glVertexAttribL3i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4I64NVPROC</name></type> <name>glad_glVertexAttribL4i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1I64VNVPROC</name></type> <name>glad_glVertexAttribL1i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2I64VNVPROC</name></type> <name>glad_glVertexAttribL2i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3I64VNVPROC</name></type> <name>glad_glVertexAttribL3i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4I64VNVPROC</name></type> <name>glad_glVertexAttribL4i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1UI64NVPROC</name></type> <name>glad_glVertexAttribL1ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2UI64NVPROC</name></type> <name>glad_glVertexAttribL2ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3UI64NVPROC</name></type> <name>glad_glVertexAttribL3ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4UI64NVPROC</name></type> <name>glad_glVertexAttribL4ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1UI64VNVPROC</name></type> <name>glad_glVertexAttribL1ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2UI64VNVPROC</name></type> <name>glad_glVertexAttribL2ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3UI64VNVPROC</name></type> <name>glad_glVertexAttribL3ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4UI64VNVPROC</name></type> <name>glad_glVertexAttribL4ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBLI64VNVPROC</name></type> <name>glad_glGetVertexAttribLi64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBLUI64VNVPROC</name></type> <name>glad_glGetVertexAttribLui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBLFORMATNVPROC</name></type> <name>glad_glVertexAttribLFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORTABLEEXTPROC</name></type> <name>glad_glColorTableEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEEXTPROC</name></type> <name>glad_glGetColorTableEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEPARAMETERIVEXTPROC</name></type> <name>glad_glGetColorTableParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEPARAMETERFVEXTPROC</name></type> <name>glad_glGetColorTableParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXBUFFERARBPROC</name></type> <name>glad_glTexBufferARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPNTRIANGLESIATIPROC</name></type> <name>glad_glPNTrianglesiATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPNTRIANGLESFATIPROC</name></type> <name>glad_glPNTrianglesfATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHRASTERSGIXPROC</name></type> <name>glad_glFlushRasterSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLAPPLYTEXTUREEXTPROC</name></type> <name>glad_glApplyTextureEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURELIGHTEXTPROC</name></type> <name>glad_glTextureLightEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREMATERIALEXTPROC</name></type> <name>glad_glTextureMaterialEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCINDEXEDAMDPROC</name></type> <name>glad_glBlendFuncIndexedAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC</name></type> <name>glad_glBlendFuncSeparateIndexedAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONINDEXEDAMDPROC</name></type> <name>glad_glBlendEquationIndexedAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC</name></type> <name>glad_glBlendEquationSeparateIndexedAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2DMESAPROC</name></type> <name>glad_glWindowPos2dMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2DVMESAPROC</name></type> <name>glad_glWindowPos2dvMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2FMESAPROC</name></type> <name>glad_glWindowPos2fMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2FVMESAPROC</name></type> <name>glad_glWindowPos2fvMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2IMESAPROC</name></type> <name>glad_glWindowPos2iMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2IVMESAPROC</name></type> <name>glad_glWindowPos2ivMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2SMESAPROC</name></type> <name>glad_glWindowPos2sMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2SVMESAPROC</name></type> <name>glad_glWindowPos2svMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3DMESAPROC</name></type> <name>glad_glWindowPos3dMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3DVMESAPROC</name></type> <name>glad_glWindowPos3dvMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3FMESAPROC</name></type> <name>glad_glWindowPos3fMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3FVMESAPROC</name></type> <name>glad_glWindowPos3fvMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3IMESAPROC</name></type> <name>glad_glWindowPos3iMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3IVMESAPROC</name></type> <name>glad_glWindowPos3ivMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3SMESAPROC</name></type> <name>glad_glWindowPos3sMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3SVMESAPROC</name></type> <name>glad_glWindowPos3svMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4DMESAPROC</name></type> <name>glad_glWindowPos4dMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4DVMESAPROC</name></type> <name>glad_glWindowPos4dvMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4FMESAPROC</name></type> <name>glad_glWindowPos4fMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4FVMESAPROC</name></type> <name>glad_glWindowPos4fvMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4IMESAPROC</name></type> <name>glad_glWindowPos4iMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4IVMESAPROC</name></type> <name>glad_glWindowPos4ivMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4SMESAPROC</name></type> <name>glad_glWindowPos4sMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS4SVMESAPROC</name></type> <name>glad_glWindowPos4svMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREBARRIERNVPROC</name></type> <name>glad_glTextureBarrierNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTBUFFERMASK3DFXPROC</name></type> <name>glad_glTbufferMask3DFX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMETERMINATORGREMEDYPROC</name></type> <name>glad_glFrameTerminatorGREMEDY</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUSESHADERPROGRAMEXTPROC</name></type> <name>glad_glUseShaderProgramEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACTIVEPROGRAMEXTPROC</name></type> <name>glad_glActiveProgramEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATESHADERPROGRAMEXTPROC</name></type> <name>glad_glCreateShaderProgramEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACTIVESHADERPROGRAMEXTPROC</name></type> <name>glad_glActiveShaderProgramEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDPROGRAMPIPELINEEXTPROC</name></type> <name>glad_glBindProgramPipelineEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATESHADERPROGRAMVEXTPROC</name></type> <name>glad_glCreateShaderProgramvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPROGRAMPIPELINESEXTPROC</name></type> <name>glad_glDeleteProgramPipelinesEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENPROGRAMPIPELINESEXTPROC</name></type> <name>glad_glGenProgramPipelinesEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC</name></type> <name>glad_glGetProgramPipelineInfoLogEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMPIPELINEIVEXTPROC</name></type> <name>glad_glGetProgramPipelineivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPROGRAMPIPELINEEXTPROC</name></type> <name>glad_glIsProgramPipelineEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETERIEXTPROC</name></type> <name>glad_glProgramParameteriEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1FEXTPROC</name></type> <name>glad_glProgramUniform1fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1FVEXTPROC</name></type> <name>glad_glProgramUniform1fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1IEXTPROC</name></type> <name>glad_glProgramUniform1iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1IVEXTPROC</name></type> <name>glad_glProgramUniform1ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2FEXTPROC</name></type> <name>glad_glProgramUniform2fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2FVEXTPROC</name></type> <name>glad_glProgramUniform2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2IEXTPROC</name></type> <name>glad_glProgramUniform2iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2IVEXTPROC</name></type> <name>glad_glProgramUniform2ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3FEXTPROC</name></type> <name>glad_glProgramUniform3fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3FVEXTPROC</name></type> <name>glad_glProgramUniform3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3IEXTPROC</name></type> <name>glad_glProgramUniform3iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3IVEXTPROC</name></type> <name>glad_glProgramUniform3ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4FEXTPROC</name></type> <name>glad_glProgramUniform4fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4FVEXTPROC</name></type> <name>glad_glProgramUniform4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4IEXTPROC</name></type> <name>glad_glProgramUniform4iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4IVEXTPROC</name></type> <name>glad_glProgramUniform4ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUSEPROGRAMSTAGESEXTPROC</name></type> <name>glad_glUseProgramStagesEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVALIDATEPROGRAMPIPELINEEXTPROC</name></type> <name>glad_glValidateProgramPipelineEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UIEXTPROC</name></type> <name>glad_glProgramUniform1uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UIEXTPROC</name></type> <name>glad_glProgramUniform2uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UIEXTPROC</name></type> <name>glad_glProgramUniform3uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UIEXTPROC</name></type> <name>glad_glProgramUniform4uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UIVEXTPROC</name></type> <name>glad_glProgramUniform1uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UIVEXTPROC</name></type> <name>glad_glProgramUniform2uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UIVEXTPROC</name></type> <name>glad_glProgramUniform3uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UIVEXTPROC</name></type> <name>glad_glProgramUniform4uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2x3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3x2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2x4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4x2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3x4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4x3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC</name></type> <name>glad_glTexImage2DMultisampleCoverageNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC</name></type> <name>glad_glTexImage3DMultisampleCoverageNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC</name></type> <name>glad_glTextureImage2DMultisampleNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC</name></type> <name>glad_glTextureImage3DMultisampleNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC</name></type> <name>glad_glTextureImage2DMultisampleCoverageNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC</name></type> <name>glad_glTextureImage3DMultisampleCoverageNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEOBJECTARBPROC</name></type> <name>glad_glDeleteObjectARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHANDLEARBPROC</name></type> <name>glad_glGetHandleARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDETACHOBJECTARBPROC</name></type> <name>glad_glDetachObjectARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATESHADEROBJECTARBPROC</name></type> <name>glad_glCreateShaderObjectARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHADERSOURCEARBPROC</name></type> <name>glad_glShaderSourceARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPILESHADERARBPROC</name></type> <name>glad_glCompileShaderARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATEPROGRAMOBJECTARBPROC</name></type> <name>glad_glCreateProgramObjectARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLATTACHOBJECTARBPROC</name></type> <name>glad_glAttachObjectARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLINKPROGRAMARBPROC</name></type> <name>glad_glLinkProgramARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUSEPROGRAMOBJECTARBPROC</name></type> <name>glad_glUseProgramObjectARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVALIDATEPROGRAMARBPROC</name></type> <name>glad_glValidateProgramARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1FARBPROC</name></type> <name>glad_glUniform1fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2FARBPROC</name></type> <name>glad_glUniform2fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3FARBPROC</name></type> <name>glad_glUniform3fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4FARBPROC</name></type> <name>glad_glUniform4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1IARBPROC</name></type> <name>glad_glUniform1iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2IARBPROC</name></type> <name>glad_glUniform2iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3IARBPROC</name></type> <name>glad_glUniform3iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4IARBPROC</name></type> <name>glad_glUniform4iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1FVARBPROC</name></type> <name>glad_glUniform1fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2FVARBPROC</name></type> <name>glad_glUniform2fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3FVARBPROC</name></type> <name>glad_glUniform3fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4FVARBPROC</name></type> <name>glad_glUniform4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1IVARBPROC</name></type> <name>glad_glUniform1ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2IVARBPROC</name></type> <name>glad_glUniform2ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3IVARBPROC</name></type> <name>glad_glUniform3ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4IVARBPROC</name></type> <name>glad_glUniform4ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX2FVARBPROC</name></type> <name>glad_glUniformMatrix2fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX3FVARBPROC</name></type> <name>glad_glUniformMatrix3fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMMATRIX4FVARBPROC</name></type> <name>glad_glUniformMatrix4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTPARAMETERFVARBPROC</name></type> <name>glad_glGetObjectParameterfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTPARAMETERIVARBPROC</name></type> <name>glad_glGetObjectParameterivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINFOLOGARBPROC</name></type> <name>glad_glGetInfoLogARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETATTACHEDOBJECTSARBPROC</name></type> <name>glad_glGetAttachedObjectsARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMLOCATIONARBPROC</name></type> <name>glad_glGetUniformLocationARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEUNIFORMARBPROC</name></type> <name>glad_glGetActiveUniformARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMFVARBPROC</name></type> <name>glad_glGetUniformfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMIVARBPROC</name></type> <name>glad_glGetUniformivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSHADERSOURCEARBPROC</name></type> <name>glad_glGetShaderSourceARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXBUMPPARAMETERIVATIPROC</name></type> <name>glad_glTexBumpParameterivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXBUMPPARAMETERFVATIPROC</name></type> <name>glad_glTexBumpParameterfvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXBUMPPARAMETERIVATIPROC</name></type> <name>glad_glGetTexBumpParameterivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXBUMPPARAMETERFVATIPROC</name></type> <name>glad_glGetTexBumpParameterfvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPOBJECTBUFFERATIPROC</name></type> <name>glad_glMapObjectBufferATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNMAPOBJECTBUFFERATIPROC</name></type> <name>glad_glUnmapObjectBufferATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETGRAPHICSRESETSTATUSARBPROC</name></type> <name>glad_glGetGraphicsResetStatusARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNTEXIMAGEARBPROC</name></type> <name>glad_glGetnTexImageARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREADNPIXELSARBPROC</name></type> <name>glad_glReadnPixelsARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC</name></type> <name>glad_glGetnCompressedTexImageARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNUNIFORMFVARBPROC</name></type> <name>glad_glGetnUniformfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNUNIFORMIVARBPROC</name></type> <name>glad_glGetnUniformivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNUNIFORMUIVARBPROC</name></type> <name>glad_glGetnUniformuivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNUNIFORMDVARBPROC</name></type> <name>glad_glGetnUniformdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNMAPDVARBPROC</name></type> <name>glad_glGetnMapdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNMAPFVARBPROC</name></type> <name>glad_glGetnMapfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNMAPIVARBPROC</name></type> <name>glad_glGetnMapivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNPIXELMAPFVARBPROC</name></type> <name>glad_glGetnPixelMapfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNPIXELMAPUIVARBPROC</name></type> <name>glad_glGetnPixelMapuivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNPIXELMAPUSVARBPROC</name></type> <name>glad_glGetnPixelMapusvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNPOLYGONSTIPPLEARBPROC</name></type> <name>glad_glGetnPolygonStippleARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNCOLORTABLEARBPROC</name></type> <name>glad_glGetnColorTableARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNCONVOLUTIONFILTERARBPROC</name></type> <name>glad_glGetnConvolutionFilterARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNSEPARABLEFILTERARBPROC</name></type> <name>glad_glGetnSeparableFilterARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNHISTOGRAMARBPROC</name></type> <name>glad_glGetnHistogramARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNMINMAXARBPROC</name></type> <name>glad_glGetnMinmaxARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELDATARANGENVPROC</name></type> <name>glad_glPixelDataRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHPIXELDATARANGENVPROC</name></type> <name>glad_glFlushPixelDataRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLITFRAMEBUFFEREXTPROC</name></type> <name>glad_glBlitFramebufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXWEIGHTFEXTPROC</name></type> <name>glad_glVertexWeightfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXWEIGHTFVEXTPROC</name></type> <name>glad_glVertexWeightfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXWEIGHTPOINTEREXTPROC</name></type> <name>glad_glVertexWeightPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTRINGMARKERGREMEDYPROC</name></type> <name>glad_glStringMarkerGREMEDY</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSUBIMAGE1DEXTPROC</name></type> <name>glad_glTexSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSUBIMAGE2DEXTPROC</name></type> <name>glad_glTexSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPCONTROLPOINTSNVPROC</name></type> <name>glad_glMapControlPointsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPPARAMETERIVNVPROC</name></type> <name>glad_glMapParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPPARAMETERFVNVPROC</name></type> <name>glad_glMapParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMAPCONTROLPOINTSNVPROC</name></type> <name>glad_glGetMapControlPointsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMAPPARAMETERIVNVPROC</name></type> <name>glad_glGetMapParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMAPPARAMETERFVNVPROC</name></type> <name>glad_glGetMapParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMAPATTRIBPARAMETERIVNVPROC</name></type> <name>glad_glGetMapAttribParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMAPATTRIBPARAMETERFVNVPROC</name></type> <name>glad_glGetMapAttribParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEVALMAPSNVPROC</name></type> <name>glad_glEvalMapsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXFILTERFUNCSGISPROC</name></type> <name>glad_glGetTexFilterFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXFILTERFUNCSGISPROC</name></type> <name>glad_glTexFilterFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFMONITORGROUPSAMDPROC</name></type> <name>glad_glGetPerfMonitorGroupsAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFMONITORCOUNTERSAMDPROC</name></type> <name>glad_glGetPerfMonitorCountersAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFMONITORGROUPSTRINGAMDPROC</name></type> <name>glad_glGetPerfMonitorGroupStringAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC</name></type> <name>glad_glGetPerfMonitorCounterStringAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFMONITORCOUNTERINFOAMDPROC</name></type> <name>glad_glGetPerfMonitorCounterInfoAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENPERFMONITORSAMDPROC</name></type> <name>glad_glGenPerfMonitorsAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPERFMONITORSAMDPROC</name></type> <name>glad_glDeletePerfMonitorsAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSELECTPERFMONITORCOUNTERSAMDPROC</name></type> <name>glad_glSelectPerfMonitorCountersAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINPERFMONITORAMDPROC</name></type> <name>glad_glBeginPerfMonitorAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDPERFMONITORAMDPROC</name></type> <name>glad_glEndPerfMonitorAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFMONITORCOUNTERDATAAMDPROC</name></type> <name>glad_glGetPerfMonitorCounterDataAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILCLEARTAGEXTPROC</name></type> <name>glad_glStencilClearTagEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPRESENTFRAMEKEYEDNVPROC</name></type> <name>glad_glPresentFrameKeyedNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPRESENTFRAMEDUALFILLNVPROC</name></type> <name>glad_glPresentFrameDualFillNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOIVNVPROC</name></type> <name>glad_glGetVideoivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOUIVNVPROC</name></type> <name>glad_glGetVideouivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOI64VNVPROC</name></type> <name>glad_glGetVideoi64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOUI64VNVPROC</name></type> <name>glad_glGetVideoui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETERS4FVEXTPROC</name></type> <name>glad_glProgramEnvParameters4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC</name></type> <name>glad_glProgramLocalParameters4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINTRANSFORMFEEDBACKNVPROC</name></type> <name>glad_glBeginTransformFeedbackNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDTRANSFORMFEEDBACKNVPROC</name></type> <name>glad_glEndTransformFeedbackNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC</name></type> <name>glad_glTransformFeedbackAttribsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERRANGENVPROC</name></type> <name>glad_glBindBufferRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFEROFFSETNVPROC</name></type> <name>glad_glBindBufferOffsetNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERBASENVPROC</name></type> <name>glad_glBindBufferBaseNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC</name></type> <name>glad_glTransformFeedbackVaryingsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACTIVEVARYINGNVPROC</name></type> <name>glad_glActiveVaryingNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVARYINGLOCATIONNVPROC</name></type> <name>glad_glGetVaryingLocationNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEVARYINGNVPROC</name></type> <name>glad_glGetActiveVaryingNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC</name></type> <name>glad_glGetTransformFeedbackVaryingNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC</name></type> <name>glad_glTransformFeedbackStreamAttribsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMNAMEDPARAMETER4FNVPROC</name></type> <name>glad_glProgramNamedParameter4fNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC</name></type> <name>glad_glProgramNamedParameter4fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMNAMEDPARAMETER4DNVPROC</name></type> <name>glad_glProgramNamedParameter4dNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC</name></type> <name>glad_glProgramNamedParameter4dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC</name></type> <name>glad_glGetProgramNamedParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC</name></type> <name>glad_glGetProgramNamedParameterdvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILOPVALUEAMDPROC</name></type> <name>glad_glStencilOpValueAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBDIVISORARBPROC</name></type> <name>glad_glVertexAttribDivisorARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOLYGONOFFSETEXTPROC</name></type> <name>glad_glPolygonOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSTORAGESPARSEAMDPROC</name></type> <name>glad_glTexStorageSparseAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESTORAGESPARSEAMDPROC</name></type> <name>glad_glTextureStorageSparseAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEFENCESNVPROC</name></type> <name>glad_glDeleteFencesNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENFENCESNVPROC</name></type> <name>glad_glGenFencesNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISFENCENVPROC</name></type> <name>glad_glIsFenceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTESTFENCENVPROC</name></type> <name>glad_glTestFenceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFENCEIVNVPROC</name></type> <name>glad_glGetFenceivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFINISHFENCENVPROC</name></type> <name>glad_glFinishFenceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSETFENCENVPROC</name></type> <name>glad_glSetFenceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWMESHARRAYSSUNPROC</name></type> <name>glad_glDrawMeshArraysSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATESYNCFROMCLEVENTARBPROC</name></type> <name>glad_glCreateSyncFromCLeventARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARDEPTHFOESPROC</name></type> <name>glad_glClearDepthfOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLIPPLANEFOESPROC</name></type> <name>glad_glClipPlanefOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHRANGEFOESPROC</name></type> <name>glad_glDepthRangefOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRUSTUMFOESPROC</name></type> <name>glad_glFrustumfOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCLIPPLANEFOESPROC</name></type> <name>glad_glGetClipPlanefOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLORTHOFOESPROC</name></type> <name>glad_glOrthofOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPRIMITIVERESTARTNVPROC</name></type> <name>glad_glPrimitiveRestartNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPRIMITIVERESTARTINDEXNVPROC</name></type> <name>glad_glPrimitiveRestartIndexNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORBSUNPROC</name></type> <name>glad_glGlobalAlphaFactorbSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORSSUNPROC</name></type> <name>glad_glGlobalAlphaFactorsSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORISUNPROC</name></type> <name>glad_glGlobalAlphaFactoriSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORFSUNPROC</name></type> <name>glad_glGlobalAlphaFactorfSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORDSUNPROC</name></type> <name>glad_glGlobalAlphaFactordSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORUBSUNPROC</name></type> <name>glad_glGlobalAlphaFactorubSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORUSSUNPROC</name></type> <name>glad_glGlobalAlphaFactorusSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGLOBALALPHAFACTORUISUNPROC</name></type> <name>glad_glGlobalAlphaFactoruiSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLARETEXTURESRESIDENTEXTPROC</name></type> <name>glad_glAreTexturesResidentEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDTEXTUREEXTPROC</name></type> <name>glad_glBindTextureEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETETEXTURESEXTPROC</name></type> <name>glad_glDeleteTexturesEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENTEXTURESEXTPROC</name></type> <name>glad_glGenTexturesEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISTEXTUREEXTPROC</name></type> <name>glad_glIsTextureEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPRIORITIZETEXTURESEXTPROC</name></type> <name>glad_glPrioritizeTexturesEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENNAMESAMDPROC</name></type> <name>glad_glGenNamesAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETENAMESAMDPROC</name></type> <name>glad_glDeleteNamesAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISNAMEAMDPROC</name></type> <name>glad_glIsNameAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEVERTEXATTRIBAPPLEPROC</name></type> <name>glad_glEnableVertexAttribAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEVERTEXATTRIBAPPLEPROC</name></type> <name>glad_glDisableVertexAttribAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISVERTEXATTRIBENABLEDAPPLEPROC</name></type> <name>glad_glIsVertexAttribEnabledAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPVERTEXATTRIB1DAPPLEPROC</name></type> <name>glad_glMapVertexAttrib1dAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPVERTEXATTRIB1FAPPLEPROC</name></type> <name>glad_glMapVertexAttrib1fAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPVERTEXATTRIB2DAPPLEPROC</name></type> <name>glad_glMapVertexAttrib2dAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPVERTEXATTRIB2FAPPLEPROC</name></type> <name>glad_glMapVertexAttrib2fAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETLISTPARAMETERFVSGIXPROC</name></type> <name>glad_glGetListParameterfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETLISTPARAMETERIVSGIXPROC</name></type> <name>glad_glGetListParameterivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLISTPARAMETERFSGIXPROC</name></type> <name>glad_glListParameterfSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLISTPARAMETERFVSGIXPROC</name></type> <name>glad_glListParameterfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLISTPARAMETERISGIXPROC</name></type> <name>glad_glListParameteriSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLISTPARAMETERIVSGIXPROC</name></type> <name>glad_glListParameterivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBUFFERADDRESSRANGENVPROC</name></type> <name>glad_glBufferAddressRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXFORMATNVPROC</name></type> <name>glad_glVertexFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALFORMATNVPROC</name></type> <name>glad_glNormalFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORFORMATNVPROC</name></type> <name>glad_glColorFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINDEXFORMATNVPROC</name></type> <name>glad_glIndexFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDFORMATNVPROC</name></type> <name>glad_glTexCoordFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEDGEFLAGFORMATNVPROC</name></type> <name>glad_glEdgeFlagFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLORFORMATNVPROC</name></type> <name>glad_glSecondaryColorFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDFORMATNVPROC</name></type> <name>glad_glFogCoordFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBFORMATNVPROC</name></type> <name>glad_glVertexAttribFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBIFORMATNVPROC</name></type> <name>glad_glVertexAttribIFormatNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGERUI64I_VNVPROC</name></type> <name>glad_glGetIntegerui64i_vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDPARAMETERINVPROC</name></type> <name>glad_glBlendParameteriNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDBARRIERNVPROC</name></type> <name>glad_glBlendBarrierNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHARPENTEXFUNCSGISPROC</name></type> <name>glad_glSharpenTexFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSHARPENTEXFUNCSGISPROC</name></type> <name>glad_glGetSharpenTexFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DARBPROC</name></type> <name>glad_glVertexAttrib1dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DVARBPROC</name></type> <name>glad_glVertexAttrib1dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FARBPROC</name></type> <name>glad_glVertexAttrib1fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FVARBPROC</name></type> <name>glad_glVertexAttrib1fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SARBPROC</name></type> <name>glad_glVertexAttrib1sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SVARBPROC</name></type> <name>glad_glVertexAttrib1svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DARBPROC</name></type> <name>glad_glVertexAttrib2dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DVARBPROC</name></type> <name>glad_glVertexAttrib2dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FARBPROC</name></type> <name>glad_glVertexAttrib2fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FVARBPROC</name></type> <name>glad_glVertexAttrib2fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SARBPROC</name></type> <name>glad_glVertexAttrib2sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SVARBPROC</name></type> <name>glad_glVertexAttrib2svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DARBPROC</name></type> <name>glad_glVertexAttrib3dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DVARBPROC</name></type> <name>glad_glVertexAttrib3dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FARBPROC</name></type> <name>glad_glVertexAttrib3fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FVARBPROC</name></type> <name>glad_glVertexAttrib3fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SARBPROC</name></type> <name>glad_glVertexAttrib3sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SVARBPROC</name></type> <name>glad_glVertexAttrib3svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NBVARBPROC</name></type> <name>glad_glVertexAttrib4NbvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NIVARBPROC</name></type> <name>glad_glVertexAttrib4NivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NSVARBPROC</name></type> <name>glad_glVertexAttrib4NsvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUBARBPROC</name></type> <name>glad_glVertexAttrib4NubARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUBVARBPROC</name></type> <name>glad_glVertexAttrib4NubvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUIVARBPROC</name></type> <name>glad_glVertexAttrib4NuivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUSVARBPROC</name></type> <name>glad_glVertexAttrib4NusvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4BVARBPROC</name></type> <name>glad_glVertexAttrib4bvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DARBPROC</name></type> <name>glad_glVertexAttrib4dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DVARBPROC</name></type> <name>glad_glVertexAttrib4dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FARBPROC</name></type> <name>glad_glVertexAttrib4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FVARBPROC</name></type> <name>glad_glVertexAttrib4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4IVARBPROC</name></type> <name>glad_glVertexAttrib4ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SARBPROC</name></type> <name>glad_glVertexAttrib4sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SVARBPROC</name></type> <name>glad_glVertexAttrib4svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UBVARBPROC</name></type> <name>glad_glVertexAttrib4ubvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UIVARBPROC</name></type> <name>glad_glVertexAttrib4uivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4USVARBPROC</name></type> <name>glad_glVertexAttrib4usvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBPOINTERARBPROC</name></type> <name>glad_glVertexAttribPointerARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEVERTEXATTRIBARRAYARBPROC</name></type> <name>glad_glEnableVertexAttribArrayARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC</name></type> <name>glad_glDisableVertexAttribArrayARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMSTRINGARBPROC</name></type> <name>glad_glProgramStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDPROGRAMARBPROC</name></type> <name>glad_glBindProgramARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPROGRAMSARBPROC</name></type> <name>glad_glDeleteProgramsARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENPROGRAMSARBPROC</name></type> <name>glad_glGenProgramsARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4DARBPROC</name></type> <name>glad_glProgramEnvParameter4dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4DVARBPROC</name></type> <name>glad_glProgramEnvParameter4dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4FARBPROC</name></type> <name>glad_glProgramEnvParameter4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4FVARBPROC</name></type> <name>glad_glProgramEnvParameter4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4DARBPROC</name></type> <name>glad_glProgramLocalParameter4dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4DVARBPROC</name></type> <name>glad_glProgramLocalParameter4dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4FARBPROC</name></type> <name>glad_glProgramLocalParameter4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC</name></type> <name>glad_glProgramLocalParameter4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMENVPARAMETERDVARBPROC</name></type> <name>glad_glGetProgramEnvParameterdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMENVPARAMETERFVARBPROC</name></type> <name>glad_glGetProgramEnvParameterfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC</name></type> <name>glad_glGetProgramLocalParameterdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC</name></type> <name>glad_glGetProgramLocalParameterfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMIVARBPROC</name></type> <name>glad_glGetProgramivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMSTRINGARBPROC</name></type> <name>glad_glGetProgramStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBDVARBPROC</name></type> <name>glad_glGetVertexAttribdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBFVARBPROC</name></type> <name>glad_glGetVertexAttribfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIVARBPROC</name></type> <name>glad_glGetVertexAttribivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBPOINTERVARBPROC</name></type> <name>glad_glGetVertexAttribPointervARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPROGRAMARBPROC</name></type> <name>glad_glIsProgramARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERARBPROC</name></type> <name>glad_glBindBufferARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEBUFFERSARBPROC</name></type> <name>glad_glDeleteBuffersARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENBUFFERSARBPROC</name></type> <name>glad_glGenBuffersARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISBUFFERARBPROC</name></type> <name>glad_glIsBufferARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBUFFERDATAARBPROC</name></type> <name>glad_glBufferDataARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBUFFERSUBDATAARBPROC</name></type> <name>glad_glBufferSubDataARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERSUBDATAARBPROC</name></type> <name>glad_glGetBufferSubDataARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPBUFFERARBPROC</name></type> <name>glad_glMapBufferARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNMAPBUFFERARBPROC</name></type> <name>glad_glUnmapBufferARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERPARAMETERIVARBPROC</name></type> <name>glad_glGetBufferParameterivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBUFFERPOINTERVARBPROC</name></type> <name>glad_glGetBufferPointervARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHVERTEXARRAYRANGENVPROC</name></type> <name>glad_glFlushVertexArrayRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYRANGENVPROC</name></type> <name>glad_glVertexArrayRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTCOLORMATERIALSGIXPROC</name></type> <name>glad_glFragmentColorMaterialSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTFSGIXPROC</name></type> <name>glad_glFragmentLightfSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTFVSGIXPROC</name></type> <name>glad_glFragmentLightfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTISGIXPROC</name></type> <name>glad_glFragmentLightiSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTIVSGIXPROC</name></type> <name>glad_glFragmentLightivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTMODELFSGIXPROC</name></type> <name>glad_glFragmentLightModelfSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTMODELFVSGIXPROC</name></type> <name>glad_glFragmentLightModelfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTMODELISGIXPROC</name></type> <name>glad_glFragmentLightModeliSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTLIGHTMODELIVSGIXPROC</name></type> <name>glad_glFragmentLightModelivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTMATERIALFSGIXPROC</name></type> <name>glad_glFragmentMaterialfSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTMATERIALFVSGIXPROC</name></type> <name>glad_glFragmentMaterialfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTMATERIALISGIXPROC</name></type> <name>glad_glFragmentMaterialiSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAGMENTMATERIALIVSGIXPROC</name></type> <name>glad_glFragmentMaterialivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAGMENTLIGHTFVSGIXPROC</name></type> <name>glad_glGetFragmentLightfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAGMENTLIGHTIVSGIXPROC</name></type> <name>glad_glGetFragmentLightivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAGMENTMATERIALFVSGIXPROC</name></type> <name>glad_glGetFragmentMaterialfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAGMENTMATERIALIVSGIXPROC</name></type> <name>glad_glGetFragmentMaterialivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLIGHTENVISGIXPROC</name></type> <name>glad_glLightEnviSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC</name></type> <name>glad_glRenderbufferStorageMultisampleCoverageNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTI64VEXTPROC</name></type> <name>glad_glGetQueryObjecti64vEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTUI64VEXTPROC</name></type> <name>glad_glGetQueryObjectui64vEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTUREHANDLENVPROC</name></type> <name>glad_glGetTextureHandleNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTURESAMPLERHANDLENVPROC</name></type> <name>glad_glGetTextureSamplerHandleNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKETEXTUREHANDLERESIDENTNVPROC</name></type> <name>glad_glMakeTextureHandleResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC</name></type> <name>glad_glMakeTextureHandleNonResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETIMAGEHANDLENVPROC</name></type> <name>glad_glGetImageHandleNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKEIMAGEHANDLERESIDENTNVPROC</name></type> <name>glad_glMakeImageHandleResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC</name></type> <name>glad_glMakeImageHandleNonResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMHANDLEUI64NVPROC</name></type> <name>glad_glUniformHandleui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMHANDLEUI64VNVPROC</name></type> <name>glad_glUniformHandleui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC</name></type> <name>glad_glProgramUniformHandleui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC</name></type> <name>glad_glProgramUniformHandleui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISTEXTUREHANDLERESIDENTNVPROC</name></type> <name>glad_glIsTextureHandleResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISIMAGEHANDLERESIDENTNVPROC</name></type> <name>glad_glIsImageHandleResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPOINTERVPROC</name></type> <name>glad_glGetPointerv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGECONTROLKHRPROC</name></type> <name>glad_glDebugMessageControlKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGEINSERTKHRPROC</name></type> <name>glad_glDebugMessageInsertKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGECALLBACKKHRPROC</name></type> <name>glad_glDebugMessageCallbackKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDEBUGMESSAGELOGKHRPROC</name></type> <name>glad_glGetDebugMessageLogKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPUSHDEBUGGROUPKHRPROC</name></type> <name>glad_glPushDebugGroupKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOPDEBUGGROUPKHRPROC</name></type> <name>glad_glPopDebugGroupKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLOBJECTLABELKHRPROC</name></type> <name>glad_glObjectLabelKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTLABELKHRPROC</name></type> <name>glad_glGetObjectLabelKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLOBJECTPTRLABELKHRPROC</name></type> <name>glad_glObjectPtrLabelKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTPTRLABELKHRPROC</name></type> <name>glad_glGetObjectPtrLabelKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPOINTERVKHRPROC</name></type> <name>glad_glGetPointervKHR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBARRAYOBJECTATIPROC</name></type> <name>glad_glVertexAttribArrayObjectATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC</name></type> <name>glad_glGetVertexAttribArrayObjectfvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC</name></type> <name>glad_glGetVertexAttribArrayObjectivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETERIEXTPROC</name></type> <name>glad_glProgramParameteriEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMBUFFEREXTPROC</name></type> <name>glad_glUniformBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMBUFFERSIZEEXTPROC</name></type> <name>glad_glGetUniformBufferSizeEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMOFFSETEXTPROC</name></type> <name>glad_glGetUniformOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLELEMENTPOINTERATIPROC</name></type> <name>glad_glElementPointerATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTARRAYATIPROC</name></type> <name>glad_glDrawElementArrayATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWRANGEELEMENTARRAYATIPROC</name></type> <name>glad_glDrawRangeElementArrayATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREFERENCEPLANESGIXPROC</name></type> <name>glad_glReferencePlaneSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACTIVESTENCILFACEEXTPROC</name></type> <name>glad_glActiveStencilFaceEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTISAMPLEFVNVPROC</name></type> <name>glad_glGetMultisamplefvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLEMASKINDEXEDNVPROC</name></type> <name>glad_glSampleMaskIndexedNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXRENDERBUFFERNVPROC</name></type> <name>glad_glTexRenderbufferNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHSTATICDATAIBMPROC</name></type> <name>glad_glFlushStaticDataIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURENORMALEXTPROC</name></type> <name>glad_glTextureNormalEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFEXTPROC</name></type> <name>glad_glPointParameterfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFVEXTPROC</name></type> <name>glad_glPointParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLHINTPGIPROC</name></type> <name>glad_glHintPGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FARBPROC</name></type> <name>glad_glVertexAttrib1fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SARBPROC</name></type> <name>glad_glVertexAttrib1sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DARBPROC</name></type> <name>glad_glVertexAttrib1dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FARBPROC</name></type> <name>glad_glVertexAttrib2fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SARBPROC</name></type> <name>glad_glVertexAttrib2sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DARBPROC</name></type> <name>glad_glVertexAttrib2dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FARBPROC</name></type> <name>glad_glVertexAttrib3fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SARBPROC</name></type> <name>glad_glVertexAttrib3sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DARBPROC</name></type> <name>glad_glVertexAttrib3dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FARBPROC</name></type> <name>glad_glVertexAttrib4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SARBPROC</name></type> <name>glad_glVertexAttrib4sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DARBPROC</name></type> <name>glad_glVertexAttrib4dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUBARBPROC</name></type> <name>glad_glVertexAttrib4NubARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FVARBPROC</name></type> <name>glad_glVertexAttrib1fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SVARBPROC</name></type> <name>glad_glVertexAttrib1svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DVARBPROC</name></type> <name>glad_glVertexAttrib1dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FVARBPROC</name></type> <name>glad_glVertexAttrib2fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SVARBPROC</name></type> <name>glad_glVertexAttrib2svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DVARBPROC</name></type> <name>glad_glVertexAttrib2dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FVARBPROC</name></type> <name>glad_glVertexAttrib3fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SVARBPROC</name></type> <name>glad_glVertexAttrib3svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DVARBPROC</name></type> <name>glad_glVertexAttrib3dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FVARBPROC</name></type> <name>glad_glVertexAttrib4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SVARBPROC</name></type> <name>glad_glVertexAttrib4svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DVARBPROC</name></type> <name>glad_glVertexAttrib4dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4IVARBPROC</name></type> <name>glad_glVertexAttrib4ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4BVARBPROC</name></type> <name>glad_glVertexAttrib4bvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UBVARBPROC</name></type> <name>glad_glVertexAttrib4ubvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4USVARBPROC</name></type> <name>glad_glVertexAttrib4usvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UIVARBPROC</name></type> <name>glad_glVertexAttrib4uivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NBVARBPROC</name></type> <name>glad_glVertexAttrib4NbvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NSVARBPROC</name></type> <name>glad_glVertexAttrib4NsvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NIVARBPROC</name></type> <name>glad_glVertexAttrib4NivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUBVARBPROC</name></type> <name>glad_glVertexAttrib4NubvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUSVARBPROC</name></type> <name>glad_glVertexAttrib4NusvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4NUIVARBPROC</name></type> <name>glad_glVertexAttrib4NuivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBPOINTERARBPROC</name></type> <name>glad_glVertexAttribPointerARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEVERTEXATTRIBARRAYARBPROC</name></type> <name>glad_glEnableVertexAttribArrayARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC</name></type> <name>glad_glDisableVertexAttribArrayARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDATTRIBLOCATIONARBPROC</name></type> <name>glad_glBindAttribLocationARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETACTIVEATTRIBARBPROC</name></type> <name>glad_glGetActiveAttribARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETATTRIBLOCATIONARBPROC</name></type> <name>glad_glGetAttribLocationARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBDVARBPROC</name></type> <name>glad_glGetVertexAttribdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBFVARBPROC</name></type> <name>glad_glGetVertexAttribfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIVARBPROC</name></type> <name>glad_glGetVertexAttribivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBPOINTERVARBPROC</name></type> <name>glad_glGetVertexAttribPointervARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORMASKINDEXEDEXTPROC</name></type> <name>glad_glColorMaskIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBOOLEANINDEXEDVEXTPROC</name></type> <name>glad_glGetBooleanIndexedvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGERINDEXEDVEXTPROC</name></type> <name>glad_glGetIntegerIndexedvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEINDEXEDEXTPROC</name></type> <name>glad_glEnableIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEINDEXEDEXTPROC</name></type> <name>glad_glDisableIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISENABLEDINDEXEDEXTPROC</name></type> <name>glad_glIsEnabledIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBPARAMETERIAMDPROC</name></type> <name>glad_glVertexAttribParameteriAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMSTRINGARBPROC</name></type> <name>glad_glProgramStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDPROGRAMARBPROC</name></type> <name>glad_glBindProgramARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPROGRAMSARBPROC</name></type> <name>glad_glDeleteProgramsARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENPROGRAMSARBPROC</name></type> <name>glad_glGenProgramsARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4DARBPROC</name></type> <name>glad_glProgramEnvParameter4dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4DVARBPROC</name></type> <name>glad_glProgramEnvParameter4dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4FARBPROC</name></type> <name>glad_glProgramEnvParameter4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETER4FVARBPROC</name></type> <name>glad_glProgramEnvParameter4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4DARBPROC</name></type> <name>glad_glProgramLocalParameter4dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4DVARBPROC</name></type> <name>glad_glProgramLocalParameter4dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4FARBPROC</name></type> <name>glad_glProgramLocalParameter4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC</name></type> <name>glad_glProgramLocalParameter4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMENVPARAMETERDVARBPROC</name></type> <name>glad_glGetProgramEnvParameterdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMENVPARAMETERFVARBPROC</name></type> <name>glad_glGetProgramEnvParameterfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC</name></type> <name>glad_glGetProgramLocalParameterdvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC</name></type> <name>glad_glGetProgramLocalParameterfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMIVARBPROC</name></type> <name>glad_glGetProgramivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMSTRINGARBPROC</name></type> <name>glad_glGetProgramStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPROGRAMARBPROC</name></type> <name>glad_glIsProgramARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTEXGENPARAMETERISGISPROC</name></type> <name>glad_glPixelTexGenParameteriSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTEXGENPARAMETERIVSGISPROC</name></type> <name>glad_glPixelTexGenParameterivSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTEXGENPARAMETERFSGISPROC</name></type> <name>glad_glPixelTexGenParameterfSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTEXGENPARAMETERFVSGISPROC</name></type> <name>glad_glPixelTexGenParameterfvSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC</name></type> <name>glad_glGetPixelTexGenParameterivSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC</name></type> <name>glad_glGetPixelTexGenParameterfvSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINSTRUMENTSSGIXPROC</name></type> <name>glad_glGetInstrumentsSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINSTRUMENTSBUFFERSGIXPROC</name></type> <name>glad_glInstrumentsBufferSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOLLINSTRUMENTSSGIXPROC</name></type> <name>glad_glPollInstrumentsSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREADINSTRUMENTSSGIXPROC</name></type> <name>glad_glReadInstrumentsSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTARTINSTRUMENTSSGIXPROC</name></type> <name>glad_glStartInstrumentsSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTOPINSTRUMENTSSGIXPROC</name></type> <name>glad_glStopInstrumentsSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONEXTPROC</name></type> <name>glad_glBlendEquationEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERIIVEXTPROC</name></type> <name>glad_glTexParameterIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERIUIVEXTPROC</name></type> <name>glad_glTexParameterIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERIIVEXTPROC</name></type> <name>glad_glGetTexParameterIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERIUIVEXTPROC</name></type> <name>glad_glGetTexParameterIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARCOLORIIEXTPROC</name></type> <name>glad_glClearColorIiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARCOLORIUIEXTPROC</name></type> <name>glad_glClearColorIuiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTESSELLATIONFACTORAMDPROC</name></type> <name>glad_glTessellationFactorAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTESSELLATIONMODEAMDPROC</name></type> <name>glad_glTessellationModeAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINDEXMATERIALEXTPROC</name></type> <name>glad_glIndexMaterialEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXPOINTERVINTELPROC</name></type> <name>glad_glVertexPointervINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALPOINTERVINTELPROC</name></type> <name>glad_glNormalPointervINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORPOINTERVINTELPROC</name></type> <name>glad_glColorPointervINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDPOINTERVINTELPROC</name></type> <name>glad_glTexCoordPointervINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWBUFFERSATIPROC</name></type> <name>glad_glDrawBuffersATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTEXGENSGIXPROC</name></type> <name>glad_glPixelTexGenSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC</name></type> <name>glad_glProgramBufferParametersfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC</name></type> <name>glad_glProgramBufferParametersIivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC</name></type> <name>glad_glProgramBufferParametersIuivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDTRANSFORMFEEDBACKNVPROC</name></type> <name>glad_glBindTransformFeedbackNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETETRANSFORMFEEDBACKSNVPROC</name></type> <name>glad_glDeleteTransformFeedbacksNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENTRANSFORMFEEDBACKSNVPROC</name></type> <name>glad_glGenTransformFeedbacksNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISTRANSFORMFEEDBACKNVPROC</name></type> <name>glad_glIsTransformFeedbackNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPAUSETRANSFORMFEEDBACKNVPROC</name></type> <name>glad_glPauseTransformFeedbackNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRESUMETRANSFORMFEEDBACKNVPROC</name></type> <name>glad_glResumeTransformFeedbackNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWTRANSFORMFEEDBACKNVPROC</name></type> <name>glad_glDrawTransformFeedbackNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDCOLOREXTPROC</name></type> <name>glad_glBlendColorEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHISTOGRAMEXTPROC</name></type> <name>glad_glGetHistogramEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHISTOGRAMPARAMETERFVEXTPROC</name></type> <name>glad_glGetHistogramParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHISTOGRAMPARAMETERIVEXTPROC</name></type> <name>glad_glGetHistogramParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMINMAXEXTPROC</name></type> <name>glad_glGetMinmaxEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMINMAXPARAMETERFVEXTPROC</name></type> <name>glad_glGetMinmaxParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMINMAXPARAMETERIVEXTPROC</name></type> <name>glad_glGetMinmaxParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLHISTOGRAMEXTPROC</name></type> <name>glad_glHistogramEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMINMAXEXTPROC</name></type> <name>glad_glMinmaxEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRESETHISTOGRAMEXTPROC</name></type> <name>glad_glResetHistogramEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRESETMINMAXEXTPROC</name></type> <name>glad_glResetMinmaxEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFSGISPROC</name></type> <name>glad_glPointParameterfSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFVSGISPROC</name></type> <name>glad_glPointParameterfvSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXLOADFEXTPROC</name></type> <name>glad_glMatrixLoadfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXLOADDEXTPROC</name></type> <name>glad_glMatrixLoaddEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXMULTFEXTPROC</name></type> <name>glad_glMatrixMultfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXMULTDEXTPROC</name></type> <name>glad_glMatrixMultdEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXLOADIDENTITYEXTPROC</name></type> <name>glad_glMatrixLoadIdentityEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXROTATEFEXTPROC</name></type> <name>glad_glMatrixRotatefEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXROTATEDEXTPROC</name></type> <name>glad_glMatrixRotatedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXSCALEFEXTPROC</name></type> <name>glad_glMatrixScalefEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXSCALEDEXTPROC</name></type> <name>glad_glMatrixScaledEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXTRANSLATEFEXTPROC</name></type> <name>glad_glMatrixTranslatefEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXTRANSLATEDEXTPROC</name></type> <name>glad_glMatrixTranslatedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXFRUSTUMEXTPROC</name></type> <name>glad_glMatrixFrustumEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXORTHOEXTPROC</name></type> <name>glad_glMatrixOrthoEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXPOPEXTPROC</name></type> <name>glad_glMatrixPopEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXPUSHEXTPROC</name></type> <name>glad_glMatrixPushEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLIENTATTRIBDEFAULTEXTPROC</name></type> <name>glad_glClientAttribDefaultEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC</name></type> <name>glad_glPushClientAttribDefaultEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREPARAMETERFEXTPROC</name></type> <name>glad_glTextureParameterfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREPARAMETERFVEXTPROC</name></type> <name>glad_glTextureParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREPARAMETERIEXTPROC</name></type> <name>glad_glTextureParameteriEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREPARAMETERIVEXTPROC</name></type> <name>glad_glTextureParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREIMAGE1DEXTPROC</name></type> <name>glad_glTextureImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREIMAGE2DEXTPROC</name></type> <name>glad_glTextureImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESUBIMAGE1DEXTPROC</name></type> <name>glad_glTextureSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESUBIMAGE2DEXTPROC</name></type> <name>glad_glTextureSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXTUREIMAGE1DEXTPROC</name></type> <name>glad_glCopyTextureImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXTUREIMAGE2DEXTPROC</name></type> <name>glad_glCopyTextureImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC</name></type> <name>glad_glCopyTextureSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC</name></type> <name>glad_glCopyTextureSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTUREIMAGEEXTPROC</name></type> <name>glad_glGetTextureImageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTUREPARAMETERFVEXTPROC</name></type> <name>glad_glGetTextureParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTUREPARAMETERIVEXTPROC</name></type> <name>glad_glGetTextureParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC</name></type> <name>glad_glGetTextureLevelParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC</name></type> <name>glad_glGetTextureLevelParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREIMAGE3DEXTPROC</name></type> <name>glad_glTextureImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESUBIMAGE3DEXTPROC</name></type> <name>glad_glTextureSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC</name></type> <name>glad_glCopyTextureSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDMULTITEXTUREEXTPROC</name></type> <name>glad_glBindMultiTextureEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORDPOINTEREXTPROC</name></type> <name>glad_glMultiTexCoordPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXENVFEXTPROC</name></type> <name>glad_glMultiTexEnvfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXENVFVEXTPROC</name></type> <name>glad_glMultiTexEnvfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXENVIEXTPROC</name></type> <name>glad_glMultiTexEnviEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXENVIVEXTPROC</name></type> <name>glad_glMultiTexEnvivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXGENDEXTPROC</name></type> <name>glad_glMultiTexGendEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXGENDVEXTPROC</name></type> <name>glad_glMultiTexGendvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXGENFEXTPROC</name></type> <name>glad_glMultiTexGenfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXGENFVEXTPROC</name></type> <name>glad_glMultiTexGenfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXGENIEXTPROC</name></type> <name>glad_glMultiTexGeniEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXGENIVEXTPROC</name></type> <name>glad_glMultiTexGenivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXENVFVEXTPROC</name></type> <name>glad_glGetMultiTexEnvfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXENVIVEXTPROC</name></type> <name>glad_glGetMultiTexEnvivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXGENDVEXTPROC</name></type> <name>glad_glGetMultiTexGendvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXGENFVEXTPROC</name></type> <name>glad_glGetMultiTexGenfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXGENIVEXTPROC</name></type> <name>glad_glGetMultiTexGenivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXPARAMETERIEXTPROC</name></type> <name>glad_glMultiTexParameteriEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXPARAMETERIVEXTPROC</name></type> <name>glad_glMultiTexParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXPARAMETERFEXTPROC</name></type> <name>glad_glMultiTexParameterfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXPARAMETERFVEXTPROC</name></type> <name>glad_glMultiTexParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXIMAGE1DEXTPROC</name></type> <name>glad_glMultiTexImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXIMAGE2DEXTPROC</name></type> <name>glad_glMultiTexImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXSUBIMAGE1DEXTPROC</name></type> <name>glad_glMultiTexSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXSUBIMAGE2DEXTPROC</name></type> <name>glad_glMultiTexSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYMULTITEXIMAGE1DEXTPROC</name></type> <name>glad_glCopyMultiTexImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYMULTITEXIMAGE2DEXTPROC</name></type> <name>glad_glCopyMultiTexImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC</name></type> <name>glad_glCopyMultiTexSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC</name></type> <name>glad_glCopyMultiTexSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXIMAGEEXTPROC</name></type> <name>glad_glGetMultiTexImageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXPARAMETERFVEXTPROC</name></type> <name>glad_glGetMultiTexParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXPARAMETERIVEXTPROC</name></type> <name>glad_glGetMultiTexParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC</name></type> <name>glad_glGetMultiTexLevelParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC</name></type> <name>glad_glGetMultiTexLevelParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXIMAGE3DEXTPROC</name></type> <name>glad_glMultiTexImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXSUBIMAGE3DEXTPROC</name></type> <name>glad_glMultiTexSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC</name></type> <name>glad_glCopyMultiTexSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLECLIENTSTATEINDEXEDEXTPROC</name></type> <name>glad_glEnableClientStateIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC</name></type> <name>glad_glDisableClientStateIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFLOATINDEXEDVEXTPROC</name></type> <name>glad_glGetFloatIndexedvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDOUBLEINDEXEDVEXTPROC</name></type> <name>glad_glGetDoubleIndexedvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPOINTERINDEXEDVEXTPROC</name></type> <name>glad_glGetPointerIndexedvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEINDEXEDEXTPROC</name></type> <name>glad_glEnableIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEINDEXEDEXTPROC</name></type> <name>glad_glDisableIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISENABLEDINDEXEDEXTPROC</name></type> <name>glad_glIsEnabledIndexedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINTEGERINDEXEDVEXTPROC</name></type> <name>glad_glGetIntegerIndexedvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETBOOLEANINDEXEDVEXTPROC</name></type> <name>glad_glGetBooleanIndexedvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC</name></type> <name>glad_glCompressedTextureImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC</name></type> <name>glad_glCompressedTextureImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC</name></type> <name>glad_glCompressedTextureImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC</name></type> <name>glad_glCompressedTextureSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC</name></type> <name>glad_glCompressedTextureSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC</name></type> <name>glad_glCompressedTextureSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC</name></type> <name>glad_glGetCompressedTextureImageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC</name></type> <name>glad_glCompressedMultiTexImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC</name></type> <name>glad_glCompressedMultiTexImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC</name></type> <name>glad_glCompressedMultiTexImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC</name></type> <name>glad_glCompressedMultiTexSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC</name></type> <name>glad_glCompressedMultiTexSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC</name></type> <name>glad_glCompressedMultiTexSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC</name></type> <name>glad_glGetCompressedMultiTexImageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXLOADTRANSPOSEFEXTPROC</name></type> <name>glad_glMatrixLoadTransposefEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXLOADTRANSPOSEDEXTPROC</name></type> <name>glad_glMatrixLoadTransposedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXMULTTRANSPOSEFEXTPROC</name></type> <name>glad_glMatrixMultTransposefEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXMULTTRANSPOSEDEXTPROC</name></type> <name>glad_glMatrixMultTransposedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDBUFFERDATAEXTPROC</name></type> <name>glad_glNamedBufferDataEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDBUFFERSUBDATAEXTPROC</name></type> <name>glad_glNamedBufferSubDataEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPNAMEDBUFFEREXTPROC</name></type> <name>glad_glMapNamedBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNMAPNAMEDBUFFEREXTPROC</name></type> <name>glad_glUnmapNamedBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC</name></type> <name>glad_glGetNamedBufferParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDBUFFERPOINTERVEXTPROC</name></type> <name>glad_glGetNamedBufferPointervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDBUFFERSUBDATAEXTPROC</name></type> <name>glad_glGetNamedBufferSubDataEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1FEXTPROC</name></type> <name>glad_glProgramUniform1fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2FEXTPROC</name></type> <name>glad_glProgramUniform2fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3FEXTPROC</name></type> <name>glad_glProgramUniform3fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4FEXTPROC</name></type> <name>glad_glProgramUniform4fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1IEXTPROC</name></type> <name>glad_glProgramUniform1iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2IEXTPROC</name></type> <name>glad_glProgramUniform2iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3IEXTPROC</name></type> <name>glad_glProgramUniform3iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4IEXTPROC</name></type> <name>glad_glProgramUniform4iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1FVEXTPROC</name></type> <name>glad_glProgramUniform1fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2FVEXTPROC</name></type> <name>glad_glProgramUniform2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3FVEXTPROC</name></type> <name>glad_glProgramUniform3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4FVEXTPROC</name></type> <name>glad_glProgramUniform4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1IVEXTPROC</name></type> <name>glad_glProgramUniform1ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2IVEXTPROC</name></type> <name>glad_glProgramUniform2ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3IVEXTPROC</name></type> <name>glad_glProgramUniform3ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4IVEXTPROC</name></type> <name>glad_glProgramUniform4ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2x3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3x2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2x4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4x2fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3x4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4x3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREBUFFEREXTPROC</name></type> <name>glad_glTextureBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXBUFFEREXTPROC</name></type> <name>glad_glMultiTexBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREPARAMETERIIVEXTPROC</name></type> <name>glad_glTextureParameterIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREPARAMETERIUIVEXTPROC</name></type> <name>glad_glTextureParameterIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTUREPARAMETERIIVEXTPROC</name></type> <name>glad_glGetTextureParameterIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTUREPARAMETERIUIVEXTPROC</name></type> <name>glad_glGetTextureParameterIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXPARAMETERIIVEXTPROC</name></type> <name>glad_glMultiTexParameterIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXPARAMETERIUIVEXTPROC</name></type> <name>glad_glMultiTexParameterIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXPARAMETERIIVEXTPROC</name></type> <name>glad_glGetMultiTexParameterIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMULTITEXPARAMETERIUIVEXTPROC</name></type> <name>glad_glGetMultiTexParameterIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UIEXTPROC</name></type> <name>glad_glProgramUniform1uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UIEXTPROC</name></type> <name>glad_glProgramUniform2uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UIEXTPROC</name></type> <name>glad_glProgramUniform3uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UIEXTPROC</name></type> <name>glad_glProgramUniform4uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UIVEXTPROC</name></type> <name>glad_glProgramUniform1uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UIVEXTPROC</name></type> <name>glad_glProgramUniform2uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UIVEXTPROC</name></type> <name>glad_glProgramUniform3uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UIVEXTPROC</name></type> <name>glad_glProgramUniform4uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC</name></type> <name>glad_glNamedProgramLocalParameters4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC</name></type> <name>glad_glNamedProgramLocalParameterI4iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC</name></type> <name>glad_glNamedProgramLocalParameterI4ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC</name></type> <name>glad_glNamedProgramLocalParametersI4ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC</name></type> <name>glad_glNamedProgramLocalParameterI4uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC</name></type> <name>glad_glNamedProgramLocalParameterI4uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC</name></type> <name>glad_glNamedProgramLocalParametersI4uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC</name></type> <name>glad_glGetNamedProgramLocalParameterIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC</name></type> <name>glad_glGetNamedProgramLocalParameterIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLECLIENTSTATEIEXTPROC</name></type> <name>glad_glEnableClientStateiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLECLIENTSTATEIEXTPROC</name></type> <name>glad_glDisableClientStateiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFLOATI_VEXTPROC</name></type> <name>glad_glGetFloati_vEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDOUBLEI_VEXTPROC</name></type> <name>glad_glGetDoublei_vEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPOINTERI_VEXTPROC</name></type> <name>glad_glGetPointeri_vEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMSTRINGEXTPROC</name></type> <name>glad_glNamedProgramStringEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC</name></type> <name>glad_glNamedProgramLocalParameter4dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC</name></type> <name>glad_glNamedProgramLocalParameter4dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC</name></type> <name>glad_glNamedProgramLocalParameter4fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC</name></type> <name>glad_glNamedProgramLocalParameter4fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC</name></type> <name>glad_glGetNamedProgramLocalParameterdvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC</name></type> <name>glad_glGetNamedProgramLocalParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDPROGRAMIVEXTPROC</name></type> <name>glad_glGetNamedProgramivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDPROGRAMSTRINGEXTPROC</name></type> <name>glad_glGetNamedProgramStringEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC</name></type> <name>glad_glNamedRenderbufferStorageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC</name></type> <name>glad_glGetNamedRenderbufferParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC</name></type> <name>glad_glNamedRenderbufferStorageMultisampleEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC</name></type> <name>glad_glNamedRenderbufferStorageMultisampleCoverageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC</name></type> <name>glad_glCheckNamedFramebufferStatusEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC</name></type> <name>glad_glNamedFramebufferTexture1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC</name></type> <name>glad_glNamedFramebufferTexture2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC</name></type> <name>glad_glNamedFramebufferTexture3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC</name></type> <name>glad_glNamedFramebufferRenderbufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC</name></type> <name>glad_glGetNamedFramebufferAttachmentParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENERATETEXTUREMIPMAPEXTPROC</name></type> <name>glad_glGenerateTextureMipmapEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENERATEMULTITEXMIPMAPEXTPROC</name></type> <name>glad_glGenerateMultiTexMipmapEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC</name></type> <name>glad_glFramebufferDrawBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC</name></type> <name>glad_glFramebufferDrawBuffersEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERREADBUFFEREXTPROC</name></type> <name>glad_glFramebufferReadBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC</name></type> <name>glad_glGetFramebufferParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC</name></type> <name>glad_glNamedCopyBufferSubDataEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC</name></type> <name>glad_glNamedFramebufferTextureEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC</name></type> <name>glad_glNamedFramebufferTextureLayerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC</name></type> <name>glad_glNamedFramebufferTextureFaceEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURERENDERBUFFEREXTPROC</name></type> <name>glad_glTextureRenderbufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXRENDERBUFFEREXTPROC</name></type> <name>glad_glMultiTexRenderbufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC</name></type> <name>glad_glVertexArrayVertexOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYCOLOROFFSETEXTPROC</name></type> <name>glad_glVertexArrayColorOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC</name></type> <name>glad_glVertexArrayEdgeFlagOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYINDEXOFFSETEXTPROC</name></type> <name>glad_glVertexArrayIndexOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYNORMALOFFSETEXTPROC</name></type> <name>glad_glVertexArrayNormalOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC</name></type> <name>glad_glVertexArrayTexCoordOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC</name></type> <name>glad_glVertexArrayMultiTexCoordOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC</name></type> <name>glad_glVertexArrayFogCoordOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC</name></type> <name>glad_glVertexArraySecondaryColorOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC</name></type> <name>glad_glVertexArrayVertexAttribOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC</name></type> <name>glad_glVertexArrayVertexAttribIOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEVERTEXARRAYEXTPROC</name></type> <name>glad_glEnableVertexArrayEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEVERTEXARRAYEXTPROC</name></type> <name>glad_glDisableVertexArrayEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEVERTEXARRAYATTRIBEXTPROC</name></type> <name>glad_glEnableVertexArrayAttribEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC</name></type> <name>glad_glDisableVertexArrayAttribEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXARRAYINTEGERVEXTPROC</name></type> <name>glad_glGetVertexArrayIntegervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXARRAYPOINTERVEXTPROC</name></type> <name>glad_glGetVertexArrayPointervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC</name></type> <name>glad_glGetVertexArrayIntegeri_vEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC</name></type> <name>glad_glGetVertexArrayPointeri_vEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPNAMEDBUFFERRANGEEXTPROC</name></type> <name>glad_glMapNamedBufferRangeEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC</name></type> <name>glad_glFlushMappedNamedBufferRangeEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDBUFFERSTORAGEEXTPROC</name></type> <name>glad_glNamedBufferStorageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARNAMEDBUFFERDATAEXTPROC</name></type> <name>glad_glClearNamedBufferDataEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC</name></type> <name>glad_glClearNamedBufferSubDataEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC</name></type> <name>glad_glNamedFramebufferParameteriEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC</name></type> <name>glad_glGetNamedFramebufferParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1DEXTPROC</name></type> <name>glad_glProgramUniform1dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2DEXTPROC</name></type> <name>glad_glProgramUniform2dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3DEXTPROC</name></type> <name>glad_glProgramUniform3dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4DEXTPROC</name></type> <name>glad_glProgramUniform4dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1DVEXTPROC</name></type> <name>glad_glProgramUniform1dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2DVEXTPROC</name></type> <name>glad_glProgramUniform2dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3DVEXTPROC</name></type> <name>glad_glProgramUniform3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4DVEXTPROC</name></type> <name>glad_glProgramUniform4dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2x3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix2x4dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3x2dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix3x4dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4x2dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC</name></type> <name>glad_glProgramUniformMatrix4x3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREBUFFERRANGEEXTPROC</name></type> <name>glad_glTextureBufferRangeEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESTORAGE1DEXTPROC</name></type> <name>glad_glTextureStorage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESTORAGE2DEXTPROC</name></type> <name>glad_glTextureStorage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESTORAGE3DEXTPROC</name></type> <name>glad_glTextureStorage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC</name></type> <name>glad_glTextureStorage2DMultisampleEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC</name></type> <name>glad_glTextureStorage3DMultisampleEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC</name></type> <name>glad_glVertexArrayBindVertexBufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC</name></type> <name>glad_glVertexArrayVertexAttribFormatEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC</name></type> <name>glad_glVertexArrayVertexAttribIFormatEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC</name></type> <name>glad_glVertexArrayVertexAttribLFormatEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC</name></type> <name>glad_glVertexArrayVertexAttribBindingEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC</name></type> <name>glad_glVertexArrayVertexBindingDivisorEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC</name></type> <name>glad_glVertexArrayVertexAttribLOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTUREPAGECOMMITMENTEXTPROC</name></type> <name>glad_glTexturePageCommitmentEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC</name></type> <name>glad_glVertexArrayVertexAttribDivisorEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSETMULTISAMPLEFVAMDPROC</name></type> <name>glad_glSetMultisamplefvAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLAREPROGRAMSRESIDENTNVPROC</name></type> <name>glad_glAreProgramsResidentNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDPROGRAMNVPROC</name></type> <name>glad_glBindProgramNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPROGRAMSNVPROC</name></type> <name>glad_glDeleteProgramsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEXECUTEPROGRAMNVPROC</name></type> <name>glad_glExecuteProgramNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENPROGRAMSNVPROC</name></type> <name>glad_glGenProgramsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMPARAMETERDVNVPROC</name></type> <name>glad_glGetProgramParameterdvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMPARAMETERFVNVPROC</name></type> <name>glad_glGetProgramParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMIVNVPROC</name></type> <name>glad_glGetProgramivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMSTRINGNVPROC</name></type> <name>glad_glGetProgramStringNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTRACKMATRIXIVNVPROC</name></type> <name>glad_glGetTrackMatrixivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBDVNVPROC</name></type> <name>glad_glGetVertexAttribdvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBFVNVPROC</name></type> <name>glad_glGetVertexAttribfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIVNVPROC</name></type> <name>glad_glGetVertexAttribivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBPOINTERVNVPROC</name></type> <name>glad_glGetVertexAttribPointervNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPROGRAMNVPROC</name></type> <name>glad_glIsProgramNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOADPROGRAMNVPROC</name></type> <name>glad_glLoadProgramNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETER4DNVPROC</name></type> <name>glad_glProgramParameter4dNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETER4DVNVPROC</name></type> <name>glad_glProgramParameter4dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETER4FNVPROC</name></type> <name>glad_glProgramParameter4fNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETER4FVNVPROC</name></type> <name>glad_glProgramParameter4fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETERS4DVNVPROC</name></type> <name>glad_glProgramParameters4dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETERS4FVNVPROC</name></type> <name>glad_glProgramParameters4fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREQUESTRESIDENTPROGRAMSNVPROC</name></type> <name>glad_glRequestResidentProgramsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRACKMATRIXNVPROC</name></type> <name>glad_glTrackMatrixNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBPOINTERNVPROC</name></type> <name>glad_glVertexAttribPointerNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DNVPROC</name></type> <name>glad_glVertexAttrib1dNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1DVNVPROC</name></type> <name>glad_glVertexAttrib1dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FNVPROC</name></type> <name>glad_glVertexAttrib1fNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1FVNVPROC</name></type> <name>glad_glVertexAttrib1fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SNVPROC</name></type> <name>glad_glVertexAttrib1sNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1SVNVPROC</name></type> <name>glad_glVertexAttrib1svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DNVPROC</name></type> <name>glad_glVertexAttrib2dNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2DVNVPROC</name></type> <name>glad_glVertexAttrib2dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FNVPROC</name></type> <name>glad_glVertexAttrib2fNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2FVNVPROC</name></type> <name>glad_glVertexAttrib2fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SNVPROC</name></type> <name>glad_glVertexAttrib2sNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2SVNVPROC</name></type> <name>glad_glVertexAttrib2svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DNVPROC</name></type> <name>glad_glVertexAttrib3dNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3DVNVPROC</name></type> <name>glad_glVertexAttrib3dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FNVPROC</name></type> <name>glad_glVertexAttrib3fNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3FVNVPROC</name></type> <name>glad_glVertexAttrib3fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SNVPROC</name></type> <name>glad_glVertexAttrib3sNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3SVNVPROC</name></type> <name>glad_glVertexAttrib3svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DNVPROC</name></type> <name>glad_glVertexAttrib4dNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4DVNVPROC</name></type> <name>glad_glVertexAttrib4dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FNVPROC</name></type> <name>glad_glVertexAttrib4fNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4FVNVPROC</name></type> <name>glad_glVertexAttrib4fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SNVPROC</name></type> <name>glad_glVertexAttrib4sNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4SVNVPROC</name></type> <name>glad_glVertexAttrib4svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UBNVPROC</name></type> <name>glad_glVertexAttrib4ubNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4UBVNVPROC</name></type> <name>glad_glVertexAttrib4ubvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS1DVNVPROC</name></type> <name>glad_glVertexAttribs1dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS1FVNVPROC</name></type> <name>glad_glVertexAttribs1fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS1SVNVPROC</name></type> <name>glad_glVertexAttribs1svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS2DVNVPROC</name></type> <name>glad_glVertexAttribs2dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS2FVNVPROC</name></type> <name>glad_glVertexAttribs2fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS2SVNVPROC</name></type> <name>glad_glVertexAttribs2svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS3DVNVPROC</name></type> <name>glad_glVertexAttribs3dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS3FVNVPROC</name></type> <name>glad_glVertexAttribs3fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS3SVNVPROC</name></type> <name>glad_glVertexAttribs3svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS4DVNVPROC</name></type> <name>glad_glVertexAttribs4dvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS4FVNVPROC</name></type> <name>glad_glVertexAttribs4fvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS4SVNVPROC</name></type> <name>glad_glVertexAttribs4svNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS4UBVNVPROC</name></type> <name>glad_glVertexAttribs4ubvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINCONDITIONALRENDERNVXPROC</name></type> <name>glad_glBeginConditionalRenderNVX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDCONDITIONALRENDERNVXPROC</name></type> <name>glad_glEndConditionalRenderNVX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINVERTEXSHADEREXTPROC</name></type> <name>glad_glBeginVertexShaderEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDVERTEXSHADEREXTPROC</name></type> <name>glad_glEndVertexShaderEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDVERTEXSHADEREXTPROC</name></type> <name>glad_glBindVertexShaderEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENVERTEXSHADERSEXTPROC</name></type> <name>glad_glGenVertexShadersEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEVERTEXSHADEREXTPROC</name></type> <name>glad_glDeleteVertexShaderEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHADEROP1EXTPROC</name></type> <name>glad_glShaderOp1EXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHADEROP2EXTPROC</name></type> <name>glad_glShaderOp2EXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSHADEROP3EXTPROC</name></type> <name>glad_glShaderOp3EXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSWIZZLEEXTPROC</name></type> <name>glad_glSwizzleEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWRITEMASKEXTPROC</name></type> <name>glad_glWriteMaskEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINSERTCOMPONENTEXTPROC</name></type> <name>glad_glInsertComponentEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEXTRACTCOMPONENTEXTPROC</name></type> <name>glad_glExtractComponentEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENSYMBOLSEXTPROC</name></type> <name>glad_glGenSymbolsEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSETINVARIANTEXTPROC</name></type> <name>glad_glSetInvariantEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSETLOCALCONSTANTEXTPROC</name></type> <name>glad_glSetLocalConstantEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTBVEXTPROC</name></type> <name>glad_glVariantbvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTSVEXTPROC</name></type> <name>glad_glVariantsvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTIVEXTPROC</name></type> <name>glad_glVariantivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTFVEXTPROC</name></type> <name>glad_glVariantfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTDVEXTPROC</name></type> <name>glad_glVariantdvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTUBVEXTPROC</name></type> <name>glad_glVariantubvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTUSVEXTPROC</name></type> <name>glad_glVariantusvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTUIVEXTPROC</name></type> <name>glad_glVariantuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTPOINTEREXTPROC</name></type> <name>glad_glVariantPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENABLEVARIANTCLIENTSTATEEXTPROC</name></type> <name>glad_glEnableVariantClientStateEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC</name></type> <name>glad_glDisableVariantClientStateEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDLIGHTPARAMETEREXTPROC</name></type> <name>glad_glBindLightParameterEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDMATERIALPARAMETEREXTPROC</name></type> <name>glad_glBindMaterialParameterEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDTEXGENPARAMETEREXTPROC</name></type> <name>glad_glBindTexGenParameterEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDTEXTUREUNITPARAMETEREXTPROC</name></type> <name>glad_glBindTextureUnitParameterEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDPARAMETEREXTPROC</name></type> <name>glad_glBindParameterEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISVARIANTENABLEDEXTPROC</name></type> <name>glad_glIsVariantEnabledEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVARIANTBOOLEANVEXTPROC</name></type> <name>glad_glGetVariantBooleanvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVARIANTINTEGERVEXTPROC</name></type> <name>glad_glGetVariantIntegervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVARIANTFLOATVEXTPROC</name></type> <name>glad_glGetVariantFloatvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVARIANTPOINTERVEXTPROC</name></type> <name>glad_glGetVariantPointervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINVARIANTBOOLEANVEXTPROC</name></type> <name>glad_glGetInvariantBooleanvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINVARIANTINTEGERVEXTPROC</name></type> <name>glad_glGetInvariantIntegervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETINVARIANTFLOATVEXTPROC</name></type> <name>glad_glGetInvariantFloatvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC</name></type> <name>glad_glGetLocalConstantBooleanvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETLOCALCONSTANTINTEGERVEXTPROC</name></type> <name>glad_glGetLocalConstantIntegervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETLOCALCONSTANTFLOATVEXTPROC</name></type> <name>glad_glGetLocalConstantFloatvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCSEPARATEEXTPROC</name></type> <name>glad_glBlendFuncSeparateEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENFENCESAPPLEPROC</name></type> <name>glad_glGenFencesAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEFENCESAPPLEPROC</name></type> <name>glad_glDeleteFencesAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSETFENCEAPPLEPROC</name></type> <name>glad_glSetFenceAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISFENCEAPPLEPROC</name></type> <name>glad_glIsFenceAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTESTFENCEAPPLEPROC</name></type> <name>glad_glTestFenceAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFINISHFENCEAPPLEPROC</name></type> <name>glad_glFinishFenceAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTESTOBJECTAPPLEPROC</name></type> <name>glad_glTestObjectAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFINISHOBJECTAPPLEPROC</name></type> <name>glad_glFinishObjectAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1BOESPROC</name></type> <name>glad_glMultiTexCoord1bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1BVOESPROC</name></type> <name>glad_glMultiTexCoord1bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2BOESPROC</name></type> <name>glad_glMultiTexCoord2bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2BVOESPROC</name></type> <name>glad_glMultiTexCoord2bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3BOESPROC</name></type> <name>glad_glMultiTexCoord3bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3BVOESPROC</name></type> <name>glad_glMultiTexCoord3bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4BOESPROC</name></type> <name>glad_glMultiTexCoord4bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4BVOESPROC</name></type> <name>glad_glMultiTexCoord4bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD1BOESPROC</name></type> <name>glad_glTexCoord1bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD1BVOESPROC</name></type> <name>glad_glTexCoord1bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2BOESPROC</name></type> <name>glad_glTexCoord2bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2BVOESPROC</name></type> <name>glad_glTexCoord2bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD3BOESPROC</name></type> <name>glad_glTexCoord3bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD3BVOESPROC</name></type> <name>glad_glTexCoord3bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4BOESPROC</name></type> <name>glad_glTexCoord4bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4BVOESPROC</name></type> <name>glad_glTexCoord4bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX2BOESPROC</name></type> <name>glad_glVertex2bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX2BVOESPROC</name></type> <name>glad_glVertex2bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX3BOESPROC</name></type> <name>glad_glVertex3bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX3BVOESPROC</name></type> <name>glad_glVertex3bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX4BOESPROC</name></type> <name>glad_glVertex4bOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX4BVOESPROC</name></type> <name>glad_glVertex4bvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOADTRANSPOSEMATRIXFARBPROC</name></type> <name>glad_glLoadTransposeMatrixfARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOADTRANSPOSEMATRIXDARBPROC</name></type> <name>glad_glLoadTransposeMatrixdARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTTRANSPOSEMATRIXFARBPROC</name></type> <name>glad_glMultTransposeMatrixfARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTTRANSPOSEMATRIXDARBPROC</name></type> <name>glad_glMultTransposeMatrixdARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDFEXTPROC</name></type> <name>glad_glFogCoordfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDFVEXTPROC</name></type> <name>glad_glFogCoordfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDDEXTPROC</name></type> <name>glad_glFogCoorddEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDDVEXTPROC</name></type> <name>glad_glFogCoorddvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDPOINTEREXTPROC</name></type> <name>glad_glFogCoordPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLARRAYELEMENTEXTPROC</name></type> <name>glad_glArrayElementEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORPOINTEREXTPROC</name></type> <name>glad_glColorPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWARRAYSEXTPROC</name></type> <name>glad_glDrawArraysEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEDGEFLAGPOINTEREXTPROC</name></type> <name>glad_glEdgeFlagPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPOINTERVEXTPROC</name></type> <name>glad_glGetPointervEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINDEXPOINTEREXTPROC</name></type> <name>glad_glIndexPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALPOINTEREXTPROC</name></type> <name>glad_glNormalPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDPOINTEREXTPROC</name></type> <name>glad_glTexCoordPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXPOINTEREXTPROC</name></type> <name>glad_glVertexPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONSEPARATEEXTPROC</name></type> <name>glad_glBlendEquationSeparateEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYIMAGESUBDATANVPROC</name></type> <name>glad_glCopyImageSubDataNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINSERTEVENTMARKEREXTPROC</name></type> <name>glad_glInsertEventMarkerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPUSHGROUPMARKEREXTPROC</name></type> <name>glad_glPushGroupMarkerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOPGROUPMARKEREXTPROC</name></type> <name>glad_glPopGroupMarkerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTRANSFORMPARAMETERIEXTPROC</name></type> <name>glad_glPixelTransformParameteriEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTRANSFORMPARAMETERFEXTPROC</name></type> <name>glad_glPixelTransformParameterfEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC</name></type> <name>glad_glPixelTransformParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC</name></type> <name>glad_glPixelTransformParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC</name></type> <name>glad_glGetPixelTransformParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC</name></type> <name>glad_glGetPixelTransformParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENFRAGMENTSHADERSATIPROC</name></type> <name>glad_glGenFragmentShadersATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDFRAGMENTSHADERATIPROC</name></type> <name>glad_glBindFragmentShaderATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEFRAGMENTSHADERATIPROC</name></type> <name>glad_glDeleteFragmentShaderATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINFRAGMENTSHADERATIPROC</name></type> <name>glad_glBeginFragmentShaderATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDFRAGMENTSHADERATIPROC</name></type> <name>glad_glEndFragmentShaderATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPASSTEXCOORDATIPROC</name></type> <name>glad_glPassTexCoordATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLEMAPATIPROC</name></type> <name>glad_glSampleMapATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORFRAGMENTOP1ATIPROC</name></type> <name>glad_glColorFragmentOp1ATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORFRAGMENTOP2ATIPROC</name></type> <name>glad_glColorFragmentOp2ATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORFRAGMENTOP3ATIPROC</name></type> <name>glad_glColorFragmentOp3ATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLALPHAFRAGMENTOP1ATIPROC</name></type> <name>glad_glAlphaFragmentOp1ATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLALPHAFRAGMENTOP2ATIPROC</name></type> <name>glad_glAlphaFragmentOp2ATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLALPHAFRAGMENTOP3ATIPROC</name></type> <name>glad_glAlphaFragmentOp3ATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSETFRAGMENTSHADERCONSTANTATIPROC</name></type> <name>glad_glSetFragmentShaderConstantATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUISUNPROC</name></type> <name>glad_glReplacementCodeuiSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUSSUNPROC</name></type> <name>glad_glReplacementCodeusSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUBSUNPROC</name></type> <name>glad_glReplacementCodeubSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUIVSUNPROC</name></type> <name>glad_glReplacementCodeuivSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUSVSUNPROC</name></type> <name>glad_glReplacementCodeusvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUBVSUNPROC</name></type> <name>glad_glReplacementCodeubvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEPOINTERSUNPROC</name></type> <name>glad_glReplacementCodePointerSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLASYNCMARKERSGIXPROC</name></type> <name>glad_glAsyncMarkerSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFINISHASYNCSGIXPROC</name></type> <name>glad_glFinishAsyncSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOLLASYNCSGIXPROC</name></type> <name>glad_glPollAsyncSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENASYNCMARKERSSGIXPROC</name></type> <name>glad_glGenAsyncMarkersSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEASYNCMARKERSSGIXPROC</name></type> <name>glad_glDeleteAsyncMarkersSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISASYNCMARKERSGIXPROC</name></type> <name>glad_glIsAsyncMarkerSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINPERFQUERYINTELPROC</name></type> <name>glad_glBeginPerfQueryINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCREATEPERFQUERYINTELPROC</name></type> <name>glad_glCreatePerfQueryINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPERFQUERYINTELPROC</name></type> <name>glad_glDeletePerfQueryINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDPERFQUERYINTELPROC</name></type> <name>glad_glEndPerfQueryINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFIRSTPERFQUERYIDINTELPROC</name></type> <name>glad_glGetFirstPerfQueryIdINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNEXTPERFQUERYIDINTELPROC</name></type> <name>glad_glGetNextPerfQueryIdINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFCOUNTERINFOINTELPROC</name></type> <name>glad_glGetPerfCounterInfoINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFQUERYDATAINTELPROC</name></type> <name>glad_glGetPerfQueryDataINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFQUERYIDBYNAMEINTELPROC</name></type> <name>glad_glGetPerfQueryIdByNameINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPERFQUERYINFOINTELPROC</name></type> <name>glad_glGetPerfQueryInfoINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1I64NVPROC</name></type> <name>glad_glUniform1i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2I64NVPROC</name></type> <name>glad_glUniform2i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3I64NVPROC</name></type> <name>glad_glUniform3i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4I64NVPROC</name></type> <name>glad_glUniform4i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1I64VNVPROC</name></type> <name>glad_glUniform1i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2I64VNVPROC</name></type> <name>glad_glUniform2i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3I64VNVPROC</name></type> <name>glad_glUniform3i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4I64VNVPROC</name></type> <name>glad_glUniform4i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1UI64NVPROC</name></type> <name>glad_glUniform1ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2UI64NVPROC</name></type> <name>glad_glUniform2ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3UI64NVPROC</name></type> <name>glad_glUniform3ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4UI64NVPROC</name></type> <name>glad_glUniform4ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1UI64VNVPROC</name></type> <name>glad_glUniform1ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2UI64VNVPROC</name></type> <name>glad_glUniform2ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3UI64VNVPROC</name></type> <name>glad_glUniform3ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4UI64VNVPROC</name></type> <name>glad_glUniform4ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMI64VNVPROC</name></type> <name>glad_glGetUniformi64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1I64NVPROC</name></type> <name>glad_glProgramUniform1i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2I64NVPROC</name></type> <name>glad_glProgramUniform2i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3I64NVPROC</name></type> <name>glad_glProgramUniform3i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4I64NVPROC</name></type> <name>glad_glProgramUniform4i64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1I64VNVPROC</name></type> <name>glad_glProgramUniform1i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2I64VNVPROC</name></type> <name>glad_glProgramUniform2i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3I64VNVPROC</name></type> <name>glad_glProgramUniform3i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4I64VNVPROC</name></type> <name>glad_glProgramUniform4i64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UI64NVPROC</name></type> <name>glad_glProgramUniform1ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UI64NVPROC</name></type> <name>glad_glProgramUniform2ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UI64NVPROC</name></type> <name>glad_glProgramUniform3ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UI64NVPROC</name></type> <name>glad_glProgramUniform4ui64NV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM1UI64VNVPROC</name></type> <name>glad_glProgramUniform1ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM2UI64VNVPROC</name></type> <name>glad_glProgramUniform2ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM3UI64VNVPROC</name></type> <name>glad_glProgramUniform3ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORM4UI64VNVPROC</name></type> <name>glad_glProgramUniform4ui64vNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC</name></type> <name>glad_glMultiDrawArraysIndirectCountARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC</name></type> <name>glad_glMultiDrawElementsIndirectCountARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX2HNVPROC</name></type> <name>glad_glVertex2hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX2HVNVPROC</name></type> <name>glad_glVertex2hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX3HNVPROC</name></type> <name>glad_glVertex3hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX3HVNVPROC</name></type> <name>glad_glVertex3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX4HNVPROC</name></type> <name>glad_glVertex4hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX4HVNVPROC</name></type> <name>glad_glVertex4hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMAL3HNVPROC</name></type> <name>glad_glNormal3hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMAL3HVNVPROC</name></type> <name>glad_glNormal3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR3HNVPROC</name></type> <name>glad_glColor3hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR3HVNVPROC</name></type> <name>glad_glColor3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4HNVPROC</name></type> <name>glad_glColor4hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4HVNVPROC</name></type> <name>glad_glColor4hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD1HNVPROC</name></type> <name>glad_glTexCoord1hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD1HVNVPROC</name></type> <name>glad_glTexCoord1hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2HNVPROC</name></type> <name>glad_glTexCoord2hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2HVNVPROC</name></type> <name>glad_glTexCoord2hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD3HNVPROC</name></type> <name>glad_glTexCoord3hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD3HVNVPROC</name></type> <name>glad_glTexCoord3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4HNVPROC</name></type> <name>glad_glTexCoord4hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4HVNVPROC</name></type> <name>glad_glTexCoord4hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1HNVPROC</name></type> <name>glad_glMultiTexCoord1hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1HVNVPROC</name></type> <name>glad_glMultiTexCoord1hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2HNVPROC</name></type> <name>glad_glMultiTexCoord2hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2HVNVPROC</name></type> <name>glad_glMultiTexCoord2hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3HNVPROC</name></type> <name>glad_glMultiTexCoord3hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3HVNVPROC</name></type> <name>glad_glMultiTexCoord3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4HNVPROC</name></type> <name>glad_glMultiTexCoord4hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4HVNVPROC</name></type> <name>glad_glMultiTexCoord4hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDHNVPROC</name></type> <name>glad_glFogCoordhNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDHVNVPROC</name></type> <name>glad_glFogCoordhvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3HNVPROC</name></type> <name>glad_glSecondaryColor3hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3HVNVPROC</name></type> <name>glad_glSecondaryColor3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXWEIGHTHNVPROC</name></type> <name>glad_glVertexWeighthNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXWEIGHTHVNVPROC</name></type> <name>glad_glVertexWeighthvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1HNVPROC</name></type> <name>glad_glVertexAttrib1hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB1HVNVPROC</name></type> <name>glad_glVertexAttrib1hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2HNVPROC</name></type> <name>glad_glVertexAttrib2hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB2HVNVPROC</name></type> <name>glad_glVertexAttrib2hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3HNVPROC</name></type> <name>glad_glVertexAttrib3hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB3HVNVPROC</name></type> <name>glad_glVertexAttrib3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4HNVPROC</name></type> <name>glad_glVertexAttrib4hNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIB4HVNVPROC</name></type> <name>glad_glVertexAttrib4hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS1HVNVPROC</name></type> <name>glad_glVertexAttribs1hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS2HVNVPROC</name></type> <name>glad_glVertexAttribs2hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS3HVNVPROC</name></type> <name>glad_glVertexAttribs3hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBS4HVNVPROC</name></type> <name>glad_glVertexAttribs4hvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3BEXTPROC</name></type> <name>glad_glTangent3bEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3BVEXTPROC</name></type> <name>glad_glTangent3bvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3DEXTPROC</name></type> <name>glad_glTangent3dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3DVEXTPROC</name></type> <name>glad_glTangent3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3FEXTPROC</name></type> <name>glad_glTangent3fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3FVEXTPROC</name></type> <name>glad_glTangent3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3IEXTPROC</name></type> <name>glad_glTangent3iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3IVEXTPROC</name></type> <name>glad_glTangent3ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3SEXTPROC</name></type> <name>glad_glTangent3sEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENT3SVEXTPROC</name></type> <name>glad_glTangent3svEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3BEXTPROC</name></type> <name>glad_glBinormal3bEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3BVEXTPROC</name></type> <name>glad_glBinormal3bvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3DEXTPROC</name></type> <name>glad_glBinormal3dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3DVEXTPROC</name></type> <name>glad_glBinormal3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3FEXTPROC</name></type> <name>glad_glBinormal3fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3FVEXTPROC</name></type> <name>glad_glBinormal3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3IEXTPROC</name></type> <name>glad_glBinormal3iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3IVEXTPROC</name></type> <name>glad_glBinormal3ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3SEXTPROC</name></type> <name>glad_glBinormal3sEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMAL3SVEXTPROC</name></type> <name>glad_glBinormal3svEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTANGENTPOINTEREXTPROC</name></type> <name>glad_glTangentPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINORMALPOINTEREXTPROC</name></type> <name>glad_glBinormalPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOCKARRAYSEXTPROC</name></type> <name>glad_glLockArraysEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNLOCKARRAYSEXTPROC</name></type> <name>glad_glUnlockArraysEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHRANGEDNVPROC</name></type> <name>glad_glDepthRangedNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARDEPTHDNVPROC</name></type> <name>glad_glClearDepthdNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHBOUNDSDNVPROC</name></type> <name>glad_glDepthBoundsdNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENOCCLUSIONQUERIESNVPROC</name></type> <name>glad_glGenOcclusionQueriesNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEOCCLUSIONQUERIESNVPROC</name></type> <name>glad_glDeleteOcclusionQueriesNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISOCCLUSIONQUERYNVPROC</name></type> <name>glad_glIsOcclusionQueryNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINOCCLUSIONQUERYNVPROC</name></type> <name>glad_glBeginOcclusionQueryNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDOCCLUSIONQUERYNVPROC</name></type> <name>glad_glEndOcclusionQueryNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOCCLUSIONQUERYIVNVPROC</name></type> <name>glad_glGetOcclusionQueryivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOCCLUSIONQUERYUIVNVPROC</name></type> <name>glad_glGetOcclusionQueryuivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBUFFERPARAMETERIAPPLEPROC</name></type> <name>glad_glBufferParameteriAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC</name></type> <name>glad_glFlushMappedBufferRangeAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORTABLEPROC</name></type> <name>glad_glColorTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORTABLEPARAMETERFVPROC</name></type> <name>glad_glColorTableParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORTABLEPARAMETERIVPROC</name></type> <name>glad_glColorTableParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCOLORTABLEPROC</name></type> <name>glad_glCopyColorTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEPROC</name></type> <name>glad_glGetColorTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEPARAMETERFVPROC</name></type> <name>glad_glGetColorTableParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEPARAMETERIVPROC</name></type> <name>glad_glGetColorTableParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORSUBTABLEPROC</name></type> <name>glad_glColorSubTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCOLORSUBTABLEPROC</name></type> <name>glad_glCopyColorSubTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONFILTER1DPROC</name></type> <name>glad_glConvolutionFilter1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONFILTER2DPROC</name></type> <name>glad_glConvolutionFilter2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERFPROC</name></type> <name>glad_glConvolutionParameterf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERFVPROC</name></type> <name>glad_glConvolutionParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERIPROC</name></type> <name>glad_glConvolutionParameteri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERIVPROC</name></type> <name>glad_glConvolutionParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCONVOLUTIONFILTER1DPROC</name></type> <name>glad_glCopyConvolutionFilter1D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCONVOLUTIONFILTER2DPROC</name></type> <name>glad_glCopyConvolutionFilter2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCONVOLUTIONFILTERPROC</name></type> <name>glad_glGetConvolutionFilter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCONVOLUTIONPARAMETERFVPROC</name></type> <name>glad_glGetConvolutionParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCONVOLUTIONPARAMETERIVPROC</name></type> <name>glad_glGetConvolutionParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETSEPARABLEFILTERPROC</name></type> <name>glad_glGetSeparableFilter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSEPARABLEFILTER2DPROC</name></type> <name>glad_glSeparableFilter2D</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHISTOGRAMPROC</name></type> <name>glad_glGetHistogram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHISTOGRAMPARAMETERFVPROC</name></type> <name>glad_glGetHistogramParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHISTOGRAMPARAMETERIVPROC</name></type> <name>glad_glGetHistogramParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMINMAXPROC</name></type> <name>glad_glGetMinmax</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMINMAXPARAMETERFVPROC</name></type> <name>glad_glGetMinmaxParameterfv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMINMAXPARAMETERIVPROC</name></type> <name>glad_glGetMinmaxParameteriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLHISTOGRAMPROC</name></type> <name>glad_glHistogram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMINMAXPROC</name></type> <name>glad_glMinmax</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRESETHISTOGRAMPROC</name></type> <name>glad_glResetHistogram</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRESETMINMAXPROC</name></type> <name>glad_glResetMinmax</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONIARBPROC</name></type> <name>glad_glBlendEquationiARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDEQUATIONSEPARATEIARBPROC</name></type> <name>glad_glBlendEquationSeparateiARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCIARBPROC</name></type> <name>glad_glBlendFunciARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCSEPARATEIARBPROC</name></type> <name>glad_glBlendFuncSeparateiARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLECOVERAGEARBPROC</name></type> <name>glad_glSampleCoverageARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLABELOBJECTEXTPROC</name></type> <name>glad_glLabelObjectEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTLABELEXTPROC</name></type> <name>glad_glGetObjectLabelEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMINSAMPLESHADINGARBPROC</name></type> <name>glad_glMinSampleShadingARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSYNCTEXTUREINTELPROC</name></type> <name>glad_glSyncTextureINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNMAPTEXTURE2DINTELPROC</name></type> <name>glad_glUnmapTexture2DINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPTEXTURE2DINTELPROC</name></type> <name>glad_glMapTexture2DINTEL</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORPOINTERLISTIBMPROC</name></type> <name>glad_glColorPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLORPOINTERLISTIBMPROC</name></type> <name>glad_glSecondaryColorPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEDGEFLAGPOINTERLISTIBMPROC</name></type> <name>glad_glEdgeFlagPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGCOORDPOINTERLISTIBMPROC</name></type> <name>glad_glFogCoordPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINDEXPOINTERLISTIBMPROC</name></type> <name>glad_glIndexPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALPOINTERLISTIBMPROC</name></type> <name>glad_glNormalPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORDPOINTERLISTIBMPROC</name></type> <name>glad_glTexCoordPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXPOINTERLISTIBMPROC</name></type> <name>glad_glVertexPointerListIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLAMPCOLORARBPROC</name></type> <name>glad_glClampColorARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTUREHANDLEARBPROC</name></type> <name>glad_glGetTextureHandleARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXTURESAMPLERHANDLEARBPROC</name></type> <name>glad_glGetTextureSamplerHandleARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKETEXTUREHANDLERESIDENTARBPROC</name></type> <name>glad_glMakeTextureHandleResidentARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC</name></type> <name>glad_glMakeTextureHandleNonResidentARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETIMAGEHANDLEARBPROC</name></type> <name>glad_glGetImageHandleARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKEIMAGEHANDLERESIDENTARBPROC</name></type> <name>glad_glMakeImageHandleResidentARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC</name></type> <name>glad_glMakeImageHandleNonResidentARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMHANDLEUI64ARBPROC</name></type> <name>glad_glUniformHandleui64ARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORMHANDLEUI64VARBPROC</name></type> <name>glad_glUniformHandleui64vARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC</name></type> <name>glad_glProgramUniformHandleui64ARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC</name></type> <name>glad_glProgramUniformHandleui64vARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISTEXTUREHANDLERESIDENTARBPROC</name></type> <name>glad_glIsTextureHandleResidentARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISIMAGEHANDLERESIDENTARBPROC</name></type> <name>glad_glIsImageHandleResidentARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1UI64ARBPROC</name></type> <name>glad_glVertexAttribL1ui64ARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1UI64VARBPROC</name></type> <name>glad_glVertexAttribL1ui64vARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBLUI64VARBPROC</name></type> <name>glad_glGetVertexAttribLui64vARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2DARBPROC</name></type> <name>glad_glWindowPos2dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2DVARBPROC</name></type> <name>glad_glWindowPos2dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2FARBPROC</name></type> <name>glad_glWindowPos2fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2FVARBPROC</name></type> <name>glad_glWindowPos2fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2IARBPROC</name></type> <name>glad_glWindowPos2iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2IVARBPROC</name></type> <name>glad_glWindowPos2ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2SARBPROC</name></type> <name>glad_glWindowPos2sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS2SVARBPROC</name></type> <name>glad_glWindowPos2svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3DARBPROC</name></type> <name>glad_glWindowPos3dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3DVARBPROC</name></type> <name>glad_glWindowPos3dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3FARBPROC</name></type> <name>glad_glWindowPos3fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3FVARBPROC</name></type> <name>glad_glWindowPos3fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3IARBPROC</name></type> <name>glad_glWindowPos3iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3IVARBPROC</name></type> <name>glad_glWindowPos3ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3SARBPROC</name></type> <name>glad_glWindowPos3sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWINDOWPOS3SVARBPROC</name></type> <name>glad_glWindowPos3svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDIMAGETEXTUREEXTPROC</name></type> <name>glad_glBindImageTextureEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMEMORYBARRIEREXTPROC</name></type> <name>glad_glMemoryBarrierEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXIMAGE1DEXTPROC</name></type> <name>glad_glCopyTexImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXIMAGE2DEXTPROC</name></type> <name>glad_glCopyTexImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXSUBIMAGE1DEXTPROC</name></type> <name>glad_glCopyTexSubImage1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXSUBIMAGE2DEXTPROC</name></type> <name>glad_glCopyTexSubImage2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYTEXSUBIMAGE3DEXTPROC</name></type> <name>glad_glCopyTexSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMBINERSTAGEPARAMETERFVNVPROC</name></type> <name>glad_glCombinerStageParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC</name></type> <name>glad_glGetCombinerStageParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWTEXTURENVPROC</name></type> <name>glad_glDrawTextureNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWARRAYSINSTANCEDEXTPROC</name></type> <name>glad_glDrawArraysInstancedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSINSTANCEDEXTPROC</name></type> <name>glad_glDrawElementsInstancedEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHBOUNDSEXTPROC</name></type> <name>glad_glDepthBoundsEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLIMAGETRANSFORMPARAMETERIHPPROC</name></type> <name>glad_glImageTransformParameteriHP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLIMAGETRANSFORMPARAMETERFHPPROC</name></type> <name>glad_glImageTransformParameterfHP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLIMAGETRANSFORMPARAMETERIVHPPROC</name></type> <name>glad_glImageTransformParameterivHP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLIMAGETRANSFORMPARAMETERFVHPPROC</name></type> <name>glad_glImageTransformParameterfvHP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC</name></type> <name>glad_glGetImageTransformParameterivHP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC</name></type> <name>glad_glGetImageTransformParameterfvHP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINVIDEOCAPTURENVPROC</name></type> <name>glad_glBeginVideoCaptureNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC</name></type> <name>glad_glBindVideoCaptureStreamBufferNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC</name></type> <name>glad_glBindVideoCaptureStreamTextureNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDVIDEOCAPTURENVPROC</name></type> <name>glad_glEndVideoCaptureNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOCAPTUREIVNVPROC</name></type> <name>glad_glGetVideoCaptureivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOCAPTURESTREAMIVNVPROC</name></type> <name>glad_glGetVideoCaptureStreamivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOCAPTURESTREAMFVNVPROC</name></type> <name>glad_glGetVideoCaptureStreamfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVIDEOCAPTURESTREAMDVNVPROC</name></type> <name>glad_glGetVideoCaptureStreamdvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIDEOCAPTURENVPROC</name></type> <name>glad_glVideoCaptureNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC</name></type> <name>glad_glVideoCaptureStreamParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC</name></type> <name>glad_glVideoCaptureStreamParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC</name></type> <name>glad_glVideoCaptureStreamParameterdvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCURRENTPALETTEMATRIXARBPROC</name></type> <name>glad_glCurrentPaletteMatrixARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXINDEXUBVARBPROC</name></type> <name>glad_glMatrixIndexubvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXINDEXUSVARBPROC</name></type> <name>glad_glMatrixIndexusvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXINDEXUIVARBPROC</name></type> <name>glad_glMatrixIndexuivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATRIXINDEXPOINTERARBPROC</name></type> <name>glad_glMatrixIndexPointerARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURECOLORMASKSGISPROC</name></type> <name>glad_glTextureColorMaskSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXIMAGE3DARBPROC</name></type> <name>glad_glCompressedTexImage3DARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXIMAGE2DARBPROC</name></type> <name>glad_glCompressedTexImage2DARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXIMAGE1DARBPROC</name></type> <name>glad_glCompressedTexImage1DARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC</name></type> <name>glad_glCompressedTexSubImage3DARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC</name></type> <name>glad_glCompressedTexSubImage2DARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC</name></type> <name>glad_glCompressedTexSubImage1DARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMPRESSEDTEXIMAGEARBPROC</name></type> <name>glad_glGetCompressedTexImageARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1DEXTPROC</name></type> <name>glad_glVertexAttribL1dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2DEXTPROC</name></type> <name>glad_glVertexAttribL2dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3DEXTPROC</name></type> <name>glad_glVertexAttribL3dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4DEXTPROC</name></type> <name>glad_glVertexAttribL4dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL1DVEXTPROC</name></type> <name>glad_glVertexAttribL1dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL2DVEXTPROC</name></type> <name>glad_glVertexAttribL2dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL3DVEXTPROC</name></type> <name>glad_glVertexAttribL3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBL4DVEXTPROC</name></type> <name>glad_glVertexAttribL4dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBLPOINTEREXTPROC</name></type> <name>glad_glVertexAttribLPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBLDVEXTPROC</name></type> <name>glad_glGetVertexAttribLdvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLQUERYMATRIXXOESPROC</name></type> <name>glad_glQueryMatrixxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXTURERANGEAPPLEPROC</name></type> <name>glad_glTextureRangeAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC</name></type> <name>glad_glGetTexParameterPointervAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLOBJECTPURGEABLEAPPLEPROC</name></type> <name>glad_glObjectPurgeableAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLOBJECTUNPURGEABLEAPPLEPROC</name></type> <name>glad_glObjectUnpurgeableAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTPARAMETERIVAPPLEPROC</name></type> <name>glad_glGetObjectParameterivAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENQUERIESARBPROC</name></type> <name>glad_glGenQueriesARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEQUERIESARBPROC</name></type> <name>glad_glDeleteQueriesARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISQUERYARBPROC</name></type> <name>glad_glIsQueryARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINQUERYARBPROC</name></type> <name>glad_glBeginQueryARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDQUERYARBPROC</name></type> <name>glad_glEndQueryARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYIVARBPROC</name></type> <name>glad_glGetQueryivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTIVARBPROC</name></type> <name>glad_glGetQueryObjectivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETQUERYOBJECTUIVARBPROC</name></type> <name>glad_glGetQueryObjectuivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORTABLESGIPROC</name></type> <name>glad_glColorTableSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORTABLEPARAMETERFVSGIPROC</name></type> <name>glad_glColorTableParameterfvSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLORTABLEPARAMETERIVSGIPROC</name></type> <name>glad_glColorTableParameterivSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYCOLORTABLESGIPROC</name></type> <name>glad_glCopyColorTableSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLESGIPROC</name></type> <name>glad_glGetColorTableSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEPARAMETERFVSGIPROC</name></type> <name>glad_glGetColorTableParameterfvSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOLORTABLEPARAMETERIVSGIPROC</name></type> <name>glad_glGetColorTableParameterivSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETUNIFORMUIVEXTPROC</name></type> <name>glad_glGetUniformuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDFRAGDATALOCATIONEXTPROC</name></type> <name>glad_glBindFragDataLocationEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAGDATALOCATIONEXTPROC</name></type> <name>glad_glGetFragDataLocationEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1UIEXTPROC</name></type> <name>glad_glUniform1uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2UIEXTPROC</name></type> <name>glad_glUniform2uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3UIEXTPROC</name></type> <name>glad_glUniform3uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4UIEXTPROC</name></type> <name>glad_glUniform4uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM1UIVEXTPROC</name></type> <name>glad_glUniform1uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM2UIVEXTPROC</name></type> <name>glad_glUniform2uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM3UIVEXTPROC</name></type> <name>glad_glUniform3uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUNIFORM4UIVEXTPROC</name></type> <name>glad_glUniform4uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMVERTEXLIMITNVPROC</name></type> <name>glad_glProgramVertexLimitNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTUREEXTPROC</name></type> <name>glad_glFramebufferTextureEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC</name></type> <name>glad_glFramebufferTextureLayerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC</name></type> <name>glad_glFramebufferTextureFaceEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGEENABLEAMDPROC</name></type> <name>glad_glDebugMessageEnableAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGEINSERTAMDPROC</name></type> <name>glad_glDebugMessageInsertAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGECALLBACKAMDPROC</name></type> <name>glad_glDebugMessageCallbackAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDEBUGMESSAGELOGAMDPROC</name></type> <name>glad_glGetDebugMessageLogAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACTIVETEXTUREARBPROC</name></type> <name>glad_glActiveTextureARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLIENTACTIVETEXTUREARBPROC</name></type> <name>glad_glClientActiveTextureARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1DARBPROC</name></type> <name>glad_glMultiTexCoord1dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1DVARBPROC</name></type> <name>glad_glMultiTexCoord1dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1FARBPROC</name></type> <name>glad_glMultiTexCoord1fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1FVARBPROC</name></type> <name>glad_glMultiTexCoord1fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1IARBPROC</name></type> <name>glad_glMultiTexCoord1iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1IVARBPROC</name></type> <name>glad_glMultiTexCoord1ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1SARBPROC</name></type> <name>glad_glMultiTexCoord1sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1SVARBPROC</name></type> <name>glad_glMultiTexCoord1svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2DARBPROC</name></type> <name>glad_glMultiTexCoord2dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2DVARBPROC</name></type> <name>glad_glMultiTexCoord2dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2FARBPROC</name></type> <name>glad_glMultiTexCoord2fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2FVARBPROC</name></type> <name>glad_glMultiTexCoord2fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2IARBPROC</name></type> <name>glad_glMultiTexCoord2iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2IVARBPROC</name></type> <name>glad_glMultiTexCoord2ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2SARBPROC</name></type> <name>glad_glMultiTexCoord2sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2SVARBPROC</name></type> <name>glad_glMultiTexCoord2svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3DARBPROC</name></type> <name>glad_glMultiTexCoord3dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3DVARBPROC</name></type> <name>glad_glMultiTexCoord3dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3FARBPROC</name></type> <name>glad_glMultiTexCoord3fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3FVARBPROC</name></type> <name>glad_glMultiTexCoord3fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3IARBPROC</name></type> <name>glad_glMultiTexCoord3iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3IVARBPROC</name></type> <name>glad_glMultiTexCoord3ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3SARBPROC</name></type> <name>glad_glMultiTexCoord3sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3SVARBPROC</name></type> <name>glad_glMultiTexCoord3svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4DARBPROC</name></type> <name>glad_glMultiTexCoord4dARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4DVARBPROC</name></type> <name>glad_glMultiTexCoord4dvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4FARBPROC</name></type> <name>glad_glMultiTexCoord4fARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4FVARBPROC</name></type> <name>glad_glMultiTexCoord4fvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4IARBPROC</name></type> <name>glad_glMultiTexCoord4iARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4IVARBPROC</name></type> <name>glad_glMultiTexCoord4ivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4SARBPROC</name></type> <name>glad_glMultiTexCoord4sARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4SVARBPROC</name></type> <name>glad_glMultiTexCoord4svARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEFORMATIONMAP3DSGIXPROC</name></type> <name>glad_glDeformationMap3dSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEFORMATIONMAP3FSGIXPROC</name></type> <name>glad_glDeformationMap3fSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEFORMSGIXPROC</name></type> <name>glad_glDeformSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC</name></type> <name>glad_glLoadIdentityDeformationMapSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROVOKINGVERTEXEXTPROC</name></type> <name>glad_glProvokingVertexEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFARBPROC</name></type> <name>glad_glPointParameterfARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERFVARBPROC</name></type> <name>glad_glPointParameterfvARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEZOOMSGIXPROC</name></type> <name>glad_glFrameZoomSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC</name></type> <name>glad_glMultiDrawArraysIndirectBindlessNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC</name></type> <name>glad_glMultiDrawElementsIndirectBindlessNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBEGINTRANSFORMFEEDBACKEXTPROC</name></type> <name>glad_glBeginTransformFeedbackEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLENDTRANSFORMFEEDBACKEXTPROC</name></type> <name>glad_glEndTransformFeedbackEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERRANGEEXTPROC</name></type> <name>glad_glBindBufferRangeEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFEROFFSETEXTPROC</name></type> <name>glad_glBindBufferOffsetEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDBUFFERBASEEXTPROC</name></type> <name>glad_glBindBufferBaseEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC</name></type> <name>glad_glTransformFeedbackVaryingsEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC</name></type> <name>glad_glGetTransformFeedbackVaryingEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETERI4INVPROC</name></type> <name>glad_glProgramLocalParameterI4iNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC</name></type> <name>glad_glProgramLocalParameterI4ivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC</name></type> <name>glad_glProgramLocalParametersI4ivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETERI4UINVPROC</name></type> <name>glad_glProgramLocalParameterI4uiNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC</name></type> <name>glad_glProgramLocalParameterI4uivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC</name></type> <name>glad_glProgramLocalParametersI4uivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETERI4INVPROC</name></type> <name>glad_glProgramEnvParameterI4iNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETERI4IVNVPROC</name></type> <name>glad_glProgramEnvParameterI4ivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETERSI4IVNVPROC</name></type> <name>glad_glProgramEnvParametersI4ivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETERI4UINVPROC</name></type> <name>glad_glProgramEnvParameterI4uiNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETERI4UIVNVPROC</name></type> <name>glad_glProgramEnvParameterI4uivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC</name></type> <name>glad_glProgramEnvParametersI4uivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC</name></type> <name>glad_glGetProgramLocalParameterIivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC</name></type> <name>glad_glGetProgramLocalParameterIuivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMENVPARAMETERIIVNVPROC</name></type> <name>glad_glGetProgramEnvParameterIivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC</name></type> <name>glad_glGetProgramEnvParameterIuivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC</name></type> <name>glad_glProgramSubroutineParametersuivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC</name></type> <name>glad_glGetProgramSubroutineParameteruivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPROGRAMPARAMETERIARBPROC</name></type> <name>glad_glProgramParameteriARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTUREARBPROC</name></type> <name>glad_glFramebufferTextureARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURELAYERARBPROC</name></type> <name>glad_glFramebufferTextureLayerARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTUREFACEARBPROC</name></type> <name>glad_glFramebufferTextureFaceARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSPRITEPARAMETERFSGIXPROC</name></type> <name>glad_glSpriteParameterfSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSPRITEPARAMETERFVSGIXPROC</name></type> <name>glad_glSpriteParameterfvSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSPRITEPARAMETERISGIXPROC</name></type> <name>glad_glSpriteParameteriSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSPRITEPARAMETERIVSGIXPROC</name></type> <name>glad_glSpriteParameterivSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLQUERYOBJECTPARAMETERUIAMDPROC</name></type> <name>glad_glQueryObjectParameteruiAMD</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLEMASKSGISPROC</name></type> <name>glad_glSampleMaskSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLEPATTERNSGISPROC</name></type> <name>glad_glSamplePatternSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISRENDERBUFFEREXTPROC</name></type> <name>glad_glIsRenderbufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDRENDERBUFFEREXTPROC</name></type> <name>glad_glBindRenderbufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETERENDERBUFFERSEXTPROC</name></type> <name>glad_glDeleteRenderbuffersEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENRENDERBUFFERSEXTPROC</name></type> <name>glad_glGenRenderbuffersEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRENDERBUFFERSTORAGEEXTPROC</name></type> <name>glad_glRenderbufferStorageEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC</name></type> <name>glad_glGetRenderbufferParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISFRAMEBUFFEREXTPROC</name></type> <name>glad_glIsFramebufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDFRAMEBUFFEREXTPROC</name></type> <name>glad_glBindFramebufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEFRAMEBUFFERSEXTPROC</name></type> <name>glad_glDeleteFramebuffersEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENFRAMEBUFFERSEXTPROC</name></type> <name>glad_glGenFramebuffersEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC</name></type> <name>glad_glCheckFramebufferStatusEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURE1DEXTPROC</name></type> <name>glad_glFramebufferTexture1DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURE2DEXTPROC</name></type> <name>glad_glFramebufferTexture2DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERTEXTURE3DEXTPROC</name></type> <name>glad_glFramebufferTexture3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC</name></type> <name>glad_glFramebufferRenderbufferEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC</name></type> <name>glad_glGetFramebufferAttachmentParameterivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENERATEMIPMAPEXTPROC</name></type> <name>glad_glGenerateMipmapEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYRANGEAPPLEPROC</name></type> <name>glad_glVertexArrayRangeAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC</name></type> <name>glad_glFlushVertexArrayRangeAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXARRAYPARAMETERIAPPLEPROC</name></type> <name>glad_glVertexArrayParameteriAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMBINERPARAMETERFVNVPROC</name></type> <name>glad_glCombinerParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMBINERPARAMETERFNVPROC</name></type> <name>glad_glCombinerParameterfNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMBINERPARAMETERIVNVPROC</name></type> <name>glad_glCombinerParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMBINERPARAMETERINVPROC</name></type> <name>glad_glCombinerParameteriNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMBINERINPUTNVPROC</name></type> <name>glad_glCombinerInputNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMBINEROUTPUTNVPROC</name></type> <name>glad_glCombinerOutputNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFINALCOMBINERINPUTNVPROC</name></type> <name>glad_glFinalCombinerInputNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC</name></type> <name>glad_glGetCombinerInputParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC</name></type> <name>glad_glGetCombinerInputParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC</name></type> <name>glad_glGetCombinerOutputParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC</name></type> <name>glad_glGetCombinerOutputParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC</name></type> <name>glad_glGetFinalCombinerInputParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC</name></type> <name>glad_glGetFinalCombinerInputParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWBUFFERSARBPROC</name></type> <name>glad_glDrawBuffersARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGECONTROLARBPROC</name></type> <name>glad_glDebugMessageControlARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGEINSERTARBPROC</name></type> <name>glad_glDebugMessageInsertARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEBUGMESSAGECALLBACKARBPROC</name></type> <name>glad_glDebugMessageCallbackARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDEBUGMESSAGELOGARBPROC</name></type> <name>glad_glGetDebugMessageLogARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCULLPARAMETERDVEXTPROC</name></type> <name>glad_glCullParameterdvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCULLPARAMETERFVEXTPROC</name></type> <name>glad_glCullParameterfvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIMODEDRAWARRAYSIBMPROC</name></type> <name>glad_glMultiModeDrawArraysIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTIMODEDRAWELEMENTSIBMPROC</name></type> <name>glad_glMultiModeDrawElementsIBM</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBINDVERTEXARRAYAPPLEPROC</name></type> <name>glad_glBindVertexArrayAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEVERTEXARRAYSAPPLEPROC</name></type> <name>glad_glDeleteVertexArraysAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENVERTEXARRAYSAPPLEPROC</name></type> <name>glad_glGenVertexArraysAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISVERTEXARRAYAPPLEPROC</name></type> <name>glad_glIsVertexArrayAPPLE</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDETAILTEXFUNCSGISPROC</name></type> <name>glad_glDetailTexFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETDETAILTEXFUNCSGISPROC</name></type> <name>glad_glGetDetailTexFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWARRAYSINSTANCEDARBPROC</name></type> <name>glad_glDrawArraysInstancedARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWELEMENTSINSTANCEDARBPROC</name></type> <name>glad_glDrawElementsInstancedARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNAMEDSTRINGARBPROC</name></type> <name>glad_glNamedStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETENAMEDSTRINGARBPROC</name></type> <name>glad_glDeleteNamedStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOMPILESHADERINCLUDEARBPROC</name></type> <name>glad_glCompileShaderIncludeARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISNAMEDSTRINGARBPROC</name></type> <name>glad_glIsNamedStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDSTRINGARBPROC</name></type> <name>glad_glGetNamedStringARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETNAMEDSTRINGIVARBPROC</name></type> <name>glad_glGetNamedStringivARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDFUNCSEPARATEINGRPROC</name></type> <name>glad_glBlendFuncSeparateINGR</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGENPATHSNVPROC</name></type> <name>glad_glGenPathsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDELETEPATHSNVPROC</name></type> <name>glad_glDeletePathsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPATHNVPROC</name></type> <name>glad_glIsPathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHCOMMANDSNVPROC</name></type> <name>glad_glPathCommandsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHCOORDSNVPROC</name></type> <name>glad_glPathCoordsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHSUBCOMMANDSNVPROC</name></type> <name>glad_glPathSubCommandsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHSUBCOORDSNVPROC</name></type> <name>glad_glPathSubCoordsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHSTRINGNVPROC</name></type> <name>glad_glPathStringNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHGLYPHSNVPROC</name></type> <name>glad_glPathGlyphsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHGLYPHRANGENVPROC</name></type> <name>glad_glPathGlyphRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLWEIGHTPATHSNVPROC</name></type> <name>glad_glWeightPathsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOPYPATHNVPROC</name></type> <name>glad_glCopyPathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINTERPOLATEPATHSNVPROC</name></type> <name>glad_glInterpolatePathsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRANSFORMPATHNVPROC</name></type> <name>glad_glTransformPathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHPARAMETERIVNVPROC</name></type> <name>glad_glPathParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHPARAMETERINVPROC</name></type> <name>glad_glPathParameteriNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHPARAMETERFVNVPROC</name></type> <name>glad_glPathParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHPARAMETERFNVPROC</name></type> <name>glad_glPathParameterfNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHDASHARRAYNVPROC</name></type> <name>glad_glPathDashArrayNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHSTENCILFUNCNVPROC</name></type> <name>glad_glPathStencilFuncNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHSTENCILDEPTHOFFSETNVPROC</name></type> <name>glad_glPathStencilDepthOffsetNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILFILLPATHNVPROC</name></type> <name>glad_glStencilFillPathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILSTROKEPATHNVPROC</name></type> <name>glad_glStencilStrokePathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILFILLPATHINSTANCEDNVPROC</name></type> <name>glad_glStencilFillPathInstancedNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC</name></type> <name>glad_glStencilStrokePathInstancedNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHCOVERDEPTHFUNCNVPROC</name></type> <name>glad_glPathCoverDepthFuncNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHCOLORGENNVPROC</name></type> <name>glad_glPathColorGenNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHTEXGENNVPROC</name></type> <name>glad_glPathTexGenNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPATHFOGGENNVPROC</name></type> <name>glad_glPathFogGenNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOVERFILLPATHNVPROC</name></type> <name>glad_glCoverFillPathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOVERSTROKEPATHNVPROC</name></type> <name>glad_glCoverStrokePathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOVERFILLPATHINSTANCEDNVPROC</name></type> <name>glad_glCoverFillPathInstancedNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOVERSTROKEPATHINSTANCEDNVPROC</name></type> <name>glad_glCoverStrokePathInstancedNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHPARAMETERIVNVPROC</name></type> <name>glad_glGetPathParameterivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHPARAMETERFVNVPROC</name></type> <name>glad_glGetPathParameterfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHCOMMANDSNVPROC</name></type> <name>glad_glGetPathCommandsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHCOORDSNVPROC</name></type> <name>glad_glGetPathCoordsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHDASHARRAYNVPROC</name></type> <name>glad_glGetPathDashArrayNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHMETRICSNVPROC</name></type> <name>glad_glGetPathMetricsNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHMETRICRANGENVPROC</name></type> <name>glad_glGetPathMetricRangeNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHSPACINGNVPROC</name></type> <name>glad_glGetPathSpacingNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHCOLORGENIVNVPROC</name></type> <name>glad_glGetPathColorGenivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHCOLORGENFVNVPROC</name></type> <name>glad_glGetPathColorGenfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHTEXGENIVNVPROC</name></type> <name>glad_glGetPathTexGenivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHTEXGENFVNVPROC</name></type> <name>glad_glGetPathTexGenfvNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPOINTINFILLPATHNVPROC</name></type> <name>glad_glIsPointInFillPathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISPOINTINSTROKEPATHNVPROC</name></type> <name>glad_glIsPointInStrokePathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPATHLENGTHNVPROC</name></type> <name>glad_glGetPathLengthNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTALONGPATHNVPROC</name></type> <name>glad_glPointAlongPathNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1SATIPROC</name></type> <name>glad_glVertexStream1sATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1SVATIPROC</name></type> <name>glad_glVertexStream1svATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1IATIPROC</name></type> <name>glad_glVertexStream1iATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1IVATIPROC</name></type> <name>glad_glVertexStream1ivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1FATIPROC</name></type> <name>glad_glVertexStream1fATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1FVATIPROC</name></type> <name>glad_glVertexStream1fvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1DATIPROC</name></type> <name>glad_glVertexStream1dATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM1DVATIPROC</name></type> <name>glad_glVertexStream1dvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2SATIPROC</name></type> <name>glad_glVertexStream2sATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2SVATIPROC</name></type> <name>glad_glVertexStream2svATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2IATIPROC</name></type> <name>glad_glVertexStream2iATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2IVATIPROC</name></type> <name>glad_glVertexStream2ivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2FATIPROC</name></type> <name>glad_glVertexStream2fATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2FVATIPROC</name></type> <name>glad_glVertexStream2fvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2DATIPROC</name></type> <name>glad_glVertexStream2dATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM2DVATIPROC</name></type> <name>glad_glVertexStream2dvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3SATIPROC</name></type> <name>glad_glVertexStream3sATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3SVATIPROC</name></type> <name>glad_glVertexStream3svATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3IATIPROC</name></type> <name>glad_glVertexStream3iATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3IVATIPROC</name></type> <name>glad_glVertexStream3ivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3FATIPROC</name></type> <name>glad_glVertexStream3fATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3FVATIPROC</name></type> <name>glad_glVertexStream3fvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3DATIPROC</name></type> <name>glad_glVertexStream3dATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM3DVATIPROC</name></type> <name>glad_glVertexStream3dvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4SATIPROC</name></type> <name>glad_glVertexStream4sATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4SVATIPROC</name></type> <name>glad_glVertexStream4svATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4IATIPROC</name></type> <name>glad_glVertexStream4iATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4IVATIPROC</name></type> <name>glad_glVertexStream4ivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4FATIPROC</name></type> <name>glad_glVertexStream4fATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4FVATIPROC</name></type> <name>glad_glVertexStream4fvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4DATIPROC</name></type> <name>glad_glVertexStream4dATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXSTREAM4DVATIPROC</name></type> <name>glad_glVertexStream4dvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3BATIPROC</name></type> <name>glad_glNormalStream3bATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3BVATIPROC</name></type> <name>glad_glNormalStream3bvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3SATIPROC</name></type> <name>glad_glNormalStream3sATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3SVATIPROC</name></type> <name>glad_glNormalStream3svATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3IATIPROC</name></type> <name>glad_glNormalStream3iATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3IVATIPROC</name></type> <name>glad_glNormalStream3ivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3FATIPROC</name></type> <name>glad_glNormalStream3fATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3FVATIPROC</name></type> <name>glad_glNormalStream3fvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3DATIPROC</name></type> <name>glad_glNormalStream3dATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMALSTREAM3DVATIPROC</name></type> <name>glad_glNormalStream3dvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC</name></type> <name>glad_glClientActiveVertexStreamATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXBLENDENVIATIPROC</name></type> <name>glad_glVertexBlendEnviATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXBLENDENVFATIPROC</name></type> <name>glad_glVertexBlendEnvfATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUINITNVPROC</name></type> <name>glad_glVDPAUInitNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUFININVPROC</name></type> <name>glad_glVDPAUFiniNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUREGISTERVIDEOSURFACENVPROC</name></type> <name>glad_glVDPAURegisterVideoSurfaceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC</name></type> <name>glad_glVDPAURegisterOutputSurfaceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUISSURFACENVPROC</name></type> <name>glad_glVDPAUIsSurfaceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUUNREGISTERSURFACENVPROC</name></type> <name>glad_glVDPAUUnregisterSurfaceNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUGETSURFACEIVNVPROC</name></type> <name>glad_glVDPAUGetSurfaceivNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUSURFACEACCESSNVPROC</name></type> <name>glad_glVDPAUSurfaceAccessNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUMAPSURFACESNVPROC</name></type> <name>glad_glVDPAUMapSurfacesNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVDPAUUNMAPSURFACESNVPROC</name></type> <name>glad_glVDPAUUnmapSurfacesNV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4UBVERTEX2FSUNPROC</name></type> <name>glad_glColor4ubVertex2fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4UBVERTEX2FVSUNPROC</name></type> <name>glad_glColor4ubVertex2fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4UBVERTEX3FSUNPROC</name></type> <name>glad_glColor4ubVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4UBVERTEX3FVSUNPROC</name></type> <name>glad_glColor4ubVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR3FVERTEX3FSUNPROC</name></type> <name>glad_glColor3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR3FVERTEX3FVSUNPROC</name></type> <name>glad_glColor3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glColor4fNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glColor4fNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FVERTEX3FSUNPROC</name></type> <name>glad_glTexCoord2fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FVERTEX3FVSUNPROC</name></type> <name>glad_glTexCoord2fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4FVERTEX4FSUNPROC</name></type> <name>glad_glTexCoord4fVertex4fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4FVERTEX4FVSUNPROC</name></type> <name>glad_glTexCoord4fVertex4fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC</name></type> <name>glad_glTexCoord2fColor4ubVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC</name></type> <name>glad_glTexCoord2fColor4ubVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC</name></type> <name>glad_glTexCoord2fColor3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC</name></type> <name>glad_glTexCoord2fColor3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glTexCoord2fNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glTexCoord2fNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glTexCoord2fColor4fNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glTexCoord2fColor4fNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC</name></type> <name>glad_glTexCoord4fColor4fNormal3fVertex4fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC</name></type> <name>glad_glTexCoord4fColor4fNormal3fVertex4fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiColor4ubVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiColor4ubVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiColor3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiColor3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiTexCoord2fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiTexCoord2fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC</name></type> <name>glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC</name></type> <name>glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLIGLOOINTERFACESGIXPROC</name></type> <name>glad_glIglooInterfaceSGIX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1IEXTPROC</name></type> <name>glad_glVertexAttribI1iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2IEXTPROC</name></type> <name>glad_glVertexAttribI2iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3IEXTPROC</name></type> <name>glad_glVertexAttribI3iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4IEXTPROC</name></type> <name>glad_glVertexAttribI4iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1UIEXTPROC</name></type> <name>glad_glVertexAttribI1uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2UIEXTPROC</name></type> <name>glad_glVertexAttribI2uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3UIEXTPROC</name></type> <name>glad_glVertexAttribI3uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4UIEXTPROC</name></type> <name>glad_glVertexAttribI4uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1IVEXTPROC</name></type> <name>glad_glVertexAttribI1ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2IVEXTPROC</name></type> <name>glad_glVertexAttribI2ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3IVEXTPROC</name></type> <name>glad_glVertexAttribI3ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4IVEXTPROC</name></type> <name>glad_glVertexAttribI4ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI1UIVEXTPROC</name></type> <name>glad_glVertexAttribI1uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI2UIVEXTPROC</name></type> <name>glad_glVertexAttribI2uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI3UIVEXTPROC</name></type> <name>glad_glVertexAttribI3uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4UIVEXTPROC</name></type> <name>glad_glVertexAttribI4uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4BVEXTPROC</name></type> <name>glad_glVertexAttribI4bvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4SVEXTPROC</name></type> <name>glad_glVertexAttribI4svEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4UBVEXTPROC</name></type> <name>glad_glVertexAttribI4ubvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBI4USVEXTPROC</name></type> <name>glad_glVertexAttribI4usvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEXATTRIBIPOINTEREXTPROC</name></type> <name>glad_glVertexAttribIPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIIVEXTPROC</name></type> <name>glad_glGetVertexAttribIivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVERTEXATTRIBIUIVEXTPROC</name></type> <name>glad_glGetVertexAttribIuivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGFUNCSGISPROC</name></type> <name>glad_glFogFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFOGFUNCSGISPROC</name></type> <name>glad_glGetFogFuncSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLIMPORTSYNCEXTPROC</name></type> <name>glad_glImportSyncEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC</name></type> <name>glad_glDispatchComputeGroupSizeARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLALPHAFUNCXOESPROC</name></type> <name>glad_glAlphaFuncxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARCOLORXOESPROC</name></type> <name>glad_glClearColorxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARDEPTHXOESPROC</name></type> <name>glad_glClearDepthxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLIPPLANEXOESPROC</name></type> <name>glad_glClipPlanexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4XOESPROC</name></type> <name>glad_glColor4xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDEPTHRANGEXOESPROC</name></type> <name>glad_glDepthRangexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGXOESPROC</name></type> <name>glad_glFogxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFOGXVOESPROC</name></type> <name>glad_glFogxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFRUSTUMXOESPROC</name></type> <name>glad_glFrustumxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCLIPPLANEXOESPROC</name></type> <name>glad_glGetClipPlanexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETFIXEDVOESPROC</name></type> <name>glad_glGetFixedvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXENVXVOESPROC</name></type> <name>glad_glGetTexEnvxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXPARAMETERXVOESPROC</name></type> <name>glad_glGetTexParameterxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLIGHTMODELXOESPROC</name></type> <name>glad_glLightModelxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLIGHTMODELXVOESPROC</name></type> <name>glad_glLightModelxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLIGHTXOESPROC</name></type> <name>glad_glLightxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLIGHTXVOESPROC</name></type> <name>glad_glLightxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLINEWIDTHXOESPROC</name></type> <name>glad_glLineWidthxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOADMATRIXXOESPROC</name></type> <name>glad_glLoadMatrixxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATERIALXOESPROC</name></type> <name>glad_glMaterialxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMATERIALXVOESPROC</name></type> <name>glad_glMaterialxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTMATRIXXOESPROC</name></type> <name>glad_glMultMatrixxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4XOESPROC</name></type> <name>glad_glMultiTexCoord4xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMAL3XOESPROC</name></type> <name>glad_glNormal3xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLORTHOXOESPROC</name></type> <name>glad_glOrthoxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERXVOESPROC</name></type> <name>glad_glPointParameterxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTSIZEXOESPROC</name></type> <name>glad_glPointSizexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOLYGONOFFSETXOESPROC</name></type> <name>glad_glPolygonOffsetxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLROTATEXOESPROC</name></type> <name>glad_glRotatexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLECOVERAGEOESPROC</name></type> <name>glad_glSampleCoverageOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSCALEXOESPROC</name></type> <name>glad_glScalexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXENVXOESPROC</name></type> <name>glad_glTexEnvxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXENVXVOESPROC</name></type> <name>glad_glTexEnvxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERXOESPROC</name></type> <name>glad_glTexParameterxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPARAMETERXVOESPROC</name></type> <name>glad_glTexParameterxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTRANSLATEXOESPROC</name></type> <name>glad_glTranslatexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETLIGHTXVOESPROC</name></type> <name>glad_glGetLightxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMATERIALXVOESPROC</name></type> <name>glad_glGetMaterialxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPOINTPARAMETERXOESPROC</name></type> <name>glad_glPointParameterxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLECOVERAGEXOESPROC</name></type> <name>glad_glSampleCoveragexOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLACCUMXOESPROC</name></type> <name>glad_glAccumxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBITMAPXOESPROC</name></type> <name>glad_glBitmapxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLBLENDCOLORXOESPROC</name></type> <name>glad_glBlendColorxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCLEARACCUMXOESPROC</name></type> <name>glad_glClearAccumxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR3XOESPROC</name></type> <name>glad_glColor3xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR3XVOESPROC</name></type> <name>glad_glColor3xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCOLOR4XVOESPROC</name></type> <name>glad_glColor4xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERXOESPROC</name></type> <name>glad_glConvolutionParameterxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLCONVOLUTIONPARAMETERXVOESPROC</name></type> <name>glad_glConvolutionParameterxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEVALCOORD1XOESPROC</name></type> <name>glad_glEvalCoord1xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEVALCOORD1XVOESPROC</name></type> <name>glad_glEvalCoord1xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEVALCOORD2XOESPROC</name></type> <name>glad_glEvalCoord2xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLEVALCOORD2XVOESPROC</name></type> <name>glad_glEvalCoord2xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFEEDBACKBUFFERXOESPROC</name></type> <name>glad_glFeedbackBufferxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETCONVOLUTIONPARAMETERXVOESPROC</name></type> <name>glad_glGetConvolutionParameterxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETHISTOGRAMPARAMETERXVOESPROC</name></type> <name>glad_glGetHistogramParameterxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETLIGHTXOESPROC</name></type> <name>glad_glGetLightxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMAPXVOESPROC</name></type> <name>glad_glGetMapxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETMATERIALXOESPROC</name></type> <name>glad_glGetMaterialxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETPIXELMAPXVPROC</name></type> <name>glad_glGetPixelMapxv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXGENXVOESPROC</name></type> <name>glad_glGetTexGenxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETTEXLEVELPARAMETERXVOESPROC</name></type> <name>glad_glGetTexLevelParameterxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINDEXXOESPROC</name></type> <name>glad_glIndexxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLINDEXXVOESPROC</name></type> <name>glad_glIndexxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLLOADTRANSPOSEMATRIXXOESPROC</name></type> <name>glad_glLoadTransposeMatrixxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAP1XOESPROC</name></type> <name>glad_glMap1xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAP2XOESPROC</name></type> <name>glad_glMap2xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPGRID1XOESPROC</name></type> <name>glad_glMapGrid1xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMAPGRID2XOESPROC</name></type> <name>glad_glMapGrid2xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTTRANSPOSEMATRIXXOESPROC</name></type> <name>glad_glMultTransposeMatrixxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1XOESPROC</name></type> <name>glad_glMultiTexCoord1xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD1XVOESPROC</name></type> <name>glad_glMultiTexCoord1xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2XOESPROC</name></type> <name>glad_glMultiTexCoord2xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD2XVOESPROC</name></type> <name>glad_glMultiTexCoord2xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3XOESPROC</name></type> <name>glad_glMultiTexCoord3xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD3XVOESPROC</name></type> <name>glad_glMultiTexCoord3xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLMULTITEXCOORD4XVOESPROC</name></type> <name>glad_glMultiTexCoord4xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNORMAL3XVOESPROC</name></type> <name>glad_glNormal3xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPASSTHROUGHXOESPROC</name></type> <name>glad_glPassThroughxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELMAPXPROC</name></type> <name>glad_glPixelMapx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELSTOREXPROC</name></type> <name>glad_glPixelStorex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELTRANSFERXOESPROC</name></type> <name>glad_glPixelTransferxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPIXELZOOMXOESPROC</name></type> <name>glad_glPixelZoomxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLPRIORITIZETEXTURESXOESPROC</name></type> <name>glad_glPrioritizeTexturesxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRASTERPOS2XOESPROC</name></type> <name>glad_glRasterPos2xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRASTERPOS2XVOESPROC</name></type> <name>glad_glRasterPos2xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRASTERPOS3XOESPROC</name></type> <name>glad_glRasterPos3xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRASTERPOS3XVOESPROC</name></type> <name>glad_glRasterPos3xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRASTERPOS4XOESPROC</name></type> <name>glad_glRasterPos4xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRASTERPOS4XVOESPROC</name></type> <name>glad_glRasterPos4xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRECTXOESPROC</name></type> <name>glad_glRectxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRECTXVOESPROC</name></type> <name>glad_glRectxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD1XOESPROC</name></type> <name>glad_glTexCoord1xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD1XVOESPROC</name></type> <name>glad_glTexCoord1xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2XOESPROC</name></type> <name>glad_glTexCoord2xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD2XVOESPROC</name></type> <name>glad_glTexCoord2xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD3XOESPROC</name></type> <name>glad_glTexCoord3xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD3XVOESPROC</name></type> <name>glad_glTexCoord3xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4XOESPROC</name></type> <name>glad_glTexCoord4xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXCOORD4XVOESPROC</name></type> <name>glad_glTexCoord4xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXGENXOESPROC</name></type> <name>glad_glTexGenxOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXGENXVOESPROC</name></type> <name>glad_glTexGenxvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX2XOESPROC</name></type> <name>glad_glVertex2xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX2XVOESPROC</name></type> <name>glad_glVertex2xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX3XOESPROC</name></type> <name>glad_glVertex3xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX3XVOESPROC</name></type> <name>glad_glVertex3xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX4XOESPROC</name></type> <name>glad_glVertex4xOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVERTEX4XVOESPROC</name></type> <name>glad_glVertex4xvOES</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC</name></type> <name>glad_glRenderbufferStorageMultisampleEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE4DSGISPROC</name></type> <name>glad_glTexImage4DSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSUBIMAGE4DSGISPROC</name></type> <name>glad_glTexSubImage4DSGIS</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXIMAGE3DEXTPROC</name></type> <name>glad_glTexImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXSUBIMAGE3DEXTPROC</name></type> <name>glad_glTexSubImage3DEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLEMASKEXTPROC</name></type> <name>glad_glSampleMaskEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSAMPLEPATTERNEXTPROC</name></type> <name>glad_glSamplePatternEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3BEXTPROC</name></type> <name>glad_glSecondaryColor3bEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3BVEXTPROC</name></type> <name>glad_glSecondaryColor3bvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3DEXTPROC</name></type> <name>glad_glSecondaryColor3dEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3DVEXTPROC</name></type> <name>glad_glSecondaryColor3dvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3FEXTPROC</name></type> <name>glad_glSecondaryColor3fEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3FVEXTPROC</name></type> <name>glad_glSecondaryColor3fvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3IEXTPROC</name></type> <name>glad_glSecondaryColor3iEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3IVEXTPROC</name></type> <name>glad_glSecondaryColor3ivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3SEXTPROC</name></type> <name>glad_glSecondaryColor3sEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3SVEXTPROC</name></type> <name>glad_glSecondaryColor3svEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3UBEXTPROC</name></type> <name>glad_glSecondaryColor3ubEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3UBVEXTPROC</name></type> <name>glad_glSecondaryColor3ubvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3UIEXTPROC</name></type> <name>glad_glSecondaryColor3uiEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3UIVEXTPROC</name></type> <name>glad_glSecondaryColor3uivEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3USEXTPROC</name></type> <name>glad_glSecondaryColor3usEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLOR3USVEXTPROC</name></type> <name>glad_glSecondaryColor3usvEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLSECONDARYCOLORPOINTEREXTPROC</name></type> <name>glad_glSecondaryColorPointerEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLNEWOBJECTBUFFERATIPROC</name></type> <name>glad_glNewObjectBufferATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLISOBJECTBUFFERATIPROC</name></type> <name>glad_glIsObjectBufferATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLUPDATEOBJECTBUFFERATIPROC</name></type> <name>glad_glUpdateObjectBufferATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTBUFFERFVATIPROC</name></type> <name>glad_glGetObjectBufferfvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETOBJECTBUFFERIVATIPROC</name></type> <name>glad_glGetObjectBufferivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLFREEOBJECTBUFFERATIPROC</name></type> <name>glad_glFreeObjectBufferATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLARRAYOBJECTATIPROC</name></type> <name>glad_glArrayObjectATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETARRAYOBJECTFVATIPROC</name></type> <name>glad_glGetArrayObjectfvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETARRAYOBJECTIVATIPROC</name></type> <name>glad_glGetArrayObjectivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLVARIANTARRAYOBJECTATIPROC</name></type> <name>glad_glVariantArrayObjectATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVARIANTARRAYOBJECTFVATIPROC</name></type> <name>glad_glGetVariantArrayObjectfvATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLGETVARIANTARRAYOBJECTIVATIPROC</name></type> <name>glad_glGetVariantArrayObjectivATI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLTEXPAGECOMMITMENTARBPROC</name></type> <name>glad_glTexPageCommitmentARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLDRAWRANGEELEMENTSEXTPROC</name></type> <name>glad_glDrawRangeElementsEXT</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_1_0</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_1_0</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCullFace</name> <operator>=</operator> <operator>(</operator><name>PFNGLCULLFACEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCullFace"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFrontFace</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRONTFACEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFrontFace"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glHint</name> <operator>=</operator> <operator>(</operator><name>PFNGLHINTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glHint"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLineWidth</name> <operator>=</operator> <operator>(</operator><name>PFNGLLINEWIDTHPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLineWidth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointSize</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTSIZEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointSize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPolygonMode</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOLYGONMODEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPolygonMode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScissor</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCISSORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScissor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameterf</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexImage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexImage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClear</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClear"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearColor</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARCOLORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearColor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearStencil</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARSTENCILPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearStencil"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearDepth</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARDEPTHPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearDepth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilMask</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILMASKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilMask"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorMask</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORMASKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorMask"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthMask</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHMASKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthMask"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisable</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnable</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFinish</name> <operator>=</operator> <operator>(</operator><name>PFNGLFINISHPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFinish"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFlush</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlush"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendFunc</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFunc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLogicOp</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOGICOPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLogicOp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilFunc</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILFUNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilFunc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilOp</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILOPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilOp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthFunc</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHFUNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthFunc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelStoref</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELSTOREFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelStoref"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelStorei</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELSTOREIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelStorei"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReadBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLREADBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReadBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReadPixels</name> <operator>=</operator> <operator>(</operator><name>PFNGLREADPIXELSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReadPixels"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBooleanv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBOOLEANVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBooleanv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDoublev</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDOUBLEVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDoublev"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetError</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETERRORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetError"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFloatv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFLOATVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFloatv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetIntegerv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGERVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetIntegerv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetString</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSTRINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetString"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexLevelParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXLEVELPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexLevelParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexLevelParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXLEVELPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexLevelParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsEnabled</name> <operator>=</operator> <operator>(</operator><name>PFNGLISENABLEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsEnabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glViewport</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIEWPORTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glViewport"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_1_1</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_1_1</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawArrays</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElements</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElements"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPolygonOffset</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOLYGONOFFSETPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPolygonOffset"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexImage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXIMAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexImage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexImage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXIMAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexImage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexSubImage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXSUBIMAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexSubImage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexSubImage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXSUBIMAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexSubImage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexSubImage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSUBIMAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexSubImage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexSubImage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSUBIMAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexSubImage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindTexture</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTEXTUREPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteTextures</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETETEXTURESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteTextures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenTextures</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENTEXTURESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenTextures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsTexture</name> <operator>=</operator> <operator>(</operator><name>PFNGLISTEXTUREPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsTexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_1_2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_1_2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawRangeElements</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWRANGEELEMENTSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawRangeElements"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexImage3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexSubImage3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSUBIMAGE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexSubImage3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexSubImage3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXSUBIMAGE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexSubImage3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_1_3</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_1_3</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glActiveTexture</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVETEXTUREPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveTexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSampleCoverage</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLECOVERAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleCoverage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexImage3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXIMAGE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexImage3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexImage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXIMAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexImage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexImage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXIMAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexImage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexSubImage3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexSubImage3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexSubImage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexSubImage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexSubImage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexSubImage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCompressedTexImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMPRESSEDTEXIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCompressedTexImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_1_4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_1_4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendFuncSeparate</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCSEPARATEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFuncSeparate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawArrays</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWARRAYSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawArrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElements</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElements"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterf</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendColor</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDCOLORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendColor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendEquation</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_1_5</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_1_5</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenQueries</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENQUERIESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenQueries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteQueries</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEQUERIESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteQueries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsQuery</name> <operator>=</operator> <operator>(</operator><name>PFNGLISQUERYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsQuery"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginQuery</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINQUERYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginQuery"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndQuery</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDQUERYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndQuery"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjectiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjectiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjectuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjectuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteBuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteBuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenBuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenBuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLISBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBufferData</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUnmapBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNMAPBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUnmapBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferPointerv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERPOINTERVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferPointerv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_2_0</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_2_0</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendEquationSeparate</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONSEPARATEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationSeparate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawBuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawBuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilOpSeparate</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILOPSEPARATEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilOpSeparate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilFuncSeparate</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILFUNCSEPARATEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilFuncSeparate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilMaskSeparate</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILMASKSEPARATEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilMaskSeparate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glAttachShader</name> <operator>=</operator> <operator>(</operator><name>PFNGLATTACHSHADERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAttachShader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindAttribLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDATTRIBLOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindAttribLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompileShader</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPILESHADERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompileShader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATEPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateShader</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATESHADERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateShader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteShader</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETESHADERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteShader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDetachShader</name> <operator>=</operator> <operator>(</operator><name>PFNGLDETACHSHADERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDetachShader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableVertexAttribArray</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEVERTEXATTRIBARRAYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableVertexAttribArray"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableVertexAttribArray</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEVERTEXATTRIBARRAYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableVertexAttribArray"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveAttrib</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEATTRIBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveAttrib"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniform</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniform"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetAttachedShaders</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETATTACHEDSHADERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetAttachedShaders"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetAttribLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETATTRIBLOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetAttribLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramInfoLog</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMINFOLOGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramInfoLog"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetShaderiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSHADERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetShaderiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetShaderInfoLog</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSHADERINFOLOGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetShaderInfoLog"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetShaderSource</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSHADERSOURCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetShaderSource"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMLOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribdv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBDVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribdv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribPointerv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBPOINTERVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribPointerv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsShader</name> <operator>=</operator> <operator>(</operator><name>PFNGLISSHADERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsShader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLinkProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLLINKPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLinkProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderSource</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADERSOURCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderSource"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUseProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLUSEPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUseProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1f</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2f</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3f</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4f</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1i</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2i</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3i</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4i</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glValidateProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLVALIDATEPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glValidateProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1f</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1s</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1sv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1sv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2f</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2s</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2sv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2sv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3f</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3s</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3sv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3sv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4Nbv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NBVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4Nbv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4Niv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4Niv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4Nsv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NSVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4Nsv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4Nub</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4Nub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4Nubv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUBVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4Nubv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4Nuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4Nuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4Nusv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUSVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4Nusv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4bv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4BVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4bv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4f</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4s</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4sv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4sv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4ubv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UBVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4ubv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4usv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4USVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4usv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribPointer</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBPOINTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribPointer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_2_1</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_2_1</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2x3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2X3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2x3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3x2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3X2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3x2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2x4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2X4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2x4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4x2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4X2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4x2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3x4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3X4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3x4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4x3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4X3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4x3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_3_0</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_3_0</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glColorMaski</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORMASKIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorMaski"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBooleani_v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBOOLEANI_VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBooleani_v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetIntegeri_v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGERI_VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetIntegeri_v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnablei</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnablei"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisablei</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisablei"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsEnabledi</name> <operator>=</operator> <operator>(</operator><name>PFNGLISENABLEDIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsEnabledi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferBase</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERBASEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferBase"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTransformFeedbackVaryings</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRANSFORMFEEDBACKVARYINGSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTransformFeedbackVaryings"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTransformFeedbackVarying</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTRANSFORMFEEDBACKVARYINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTransformFeedbackVarying"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClampColor</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLAMPCOLORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClampColor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginConditionalRender</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINCONDITIONALRENDERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginConditionalRender"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndConditionalRender</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDCONDITIONALRENDERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndConditionalRender"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribIPointer</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBIPOINTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribIPointer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribIiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribIiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribIuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribIuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1i</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2i</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3i</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4i</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4bv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4BVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4bv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4sv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4SVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4sv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4ubv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4UBVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4ubv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4usv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4USVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4usv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindFragDataLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAGDATALOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFragDataLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragDataLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGDATALOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragDataLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameterIiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERIIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterIiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameterIuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERIUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterIuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameterIiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERIIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameterIiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameterIuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERIUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameterIuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearBufferiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearBufferuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearBufferfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearBufferfi</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERFIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferfi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetStringi</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSTRINGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetStringi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsRenderbuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLISRENDERBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsRenderbuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindRenderbuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDRENDERBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindRenderbuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteRenderbuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETERENDERBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteRenderbuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenRenderbuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENRENDERBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenRenderbuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRenderbufferStorage</name> <operator>=</operator> <operator>(</operator><name>PFNGLRENDERBUFFERSTORAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRenderbufferStorage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetRenderbufferParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETRENDERBUFFERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetRenderbufferParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLISFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteFramebuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEFRAMEBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteFramebuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenFramebuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENFRAMEBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenFramebuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCheckFramebufferStatus</name> <operator>=</operator> <operator>(</operator><name>PFNGLCHECKFRAMEBUFFERSTATUSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCheckFramebufferStatus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferRenderbuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERRENDERBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferRenderbuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFramebufferAttachmentParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFramebufferAttachmentParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenerateMipmap</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENERATEMIPMAPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenerateMipmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlitFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLITFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlitFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRenderbufferStorageMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRenderbufferStorageMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureLayer</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURELAYERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureLayer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapBufferRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPBUFFERRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapBufferRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFlushMappedBufferRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHMAPPEDBUFFERRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushMappedBufferRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindVertexArray</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXARRAYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexArray"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteVertexArrays</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEVERTEXARRAYSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteVertexArrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenVertexArrays</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENVERTEXARRAYSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenVertexArrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsVertexArray</name> <operator>=</operator> <operator>(</operator><name>PFNGLISVERTEXARRAYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsVertexArray"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_3_1</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_3_1</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawArraysInstanced</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSINSTANCEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysInstanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstanced</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPrimitiveRestartIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLPRIMITIVERESTARTINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPrimitiveRestartIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformIndices</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMINDICESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformIndices"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformsiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMSIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformsiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMNAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformBlockIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMBLOCKINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformBlockIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformBlockiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMBLOCKIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformBlockiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformBlockName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformBlockName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformBlockBinding</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMBLOCKBINDINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformBlockBinding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_3_2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_3_2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawElementsBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawRangeElementsBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawRangeElementsBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProvokingVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROVOKINGVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProvokingVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFenceSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLFENCESYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFenceSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLISSYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETESYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClientWaitSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLIENTWAITSYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClientWaitSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWaitSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLWAITSYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWaitSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInteger64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGER64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInteger64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSynciv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSYNCIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSynciv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInteger64i_v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGER64I_VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInteger64i_v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferParameteri64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERPARAMETERI64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferParameteri64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTUREPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexImage2DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE2DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage2DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexImage3DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE3DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage3DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultisamplefv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTISAMPLEFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultisamplefv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSampleMaski</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEMASKIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleMaski"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_3_3</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_3_3</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindFragDataLocationIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAGDATALOCATIONINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFragDataLocationIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragDataIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGDATAINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragDataIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenSamplers</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENSAMPLERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenSamplers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteSamplers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETESAMPLERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteSamplers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsSampler</name> <operator>=</operator> <operator>(</operator><name>PFNGLISSAMPLERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsSampler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindSampler</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDSAMPLERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindSampler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterf</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterIiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterIiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterIuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterIuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameterIiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERIIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameterIiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameterIuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERIUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameterIuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glQueryCounter</name> <operator>=</operator> <operator>(</operator><name>PFNGLQUERYCOUNTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glQueryCounter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjecti64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTI64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjecti64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjectui64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTUI64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjectui64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribDivisor</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBDIVISORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribDivisor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColorP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLORP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColorP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColorP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLORP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColorP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_4_0</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_4_0</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMinSampleShading</name> <operator>=</operator> <operator>(</operator><name>PFNGLMINSAMPLESHADINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMinSampleShading"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendEquationi</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendEquationSeparatei</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONSEPARATEIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationSeparatei"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendFunci</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFunci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendFuncSeparatei</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCSEPARATEIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFuncSeparatei"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawArraysIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformdv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMDVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformdv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSubroutineUniformLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSubroutineUniformLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSubroutineIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSUBROUTINEINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSubroutineIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveSubroutineUniformiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveSubroutineUniformiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveSubroutineUniformName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveSubroutineUniformName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveSubroutineName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVESUBROUTINENAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveSubroutineName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformSubroutinesuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMSUBROUTINESUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformSubroutinesuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformSubroutineuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMSUBROUTINEUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformSubroutineuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramStageiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMSTAGEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramStageiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPatchParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATCHPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPatchParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPatchParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATCHPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPatchParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteTransformFeedbacks</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETETRANSFORMFEEDBACKSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteTransformFeedbacks"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenTransformFeedbacks</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENTRANSFORMFEEDBACKSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenTransformFeedbacks"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLISTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPauseTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLPAUSETRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPauseTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glResumeTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESUMETRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResumeTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedbackStream</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedbackStream"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginQueryIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINQUERYINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginQueryIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndQueryIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDQUERYINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndQueryIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryIndexediv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYINDEXEDIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryIndexediv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_4_1</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_4_1</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glReleaseShaderCompiler</name> <operator>=</operator> <operator>(</operator><name>PFNGLRELEASESHADERCOMPILERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReleaseShaderCompiler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderBinary</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADERBINARYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderBinary"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetShaderPrecisionFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSHADERPRECISIONFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetShaderPrecisionFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangef</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangef"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearDepthf</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARDEPTHFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearDepthf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramBinary</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMBINARYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramBinary"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramBinary</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMBINARYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramBinary"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUseProgramStages</name> <operator>=</operator> <operator>(</operator><name>PFNGLUSEPROGRAMSTAGESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUseProgramStages"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glActiveShaderProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVESHADERPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveShaderProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateShaderProgramv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATESHADERPROGRAMVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateShaderProgramv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindProgramPipeline</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDPROGRAMPIPELINEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindProgramPipeline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteProgramPipelines</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPROGRAMPIPELINESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteProgramPipelines"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenProgramPipelines</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPROGRAMPIPELINESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenProgramPipelines"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsProgramPipeline</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPROGRAMPIPELINEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsProgramPipeline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramPipelineiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPIPELINEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramPipelineiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glValidateProgramPipeline</name> <operator>=</operator> <operator>(</operator><name>PFNGLVALIDATEPROGRAMPIPELINEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glValidateProgramPipeline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramPipelineInfoLog</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPIPELINEINFOLOGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramPipelineInfoLog"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribLPointer</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBLPOINTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribLPointer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribLdv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBLDVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribLdv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glViewportArrayv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIEWPORTARRAYVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glViewportArrayv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glViewportIndexedf</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIEWPORTINDEXEDFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glViewportIndexedf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glViewportIndexedfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIEWPORTINDEXEDFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glViewportIndexedfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScissorArrayv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCISSORARRAYVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScissorArrayv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScissorIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCISSORINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScissorIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScissorIndexedv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCISSORINDEXEDVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScissorIndexedv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangeArrayv</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEARRAYVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangeArrayv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangeIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangeIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFloati_v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFLOATI_VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFloati_v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDoublei_v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDOUBLEI_VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDoublei_v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_4_2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_4_2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawArraysInstancedBaseInstance</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysInstancedBaseInstance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedBaseInstance</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedBaseInstance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedBaseVertexBaseInstance</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedBaseVertexBaseInstance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInternalformativ</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTERNALFORMATIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInternalformativ"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveAtomicCounterBufferiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveAtomicCounterBufferiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindImageTexture</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDIMAGETEXTUREPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindImageTexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMemoryBarrier</name> <operator>=</operator> <operator>(</operator><name>PFNGLMEMORYBARRIERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMemoryBarrier"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedbackInstanced</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedbackInstanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedbackStreamInstanced</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedbackStreamInstanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_4_3</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_4_3</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glClearBufferData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDispatchCompute</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISPATCHCOMPUTEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDispatchCompute"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDispatchComputeIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISPATCHCOMPUTEINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDispatchComputeIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyImageSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYIMAGESUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyImageSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFramebufferParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAMEBUFFERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFramebufferParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInternalformati64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTERNALFORMATI64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInternalformati64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateTexSubImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATETEXSUBIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateTexSubImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateTexImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATETEXIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateTexImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATEBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateBufferData</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATEBUFFERDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateBufferData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATEFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateSubFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATESUBFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateSubFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawArraysIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWARRAYSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawArraysIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramInterfaceiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMINTERFACEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramInterfaceiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCEINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCENAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCELOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceLocationIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceLocationIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderStorageBlockBinding</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADERSTORAGEBLOCKBINDINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderStorageBlockBinding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexBufferRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXBUFFERRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexBufferRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage2DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE2DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage2DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage3DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE3DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage3DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureView</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREVIEWPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureView"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindVertexBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribIFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBIFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribIFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribLFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBLFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribLFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribBinding</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBBINDINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribBinding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexBindingDivisor</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXBINDINGDIVISORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexBindingDivisor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageControl</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECONTROLPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageControl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageInsert</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGEINSERTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageInsert"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageCallback</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECALLBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageCallback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDebugMessageLog</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDEBUGMESSAGELOGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDebugMessageLog"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPushDebugGroup</name> <operator>=</operator> <operator>(</operator><name>PFNGLPUSHDEBUGGROUPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPushDebugGroup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPopDebugGroup</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOPDEBUGGROUPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPopDebugGroup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glObjectLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glObjectPtrLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTPTRLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectPtrLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectPtrLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTPTRLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectPtrLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_VERSION_4_4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_VERSION_4_4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBufferStorage</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERSTORAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferStorage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearTexImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARTEXIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearTexImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearTexSubImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARTEXSUBIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearTexSubImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBuffersBase</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERSBASEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBuffersBase"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBuffersRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERSRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBuffersRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindTextures</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTEXTURESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTextures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindSamplers</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDSAMPLERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindSamplers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindImageTextures</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDIMAGETEXTURESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindImageTextures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindVertexBuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexBuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_point_sprite</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_point_sprite</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPointParameteriNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERINVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameteriNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_element_array</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_element_array</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glElementPointerAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLELEMENTPOINTERAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glElementPointerAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementArrayAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTARRAYAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementArrayAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawRangeElementArrayAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawRangeElementArrayAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementArrayAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementArrayAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawRangeElementArrayAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawRangeElementArrayAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_multi_draw_indirect</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_multi_draw_indirect</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMultiDrawArraysIndirectAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawArraysIndirectAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsIndirectAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsIndirectAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_tag_sample_buffer</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_tag_sample_buffer</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTagSampleBufferSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLTAGSAMPLEBUFFERSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTagSampleBufferSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_separate_stencil</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_separate_stencil</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glStencilOpSeparateATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILOPSEPARATEATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilOpSeparateATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilFuncSeparateATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILFUNCSEPARATEATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilFuncSeparateATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_texture_buffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_texture_buffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_blend</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_blend</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glWeightbvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightbvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightsvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightsvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightubvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTUBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightubvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightusvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTUSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightusvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightuivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTUIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightuivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightPointerARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTPOINTERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightPointerARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexBlendARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXBLENDARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexBlendARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_program_interface_query</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_program_interface_query</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetProgramInterfaceiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMINTERFACEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramInterfaceiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCEINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCENAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCELOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramResourceLocationIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramResourceLocationIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_index_func</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_index_func</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glIndexFuncEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLINDEXFUNCEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIndexFuncEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_shader_buffer_load</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_shader_buffer_load</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMakeBufferResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKEBUFFERRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeBufferResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeBufferNonResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKEBUFFERNONRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeBufferNonResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsBufferResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISBUFFERRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsBufferResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeNamedBufferResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKENAMEDBUFFERRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeNamedBufferResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeNamedBufferNonResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeNamedBufferNonResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsNamedBufferResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISNAMEDBUFFERRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsNamedBufferResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferParameterui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERPARAMETERUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferParameterui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedBufferParameterui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedBufferParameterui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetIntegerui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGERUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetIntegerui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMUI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMUI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_color_subtable</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_color_subtable</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glColorSubTableEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORSUBTABLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorSubTableEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyColorSubTableEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCOLORSUBTABLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyColorSubTableEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SUNX_constant_data</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SUNX_constant_data</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFinishTextureSUNX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFINISHTEXTURESUNXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFinishTextureSUNX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_multi_draw_arrays</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_multi_draw_arrays</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMultiDrawArraysEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWARRAYSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawArraysEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_shader_atomic_counters</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_shader_atomic_counters</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetActiveAtomicCounterBufferiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveAtomicCounterBufferiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_conditional_render</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_conditional_render</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBeginConditionalRenderNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINCONDITIONALRENDERNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginConditionalRenderNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndConditionalRenderNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDCONDITIONALRENDERNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndConditionalRenderNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_MESA_resize_buffers</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_MESA_resize_buffers</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glResizeBuffersMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESIZEBUFFERSMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResizeBuffersMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_texture_view</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_texture_view</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTextureView</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREVIEWPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureView"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_map_buffer_range</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_map_buffer_range</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMapBufferRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPBUFFERRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapBufferRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFlushMappedBufferRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHMAPPEDBUFFERRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushMappedBufferRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_convolution</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_convolution</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glConvolutionFilter1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONFILTER1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionFilter1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionFilter2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONFILTER2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionFilter2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameterfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameterfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameteriEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameteriEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyConvolutionFilter1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyConvolutionFilter1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyConvolutionFilter2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyConvolutionFilter2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetConvolutionFilterEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCONVOLUTIONFILTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetConvolutionFilterEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetConvolutionParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetConvolutionParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetConvolutionParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetConvolutionParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSeparableFilterEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSEPARABLEFILTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSeparableFilterEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSeparableFilter2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSEPARABLEFILTER2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSeparableFilter2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_vertex_attrib_integer_64bit</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_vertex_attrib_integer_64bit</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribLi64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBLI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribLi64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribLui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBLUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribLui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribLFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBLFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribLFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_paletted_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_paletted_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glColorTableEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORTABLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorTableEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_texture_buffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_texture_buffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexBufferARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXBUFFERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexBufferARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_pn_triangles</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_pn_triangles</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPNTrianglesiATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLPNTRIANGLESIATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPNTrianglesiATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPNTrianglesfATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLPNTRIANGLESFATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPNTrianglesfATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_flush_raster</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_flush_raster</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFlushRasterSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHRASTERSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushRasterSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_light_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_light_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glApplyTextureEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLAPPLYTEXTUREEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glApplyTextureEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureLightEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURELIGHTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureLightEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureMaterialEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREMATERIALEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureMaterialEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_draw_buffers_blend</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_draw_buffers_blend</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendFuncIndexedAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCINDEXEDAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFuncIndexedAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendFuncSeparateIndexedAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFuncSeparateIndexedAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendEquationIndexedAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONINDEXEDAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationIndexedAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendEquationSeparateIndexedAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationSeparateIndexedAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_MESA_window_pos</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_MESA_window_pos</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glWindowPos2dMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2DMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2dMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2dvMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2DVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2dvMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2fMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2FMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2fMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2fvMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2FVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2fvMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2iMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2IMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2iMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2ivMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2IVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2ivMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2sMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2SMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2sMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2svMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2SVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2svMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3dMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3DMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3dMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3dvMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3DVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3dvMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3fMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3FMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3fMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3fvMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3FVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3fvMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3iMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3IMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3iMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3ivMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3IVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3ivMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3sMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3SMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3sMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3svMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3SVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3svMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4dMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4DMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4dMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4dvMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4DVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4dvMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4fMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4FMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4fMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4fvMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4FVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4fvMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4iMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4IMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4iMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4ivMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4IVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4ivMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4sMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4SMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4sMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos4svMESA</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS4SVMESAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos4svMESA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_texture_barrier</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_texture_barrier</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTextureBarrierNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREBARRIERNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureBarrierNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_type_2_10_10_10_rev</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_type_2_10_10_10_rev</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorP4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORP4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorP4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColorP3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLORP3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColorP3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColorP3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLORP3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColorP3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_3DFX_tbuffer</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_3DFX_tbuffer</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTbufferMask3DFX</name> <operator>=</operator> <operator>(</operator><name>PFNGLTBUFFERMASK3DFXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTbufferMask3DFX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_GREMEDY_frame_terminator</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_GREMEDY_frame_terminator</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFrameTerminatorGREMEDY</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMETERMINATORGREMEDYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFrameTerminatorGREMEDY"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_blend_func_extended</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_blend_func_extended</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindFragDataLocationIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAGDATALOCATIONINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFragDataLocationIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragDataIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGDATAINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragDataIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_separate_shader_objects</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_separate_shader_objects</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glUseShaderProgramEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUSESHADERPROGRAMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUseShaderProgramEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glActiveProgramEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVEPROGRAMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveProgramEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateShaderProgramEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATESHADERPROGRAMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateShaderProgramEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glActiveShaderProgramEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVESHADERPROGRAMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveShaderProgramEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindProgramPipelineEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDPROGRAMPIPELINEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindProgramPipelineEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateShaderProgramvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATESHADERPROGRAMVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateShaderProgramvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteProgramPipelinesEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPROGRAMPIPELINESEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteProgramPipelinesEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenProgramPipelinesEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPROGRAMPIPELINESEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenProgramPipelinesEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramPipelineInfoLogEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramPipelineInfoLogEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramPipelineivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPIPELINEIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramPipelineivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsProgramPipelineEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPROGRAMPIPELINEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsProgramPipelineEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameteriEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETERIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameteriEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUseProgramStagesEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUSEPROGRAMSTAGESEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUseProgramStagesEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glValidateProgramPipelineEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVALIDATEPROGRAMPIPELINEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glValidateProgramPipelineEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_texture_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_texture_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexImage2DMultisampleCoverageNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage2DMultisampleCoverageNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexImage3DMultisampleCoverageNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage3DMultisampleCoverageNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureImage2DMultisampleNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureImage2DMultisampleNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureImage3DMultisampleNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureImage3DMultisampleNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureImage2DMultisampleCoverageNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureImage2DMultisampleCoverageNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureImage3DMultisampleCoverageNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureImage3DMultisampleCoverageNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_shader_objects</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_shader_objects</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDeleteObjectARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEOBJECTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteObjectARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetHandleARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHANDLEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHandleARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDetachObjectARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDETACHOBJECTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDetachObjectARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateShaderObjectARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATESHADEROBJECTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateShaderObjectARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderSourceARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADERSOURCEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderSourceARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompileShaderARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPILESHADERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompileShaderARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateProgramObjectARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATEPROGRAMOBJECTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateProgramObjectARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glAttachObjectARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLATTACHOBJECTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAttachObjectARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLinkProgramARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLLINKPROGRAMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLinkProgramARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUseProgramObjectARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUSEPROGRAMOBJECTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUseProgramObjectARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glValidateProgramARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVALIDATEPROGRAMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glValidateProgramARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectParameterfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTPARAMETERFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectParameterfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectParameterivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTPARAMETERIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectParameterivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInfoLogARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINFOLOGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInfoLogARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetAttachedObjectsARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETATTACHEDOBJECTSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetAttachedObjectsARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformLocationARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMLOCATIONARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformLocationARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetShaderSourceARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSHADERSOURCEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetShaderSourceARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_framebuffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_framebuffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glIsRenderbuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLISRENDERBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsRenderbuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindRenderbuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDRENDERBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindRenderbuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteRenderbuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETERENDERBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteRenderbuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenRenderbuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENRENDERBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenRenderbuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRenderbufferStorage</name> <operator>=</operator> <operator>(</operator><name>PFNGLRENDERBUFFERSTORAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRenderbufferStorage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetRenderbufferParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETRENDERBUFFERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetRenderbufferParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLISFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteFramebuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEFRAMEBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteFramebuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenFramebuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENFRAMEBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenFramebuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCheckFramebufferStatus</name> <operator>=</operator> <operator>(</operator><name>PFNGLCHECKFRAMEBUFFERSTATUSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCheckFramebufferStatus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferRenderbuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERRENDERBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferRenderbuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFramebufferAttachmentParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFramebufferAttachmentParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenerateMipmap</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENERATEMIPMAPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenerateMipmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlitFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLITFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlitFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRenderbufferStorageMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRenderbufferStorageMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureLayer</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURELAYERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureLayer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_envmap_bumpmap</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_envmap_bumpmap</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexBumpParameterivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXBUMPPARAMETERIVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexBumpParameterivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexBumpParameterfvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXBUMPPARAMETERFVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexBumpParameterfvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexBumpParameterivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXBUMPPARAMETERIVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexBumpParameterivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexBumpParameterfvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXBUMPPARAMETERFVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexBumpParameterfvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_map_object_buffer</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_map_object_buffer</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMapObjectBufferATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPOBJECTBUFFERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapObjectBufferATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUnmapObjectBufferATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNMAPOBJECTBUFFERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUnmapObjectBufferATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_robustness</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_robustness</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetGraphicsResetStatusARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETGRAPHICSRESETSTATUSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetGraphicsResetStatusARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnTexImageARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNTEXIMAGEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnTexImageARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReadnPixelsARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLREADNPIXELSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReadnPixelsARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnCompressedTexImageARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnCompressedTexImageARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnUniformfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNUNIFORMFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnUniformfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnUniformivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNUNIFORMIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnUniformivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnUniformuivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNUNIFORMUIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnUniformuivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnUniformdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNUNIFORMDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnUniformdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnMapdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNMAPDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnMapdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnMapfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNMAPFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnMapfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnMapivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNMAPIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnMapivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnPixelMapfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNPIXELMAPFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnPixelMapfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnPixelMapuivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNPIXELMAPUIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnPixelMapuivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnPixelMapusvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNPIXELMAPUSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnPixelMapusvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnPolygonStippleARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNPOLYGONSTIPPLEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnPolygonStippleARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnColorTableARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNCOLORTABLEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnColorTableARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnConvolutionFilterARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNCONVOLUTIONFILTERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnConvolutionFilterARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnSeparableFilterARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNSEPARABLEFILTERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnSeparableFilterARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnHistogramARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNHISTOGRAMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnHistogramARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetnMinmaxARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNMINMAXARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetnMinmaxARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_pixel_data_range</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_pixel_data_range</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPixelDataRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELDATARANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelDataRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFlushPixelDataRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHPIXELDATARANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushPixelDataRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_framebuffer_blit</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_framebuffer_blit</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlitFramebufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLITFRAMEBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlitFramebufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_gpu_shader_fp64</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_gpu_shader_fp64</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glUniform1d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4d</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix2x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX2X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix2x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix3x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX3X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix3x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformMatrix4x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMMATRIX4X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformMatrix4x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformdv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMDVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformdv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_vertex_weighting</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_vertex_weighting</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexWeightfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXWEIGHTFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexWeightfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexWeightfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXWEIGHTFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexWeightfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexWeightPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXWEIGHTPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexWeightPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_GREMEDY_string_marker</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_GREMEDY_string_marker</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glStringMarkerGREMEDY</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTRINGMARKERGREMEDYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStringMarkerGREMEDY"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_subtexture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_subtexture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_evaluators</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_evaluators</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMapControlPointsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPCONTROLPOINTSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapControlPointsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMapControlPointsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMAPCONTROLPOINTSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMapControlPointsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMapParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMAPPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMapParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMapParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMAPPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMapParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMapAttribParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMAPATTRIBPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMapAttribParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMapAttribParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMAPATTRIBPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMapAttribParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEvalMapsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLEVALMAPSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEvalMapsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_texture_filter4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_texture_filter4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetTexFilterFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXFILTERFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexFilterFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexFilterFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXFILTERFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexFilterFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_performance_monitor</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_performance_monitor</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetPerfMonitorGroupsAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFMONITORGROUPSAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfMonitorGroupsAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfMonitorCountersAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFMONITORCOUNTERSAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfMonitorCountersAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfMonitorGroupStringAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFMONITORGROUPSTRINGAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfMonitorGroupStringAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfMonitorCounterStringAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfMonitorCounterStringAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfMonitorCounterInfoAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFMONITORCOUNTERINFOAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfMonitorCounterInfoAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenPerfMonitorsAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPERFMONITORSAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenPerfMonitorsAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeletePerfMonitorsAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPERFMONITORSAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeletePerfMonitorsAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSelectPerfMonitorCountersAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLSELECTPERFMONITORCOUNTERSAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSelectPerfMonitorCountersAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginPerfMonitorAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINPERFMONITORAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginPerfMonitorAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndPerfMonitorAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDPERFMONITORAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndPerfMonitorAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfMonitorCounterDataAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFMONITORCOUNTERDATAAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfMonitorCounterDataAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_stencil_clear_tag</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_stencil_clear_tag</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glStencilClearTagEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILCLEARTAGEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilClearTagEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_present_video</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_present_video</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPresentFrameKeyedNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPRESENTFRAMEKEYEDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPresentFrameKeyedNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPresentFrameDualFillNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPRESENTFRAMEDUALFILLNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPresentFrameDualFillNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideoivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideoivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideouivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOUIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideouivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideoi64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideoi64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideoui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideoui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_gpu_program_parameters</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_gpu_program_parameters</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameters4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETERS4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameters4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameters4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameters4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_draw_elements_base_vertex</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_draw_elements_base_vertex</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawElementsBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawRangeElementsBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawRangeElementsBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsBaseVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsBaseVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_transform_feedback</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_transform_feedback</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBeginTransformFeedbackNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINTRANSFORMFEEDBACKNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginTransformFeedbackNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndTransformFeedbackNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDTRANSFORMFEEDBACKNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndTransformFeedbackNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTransformFeedbackAttribsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTransformFeedbackAttribsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERRANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferOffsetNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFEROFFSETNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferOffsetNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferBaseNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERBASENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferBaseNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTransformFeedbackVaryingsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTransformFeedbackVaryingsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glActiveVaryingNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVEVARYINGNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveVaryingNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVaryingLocationNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVARYINGLOCATIONNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVaryingLocationNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveVaryingNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEVARYINGNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveVaryingNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTransformFeedbackVaryingNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTransformFeedbackVaryingNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTransformFeedbackStreamAttribsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTransformFeedbackStreamAttribsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_fragment_program</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_fragment_program</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramNamedParameter4fNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMNAMEDPARAMETER4FNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramNamedParameter4fNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramNamedParameter4fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramNamedParameter4fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramNamedParameter4dNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMNAMEDPARAMETER4DNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramNamedParameter4dNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramNamedParameter4dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramNamedParameter4dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramNamedParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramNamedParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramNamedParameterdvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramNamedParameterdvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_stencil_operation_extended</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_stencil_operation_extended</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glStencilOpValueAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILOPVALUEAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilOpValueAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_instanced_arrays</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_instanced_arrays</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribDivisorARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBDIVISORARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribDivisorARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_polygon_offset</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_polygon_offset</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPolygonOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOLYGONOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPolygonOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_sparse_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_sparse_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexStorageSparseAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGESPARSEAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorageSparseAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureStorageSparseAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESTORAGESPARSEAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureStorageSparseAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_fence</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_fence</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDeleteFencesNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEFENCESNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteFencesNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenFencesNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENFENCESNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenFencesNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsFenceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISFENCENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsFenceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTestFenceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTESTFENCENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTestFenceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFenceivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFENCEIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFenceivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFinishFenceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLFINISHFENCENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFinishFenceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSetFenceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSETFENCENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSetFenceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_texture_buffer_range</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_texture_buffer_range</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexBufferRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXBUFFERRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexBufferRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SUN_mesh_array</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SUN_mesh_array</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawMeshArraysSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWMESHARRAYSSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawMeshArraysSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_attrib_binding</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_attrib_binding</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindVertexBuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexBuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribIFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBIFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribIFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribLFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBLFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribLFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribBinding</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBBINDINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribBinding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexBindingDivisor</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXBINDINGDIVISORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexBindingDivisor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_framebuffer_no_attachments</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_framebuffer_no_attachments</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFramebufferParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFramebufferParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAMEBUFFERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFramebufferParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_cl_event</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_cl_event</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCreateSyncFromCLeventARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATESYNCFROMCLEVENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateSyncFromCLeventARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_OES_single_precision</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_OES_single_precision</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glClearDepthfOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARDEPTHFOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearDepthfOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClipPlanefOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLIPPLANEFOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClipPlanefOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangefOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEFOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangefOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFrustumfOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRUSTUMFOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFrustumfOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetClipPlanefOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCLIPPLANEFOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetClipPlanefOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glOrthofOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLORTHOFOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glOrthofOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_primitive_restart</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_primitive_restart</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPrimitiveRestartNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPRIMITIVERESTARTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPrimitiveRestartNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPrimitiveRestartIndexNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPRIMITIVERESTARTINDEXNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPrimitiveRestartIndexNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SUN_global_alpha</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SUN_global_alpha</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactorbSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORBSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactorbSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactorsSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORSSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactorsSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactoriSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORISUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactoriSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactorfSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORFSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactorfSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactordSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORDSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactordSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactorubSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORUBSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactorubSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactorusSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORUSSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactorusSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGlobalAlphaFactoruiSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLGLOBALALPHAFACTORUISUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGlobalAlphaFactoruiSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_texture_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_texture_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glAreTexturesResidentEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLARETEXTURESRESIDENTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAreTexturesResidentEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindTextureEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTEXTUREEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTextureEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteTexturesEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETETEXTURESEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteTexturesEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenTexturesEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENTEXTURESEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenTexturesEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsTextureEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLISTEXTUREEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsTextureEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPrioritizeTexturesEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPRIORITIZETEXTURESEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPrioritizeTexturesEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_name_gen_delete</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_name_gen_delete</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenNamesAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENNAMESAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenNamesAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteNamesAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETENAMESAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteNamesAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsNameAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLISNAMEAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsNameAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_buffer_storage</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_buffer_storage</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBufferStorage</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERSTORAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferStorage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_vertex_program_evaluators</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_vertex_program_evaluators</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glEnableVertexAttribAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEVERTEXATTRIBAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableVertexAttribAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableVertexAttribAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEVERTEXATTRIBAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableVertexAttribAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsVertexAttribEnabledAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLISVERTEXATTRIBENABLEDAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsVertexAttribEnabledAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapVertexAttrib1dAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPVERTEXATTRIB1DAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapVertexAttrib1dAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapVertexAttrib1fAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPVERTEXATTRIB1FAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapVertexAttrib1fAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapVertexAttrib2dAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPVERTEXATTRIB2DAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapVertexAttrib2dAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapVertexAttrib2fAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPVERTEXATTRIB2FAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapVertexAttrib2fAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_multi_bind</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_multi_bind</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindBuffersBase</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERSBASEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBuffersBase"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBuffersRange</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERSRANGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBuffersRange"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindTextures</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTEXTURESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTextures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindSamplers</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDSAMPLERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindSamplers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindImageTextures</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDIMAGETEXTURESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindImageTextures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindVertexBuffers</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXBUFFERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexBuffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_list_priority</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_list_priority</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetListParameterfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETLISTPARAMETERFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetListParameterfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetListParameterivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETLISTPARAMETERIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetListParameterivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glListParameterfSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLLISTPARAMETERFSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glListParameterfSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glListParameterfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLLISTPARAMETERFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glListParameterfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glListParameteriSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLLISTPARAMETERISGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glListParameteriSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glListParameterivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLLISTPARAMETERIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glListParameterivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_vertex_buffer_unified_memory</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_vertex_buffer_unified_memory</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBufferAddressRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERADDRESSRANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferAddressRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIndexFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLINDEXFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIndexFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEdgeFlagFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLEDGEFLAGFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEdgeFlagFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColorFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLORFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColorFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoordFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoordFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribIFormatNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBIFORMATNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribIFormatNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetIntegerui64i_vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGERUI64I_VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetIntegerui64i_vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_blend_equation_advanced</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_blend_equation_advanced</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendParameteriNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDPARAMETERINVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendParameteriNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendBarrierNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDBARRIERNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendBarrierNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_sharpen_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_sharpen_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSharpenTexFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHARPENTEXFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSharpenTexFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSharpenTexFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSHARPENTEXFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSharpenTexFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_program</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_program</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NbvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NbvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NsvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NsvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NubARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUBARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NubARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NubvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NubvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NuivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NuivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NusvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NusvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4bvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4BVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4bvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4ubvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4ubvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4uivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4uivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4usvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4USVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4usvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribPointerARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBPOINTERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribPointerARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableVertexAttribArrayARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEVERTEXATTRIBARRAYARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableVertexAttribArrayARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableVertexAttribArrayARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableVertexAttribArrayARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindProgramARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDPROGRAMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindProgramARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteProgramsARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPROGRAMSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteProgramsARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenProgramsARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPROGRAMSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenProgramsARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramEnvParameterdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMENVPARAMETERDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramEnvParameterdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramEnvParameterfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMENVPARAMETERFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramEnvParameterfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramLocalParameterdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramLocalParameterdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramLocalParameterfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramLocalParameterfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribPointervARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBPOINTERVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribPointervARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsProgramARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPROGRAMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsProgramARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_buffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_buffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindBufferARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteBuffersARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEBUFFERSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteBuffersARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenBuffersARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENBUFFERSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenBuffersARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsBufferARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLISBUFFERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsBufferARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBufferDataARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERDATAARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferDataARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBufferSubDataARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERSUBDATAARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferSubDataARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferSubDataARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERSUBDATAARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferSubDataARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapBufferARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPBUFFERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapBufferARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUnmapBufferARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNMAPBUFFERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUnmapBufferARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferParameterivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERPARAMETERIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferParameterivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBufferPointervARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBUFFERPOINTERVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBufferPointervARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_vertex_array_range</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_vertex_array_range</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFlushVertexArrayRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHVERTEXARRAYRANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushVertexArrayRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYRANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_fragment_lighting</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_fragment_lighting</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFragmentColorMaterialSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTCOLORMATERIALSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentColorMaterialSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightfSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTFSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightfSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightiSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTISGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightiSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightModelfSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTMODELFSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightModelfSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightModelfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTMODELFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightModelfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightModeliSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTMODELISGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightModeliSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentLightModelivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTLIGHTMODELIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentLightModelivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentMaterialfSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTMATERIALFSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentMaterialfSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentMaterialfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTMATERIALFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentMaterialfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentMaterialiSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTMATERIALISGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentMaterialiSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFragmentMaterialivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAGMENTMATERIALIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFragmentMaterialivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragmentLightfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGMENTLIGHTFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragmentLightfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragmentLightivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGMENTLIGHTIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragmentLightivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragmentMaterialfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGMENTMATERIALFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragmentMaterialfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragmentMaterialivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGMENTMATERIALIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragmentMaterialivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLightEnviSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLLIGHTENVISGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLightEnviSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_framebuffer_multisample_coverage</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_framebuffer_multisample_coverage</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glRenderbufferStorageMultisampleCoverageNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRenderbufferStorageMultisampleCoverageNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_timer_query</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_timer_query</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjecti64vEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTI64VEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjecti64vEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjectui64vEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTUI64VEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjectui64vEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_bindless_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_bindless_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetTextureHandleNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTUREHANDLENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureHandleNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureSamplerHandleNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTURESAMPLERHANDLENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureSamplerHandleNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeTextureHandleResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKETEXTUREHANDLERESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeTextureHandleResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeTextureHandleNonResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeTextureHandleNonResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetImageHandleNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETIMAGEHANDLENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetImageHandleNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeImageHandleResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKEIMAGEHANDLERESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeImageHandleResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeImageHandleNonResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeImageHandleNonResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformHandleui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMHANDLEUI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformHandleui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformHandleui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMHANDLEUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformHandleui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformHandleui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformHandleui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformHandleui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformHandleui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsTextureHandleResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISTEXTUREHANDLERESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsTextureHandleResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsImageHandleResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISIMAGEHANDLERESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsImageHandleResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_KHR_debug</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_KHR_debug</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDebugMessageControl</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECONTROLPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageControl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageInsert</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGEINSERTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageInsert"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageCallback</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECALLBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageCallback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDebugMessageLog</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDEBUGMESSAGELOGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDebugMessageLog"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPushDebugGroup</name> <operator>=</operator> <operator>(</operator><name>PFNGLPUSHDEBUGGROUPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPushDebugGroup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPopDebugGroup</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOPDEBUGGROUPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPopDebugGroup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glObjectLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glObjectPtrLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTPTRLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectPtrLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectPtrLabel</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTPTRLABELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectPtrLabel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPointerv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPOINTERVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPointerv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageControlKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECONTROLKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageControlKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageInsertKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGEINSERTKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageInsertKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageCallbackKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECALLBACKKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageCallbackKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDebugMessageLogKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDEBUGMESSAGELOGKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDebugMessageLogKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPushDebugGroupKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLPUSHDEBUGGROUPKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPushDebugGroupKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPopDebugGroupKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOPDEBUGGROUPKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPopDebugGroupKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glObjectLabelKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTLABELKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectLabelKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectLabelKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTLABELKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectLabelKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glObjectPtrLabelKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTPTRLABELKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectPtrLabelKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectPtrLabelKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTPTRLABELKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectPtrLabelKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPointervKHR</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPOINTERVKHRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPointervKHR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_vertex_attrib_array_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_vertex_attrib_array_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribArrayObjectATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBARRAYOBJECTATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribArrayObjectATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribArrayObjectfvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribArrayObjectfvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribArrayObjectivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribArrayObjectivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_geometry_shader4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_geometry_shader4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramParameteriEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETERIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameteriEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_bindable_uniform</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_bindable_uniform</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glUniformBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformBufferSizeEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMBUFFERSIZEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformBufferSizeEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_element_array</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_element_array</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glElementPointerATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLELEMENTPOINTERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glElementPointerATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementArrayATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTARRAYATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementArrayATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawRangeElementArrayATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWRANGEELEMENTARRAYATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawRangeElementArrayATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_reference_plane</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_reference_plane</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glReferencePlaneSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLREFERENCEPLANESGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReferencePlaneSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_stencil_two_side</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_stencil_two_side</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glActiveStencilFaceEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVESTENCILFACEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveStencilFaceEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_explicit_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_explicit_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetMultisamplefvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTISAMPLEFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultisamplefvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSampleMaskIndexedNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEMASKINDEXEDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleMaskIndexedNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexRenderbufferNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXRENDERBUFFERNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexRenderbufferNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_IBM_static_data</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_IBM_static_data</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFlushStaticDataIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHSTATICDATAIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushStaticDataIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_texture_perturb_normal</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_texture_perturb_normal</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTextureNormalEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURENORMALEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureNormalEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_point_parameters</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_point_parameters</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPointParameterfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_PGI_misc_hints</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_PGI_misc_hints</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glHintPGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLHINTPGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glHintPGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_shader</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_shader</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NubARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUBARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NubARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4bvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4BVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4bvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4ubvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4ubvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4usvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4USVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4usvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4uivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4uivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NbvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NbvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NsvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NsvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NubvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NubvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NusvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NusvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4NuivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4NUIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4NuivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribPointerARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBPOINTERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribPointerARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableVertexAttribArrayARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEVERTEXATTRIBARRAYARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableVertexAttribArrayARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableVertexAttribArrayARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableVertexAttribArrayARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindAttribLocationARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDATTRIBLOCATIONARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindAttribLocationARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveAttribARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEATTRIBARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveAttribARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetAttribLocationARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETATTRIBLOCATIONARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetAttribLocationARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribPointervARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBPOINTERVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribPointervARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_tessellation_shader</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_tessellation_shader</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPatchParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATCHPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPatchParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPatchParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATCHPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPatchParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_draw_buffers2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_draw_buffers2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glColorMaskIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORMASKINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorMaskIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBooleanIndexedvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBOOLEANINDEXEDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBooleanIndexedvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetIntegerIndexedvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGERINDEXEDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetIntegerIndexedvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsEnabledIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLISENABLEDINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsEnabledIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_attrib_64bit</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_attrib_64bit</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4d</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribLPointer</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBLPOINTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribLPointer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribLdv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBLDVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribLdv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_interleaved_elements</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_interleaved_elements</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribParameteriAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBPARAMETERIAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribParameteriAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_fragment_program</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_fragment_program</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindProgramARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDPROGRAMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindProgramARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteProgramsARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPROGRAMSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteProgramsARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenProgramsARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPROGRAMSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenProgramsARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameter4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETER4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameter4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameter4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameter4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramEnvParameterdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMENVPARAMETERDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramEnvParameterdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramEnvParameterfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMENVPARAMETERFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramEnvParameterfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramLocalParameterdvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramLocalParameterdvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramLocalParameterfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramLocalParameterfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsProgramARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPROGRAMARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsProgramARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_texture_storage</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_texture_storage</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexStorage1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage3D</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_copy_image</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_copy_image</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCopyImageSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYIMAGESUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyImageSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_pixel_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_pixel_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPixelTexGenParameteriSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTEXGENPARAMETERISGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTexGenParameteriSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelTexGenParameterivSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTEXGENPARAMETERIVSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTexGenParameterivSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelTexGenParameterfSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTEXGENPARAMETERFSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTexGenParameterfSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelTexGenParameterfvSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTEXGENPARAMETERFVSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTexGenParameterfvSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPixelTexGenParameterivSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPixelTexGenParameterivSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPixelTexGenParameterfvSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPixelTexGenParameterfvSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_instruments</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_instruments</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetInstrumentsSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINSTRUMENTSSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInstrumentsSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInstrumentsBufferSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLINSTRUMENTSBUFFERSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInstrumentsBufferSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPollInstrumentsSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOLLINSTRUMENTSSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPollInstrumentsSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReadInstrumentsSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLREADINSTRUMENTSSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReadInstrumentsSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStartInstrumentsSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTARTINSTRUMENTSSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStartInstrumentsSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStopInstrumentsSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTOPINSTRUMENTSSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStopInstrumentsSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_shader_storage_buffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_shader_storage_buffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glShaderStorageBlockBinding</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADERSTORAGEBLOCKBINDINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderStorageBlockBinding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_blend_minmax</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_blend_minmax</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendEquationEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_base_instance</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_base_instance</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawArraysInstancedBaseInstance</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysInstancedBaseInstance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedBaseInstance</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedBaseInstance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedBaseVertexBaseInstance</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedBaseVertexBaseInstance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_texture_integer</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_texture_integer</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexParameterIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameterIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameterIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameterIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameterIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameterIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearColorIiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARCOLORIIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearColorIiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearColorIuiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARCOLORIUIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearColorIuiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_texture_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_texture_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexImage2DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE2DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage2DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexImage3DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE3DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage3DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultisamplefv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTISAMPLEFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultisamplefv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSampleMaski</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEMASKIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleMaski"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_vertex_shader_tessellator</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_vertex_shader_tessellator</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTessellationFactorAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLTESSELLATIONFACTORAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTessellationFactorAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTessellationModeAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLTESSELLATIONMODEAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTessellationModeAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_invalidate_subdata</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_invalidate_subdata</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glInvalidateTexSubImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATETEXSUBIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateTexSubImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateTexImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATETEXIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateTexImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATEBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateBufferData</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATEBUFFERDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateBufferData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATEFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInvalidateSubFramebuffer</name> <operator>=</operator> <operator>(</operator><name>PFNGLINVALIDATESUBFRAMEBUFFERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInvalidateSubFramebuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_index_material</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_index_material</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glIndexMaterialEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLINDEXMATERIALEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIndexMaterialEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_INTEL_parallel_arrays</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_INTEL_parallel_arrays</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexPointervINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXPOINTERVINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexPointervINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalPointervINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALPOINTERVINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalPointervINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorPointervINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORPOINTERVINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorPointervINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordPointervINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDPOINTERVINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordPointervINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_draw_buffers</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_draw_buffers</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawBuffersATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWBUFFERSATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawBuffersATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_pixel_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_pixel_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPixelTexGenSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTEXGENSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTexGenSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_timer_query</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_timer_query</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glQueryCounter</name> <operator>=</operator> <operator>(</operator><name>PFNGLQUERYCOUNTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glQueryCounter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjecti64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTI64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjecti64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjectui64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTUI64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjectui64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_parameter_buffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_parameter_buffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramBufferParametersfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramBufferParametersfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramBufferParametersIivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramBufferParametersIivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramBufferParametersIuivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramBufferParametersIuivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_uniform_buffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_uniform_buffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetUniformIndices</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMINDICESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformIndices"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformsiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMSIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformsiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMNAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformBlockIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMBLOCKINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformBlockIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformBlockiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMBLOCKIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformBlockiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveUniformBlockName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveUniformBlockName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformBlockBinding</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMBLOCKBINDINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformBlockBinding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_transform_feedback2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_transform_feedback2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindTransformFeedbackNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTRANSFORMFEEDBACKNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTransformFeedbackNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteTransformFeedbacksNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETETRANSFORMFEEDBACKSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteTransformFeedbacksNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenTransformFeedbacksNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENTRANSFORMFEEDBACKSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenTransformFeedbacksNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsTransformFeedbackNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISTRANSFORMFEEDBACKNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsTransformFeedbackNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPauseTransformFeedbackNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPAUSETRANSFORMFEEDBACKNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPauseTransformFeedbackNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glResumeTransformFeedbackNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESUMETRANSFORMFEEDBACKNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResumeTransformFeedbackNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedbackNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedbackNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_blend_color</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_blend_color</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendColorEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDCOLOREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendColorEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_histogram</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_histogram</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetHistogramEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHISTOGRAMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHistogramEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetHistogramParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHISTOGRAMPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHistogramParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetHistogramParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHISTOGRAMPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHistogramParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMinmaxEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMINMAXEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMinmaxEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMinmaxParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMINMAXPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMinmaxParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMinmaxParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMINMAXPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMinmaxParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glHistogramEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLHISTOGRAMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glHistogramEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMinmaxEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMINMAXEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMinmaxEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glResetHistogramEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESETHISTOGRAMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResetHistogramEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glResetMinmaxEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESETMINMAXEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResetMinmaxEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_point_parameters</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_point_parameters</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPointParameterfSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterfSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterfvSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFVSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterfvSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_direct_state_access</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_direct_state_access</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMatrixLoadfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXLOADFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixLoadfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixLoaddEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXLOADDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixLoaddEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixMultfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXMULTFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixMultfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixMultdEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXMULTDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixMultdEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixLoadIdentityEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXLOADIDENTITYEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixLoadIdentityEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixRotatefEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXROTATEFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixRotatefEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixRotatedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXROTATEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixRotatedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixScalefEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXSCALEFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixScalefEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixScaledEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXSCALEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixScaledEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixTranslatefEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXTRANSLATEFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixTranslatefEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixTranslatedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXTRANSLATEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixTranslatedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixFrustumEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXFRUSTUMEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixFrustumEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixOrthoEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXORTHOEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixOrthoEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixPopEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXPOPEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixPopEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixPushEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXPUSHEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixPushEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClientAttribDefaultEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLIENTATTRIBDEFAULTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClientAttribDefaultEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPushClientAttribDefaultEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPushClientAttribDefaultEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureParameterfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREPARAMETERFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureParameterfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureParameteriEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREPARAMETERIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureParameteriEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTextureImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXTUREIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTextureImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTextureImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXTUREIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTextureImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTextureSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTextureSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTextureSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTextureSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureImageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTUREIMAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureImageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTUREPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTUREPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureLevelParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureLevelParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureLevelParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureLevelParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTextureSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTextureSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindMultiTextureEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDMULTITEXTUREEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindMultiTextureEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoordPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORDPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoordPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexEnvfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXENVFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexEnvfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexEnvfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXENVFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexEnvfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexEnviEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXENVIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexEnviEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexEnvivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXENVIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexEnvivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexGendEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXGENDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexGendEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexGendvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXGENDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexGendvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexGenfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXGENFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexGenfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexGenfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXGENFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexGenfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexGeniEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXGENIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexGeniEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexGenivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXGENIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexGenivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexEnvfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXENVFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexEnvfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexEnvivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXENVIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexEnvivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexGendvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXGENDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexGendvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexGenfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXGENFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexGenfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexGenivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXGENIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexGenivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexParameteriEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXPARAMETERIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexParameteriEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexParameterfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXPARAMETERFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexParameterfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXSUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXSUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyMultiTexImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYMULTITEXIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyMultiTexImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyMultiTexImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYMULTITEXIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyMultiTexImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyMultiTexSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyMultiTexSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyMultiTexSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyMultiTexSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexImageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXIMAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexImageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexLevelParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexLevelParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexLevelParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexLevelParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXSUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyMultiTexSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyMultiTexSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableClientStateIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLECLIENTSTATEINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableClientStateIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableClientStateIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableClientStateIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFloatIndexedvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFLOATINDEXEDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFloatIndexedvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDoubleIndexedvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDOUBLEINDEXEDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDoubleIndexedvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPointerIndexedvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPOINTERINDEXEDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPointerIndexedvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsEnabledIndexedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLISENABLEDINDEXEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsEnabledIndexedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetIntegerIndexedvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGERINDEXEDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetIntegerIndexedvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetBooleanIndexedvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETBOOLEANINDEXEDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetBooleanIndexedvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTextureImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTextureImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTextureImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTextureImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTextureImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTextureImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTextureSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTextureSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTextureSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTextureSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTextureSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTextureSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCompressedTextureImageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCompressedTextureImageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedMultiTexImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedMultiTexImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedMultiTexImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedMultiTexImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedMultiTexImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedMultiTexImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedMultiTexSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedMultiTexSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedMultiTexSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedMultiTexSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedMultiTexSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedMultiTexSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCompressedMultiTexImageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCompressedMultiTexImageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixLoadTransposefEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXLOADTRANSPOSEFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixLoadTransposefEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixLoadTransposedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXLOADTRANSPOSEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixLoadTransposedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixMultTransposefEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXMULTTRANSPOSEFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixMultTransposefEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixMultTransposedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXMULTTRANSPOSEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixMultTransposedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedBufferDataEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDBUFFERDATAEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedBufferDataEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedBufferSubDataEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDBUFFERSUBDATAEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedBufferSubDataEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapNamedBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPNAMEDBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapNamedBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUnmapNamedBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNMAPNAMEDBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUnmapNamedBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedBufferParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedBufferParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedBufferPointervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDBUFFERPOINTERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedBufferPointervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedBufferSubDataEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDBUFFERSUBDATAEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedBufferSubDataEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x2fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x2fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureParameterIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREPARAMETERIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureParameterIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureParameterIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREPARAMETERIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureParameterIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureParameterIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTUREPARAMETERIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureParameterIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureParameterIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTUREPARAMETERIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureParameterIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexParameterIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXPARAMETERIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexParameterIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexParameterIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXPARAMETERIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexParameterIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexParameterIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXPARAMETERIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexParameterIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMultiTexParameterIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMULTITEXPARAMETERIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMultiTexParameterIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameters4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameters4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameterI4iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameterI4iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameterI4ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameterI4ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParametersI4ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParametersI4ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameterI4uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameterI4uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameterI4uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameterI4uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParametersI4uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParametersI4uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedProgramLocalParameterIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedProgramLocalParameterIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedProgramLocalParameterIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedProgramLocalParameterIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableClientStateiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLECLIENTSTATEIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableClientStateiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableClientStateiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLECLIENTSTATEIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableClientStateiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFloati_vEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFLOATI_VEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFloati_vEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDoublei_vEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDOUBLEI_VEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDoublei_vEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPointeri_vEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPOINTERI_VEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPointeri_vEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramStringEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMSTRINGEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramStringEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameter4dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameter4dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameter4dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameter4dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameter4fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameter4fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedProgramLocalParameter4fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedProgramLocalParameter4fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedProgramLocalParameterdvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedProgramLocalParameterdvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedProgramLocalParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedProgramLocalParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedProgramivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDPROGRAMIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedProgramivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedProgramStringEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDPROGRAMSTRINGEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedProgramStringEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedRenderbufferStorageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedRenderbufferStorageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedRenderbufferParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedRenderbufferParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedRenderbufferStorageMultisampleEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedRenderbufferStorageMultisampleEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedRenderbufferStorageMultisampleCoverageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedRenderbufferStorageMultisampleCoverageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCheckNamedFramebufferStatusEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCheckNamedFramebufferStatusEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferTexture1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferTexture1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferTexture2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferTexture2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferTexture3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferTexture3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferRenderbufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferRenderbufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedFramebufferAttachmentParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedFramebufferAttachmentParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenerateTextureMipmapEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENERATETEXTUREMIPMAPEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenerateTextureMipmapEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenerateMultiTexMipmapEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENERATEMULTITEXMIPMAPEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenerateMultiTexMipmapEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferDrawBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferDrawBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferDrawBuffersEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferDrawBuffersEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferReadBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERREADBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferReadBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFramebufferParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFramebufferParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedCopyBufferSubDataEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedCopyBufferSubDataEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferTextureEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferTextureEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferTextureLayerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferTextureLayerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferTextureFaceEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferTextureFaceEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureRenderbufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURERENDERBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureRenderbufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexRenderbufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXRENDERBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexRenderbufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayColorOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYCOLOROFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayColorOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayEdgeFlagOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayEdgeFlagOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayIndexOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYINDEXOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayIndexOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayNormalOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYNORMALOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayNormalOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayTexCoordOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayTexCoordOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayMultiTexCoordOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayMultiTexCoordOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayFogCoordOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayFogCoordOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArraySecondaryColorOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArraySecondaryColorOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribIOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribIOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableVertexArrayEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEVERTEXARRAYEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableVertexArrayEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableVertexArrayEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEVERTEXARRAYEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableVertexArrayEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableVertexArrayAttribEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEVERTEXARRAYATTRIBEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableVertexArrayAttribEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableVertexArrayAttribEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableVertexArrayAttribEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexArrayIntegervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXARRAYINTEGERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexArrayIntegervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexArrayPointervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXARRAYPOINTERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexArrayPointervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexArrayIntegeri_vEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexArrayIntegeri_vEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexArrayPointeri_vEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexArrayPointeri_vEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapNamedBufferRangeEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPNAMEDBUFFERRANGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapNamedBufferRangeEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFlushMappedNamedBufferRangeEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushMappedNamedBufferRangeEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedBufferStorageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDBUFFERSTORAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedBufferStorageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearNamedBufferDataEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARNAMEDBUFFERDATAEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearNamedBufferDataEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearNamedBufferSubDataEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearNamedBufferSubDataEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNamedFramebufferParameteriEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedFramebufferParameteriEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedFramebufferParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedFramebufferParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x4dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x4dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x2dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x2dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x4dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x4dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x2dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x2dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureBufferRangeEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREBUFFERRANGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureBufferRangeEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureStorage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESTORAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureStorage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureStorage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESTORAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureStorage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureStorage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESTORAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureStorage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureStorage2DMultisampleEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureStorage2DMultisampleEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTextureStorage3DMultisampleEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureStorage3DMultisampleEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayBindVertexBufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayBindVertexBufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribFormatEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribFormatEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribIFormatEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribIFormatEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribLFormatEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribLFormatEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribBindingEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribBindingEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexBindingDivisorEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexBindingDivisorEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribLOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribLOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexturePageCommitmentEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTUREPAGECOMMITMENTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexturePageCommitmentEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayVertexAttribDivisorEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayVertexAttribDivisorEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_sample_positions</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_sample_positions</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSetMultisamplefvAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLSETMULTISAMPLEFVAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSetMultisamplefvAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_vertex_program</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_vertex_program</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glAreProgramsResidentNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLAREPROGRAMSRESIDENTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAreProgramsResidentNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindProgramNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDPROGRAMNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindProgramNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteProgramsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPROGRAMSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteProgramsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glExecuteProgramNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLEXECUTEPROGRAMNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glExecuteProgramNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenProgramsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPROGRAMSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenProgramsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramParameterdvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPARAMETERDVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramParameterdvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramStringNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMSTRINGNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramStringNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTrackMatrixivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTRACKMATRIXIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTrackMatrixivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribdvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBDVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribdvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribPointervNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBPOINTERVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribPointervNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsProgramNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPROGRAMNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsProgramNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLoadProgramNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOADPROGRAMNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLoadProgramNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameter4dNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETER4DNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameter4dNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameter4dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETER4DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameter4dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameter4fNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETER4FNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameter4fNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameter4fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETER4FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameter4fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameters4dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETERS4DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameters4dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameters4fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETERS4FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameters4fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRequestResidentProgramsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLREQUESTRESIDENTPROGRAMSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRequestResidentProgramsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTrackMatrixNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRACKMATRIXNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTrackMatrixNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribPointerNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBPOINTERNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribPointerNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1dNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1dNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1fNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1fNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1sNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1sNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2dNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2dNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2fNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2fNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2sNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2sNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3dNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3dNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3fNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3fNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3sNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3sNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4dNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4dNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4fNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4fNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4sNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4sNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4ubNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UBNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4ubNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4ubvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4UBVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4ubvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs1dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS1DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs1dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs1fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS1FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs1fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs1svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS1SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs1svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs2dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS2DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs2dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs2fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS2FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs2fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs2svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS2SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs2svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs3dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS3DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs3dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs3fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS3FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs3fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs3svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS3SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs3svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs4dvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS4DVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs4dvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs4fvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS4FVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs4fvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs4svNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS4SVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs4svNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs4ubvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS4UBVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs4ubvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NVX_conditional_render</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NVX_conditional_render</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBeginConditionalRenderNVX</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINCONDITIONALRENDERNVXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginConditionalRenderNVX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndConditionalRenderNVX</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDCONDITIONALRENDERNVXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndConditionalRenderNVX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_vertex_shader</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_vertex_shader</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBeginVertexShaderEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINVERTEXSHADEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginVertexShaderEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndVertexShaderEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDVERTEXSHADEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndVertexShaderEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindVertexShaderEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXSHADEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexShaderEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenVertexShadersEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENVERTEXSHADERSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenVertexShadersEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteVertexShaderEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEVERTEXSHADEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteVertexShaderEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderOp1EXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADEROP1EXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderOp1EXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderOp2EXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADEROP2EXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderOp2EXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderOp3EXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADEROP3EXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderOp3EXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSwizzleEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSWIZZLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSwizzleEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWriteMaskEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLWRITEMASKEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWriteMaskEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInsertComponentEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLINSERTCOMPONENTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInsertComponentEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glExtractComponentEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLEXTRACTCOMPONENTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glExtractComponentEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenSymbolsEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENSYMBOLSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenSymbolsEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSetInvariantEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSETINVARIANTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSetInvariantEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSetLocalConstantEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSETLOCALCONSTANTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSetLocalConstantEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantbvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTBVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantbvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantsvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTSVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantsvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantdvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantdvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantubvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTUBVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantubvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantusvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTUSVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantusvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEnableVariantClientStateEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENABLEVARIANTCLIENTSTATEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEnableVariantClientStateEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDisableVariantClientStateEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDisableVariantClientStateEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindLightParameterEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDLIGHTPARAMETEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindLightParameterEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindMaterialParameterEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDMATERIALPARAMETEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindMaterialParameterEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindTexGenParameterEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTEXGENPARAMETEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTexGenParameterEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindTextureUnitParameterEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTEXTUREUNITPARAMETEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTextureUnitParameterEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindParameterEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDPARAMETEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindParameterEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsVariantEnabledEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLISVARIANTENABLEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsVariantEnabledEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVariantBooleanvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVARIANTBOOLEANVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVariantBooleanvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVariantIntegervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVARIANTINTEGERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVariantIntegervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVariantFloatvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVARIANTFLOATVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVariantFloatvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVariantPointervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVARIANTPOINTERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVariantPointervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInvariantBooleanvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINVARIANTBOOLEANVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInvariantBooleanvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInvariantIntegervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINVARIANTINTEGERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInvariantIntegervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInvariantFloatvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINVARIANTFLOATVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInvariantFloatvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetLocalConstantBooleanvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetLocalConstantBooleanvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetLocalConstantIntegervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETLOCALCONSTANTINTEGERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetLocalConstantIntegervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetLocalConstantFloatvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETLOCALCONSTANTFLOATVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetLocalConstantFloatvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_blend_func_separate</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_blend_func_separate</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendFuncSeparateEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCSEPARATEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFuncSeparateEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_fence</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_fence</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenFencesAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENFENCESAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenFencesAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteFencesAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEFENCESAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteFencesAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSetFenceAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLSETFENCEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSetFenceAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsFenceAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLISFENCEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsFenceAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTestFenceAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLTESTFENCEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTestFenceAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFinishFenceAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLFINISHFENCEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFinishFenceAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTestObjectAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLTESTOBJECTAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTestObjectAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFinishObjectAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLFINISHOBJECTAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFinishObjectAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_OES_byte_coordinates</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_OES_byte_coordinates</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord1bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD1BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord1bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord1bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD1BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord1bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord3bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD3BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord3bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord3bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD3BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord3bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex2bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX2BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex2bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex2bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX2BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex2bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex3bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX3BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex3bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex3bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX3BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex3bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex4bOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX4BOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex4bOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex4bvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX4BVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex4bvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_transpose_matrix</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_transpose_matrix</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glLoadTransposeMatrixfARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOADTRANSPOSEMATRIXFARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLoadTransposeMatrixfARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLoadTransposeMatrixdARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOADTRANSPOSEMATRIXDARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLoadTransposeMatrixdARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultTransposeMatrixfARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTTRANSPOSEMATRIXFARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultTransposeMatrixfARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultTransposeMatrixdARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTTRANSPOSEMATRIXDARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultTransposeMatrixdARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_provoking_vertex</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_provoking_vertex</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProvokingVertex</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROVOKINGVERTEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProvokingVertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_fog_coord</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_fog_coord</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFogCoordfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoordfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoordfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoordfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoorddEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoorddEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoorddvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoorddvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoordPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoordPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_vertex_array</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_vertex_array</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glArrayElementEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLARRAYELEMENTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glArrayElementEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawArraysEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEdgeFlagPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLEDGEFLAGPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEdgeFlagPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPointervEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPOINTERVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPointervEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIndexPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLINDEXPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIndexPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_blend_equation_separate</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_blend_equation_separate</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendEquationSeparateEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONSEPARATEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationSeparateEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_multi_draw_indirect</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_multi_draw_indirect</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMultiDrawArraysIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWARRAYSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawArraysIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_copy_image</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_copy_image</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCopyImageSubDataNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYIMAGESUBDATANVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyImageSubDataNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_transform_feedback2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_transform_feedback2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteTransformFeedbacks</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETETRANSFORMFEEDBACKSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteTransformFeedbacks"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenTransformFeedbacks</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENTRANSFORMFEEDBACKSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenTransformFeedbacks"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLISTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPauseTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLPAUSETRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPauseTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glResumeTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESUMETRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResumeTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedback</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_transform_feedback3</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_transform_feedback3</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedbackStream</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedbackStream"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginQueryIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINQUERYINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginQueryIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndQueryIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDQUERYINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndQueryIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryIndexediv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYINDEXEDIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryIndexediv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_debug_marker</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_debug_marker</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glInsertEventMarkerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLINSERTEVENTMARKEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInsertEventMarkerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPushGroupMarkerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPUSHGROUPMARKEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPushGroupMarkerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPopGroupMarkerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOPGROUPMARKEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPopGroupMarkerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_pixel_transform</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_pixel_transform</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPixelTransformParameteriEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTRANSFORMPARAMETERIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTransformParameteriEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelTransformParameterfEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTRANSFORMPARAMETERFEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTransformParameterfEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelTransformParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTransformParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelTransformParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTransformParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPixelTransformParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPixelTransformParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPixelTransformParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPixelTransformParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_fragment_shader</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_fragment_shader</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenFragmentShadersATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENFRAGMENTSHADERSATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenFragmentShadersATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindFragmentShaderATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAGMENTSHADERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFragmentShaderATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteFragmentShaderATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEFRAGMENTSHADERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteFragmentShaderATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginFragmentShaderATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINFRAGMENTSHADERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginFragmentShaderATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndFragmentShaderATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDFRAGMENTSHADERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndFragmentShaderATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPassTexCoordATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLPASSTEXCOORDATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPassTexCoordATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSampleMapATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEMAPATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleMapATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorFragmentOp1ATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORFRAGMENTOP1ATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorFragmentOp1ATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorFragmentOp2ATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORFRAGMENTOP2ATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorFragmentOp2ATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorFragmentOp3ATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORFRAGMENTOP3ATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorFragmentOp3ATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glAlphaFragmentOp1ATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLALPHAFRAGMENTOP1ATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAlphaFragmentOp1ATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glAlphaFragmentOp2ATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLALPHAFRAGMENTOP2ATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAlphaFragmentOp2ATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glAlphaFragmentOp3ATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLALPHAFRAGMENTOP3ATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAlphaFragmentOp3ATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSetFragmentShaderConstantATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLSETFRAGMENTSHADERCONSTANTATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSetFragmentShaderConstantATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_vertex_array_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_vertex_array_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindVertexArray</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXARRAYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexArray"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteVertexArrays</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEVERTEXARRAYSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteVertexArrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenVertexArrays</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENVERTEXARRAYSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenVertexArrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsVertexArray</name> <operator>=</operator> <operator>(</operator><name>PFNGLISVERTEXARRAYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsVertexArray"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SUN_triangle_list</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SUN_triangle_list</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUISUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeusSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUSSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeusSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeubSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUBSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeubSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuivSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUIVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuivSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeusvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUSVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeusvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeubvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUBVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeubvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodePointerSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEPOINTERSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodePointerSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_transform_feedback_instanced</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_transform_feedback_instanced</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedbackInstanced</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedbackInstanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawTransformFeedbackStreamInstanced</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTransformFeedbackStreamInstanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_async</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_async</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glAsyncMarkerSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLASYNCMARKERSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAsyncMarkerSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFinishAsyncSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFINISHASYNCSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFinishAsyncSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPollAsyncSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOLLASYNCSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPollAsyncSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenAsyncMarkersSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENASYNCMARKERSSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenAsyncMarkersSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteAsyncMarkersSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEASYNCMARKERSSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteAsyncMarkersSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsAsyncMarkerSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLISASYNCMARKERSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsAsyncMarkerSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_INTEL_performance_query</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_INTEL_performance_query</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBeginPerfQueryINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINPERFQUERYINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginPerfQueryINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreatePerfQueryINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATEPERFQUERYINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreatePerfQueryINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeletePerfQueryINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPERFQUERYINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeletePerfQueryINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndPerfQueryINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDPERFQUERYINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndPerfQueryINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFirstPerfQueryIdINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFIRSTPERFQUERYIDINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFirstPerfQueryIdINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNextPerfQueryIdINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNEXTPERFQUERYIDINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNextPerfQueryIdINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfCounterInfoINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFCOUNTERINFOINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfCounterInfoINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfQueryDataINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFQUERYDATAINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfQueryDataINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfQueryIdByNameINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFQUERYIDBYNAMEINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfQueryIdByNameINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPerfQueryInfoINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPERFQUERYINFOINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPerfQueryInfoINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_gpu_shader5</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_gpu_shader5</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glUniform1i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformi64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformi64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4i64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4I64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4i64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4i64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4I64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4i64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4ui64NV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UI64NVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4ui64NV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4ui64vNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UI64VNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4ui64vNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_ES2_compatibility</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_ES2_compatibility</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glReleaseShaderCompiler</name> <operator>=</operator> <operator>(</operator><name>PFNGLRELEASESHADERCOMPILERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReleaseShaderCompiler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glShaderBinary</name> <operator>=</operator> <operator>(</operator><name>PFNGLSHADERBINARYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glShaderBinary"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetShaderPrecisionFormat</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSHADERPRECISIONFORMATPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetShaderPrecisionFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangef</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangef"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearDepthf</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARDEPTHFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearDepthf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_indirect_parameters</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_indirect_parameters</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMultiDrawArraysIndirectCountARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawArraysIndirectCountARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsIndirectCountARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsIndirectCountARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_half_float</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_half_float</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertex2hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX2HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex2hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex2hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX2HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex2hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex3hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX3HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex3hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex4hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX4HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex4hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex4hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX4HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex4hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormal3hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMAL3HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormal3hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormal3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMAL3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormal3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor3hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR3HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor3hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord1hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD1HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord1hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord1hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD1HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord1hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord3hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD3HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord3hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoordhNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoordhNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoordhvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDHVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoordhvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexWeighthNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXWEIGHTHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexWeighthNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexWeighthvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXWEIGHTHVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexWeighthvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib1hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB1HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib1hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib2hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB2HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib2hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4hNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4HNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4hNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttrib4hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIB4HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttrib4hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs1hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS1HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs1hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs2hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS2HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs2hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs3hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS3HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs3hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribs4hvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBS4HVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribs4hvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_coordinate_frame</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_coordinate_frame</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTangent3bEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3BEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3bEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3bvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3BVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3bvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3sEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3SEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3sEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangent3svEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENT3SVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangent3svEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3bEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3BEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3bEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3bvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3BVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3bvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3sEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3SEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3sEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormal3svEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMAL3SVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormal3svEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTangentPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTANGENTPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTangentPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBinormalPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINORMALPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBinormalPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_compiled_vertex_array</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_compiled_vertex_array</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glLockArraysEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOCKARRAYSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLockArraysEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUnlockArraysEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNLOCKARRAYSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUnlockArraysEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_depth_buffer_float</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_depth_buffer_float</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDepthRangedNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangedNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearDepthdNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARDEPTHDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearDepthdNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthBoundsdNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHBOUNDSDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthBoundsdNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_occlusion_query</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_occlusion_query</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenOcclusionQueriesNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENOCCLUSIONQUERIESNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenOcclusionQueriesNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteOcclusionQueriesNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEOCCLUSIONQUERIESNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteOcclusionQueriesNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsOcclusionQueryNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISOCCLUSIONQUERYNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsOcclusionQueryNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginOcclusionQueryNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINOCCLUSIONQUERYNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginOcclusionQueryNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndOcclusionQueryNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDOCCLUSIONQUERYNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndOcclusionQueryNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetOcclusionQueryivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOCCLUSIONQUERYIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetOcclusionQueryivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetOcclusionQueryuivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOCCLUSIONQUERYUIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetOcclusionQueryuivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_flush_buffer_range</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_flush_buffer_range</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBufferParameteriAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLBUFFERPARAMETERIAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBufferParameteriAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFlushMappedBufferRangeAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushMappedBufferRangeAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_imaging</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_imaging</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendColor</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDCOLORPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendColor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendEquation</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorTable</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORTABLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorTable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorTableParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORTABLEPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorTableParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorTableParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORTABLEPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorTableParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyColorTable</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCOLORTABLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyColorTable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTable</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorSubTable</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORSUBTABLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorSubTable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyColorSubTable</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCOLORSUBTABLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyColorSubTable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionFilter1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONFILTER1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionFilter1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionFilter2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONFILTER2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionFilter2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameterf</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameterf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyConvolutionFilter1D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCONVOLUTIONFILTER1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyConvolutionFilter1D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyConvolutionFilter2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCONVOLUTIONFILTER2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyConvolutionFilter2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetConvolutionFilter</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCONVOLUTIONFILTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetConvolutionFilter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetConvolutionParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCONVOLUTIONPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetConvolutionParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetConvolutionParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCONVOLUTIONPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetConvolutionParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSeparableFilter</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSEPARABLEFILTERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSeparableFilter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSeparableFilter2D</name> <operator>=</operator> <operator>(</operator><name>PFNGLSEPARABLEFILTER2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSeparableFilter2D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetHistogram</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHISTOGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHistogram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetHistogramParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHISTOGRAMPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHistogramParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetHistogramParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHISTOGRAMPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHistogramParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMinmax</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMINMAXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMinmax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMinmaxParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMINMAXPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMinmaxParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMinmaxParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMINMAXPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMinmaxParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glHistogram</name> <operator>=</operator> <operator>(</operator><name>PFNGLHISTOGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glHistogram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMinmax</name> <operator>=</operator> <operator>(</operator><name>PFNGLMINMAXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMinmax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glResetHistogram</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESETHISTOGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResetHistogram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glResetMinmax</name> <operator>=</operator> <operator>(</operator><name>PFNGLRESETMINMAXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glResetMinmax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_draw_buffers_blend</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_draw_buffers_blend</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendEquationiARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONIARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationiARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendEquationSeparateiARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDEQUATIONSEPARATEIARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendEquationSeparateiARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendFunciARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCIARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFunciARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendFuncSeparateiARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCSEPARATEIARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFuncSeparateiARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_clear_buffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_clear_buffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glClearBufferData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSampleCoverageARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLECOVERAGEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleCoverageARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_debug_label</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_debug_label</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glLabelObjectEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLLABELOBJECTEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLabelObjectEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectLabelEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTLABELEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectLabelEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_sample_shading</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_sample_shading</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMinSampleShadingARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMINSAMPLESHADINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMinSampleShadingARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_INTEL_map_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_INTEL_map_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSyncTextureINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLSYNCTEXTUREINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSyncTextureINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUnmapTexture2DINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNMAPTEXTURE2DINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUnmapTexture2DINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapTexture2DINTEL</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPTEXTURE2DINTELPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapTexture2DINTEL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_compute_shader</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_compute_shader</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDispatchCompute</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISPATCHCOMPUTEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDispatchCompute"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDispatchComputeIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISPATCHCOMPUTEINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDispatchComputeIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_IBM_vertex_array_lists</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_IBM_vertex_array_lists</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glColorPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColorPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLORPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColorPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEdgeFlagPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLEDGEFLAGPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEdgeFlagPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogCoordPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGCOORDPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogCoordPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIndexPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLINDEXPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIndexPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoordPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORDPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoordPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexPointerListIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXPOINTERLISTIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexPointerListIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_color_buffer_float</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_color_buffer_float</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glClampColorARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLAMPCOLORARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClampColorARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_bindless_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_bindless_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetTextureHandleARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTUREHANDLEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureHandleARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTextureSamplerHandleARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXTURESAMPLERHANDLEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTextureSamplerHandleARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeTextureHandleResidentARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKETEXTUREHANDLERESIDENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeTextureHandleResidentARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeTextureHandleNonResidentARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeTextureHandleNonResidentARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetImageHandleARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETIMAGEHANDLEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetImageHandleARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeImageHandleResidentARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKEIMAGEHANDLERESIDENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeImageHandleResidentARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMakeImageHandleNonResidentARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMakeImageHandleNonResidentARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformHandleui64ARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMHANDLEUI64ARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformHandleui64ARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformHandleui64vARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMHANDLEUI64VARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformHandleui64vARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformHandleui64ARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformHandleui64ARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformHandleui64vARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformHandleui64vARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsTextureHandleResidentARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLISTEXTUREHANDLERESIDENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsTextureHandleResidentARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsImageHandleResidentARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLISIMAGEHANDLERESIDENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsImageHandleResidentARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1ui64ARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1UI64ARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1ui64ARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1ui64vARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1UI64VARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1ui64vARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribLui64vARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBLUI64VARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribLui64vARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_window_pos</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_window_pos</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glWindowPos2dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos2svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS2SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos2svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWindowPos3svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLWINDOWPOS3SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWindowPos3svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_internalformat_query</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_internalformat_query</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetInternalformativ</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTERNALFORMATIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInternalformativ"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_shader_image_load_store</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_shader_image_load_store</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindImageTextureEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDIMAGETEXTUREEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindImageTextureEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMemoryBarrierEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLMEMORYBARRIEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMemoryBarrierEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_copy_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_copy_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCopyTexImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexSubImage1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXSUBIMAGE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexSubImage1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexSubImage2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXSUBIMAGE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexSubImage2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyTexSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYTEXSUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyTexSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_register_combiners2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_register_combiners2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCombinerStageParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMBINERSTAGEPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCombinerStageParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCombinerStageParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCombinerStageParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_draw_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_draw_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawTextureNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWTEXTURENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawTextureNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_draw_instanced</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_draw_instanced</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawArraysInstancedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSINSTANCEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysInstancedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_viewport_array</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_viewport_array</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glViewportArrayv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIEWPORTARRAYVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glViewportArrayv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glViewportIndexedf</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIEWPORTINDEXEDFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glViewportIndexedf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glViewportIndexedfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIEWPORTINDEXEDFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glViewportIndexedfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScissorArrayv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCISSORARRAYVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScissorArrayv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScissorIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCISSORINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScissorIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScissorIndexedv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCISSORINDEXEDVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScissorIndexedv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangeArrayv</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEARRAYVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangeArrayv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangeIndexed</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEINDEXEDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangeIndexed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFloati_v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFLOATI_VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFloati_v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDoublei_v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDOUBLEI_VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDoublei_v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_separate_shader_objects</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_separate_shader_objects</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glUseProgramStages</name> <operator>=</operator> <operator>(</operator><name>PFNGLUSEPROGRAMSTAGESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUseProgramStages"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glActiveShaderProgram</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVESHADERPROGRAMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveShaderProgram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCreateShaderProgramv</name> <operator>=</operator> <operator>(</operator><name>PFNGLCREATESHADERPROGRAMVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCreateShaderProgramv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindProgramPipeline</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDPROGRAMPIPELINEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindProgramPipeline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteProgramPipelines</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPROGRAMPIPELINESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteProgramPipelines"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenProgramPipelines</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPROGRAMPIPELINESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenProgramPipelines"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsProgramPipeline</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPROGRAMPIPELINEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsProgramPipeline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramPipelineiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPIPELINEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramPipelineiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform1uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM1UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform1uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform2uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM2UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform2uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform3uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM3UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform3uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4i</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4iv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4IVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4iv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4f</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4d</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4DPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4ui</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniform4uiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORM4UIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniform4uiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x2fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x2fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x4fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x4fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x3fv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x3fv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix2x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix2x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x2dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x2dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix3x4dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix3x4dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramUniformMatrix4x3dv</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramUniformMatrix4x3dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glValidateProgramPipeline</name> <operator>=</operator> <operator>(</operator><name>PFNGLVALIDATEPROGRAMPIPELINEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glValidateProgramPipeline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramPipelineInfoLog</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMPIPELINEINFOLOGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramPipelineInfoLog"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_depth_bounds_test</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_depth_bounds_test</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDepthBoundsEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHBOUNDSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthBoundsEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_HP_image_transform</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_HP_image_transform</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glImageTransformParameteriHP</name> <operator>=</operator> <operator>(</operator><name>PFNGLIMAGETRANSFORMPARAMETERIHPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glImageTransformParameteriHP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glImageTransformParameterfHP</name> <operator>=</operator> <operator>(</operator><name>PFNGLIMAGETRANSFORMPARAMETERFHPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glImageTransformParameterfHP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glImageTransformParameterivHP</name> <operator>=</operator> <operator>(</operator><name>PFNGLIMAGETRANSFORMPARAMETERIVHPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glImageTransformParameterivHP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glImageTransformParameterfvHP</name> <operator>=</operator> <operator>(</operator><name>PFNGLIMAGETRANSFORMPARAMETERFVHPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glImageTransformParameterfvHP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetImageTransformParameterivHP</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetImageTransformParameterivHP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetImageTransformParameterfvHP</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetImageTransformParameterfvHP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_video_capture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_video_capture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBeginVideoCaptureNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINVIDEOCAPTURENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginVideoCaptureNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindVideoCaptureStreamBufferNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVideoCaptureStreamBufferNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindVideoCaptureStreamTextureNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVideoCaptureStreamTextureNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndVideoCaptureNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDVIDEOCAPTURENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndVideoCaptureNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideoCaptureivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOCAPTUREIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideoCaptureivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideoCaptureStreamivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOCAPTURESTREAMIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideoCaptureStreamivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideoCaptureStreamfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOCAPTURESTREAMFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideoCaptureStreamfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVideoCaptureStreamdvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVIDEOCAPTURESTREAMDVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVideoCaptureStreamdvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVideoCaptureNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIDEOCAPTURENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVideoCaptureNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVideoCaptureStreamParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVideoCaptureStreamParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVideoCaptureStreamParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVideoCaptureStreamParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVideoCaptureStreamParameterdvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVideoCaptureStreamParameterdvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_sampler_objects</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_sampler_objects</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenSamplers</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENSAMPLERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenSamplers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteSamplers</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETESAMPLERSPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteSamplers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsSampler</name> <operator>=</operator> <operator>(</operator><name>PFNGLISSAMPLERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsSampler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindSampler</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDSAMPLERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindSampler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterf</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERFPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterIiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterIiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplerParameterIuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLERPARAMETERIUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplerParameterIuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameteriv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameteriv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameterIiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERIIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameterIiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameterfv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERFVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameterfv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSamplerParameterIuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSAMPLERPARAMETERIUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSamplerParameterIuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_matrix_palette</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_matrix_palette</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCurrentPaletteMatrixARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCURRENTPALETTEMATRIXARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCurrentPaletteMatrixARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixIndexubvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXINDEXUBVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixIndexubvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixIndexusvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXINDEXUSVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixIndexusvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixIndexuivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXINDEXUIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixIndexuivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMatrixIndexPointerARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATRIXINDEXPOINTERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMatrixIndexPointerARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_texture_color_mask</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_texture_color_mask</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTextureColorMaskSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURECOLORMASKSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureColorMaskSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_texture_compression</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_texture_compression</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCompressedTexImage3DARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXIMAGE3DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexImage3DARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexImage2DARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXIMAGE2DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexImage2DARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexImage1DARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXIMAGE1DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexImage1DARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexSubImage3DARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexSubImage3DARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexSubImage2DARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexSubImage2DARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompressedTexSubImage1DARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompressedTexSubImage1DARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCompressedTexImageARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMPRESSEDTEXIMAGEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCompressedTexImageARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_shader_subroutine</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_shader_subroutine</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetSubroutineUniformLocation</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSubroutineUniformLocation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSubroutineIndex</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSUBROUTINEINDEXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSubroutineIndex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveSubroutineUniformiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveSubroutineUniformiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveSubroutineUniformName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveSubroutineUniformName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetActiveSubroutineName</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETACTIVESUBROUTINENAMEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetActiveSubroutineName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniformSubroutinesuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORMSUBROUTINESUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniformSubroutinesuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetUniformSubroutineuiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMSUBROUTINEUIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformSubroutineuiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramStageiv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMSTAGEIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramStageiv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_texture_storage_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_texture_storage_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexStorage2DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE2DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage2DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexStorage3DMultisample</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSTORAGE3DMULTISAMPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexStorage3DMultisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_vertex_attrib_64bit</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_vertex_attrib_64bit</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL1dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL1DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL1dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL2dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL2DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL2dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribL4dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBL4DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribL4dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribLPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBLPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribLPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribLdvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBLDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribLdvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_OES_query_matrix</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_OES_query_matrix</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glQueryMatrixxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLQUERYMATRIXXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glQueryMatrixxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_texture_range</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_texture_range</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTextureRangeAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXTURERANGEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTextureRangeAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameterPointervAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameterPointervAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_copy_buffer</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_copy_buffer</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCopyBufferSubData</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYBUFFERSUBDATAPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyBufferSubData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_object_purgeable</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_object_purgeable</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glObjectPurgeableAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTPURGEABLEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectPurgeableAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glObjectUnpurgeableAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLOBJECTUNPURGEABLEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glObjectUnpurgeableAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectParameterivAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTPARAMETERIVAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectParameterivAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_occlusion_query</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_occlusion_query</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenQueriesARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENQUERIESARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenQueriesARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteQueriesARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEQUERIESARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteQueriesARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsQueryARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLISQUERYARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsQueryARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBeginQueryARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINQUERYARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginQueryARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndQueryARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDQUERYARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndQueryARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjectivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjectivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetQueryObjectuivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETQUERYOBJECTUIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetQueryObjectuivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGI_color_table</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGI_color_table</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glColorTableSGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORTABLESGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorTableSGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorTableParameterfvSGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORTABLEPARAMETERFVSGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorTableParameterfvSGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColorTableParameterivSGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLORTABLEPARAMETERIVSGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColorTableParameterivSGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyColorTableSGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYCOLORTABLESGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyColorTableSGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableSGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLESGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableSGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableParameterfvSGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEPARAMETERFVSGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableParameterfvSGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetColorTableParameterivSGI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOLORTABLEPARAMETERIVSGIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetColorTableParameterivSGI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_gpu_shader4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_gpu_shader4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetUniformuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETUNIFORMUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetUniformuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindFragDataLocationEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAGDATALOCATIONEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFragDataLocationEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFragDataLocationEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAGDATALOCATIONEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFragDataLocationEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform1uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM1UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform1uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform2uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM2UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform2uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform3uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM3UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform3uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUniform4uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLUNIFORM4UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUniform4uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_geometry_program4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_geometry_program4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramVertexLimitNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMVERTEXLIMITNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramVertexLimitNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTUREEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureLayerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureLayerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureFaceEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureFaceEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_debug_output</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_debug_output</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDebugMessageEnableAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGEENABLEAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageEnableAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageInsertAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGEINSERTAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageInsertAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageCallbackAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECALLBACKAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageCallbackAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDebugMessageLogAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDEBUGMESSAGELOGAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDebugMessageLogAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_multitexture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_multitexture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glActiveTextureARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLACTIVETEXTUREARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glActiveTextureARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClientActiveTextureARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLIENTACTIVETEXTUREARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClientActiveTextureARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4dARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4DARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4dARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4dvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4DVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4dvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4fARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4FARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4fARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4fvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4FVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4fvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4iARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4IARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4iARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4ivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4IVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4ivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4sARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4SARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4sARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4svARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4SVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4svARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_polynomial_ffd</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_polynomial_ffd</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDeformationMap3dSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEFORMATIONMAP3DSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeformationMap3dSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeformationMap3fSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEFORMATIONMAP3FSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeformationMap3fSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeformSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEFORMSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeformSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLoadIdentityDeformationMapSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLoadIdentityDeformationMapSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_provoking_vertex</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_provoking_vertex</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProvokingVertexEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROVOKINGVERTEXEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProvokingVertexEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_point_parameters</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_point_parameters</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glPointParameterfARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterfARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterfvARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERFVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterfvARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_shader_image_load_store</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_shader_image_load_store</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindImageTexture</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDIMAGETEXTUREPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindImageTexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMemoryBarrier</name> <operator>=</operator> <operator>(</operator><name>PFNGLMEMORYBARRIERPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMemoryBarrier"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_framezoom</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_framezoom</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFrameZoomSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEZOOMSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFrameZoomSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_bindless_multi_draw_indirect</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_bindless_multi_draw_indirect</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMultiDrawArraysIndirectBindlessNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawArraysIndirectBindlessNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiDrawElementsIndirectBindlessNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiDrawElementsIndirectBindlessNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_transform_feedback</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_transform_feedback</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBeginTransformFeedbackEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBEGINTRANSFORMFEEDBACKEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBeginTransformFeedbackEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEndTransformFeedbackEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLENDTRANSFORMFEEDBACKEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEndTransformFeedbackEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferRangeEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERRANGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferRangeEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferOffsetEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFEROFFSETEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferOffsetEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindBufferBaseEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDBUFFERBASEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindBufferBaseEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTransformFeedbackVaryingsEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTransformFeedbackVaryingsEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTransformFeedbackVaryingEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTransformFeedbackVaryingEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_gpu_program4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_gpu_program4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameterI4iNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETERI4INVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameterI4iNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameterI4ivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameterI4ivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParametersI4ivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParametersI4ivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameterI4uiNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETERI4UINVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameterI4uiNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParameterI4uivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParameterI4uivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramLocalParametersI4uivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramLocalParametersI4uivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameterI4iNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETERI4INVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameterI4iNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameterI4ivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETERI4IVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameterI4ivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParametersI4ivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETERSI4IVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParametersI4ivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameterI4uiNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETERI4UINVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameterI4uiNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParameterI4uivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETERI4UIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParameterI4uivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramEnvParametersI4uivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramEnvParametersI4uivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramLocalParameterIivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramLocalParameterIivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramLocalParameterIuivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramLocalParameterIuivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramEnvParameterIivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMENVPARAMETERIIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramEnvParameterIivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramEnvParameterIuivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramEnvParameterIuivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_gpu_program5</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_gpu_program5</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramSubroutineParametersuivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramSubroutineParametersuivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetProgramSubroutineParameteruivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramSubroutineParameteruivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_geometry_shader4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_geometry_shader4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glProgramParameteriARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETERIARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameteriARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTUREARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureLayerARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURELAYERARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureLayerARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTextureFaceARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTUREFACEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTextureFaceARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_sprite</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_sprite</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSpriteParameterfSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLSPRITEPARAMETERFSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSpriteParameterfSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSpriteParameterfvSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLSPRITEPARAMETERFVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSpriteParameterfvSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSpriteParameteriSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLSPRITEPARAMETERISGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSpriteParameteriSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSpriteParameterivSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLSPRITEPARAMETERIVSGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSpriteParameterivSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_get_program_binary</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_get_program_binary</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetProgramBinary</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPROGRAMBINARYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetProgramBinary"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramBinary</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMBINARYPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramBinary"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glProgramParameteri</name> <operator>=</operator> <operator>(</operator><name>PFNGLPROGRAMPARAMETERIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glProgramParameteri"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_AMD_occlusion_query_event</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_AMD_occlusion_query_event</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glQueryObjectParameteruiAMD</name> <operator>=</operator> <operator>(</operator><name>PFNGLQUERYOBJECTPARAMETERUIAMDPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glQueryObjectParameteruiAMD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSampleMaskSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEMASKSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleMaskSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplePatternSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEPATTERNSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplePatternSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_framebuffer_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_framebuffer_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glIsRenderbufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLISRENDERBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsRenderbufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindRenderbufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDRENDERBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindRenderbufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteRenderbuffersEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETERENDERBUFFERSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteRenderbuffersEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenRenderbuffersEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENRENDERBUFFERSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenRenderbuffersEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRenderbufferStorageEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLRENDERBUFFERSTORAGEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRenderbufferStorageEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetRenderbufferParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetRenderbufferParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsFramebufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLISFRAMEBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsFramebufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBindFramebufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDFRAMEBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindFramebufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteFramebuffersEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEFRAMEBUFFERSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteFramebuffersEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenFramebuffersEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENFRAMEBUFFERSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenFramebuffersEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCheckFramebufferStatusEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCheckFramebufferStatusEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture1DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE1DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture1DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture2DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE2DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture2DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferTexture3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERTEXTURE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferTexture3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFramebufferRenderbufferEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFramebufferRenderbufferEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFramebufferAttachmentParameterivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFramebufferAttachmentParameterivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenerateMipmapEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENERATEMIPMAPEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenerateMipmapEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_vertex_array_range</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_vertex_array_range</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexArrayRangeAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYRANGEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayRangeAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFlushVertexArrayRangeAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFlushVertexArrayRangeAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexArrayParameteriAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXARRAYPARAMETERIAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexArrayParameteriAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_register_combiners</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_register_combiners</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCombinerParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMBINERPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCombinerParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCombinerParameterfNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMBINERPARAMETERFNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCombinerParameterfNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCombinerParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMBINERPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCombinerParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCombinerParameteriNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMBINERPARAMETERINVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCombinerParameteriNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCombinerInputNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMBINERINPUTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCombinerInputNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCombinerOutputNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMBINEROUTPUTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCombinerOutputNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFinalCombinerInputNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLFINALCOMBINERINPUTNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFinalCombinerInputNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCombinerInputParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCombinerInputParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCombinerInputParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCombinerInputParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCombinerOutputParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCombinerOutputParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetCombinerOutputParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetCombinerOutputParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFinalCombinerInputParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFinalCombinerInputParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFinalCombinerInputParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFinalCombinerInputParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_draw_buffers</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_draw_buffers</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawBuffersARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWBUFFERSARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawBuffersARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_clear_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_clear_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glClearTexImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARTEXIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearTexImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearTexSubImage</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARTEXSUBIMAGEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearTexSubImage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_debug_output</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_debug_output</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDebugMessageControlARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECONTROLARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageControlARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageInsertARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGEINSERTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageInsertARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDebugMessageCallbackARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEBUGMESSAGECALLBACKARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDebugMessageCallbackARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDebugMessageLogARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDEBUGMESSAGELOGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDebugMessageLogARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_cull_vertex</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_cull_vertex</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glCullParameterdvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCULLPARAMETERDVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCullParameterdvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCullParameterfvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLCULLPARAMETERFVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCullParameterfvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_IBM_multimode_draw_arrays</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_IBM_multimode_draw_arrays</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glMultiModeDrawArraysIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIMODEDRAWARRAYSIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiModeDrawArraysIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiModeDrawElementsIBM</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTIMODEDRAWELEMENTSIBMPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiModeDrawElementsIBM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_APPLE_vertex_array_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_APPLE_vertex_array_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBindVertexArrayAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLBINDVERTEXARRAYAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBindVertexArrayAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteVertexArraysAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEVERTEXARRAYSAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteVertexArraysAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGenVertexArraysAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENVERTEXARRAYSAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenVertexArraysAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsVertexArrayAPPLE</name> <operator>=</operator> <operator>(</operator><name>PFNGLISVERTEXARRAYAPPLEPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsVertexArrayAPPLE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_detail_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_detail_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDetailTexFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLDETAILTEXFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDetailTexFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetDetailTexFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETDETAILTEXFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetDetailTexFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_draw_instanced</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_draw_instanced</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawArraysInstancedARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSINSTANCEDARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysInstancedARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsInstancedARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINSTANCEDARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsInstancedARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_shading_language_include</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_shading_language_include</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glNamedStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLNAMEDSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNamedStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteNamedStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETENAMEDSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteNamedStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCompileShaderIncludeARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOMPILESHADERINCLUDEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCompileShaderIncludeARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsNamedStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLISNAMEDSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsNamedStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedStringARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDSTRINGARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedStringARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetNamedStringivARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETNAMEDSTRINGIVARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetNamedStringivARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_INGR_blend_func_separate</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_INGR_blend_func_separate</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glBlendFuncSeparateINGR</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDFUNCSEPARATEINGRPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendFuncSeparateINGR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_path_rendering</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_path_rendering</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGenPathsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGENPATHSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGenPathsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeletePathsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETEPATHSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeletePathsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsPathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsPathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathCommandsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHCOMMANDSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathCommandsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathCoordsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHCOORDSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathCoordsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathSubCommandsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHSUBCOMMANDSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathSubCommandsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathSubCoordsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHSUBCOORDSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathSubCoordsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathStringNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHSTRINGNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathStringNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathGlyphsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHGLYPHSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathGlyphsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathGlyphRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHGLYPHRANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathGlyphRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWeightPathsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLWEIGHTPATHSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWeightPathsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCopyPathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOPYPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCopyPathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glInterpolatePathsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLINTERPOLATEPATHSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glInterpolatePathsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTransformPathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRANSFORMPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTransformPathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathParameteriNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHPARAMETERINVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathParameteriNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathParameterfNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHPARAMETERFNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathParameterfNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathDashArrayNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHDASHARRAYNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathDashArrayNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathStencilFuncNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHSTENCILFUNCNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathStencilFuncNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathStencilDepthOffsetNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHSTENCILDEPTHOFFSETNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathStencilDepthOffsetNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilFillPathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILFILLPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilFillPathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilStrokePathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILSTROKEPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilStrokePathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilFillPathInstancedNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILFILLPATHINSTANCEDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilFillPathInstancedNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glStencilStrokePathInstancedNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glStencilStrokePathInstancedNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathCoverDepthFuncNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHCOVERDEPTHFUNCNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathCoverDepthFuncNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathColorGenNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHCOLORGENNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathColorGenNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathTexGenNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHTEXGENNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathTexGenNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPathFogGenNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPATHFOGGENNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPathFogGenNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCoverFillPathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOVERFILLPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCoverFillPathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCoverStrokePathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOVERSTROKEPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCoverStrokePathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCoverFillPathInstancedNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOVERFILLPATHINSTANCEDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCoverFillPathInstancedNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glCoverStrokePathInstancedNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOVERSTROKEPATHINSTANCEDNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glCoverStrokePathInstancedNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathParameterivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHPARAMETERIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathParameterivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathParameterfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHPARAMETERFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathParameterfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathCommandsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHCOMMANDSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathCommandsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathCoordsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHCOORDSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathCoordsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathDashArrayNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHDASHARRAYNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathDashArrayNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathMetricsNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHMETRICSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathMetricsNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathMetricRangeNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHMETRICRANGENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathMetricRangeNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathSpacingNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHSPACINGNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathSpacingNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathColorGenivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHCOLORGENIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathColorGenivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathColorGenfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHCOLORGENFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathColorGenfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathTexGenivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHTEXGENIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathTexGenivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathTexGenfvNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHTEXGENFVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathTexGenfvNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsPointInFillPathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPOINTINFILLPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsPointInFillPathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsPointInStrokePathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLISPOINTINSTROKEPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsPointInStrokePathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPathLengthNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPATHLENGTHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPathLengthNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointAlongPathNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTALONGPATHNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointAlongPathNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_vertex_streams</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_vertex_streams</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexStream1sATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1SATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1sATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream1svATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1SVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1svATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream1iATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1IATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1iATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream1ivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1IVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1ivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream1fATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1FATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1fATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream1fvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1FVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1fvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream1dATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1DATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1dATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream1dvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM1DVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream1dvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2sATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2SATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2sATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2svATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2SVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2svATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2iATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2IATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2iATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2ivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2IVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2ivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2fATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2FATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2fATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2fvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2FVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2fvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2dATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2DATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2dATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream2dvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM2DVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream2dvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3sATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3SATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3sATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3svATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3SVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3svATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3iATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3IATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3iATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3ivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3IVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3ivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3fATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3FATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3fATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3fvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3FVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3fvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3dATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3DATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3dATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream3dvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM3DVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream3dvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4sATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4SATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4sATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4svATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4SVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4svATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4iATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4IATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4iATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4ivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4IVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4ivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4fATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4FATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4fATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4fvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4FVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4fvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4dATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4DATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4dATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexStream4dvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXSTREAM4DVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexStream4dvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3bATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3BATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3bATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3bvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3BVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3bvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3sATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3SATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3sATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3svATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3SVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3svATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3iATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3IATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3iATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3ivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3IVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3ivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3fATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3FATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3fATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3fvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3FVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3fvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3dATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3DATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3dATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormalStream3dvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMALSTREAM3DVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormalStream3dvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClientActiveVertexStreamATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClientActiveVertexStreamATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexBlendEnviATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXBLENDENVIATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexBlendEnviATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexBlendEnvfATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXBLENDENVFATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexBlendEnvfATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_vdpau_interop</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_vdpau_interop</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVDPAUInitNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUINITNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUInitNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAUFiniNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUFININVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUFiniNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAURegisterVideoSurfaceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUREGISTERVIDEOSURFACENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAURegisterVideoSurfaceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAURegisterOutputSurfaceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAURegisterOutputSurfaceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAUIsSurfaceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUISSURFACENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUIsSurfaceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAUUnregisterSurfaceNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUUNREGISTERSURFACENVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUUnregisterSurfaceNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAUGetSurfaceivNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUGETSURFACEIVNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUGetSurfaceivNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAUSurfaceAccessNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUSURFACEACCESSNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUSurfaceAccessNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAUMapSurfacesNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUMAPSURFACESNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUMapSurfacesNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVDPAUUnmapSurfacesNV</name> <operator>=</operator> <operator>(</operator><name>PFNGLVDPAUUNMAPSURFACESNVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVDPAUUnmapSurfacesNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_internalformat_query2</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_internalformat_query2</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glGetInternalformati64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTERNALFORMATI64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInternalformati64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SUN_vertex</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SUN_vertex</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glColor4ubVertex2fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4UBVERTEX2FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4ubVertex2fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4ubVertex2fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4UBVERTEX2FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4ubVertex2fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4ubVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4UBVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4ubVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4ubVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4UBVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4ubVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4fNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4fNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4fNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4fNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4fVertex4fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4FVERTEX4FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4fVertex4fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4fVertex4fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4FVERTEX4FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4fVertex4fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fColor4ubVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fColor4ubVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fColor4ubVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fColor4ubVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fColor3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fColor3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fColor3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fColor3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fColor4fNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fColor4fNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2fColor4fNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2fColor4fNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4fColor4fNormal3fVertex4fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4fColor4fNormal3fVertex4fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4fColor4fNormal3fVertex4fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4fColor4fNormal3fVertex4fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiColor4ubVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiColor4ubVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiColor4ubVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiColor4ubVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiColor3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiColor3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiColor3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiColor3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiColor4fNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiColor4fNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiTexCoord2fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiTexCoord2fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiTexCoord2fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiTexCoord2fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN</name> <operator>=</operator> <operator>(</operator><name>PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIX_igloo_interface</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIX_igloo_interface</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glIglooInterfaceSGIX</name> <operator>=</operator> <operator>(</operator><name>PFNGLIGLOOINTERFACESGIXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIglooInterfaceSGIX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_draw_indirect</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_draw_indirect</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawArraysIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWARRAYSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawArraysIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDrawElementsIndirect</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWELEMENTSINDIRECTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawElementsIndirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_NV_vertex_program4</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_NV_vertex_program4</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI1uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI1UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI1uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI2uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI2UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI2uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI3uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI3UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI3uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4bvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4BVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4bvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4svEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4SVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4svEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4ubvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4UBVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4ubvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribI4usvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBI4USVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribI4usvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertexAttribIPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEXATTRIBIPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertexAttribIPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribIivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribIivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVertexAttribIuivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVERTEXATTRIBIUIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVertexAttribIuivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_fog_function</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_fog_function</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFogFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFogFuncSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFOGFUNCSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFogFuncSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_x11_sync_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_x11_sync_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glImportSyncEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLIMPORTSYNCEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glImportSyncEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_sync</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_sync</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glFenceSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLFENCESYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFenceSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLISSYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDeleteSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLDELETESYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDeleteSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClientWaitSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLIENTWAITSYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClientWaitSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glWaitSync</name> <operator>=</operator> <operator>(</operator><name>PFNGLWAITSYNCPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glWaitSync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetInteger64v</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETINTEGER64VPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetInteger64v"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetSynciv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSYNCIVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetSynciv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_compute_variable_group_size</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_compute_variable_group_size</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDispatchComputeGroupSizeARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDispatchComputeGroupSizeARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_OES_fixed_point</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_OES_fixed_point</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glAlphaFuncxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLALPHAFUNCXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAlphaFuncxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearColorxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARCOLORXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearColorxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearDepthxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARDEPTHXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearDepthxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClipPlanexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLIPPLANEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClipPlanexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glDepthRangexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLDEPTHRANGEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDepthRangexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFogxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLFOGXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFogxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFrustumxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLFRUSTUMXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFrustumxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetClipPlanexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCLIPPLANEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetClipPlanexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetFixedvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETFIXEDVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetFixedvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexEnvxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXENVXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexEnvxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexParameterxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXPARAMETERXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexParameterxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLightModelxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLLIGHTMODELXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLightModelxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLightModelxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLLIGHTMODELXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLightModelxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLightxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLLIGHTXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLightxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLightxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLLIGHTXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLightxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLineWidthxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLLINEWIDTHXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLineWidthxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLoadMatrixxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOADMATRIXXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLoadMatrixxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMaterialxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATERIALXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMaterialxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMaterialxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMATERIALXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMaterialxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultMatrixxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTMATRIXXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultMatrixxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormal3xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMAL3XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormal3xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glOrthoxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLORTHOXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glOrthoxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointSizexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTSIZEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointSizexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPolygonOffsetxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOLYGONOFFSETXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPolygonOffsetxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRotatexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLROTATEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRotatexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSampleCoverageOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLECOVERAGEOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleCoverageOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glScalexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLSCALEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glScalexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexEnvxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXENVXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexEnvxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexEnvxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXENVXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexEnvxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameterxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexParameterxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPARAMETERXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexParameterxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTranslatexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTRANSLATEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTranslatexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetLightxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETLIGHTXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetLightxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMaterialxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMATERIALXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMaterialxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPointParameterxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPOINTPARAMETERXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPointParameterxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSampleCoveragexOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLECOVERAGEXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleCoveragexOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glAccumxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLACCUMXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glAccumxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBitmapxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLBITMAPXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBitmapxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glBlendColorxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLBLENDCOLORXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glBlendColorxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glClearAccumxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCLEARACCUMXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glClearAccumxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor3xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR3XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor3xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor3xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR3XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor3xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glColor4xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCOLOR4XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glColor4xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameterxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameterxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glConvolutionParameterxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLCONVOLUTIONPARAMETERXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glConvolutionParameterxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEvalCoord1xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLEVALCOORD1XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEvalCoord1xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEvalCoord1xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLEVALCOORD1XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEvalCoord1xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEvalCoord2xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLEVALCOORD2XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEvalCoord2xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glEvalCoord2xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLEVALCOORD2XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glEvalCoord2xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFeedbackBufferxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLFEEDBACKBUFFERXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFeedbackBufferxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetConvolutionParameterxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETCONVOLUTIONPARAMETERXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetConvolutionParameterxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetHistogramParameterxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETHISTOGRAMPARAMETERXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetHistogramParameterxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetLightxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETLIGHTXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetLightxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMapxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMAPXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMapxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetMaterialxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETMATERIALXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetMaterialxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetPixelMapxv</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETPIXELMAPXVPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetPixelMapxv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexGenxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXGENXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexGenxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetTexLevelParameterxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETTEXLEVELPARAMETERXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetTexLevelParameterxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIndexxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLINDEXXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIndexxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIndexxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLINDEXXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIndexxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glLoadTransposeMatrixxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLLOADTRANSPOSEMATRIXXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glLoadTransposeMatrixxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMap1xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAP1XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMap1xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMap2xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAP2XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMap2xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapGrid1xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPGRID1XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapGrid1xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMapGrid2xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMAPGRID2XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMapGrid2xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultTransposeMatrixxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTTRANSPOSEMATRIXXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultTransposeMatrixxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord1xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD1XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord1xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord2xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD2XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord2xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord3xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD3XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord3xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glMultiTexCoord4xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLMULTITEXCOORD4XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glMultiTexCoord4xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glNormal3xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLNORMAL3XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNormal3xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPassThroughxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPASSTHROUGHXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPassThroughxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelMapx</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELMAPXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelMapx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelStorex</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELSTOREXPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelStorex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelTransferxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELTRANSFERXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelTransferxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPixelZoomxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPIXELZOOMXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPixelZoomxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glPrioritizeTexturesxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLPRIORITIZETEXTURESXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glPrioritizeTexturesxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRasterPos2xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRASTERPOS2XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRasterPos2xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRasterPos2xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRASTERPOS2XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRasterPos2xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRasterPos3xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRASTERPOS3XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRasterPos3xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRasterPos3xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRASTERPOS3XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRasterPos3xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRasterPos4xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRASTERPOS4XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRasterPos4xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRasterPos4xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRASTERPOS4XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRasterPos4xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRectxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRECTXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRectxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glRectxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLRECTXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRectxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord1xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD1XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord1xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord1xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD1XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord1xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord2xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD2XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord2xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord3xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD3XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord3xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord3xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD3XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord3xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexCoord4xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXCOORD4XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexCoord4xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexGenxOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXGENXOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexGenxOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexGenxvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXGENXVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexGenxvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex2xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX2XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex2xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex2xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX2XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex2xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex3xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX3XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex3xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex3xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX3XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex3xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex4xOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX4XOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex4xOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVertex4xvOES</name> <operator>=</operator> <operator>(</operator><name>PFNGLVERTEX4XVOESPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVertex4xvOES"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_framebuffer_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_framebuffer_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glRenderbufferStorageMultisampleEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glRenderbufferStorageMultisampleEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_SGIS_texture4D</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_SGIS_texture4D</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexImage4DSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE4DSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage4DSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexSubImage4DSGIS</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSUBIMAGE4DSGISPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexSubImage4DSGIS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_texture3D</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_texture3D</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glTexSubImage3DEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXSUBIMAGE3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexSubImage3DEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_multisample</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_multisample</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSampleMaskEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEMASKEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSampleMaskEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSamplePatternEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSAMPLEPATTERNEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSamplePatternEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_secondary_color</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_secondary_color</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3bEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3BEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3bEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3bvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3BVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3bvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3dEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3DEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3dEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3dvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3DVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3dvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3fEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3FEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3fEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3fvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3FVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3fvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3iEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3IEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3iEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3ivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3IVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3ivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3sEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3SEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3sEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3svEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3SVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3svEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3ubEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3UBEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3ubEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3ubvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3UBVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3ubvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3uiEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3UIEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3uiEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3uivEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3UIVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3uivEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3usEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3USEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3usEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColor3usvEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLOR3USVEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColor3usvEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glSecondaryColorPointerEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLSECONDARYCOLORPOINTEREXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glSecondaryColorPointerEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ATI_vertex_array_object</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ATI_vertex_array_object</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glNewObjectBufferATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLNEWOBJECTBUFFERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glNewObjectBufferATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glIsObjectBufferATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLISOBJECTBUFFERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glIsObjectBufferATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glUpdateObjectBufferATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLUPDATEOBJECTBUFFERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glUpdateObjectBufferATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectBufferfvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTBUFFERFVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectBufferfvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetObjectBufferivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETOBJECTBUFFERIVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetObjectBufferivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glFreeObjectBufferATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLFREEOBJECTBUFFERATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glFreeObjectBufferATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glArrayObjectATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLARRAYOBJECTATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glArrayObjectATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetArrayObjectfvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETARRAYOBJECTFVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetArrayObjectfvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetArrayObjectivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETARRAYOBJECTIVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetArrayObjectivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glVariantArrayObjectATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLVARIANTARRAYOBJECTATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glVariantArrayObjectATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVariantArrayObjectfvATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVARIANTARRAYOBJECTFVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVariantArrayObjectfvATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>glad_glGetVariantArrayObjectivATI</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETVARIANTARRAYOBJECTIVATIPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetVariantArrayObjectivATI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_ARB_sparse_texture</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_ARB_sparse_texture</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glTexPageCommitmentARB</name> <operator>=</operator> <operator>(</operator><name>PFNGLTEXPAGECOMMITMENTARBPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glTexPageCommitmentARB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>load_GL_EXT_draw_range_elements</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>GLAD_GL_EXT_draw_range_elements</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>glad_glDrawRangeElementsEXT</name> <operator>=</operator> <operator>(</operator><name>PFNGLDRAWRANGEELEMENTSEXTPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glDrawRangeElementsEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>find_extensionsGL</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name>GLAD_GL_SGIX_pixel_tiles</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_pixel_tiles"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_point_sprite</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_point_sprite"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_element_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_element_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_multi_draw_indirect</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_multi_draw_indirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_blend_subtract</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_blend_subtract"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_tag_sample_buffer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_tag_sample_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_IBM_texture_mirrored_repeat</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_IBM_texture_mirrored_repeat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_transform_hint</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_transform_hint"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_separate_stencil</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_separate_stencil"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_program2_option</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_program2_option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_blend</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_blend"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_program2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_program2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_program_interface_query</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_program_interface_query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_misc_attribute</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_misc_attribute"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_multisample_coverage</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_multisample_coverage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shading_language_packing</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shading_language_packing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_cube_map</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_cube_map"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_stencil8</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_stencil8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_index_func</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_index_func"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OES_compressed_paletted_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OES_compressed_paletted_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_depth_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_depth_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_shader_buffer_load</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_shader_buffer_load"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_color_subtable</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_color_subtable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SUNX_constant_data</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SUNX_constant_data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_multi_draw_arrays</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_multi_draw_arrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_atomic_counters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_atomic_counters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_arrays_of_arrays</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_arrays_of_arrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_conditional_render</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_conditional_render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_env_combine</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_env_combine"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_fog_distance</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_fog_distance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_async_histogram</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_async_histogram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_MESA_resize_buffers</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_MESA_resize_buffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_light_max_exponent</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_light_max_exponent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_env_combine4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_env_combine4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_view</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_view"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_env_combine</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_env_combine"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_map_buffer_range</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_map_buffer_range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_convolution</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_convolution"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_compute_program5</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_compute_program5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_attrib_integer_64bit</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_attrib_integer_64bit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_paletted_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_paletted_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_pn_triangles</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_pn_triangles"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_resample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_resample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_flush_raster</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_flush_raster"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_light_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_light_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_point_sprite</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_point_sprite"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_half_float_pixel</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_half_float_pixel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_tessellation_program5</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_tessellation_program5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_REND_screen_coordinates</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_REND_screen_coordinates"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_shared_texture_palette</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_shared_texture_palette"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_packed_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_packed_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OML_subsample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OML_subsample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_vertex_preclip</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_vertex_preclip"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_texture_scale_bias</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_texture_scale_bias"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_draw_buffers_blend</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_draw_buffers_blend"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_MESA_window_pos</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_MESA_window_pos"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_barrier</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_barrier"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_query_levels</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_query_levels"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texgen_emboss</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texgen_emboss"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_swizzle</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_swizzle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_rg</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_rg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_type_2_10_10_10_rev</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_type_2_10_10_10_rev"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_fragment_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_fragment_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_3DFX_tbuffer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_3DFX_tbuffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_GREMEDY_frame_terminator</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_GREMEDY_frame_terminator"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_blend_func_extended</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_blend_func_extended"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_separate_shader_objects</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_separate_shader_objects"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_objects</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_objects"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_framebuffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_framebuffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_envmap_bumpmap</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_envmap_bumpmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_robust_buffer_access_behavior</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_robust_buffer_access_behavior"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_stencil_export</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_stencil_export"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_rectangle</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_rectangle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_enhanced_layouts</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_enhanced_layouts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_rectangle</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_rectangle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGI_texture_color_table</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGI_texture_color_table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_map_object_buffer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_map_object_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_robustness</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_robustness"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_pixel_data_range</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_pixel_data_range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_framebuffer_blit</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_framebuffer_blit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_gpu_shader_fp64</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_gpu_shader_fp64"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_depth_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_depth_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_vertex_weighting</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_vertex_weighting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_GREMEDY_string_marker</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_GREMEDY_string_marker"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_compression_bptc</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_compression_bptc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_subtexture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_subtexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_pixel_transform_color_table</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_pixel_transform_color_table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_compression_rgtc</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_compression_rgtc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_depth_pass_instrument</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_depth_pass_instrument"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_precision</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_precision"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_evaluators</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_evaluators"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_texture_filter4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_texture_filter4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_performance_monitor</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_performance_monitor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_geometry_shader4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_geometry_shader4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_stencil_clear_tag</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_stencil_clear_tag"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_program1_1</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_program1_1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_present_video</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_present_video"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_compression_rgtc</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_compression_rgtc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_HP_convolution_border_modes</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_HP_convolution_border_modes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_gpu_program_parameters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_gpu_program_parameters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_shader_integer_mix</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_shader_integer_mix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_stencil_texturing</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_stencil_texturing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_fog_offset</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_fog_offset"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_draw_elements_base_vertex</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_draw_elements_base_vertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_INGR_interlace_read</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_INGR_interlace_read"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_transform_feedback</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_transform_feedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_fragment_program</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_fragment_program"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_stencil_operation_extended</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_stencil_operation_extended"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_seamless_cubemap_per_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_seamless_cubemap_per_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_instanced_arrays</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_instanced_arrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_polygon_offset</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_polygon_offset"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_array_range2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_array_range2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_sparse_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_sparse_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_fence</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_fence"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_buffer_range</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_buffer_range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SUN_mesh_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SUN_mesh_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_attrib_binding</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_attrib_binding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_framebuffer_no_attachments</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_framebuffer_no_attachments"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_cl_event</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_cl_event"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_packed_depth_stencil</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_packed_depth_stencil"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OES_single_precision</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OES_single_precision"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_primitive_restart</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_primitive_restart"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SUN_global_alpha</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SUN_global_alpha"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_name_gen_delete</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_name_gen_delete"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_compression_vtc</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_compression_vtc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_ycrcb_subsample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_ycrcb_subsample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_shader3</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_shader3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_shader2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_shader2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_buffer_storage</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_buffer_storage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_shader_atomic_counter_ops</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_shader_atomic_counter_ops"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_vertex_program_evaluators</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_vertex_program_evaluators"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_multi_bind</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_multi_bind"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_explicit_uniform_location</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_explicit_uniform_location"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_depth_buffer_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_depth_buffer_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_shadow_ambient</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_shadow_ambient"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_cube_map</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_cube_map"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_vertex_shader_viewport_index</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_vertex_shader_viewport_index"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_list_priority</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_list_priority"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_buffer_unified_memory</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_buffer_unified_memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_env_dot3</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_env_dot3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_texture_env_combine3</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_texture_env_combine3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_map_buffer_alignment</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_map_buffer_alignment"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_blend_equation_advanced</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_blend_equation_advanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_sharpen_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_sharpen_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_program</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_program"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_rgb10_a2ui</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_rgb10_a2ui"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OML_interlace</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OML_interlace"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_pixel_format_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_pixel_format_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_shadow_funcs</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_shadow_funcs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_text_fragment_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_text_fragment_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_array_range</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_array_range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_fragment_lighting</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_fragment_lighting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_expand_normal</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_expand_normal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_framebuffer_multisample_coverage</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_framebuffer_multisample_coverage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_timer_query</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_timer_query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_vertex_array_bgra</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_vertex_array_bgra"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_bindless_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_bindless_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_KHR_debug</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_KHR_debug"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_texture_border_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_texture_border_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_vertex_attrib_array_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_vertex_attrib_array_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_clipmap</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_clipmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_geometry_shader4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_geometry_shader4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_MESA_ycbcr_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_MESA_ycbcr_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_MESAX_texture_stack</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_MESAX_texture_stack"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_seamless_cubemap_per_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_seamless_cubemap_per_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_bindable_uniform</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_bindable_uniform"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_KHR_texture_compression_astc_hdr</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_KHR_texture_compression_astc_hdr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_fragment_program_shadow</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_fragment_program_shadow"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_element_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_element_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_texture_texture4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_texture_texture4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_reference_plane</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_reference_plane"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_stencil_two_side</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_stencil_two_side"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_texture_lod_bias</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_texture_lod_bias"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_explicit_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_explicit_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_IBM_static_data</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_IBM_static_data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_clip_volume_hint</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_clip_volume_hint"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_perturb_normal</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_perturb_normal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_fragment_program2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_fragment_program2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_fragment_program4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_fragment_program4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_point_parameters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_point_parameters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_PGI_misc_hints</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_PGI_misc_hints"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_subsample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_subsample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_shader_stencil_export</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_shader_stencil_export"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_texture_lod</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_texture_lod"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_depth_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_depth_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_texture_select</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_texture_select"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texture_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texture_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_tessellation_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_tessellation_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_draw_buffers2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_draw_buffers2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_attrib_64bit</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_attrib_64bit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_WIN_specular_fog</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_WIN_specular_fog"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_interleaved_elements</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_interleaved_elements"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_fragment_program</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_fragment_program"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OML_resample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OML_resample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_ycbcr_422</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_ycbcr_422"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_texture_add_env</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_texture_add_env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shadow_ambient</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shadow_ambient"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_storage</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_storage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_pixel_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_pixel_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_copy_image</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_copy_image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_pixel_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_pixel_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_generate_mipmap</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_generate_mipmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_instruments</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_instruments"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_HP_texture_lighting</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_HP_texture_lighting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_storage_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_storage_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_blend_minmax</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_blend_minmax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_MESA_pack_invert</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_MESA_pack_invert"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_base_instance</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_base_instance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_convolution_accuracy</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_convolution_accuracy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_PGI_vertex_hints</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_PGI_vertex_hints"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_integer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_integer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_S3_s3tc</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_S3_s3tc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_query_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_query_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_vertex_shader_tessellator</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_vertex_shader_tessellator"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_invalidate_subdata</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_invalidate_subdata"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_index_material</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_index_material"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_blend_equation_advanced_coherent</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_blend_equation_advanced_coherent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_INTEL_parallel_arrays</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_INTEL_parallel_arrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_draw_buffers</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_draw_buffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_cmyka</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_cmyka"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_pixel_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_pixel_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_specular_vector</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_specular_vector"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_compatibility</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_compatibility"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_timer_query</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_timer_query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_interlace</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_interlace"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_parameter_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_parameter_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_shader_trinary_minmax</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_shader_trinary_minmax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_rescale_normal</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_rescale_normal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_pixel_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_pixel_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_uniform_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_uniform_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_type_10f_11f_11f_rev</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_type_10f_11f_11f_rev"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_swizzle</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_swizzle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_transform_feedback2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_transform_feedback2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_async_pixel</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_async_pixel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_fragment_program_option</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_fragment_program_option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_explicit_attrib_location</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_explicit_attrib_location"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_blend_color</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_blend_color"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_shader_thread_group</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_shader_thread_group"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_stencil_wrap</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_stencil_wrap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_index_array_formats</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_index_array_formats"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_histogram</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_histogram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_point_parameters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_point_parameters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_direct_state_access</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_direct_state_access"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_sample_positions</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_sample_positions"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_program</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_program"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_shader_thread_shuffle</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_shader_thread_shuffle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NVX_conditional_render</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NVX_conditional_render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_vertex_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_vertex_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_blend_func_separate</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_blend_func_separate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_fence</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_fence"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OES_byte_coordinates</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OES_byte_coordinates"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_transpose_matrix</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_transpose_matrix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_provoking_vertex</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_provoking_vertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_fog_coord</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_fog_coord"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_vertex_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_vertex_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_half_float_vertex</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_half_float_vertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_blend_equation_separate</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_blend_equation_separate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_multi_draw_indirect</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_multi_draw_indirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_copy_image</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_copy_image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_fragment_layer_viewport</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_fragment_layer_viewport"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_transform_feedback2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_transform_feedback2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_transform_feedback3</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_transform_feedback3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_ycrcba</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_ycrcba"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_debug_marker</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_debug_marker"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_bgra</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_bgra"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_compression_s3tc</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_compression_s3tc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_pixel_transform</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_pixel_transform"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_conservative_depth</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_conservative_depth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_fragment_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_fragment_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_array_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_array_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SUN_triangle_list</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SUN_triangle_list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_env_add</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_env_add"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_packed_depth_stencil</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_packed_depth_stencil"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_mirror_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_mirror_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_multisample_filter_hint</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_multisample_filter_hint"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_float_pixels</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_float_pixels"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_transform_feedback_instanced</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_transform_feedback_instanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_async</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_async"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_compression_latc</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_compression_latc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_shader_atomic_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_shader_atomic_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shading_language_100</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shading_language_100"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_INTEL_performance_query</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_INTEL_performance_query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_mirror_clamp_to_edge</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_mirror_clamp_to_edge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_gpu_shader5</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_gpu_shader5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_ES2_compatibility</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_ES2_compatibility"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_indirect_parameters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_indirect_parameters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_half_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_half_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_coordinate_frame</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_coordinate_frame"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_texture_mirror_once</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_texture_mirror_once"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_IBM_rasterpos_clip</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_IBM_rasterpos_clip"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_shadow</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_shadow"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_deep_texture3D</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_deep_texture3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_draw_parameters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_draw_parameters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_calligraphic_fragment</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_calligraphic_fragment"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_bit_encoding</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_bit_encoding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_compiled_vertex_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_compiled_vertex_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_depth_buffer_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_depth_buffer_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_occlusion_query</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_occlusion_query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_flush_buffer_range</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_flush_buffer_range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_imaging</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_imaging"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_draw_buffers_blend</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_draw_buffers_blend"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_blend_square</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_blend_square"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_blend_minmax_factor</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_blend_minmax_factor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_sRGB_decode</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_sRGB_decode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shading_language_420pack</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shading_language_420pack"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_meminfo</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_meminfo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_abgr</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_abgr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_pinned_memory</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_pinned_memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_snorm</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_snorm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_texture_coordinate_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_texture_coordinate_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_clear_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_clear_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_debug_label</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_debug_label"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_sample_shading</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_sample_shading"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_INTEL_map_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_INTEL_map_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_env_crossbar</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_env_crossbar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_422_pixels</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_422_pixels"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_compute_shader</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_compute_shader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_blend_logic_op</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_blend_logic_op"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_IBM_cull_vertex</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_IBM_cull_vertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_IBM_vertex_array_lists</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_IBM_vertex_array_lists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_color_buffer_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_color_buffer_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_bindless_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_bindless_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_window_pos</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_window_pos"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_internalformat_query</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_internalformat_query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shadow</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shadow"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_mirrored_repeat</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_mirrored_repeat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_shader_image_load_store</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_shader_image_load_store"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_copy_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_copy_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_register_combiners2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_register_combiners2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_ir_instrument1</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_ir_instrument1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_draw_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_draw_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_shared_exponent</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_shared_exponent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_draw_instanced</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_draw_instanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_copy_depth_to_color</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_copy_depth_to_color"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_viewport_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_viewport_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_separate_shader_objects</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_separate_shader_objects"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_depth_bounds_test</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_depth_bounds_test"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_HP_image_transform</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_HP_image_transform"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_env_add</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_env_add"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_video_capture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_video_capture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_sampler_objects</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_sampler_objects"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_matrix_palette</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_matrix_palette"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_texture_color_mask</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_texture_color_mask"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_packed_pixels</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_packed_pixels"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_compression</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_compression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_aux_depth_stencil</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_aux_depth_stencil"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_subroutine</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_subroutine"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_framebuffer_sRGB</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_framebuffer_sRGB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_storage_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_storage_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_vertex_attrib_64bit</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_vertex_attrib_64bit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_depth_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_depth_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_shader_buffer_store</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_shader_buffer_store"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OES_query_matrix</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OES_query_matrix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_texture_range</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_texture_range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_shader_storage_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_shader_storage_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_query_lod</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_query_lod"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_copy_buffer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_copy_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_image_size</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_image_size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_shader_atomic_counters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_shader_atomic_counters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_object_purgeable</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_object_purgeable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_occlusion_query</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_occlusion_query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_INGR_color_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_INGR_color_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGI_color_table</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGI_color_table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_gpu_program5_mem_extended</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_gpu_program5_mem_extended"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_cube_map_array</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_cube_map_array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_scalebias_hint</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_scalebias_hint"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_gpu_shader4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_gpu_shader4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_geometry_program4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_geometry_program4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_framebuffer_multisample_blit_scaled</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_framebuffer_multisample_blit_scaled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_debug_output</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_debug_output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_border_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_border_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_fragment_coord_conventions</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_fragment_coord_conventions"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_multitexture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_multitexture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_polynomial_ffd</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_polynomial_ffd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_provoking_vertex</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_provoking_vertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_point_parameters</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_point_parameters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_image_load_store</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_image_load_store"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_HP_occlusion_test</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_HP_occlusion_test"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_ES3_compatibility</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_ES3_compatibility"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_framezoom</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_framezoom"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_buffer_object_rgb32</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_buffer_object_rgb32"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_bindless_multi_draw_indirect</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_bindless_multi_draw_indirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_texture_multi_buffer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_texture_multi_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_transform_feedback</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_transform_feedback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_KHR_texture_compression_astc_ldr</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_KHR_texture_compression_astc_ldr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_3DFX_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_3DFX_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_INTEL_fragment_shader_ordering</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_INTEL_fragment_shader_ordering"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_env_dot3</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_env_dot3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_gpu_program4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_gpu_program4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_gpu_program5</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_gpu_program5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_float_buffer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_float_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_texture_edge_clamp</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_texture_edge_clamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_framebuffer_sRGB</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_framebuffer_sRGB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SUN_slice_accum</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SUN_slice_accum"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_index_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_index_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_shader_image_load_formatted</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_shader_image_load_formatted"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_geometry_shader4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_geometry_shader4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_separate_specular_color</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_separate_specular_color"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_depth_clamp_separate</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_depth_clamp_separate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SUN_convolution_border_modes</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SUN_convolution_border_modes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_sprite</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_sprite"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_get_program_binary</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_get_program_binary"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_occlusion_query_event</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_occlusion_query_event"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_framebuffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_framebuffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_robustness_isolation</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_robustness_isolation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_vertex_array_bgra</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_vertex_array_bgra"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_vertex_array_range</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_vertex_array_range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_query_buffer_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_query_buffer_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_register_combiners</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_register_combiners"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_draw_buffers</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_draw_buffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_clear_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_clear_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_debug_output</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_debug_output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGI_color_matrix</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGI_color_matrix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_cull_vertex</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_cull_vertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_sRGB</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_sRGB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_row_bytes</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_row_bytes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_texgen_reflection</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_texgen_reflection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_IBM_multimode_draw_arrays</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_IBM_multimode_draw_arrays"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_vertex_array_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_vertex_array_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_3DFX_texture_compression_FXT1</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_3DFX_texture_compression_FXT1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_ycrcb</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_ycrcb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_conservative_depth</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_conservative_depth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_compressed_texture_pixel_storage</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_compressed_texture_pixel_storage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_detail_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_detail_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_draw_instanced</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_draw_instanced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OES_read_format</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OES_read_format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_texture_float</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_texture_float"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_gather</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_gather"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_vertex_shader_layer</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_vertex_shader_layer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shading_language_include</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shading_language_include"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_client_storage</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_client_storage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_WIN_phong_shading</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_WIN_phong_shading"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_INGR_blend_func_separate</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_INGR_blend_func_separate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_path_rendering</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_path_rendering"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_vertex_streams</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_vertex_streams"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_texture_non_power_of_two</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_texture_non_power_of_two"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_APPLE_rgb_422</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_APPLE_rgb_422"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_lod_bias</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_lod_bias"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_seamless_cube_map</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_seamless_cube_map"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_shader_group_vote</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_shader_group_vote"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vdpau_interop</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vdpau_interop"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_occlusion_query2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_occlusion_query2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_internalformat_query2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_internalformat_query2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture_filter_anisotropic</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture_filter_anisotropic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SUN_vertex</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SUN_vertex"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_igloo_interface</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_igloo_interface"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_texture_lod</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_texture_lod"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_program3</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_program3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_draw_indirect</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_draw_indirect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_vertex_program4</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_vertex_program4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_AMD_transform_feedback3_lines_triangles</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_AMD_transform_feedback3_lines_triangles"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_fog_function</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_fog_function"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_x11_sync_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_x11_sync_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_sync</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_sync"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_compute_variable_group_size</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_compute_variable_group_size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_OES_fixed_point</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_OES_fixed_point"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_framebuffer_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_framebuffer_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_gpu_shader5</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_gpu_shader5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_texture4D</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_texture4D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_texture3D</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_texture3D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_multisample</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_multisample"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_secondary_color</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_secondary_color"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NV_parameter_buffer_object2</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NV_parameter_buffer_object2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ATI_vertex_array_object</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ATI_vertex_array_object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_NVX_gpu_memory_info</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_NVX_gpu_memory_info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_ARB_sparse_texture</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_ARB_sparse_texture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIS_point_line_texgen</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIS_point_line_texgen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_EXT_draw_range_elements</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_EXT_draw_range_elements"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_SGIX_blend_alpha_minmax</name> <operator>=</operator> <call><name>has_ext</name><argument_list>(<argument><expr><literal type="string">"GL_SGIX_blend_alpha_minmax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>find_coreGL</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>v</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><call><name>glGetString</name><argument_list>(<argument><expr><name>GL_VERSION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>major</name> <init>= <expr><name><name>v</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <literal type="char">'0'</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>minor</name> <init>= <expr><name><name>v</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>-</operator> <literal type="char">'0'</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>GLVersion</name><operator>.</operator><name>major</name></name> <operator>=</operator> <name>major</name></expr>;</expr_stmt> <expr_stmt><expr><name><name>GLVersion</name><operator>.</operator><name>minor</name></name> <operator>=</operator> <name>minor</name></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_1_0</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_1_1</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">1</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_1_2</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">2</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_1_3</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">3</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_1_4</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">4</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_1_5</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">5</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_2_0</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_2_1</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">1</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_3_0</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_3_1</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">1</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_3_2</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">2</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_3_3</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">3</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_4_0</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_4_1</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">1</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_4_2</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">2</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_4_3</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">3</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>GLAD_GL_VERSION_4_4</name> <operator>=</operator> <operator>(</operator><name>major</name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <name>minor</name> <operator>&gt;=</operator> <literal type="number">4</literal><operator>)</operator> <operator>||</operator> <name>major</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>gladLoadGLLoader</name><parameter_list>(<parameter><decl><type><name>GLADloadproc</name></type> <name>load</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name><name>GLVersion</name><operator>.</operator><name>major</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>GLVersion</name><operator>.</operator><name>minor</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>glGetString</name> <operator>=</operator> <operator>(</operator><name>PFNGLGETSTRINGPROC</name><operator>)</operator><call><name>load</name><argument_list>(<argument><expr><literal type="string">"glGetString"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>glGetString</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>find_coreGL</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_1_0</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_1_1</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_1_2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_1_3</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_1_4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_1_5</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_2_0</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_2_1</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_3_0</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_3_1</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_3_2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_3_3</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_4_0</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_4_1</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_4_2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_4_3</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_VERSION_4_4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>find_extensionsGL</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_point_sprite</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_element_array</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_multi_draw_indirect</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_tag_sample_buffer</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_separate_stencil</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_texture_buffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_blend</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_program_interface_query</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_index_func</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_shader_buffer_load</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_color_subtable</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SUNX_constant_data</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_multi_draw_arrays</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_shader_atomic_counters</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_conditional_render</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_MESA_resize_buffers</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_texture_view</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_map_buffer_range</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_convolution</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_vertex_attrib_integer_64bit</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_paletted_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_texture_buffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_pn_triangles</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_flush_raster</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_light_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_draw_buffers_blend</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_MESA_window_pos</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_texture_barrier</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_type_2_10_10_10_rev</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_3DFX_tbuffer</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_GREMEDY_frame_terminator</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_blend_func_extended</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_separate_shader_objects</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_texture_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_shader_objects</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_framebuffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_envmap_bumpmap</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_map_object_buffer</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_robustness</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_pixel_data_range</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_framebuffer_blit</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_gpu_shader_fp64</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_vertex_weighting</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_GREMEDY_string_marker</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_subtexture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_evaluators</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_texture_filter4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_performance_monitor</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_stencil_clear_tag</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_present_video</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_gpu_program_parameters</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_draw_elements_base_vertex</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_transform_feedback</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_fragment_program</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_stencil_operation_extended</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_instanced_arrays</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_polygon_offset</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_sparse_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_fence</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_texture_buffer_range</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SUN_mesh_array</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_attrib_binding</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_framebuffer_no_attachments</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_cl_event</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_OES_single_precision</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_primitive_restart</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SUN_global_alpha</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_texture_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_name_gen_delete</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_buffer_storage</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_vertex_program_evaluators</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_multi_bind</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_list_priority</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_vertex_buffer_unified_memory</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_blend_equation_advanced</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_sharpen_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_program</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_buffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_vertex_array_range</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_fragment_lighting</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_framebuffer_multisample_coverage</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_timer_query</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_bindless_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_KHR_debug</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_vertex_attrib_array_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_geometry_shader4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_bindable_uniform</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_element_array</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_reference_plane</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_stencil_two_side</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_explicit_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_IBM_static_data</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_texture_perturb_normal</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_point_parameters</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_PGI_misc_hints</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_shader</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_tessellation_shader</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_draw_buffers2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_attrib_64bit</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_interleaved_elements</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_fragment_program</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_texture_storage</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_copy_image</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_pixel_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_instruments</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_shader_storage_buffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_blend_minmax</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_base_instance</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_texture_integer</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_texture_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_vertex_shader_tessellator</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_invalidate_subdata</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_index_material</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_INTEL_parallel_arrays</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_draw_buffers</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_pixel_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_timer_query</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_parameter_buffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_uniform_buffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_transform_feedback2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_blend_color</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_histogram</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_point_parameters</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_direct_state_access</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_sample_positions</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_vertex_program</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NVX_conditional_render</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_vertex_shader</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_blend_func_separate</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_fence</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_OES_byte_coordinates</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_transpose_matrix</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_provoking_vertex</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_fog_coord</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_vertex_array</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_blend_equation_separate</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_multi_draw_indirect</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_copy_image</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_transform_feedback2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_transform_feedback3</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_debug_marker</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_pixel_transform</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_fragment_shader</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_vertex_array_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SUN_triangle_list</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_transform_feedback_instanced</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_async</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_INTEL_performance_query</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_gpu_shader5</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_ES2_compatibility</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_indirect_parameters</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_half_float</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_coordinate_frame</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_compiled_vertex_array</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_depth_buffer_float</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_occlusion_query</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_flush_buffer_range</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_imaging</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_draw_buffers_blend</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_clear_buffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_debug_label</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_sample_shading</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_INTEL_map_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_compute_shader</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_IBM_vertex_array_lists</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_color_buffer_float</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_bindless_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_window_pos</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_internalformat_query</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_shader_image_load_store</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_copy_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_register_combiners2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_draw_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_draw_instanced</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_viewport_array</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_separate_shader_objects</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_depth_bounds_test</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_HP_image_transform</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_video_capture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_sampler_objects</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_matrix_palette</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_texture_color_mask</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_texture_compression</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_shader_subroutine</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_texture_storage_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_vertex_attrib_64bit</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_OES_query_matrix</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_texture_range</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_copy_buffer</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_object_purgeable</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_occlusion_query</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGI_color_table</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_gpu_shader4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_geometry_program4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_debug_output</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_multitexture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_polynomial_ffd</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_provoking_vertex</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_point_parameters</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_shader_image_load_store</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_framezoom</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_bindless_multi_draw_indirect</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_transform_feedback</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_gpu_program4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_gpu_program5</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_geometry_shader4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_sprite</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_get_program_binary</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_AMD_occlusion_query_event</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_framebuffer_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_vertex_array_range</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_register_combiners</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_draw_buffers</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_clear_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_debug_output</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_cull_vertex</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_IBM_multimode_draw_arrays</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_APPLE_vertex_array_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_detail_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_draw_instanced</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_shading_language_include</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_INGR_blend_func_separate</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_path_rendering</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_vertex_streams</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_vdpau_interop</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_internalformat_query2</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SUN_vertex</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIX_igloo_interface</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_draw_indirect</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_NV_vertex_program4</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_fog_function</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_x11_sync_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_sync</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_compute_variable_group_size</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_OES_fixed_point</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_framebuffer_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_SGIS_texture4D</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_texture3D</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_multisample</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_secondary_color</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ATI_vertex_array_object</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_ARB_sparse_texture</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>load_GL_EXT_draw_range_elements</name><argument_list>(<argument><expr><name>load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></function>

</unit>
