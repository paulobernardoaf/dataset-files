<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs\media-io\audio-resampler.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../util/c99defs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"audio-io.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct_decl>struct <name>audio_resampler</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>audio_resampler</name></name></type> <name>audio_resampler_t</name>;</typedef>

<struct>struct <name>resample_info</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>samples_per_sec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>audio_format</name></name></type> <name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>speaker_layout</name></name></type> <name>speakers</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>EXPORT</name> <name>audio_resampler_t</name> <modifier>*</modifier></type>

<name>audio_resampler_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>resample_info</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>resample_info</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>audio_resampler_destroy</name><parameter_list>(<parameter><decl><type><name>audio_resampler_t</name> <modifier>*</modifier></type><name>resampler</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>audio_resampler_resample</name><parameter_list>(<parameter><decl><type><name>audio_resampler_t</name> <modifier>*</modifier></type><name>resampler</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>output</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>out_frames</name></decl></parameter>,

<parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>ts_offset</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>input</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>in_frames</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
