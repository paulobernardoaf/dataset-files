<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs\media-io\format-conversion.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../util/c99defs.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>compress_uyvx_to_i420</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>in_linesize</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>start_y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>end_y</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>output</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>out_linesize</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>compress_uyvx_to_nv12</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>in_linesize</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>start_y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>end_y</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>output</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>out_linesize</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>convert_uyvx_to_i444</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>in_linesize</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>start_y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>end_y</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>output</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>out_linesize</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>decompress_nv12</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>input</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>in_linesize</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>start_y</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>end_y</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>out_linesize</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>decompress_420</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>input</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>in_linesize</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>start_y</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>end_y</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>out_linesize</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>decompress_422</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>in_linesize</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>start_y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>end_y</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>out_linesize</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>leading_lum</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
