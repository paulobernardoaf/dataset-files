<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs\util\array-serializer.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"darray.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"array-serializer.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>size_t</name></type> <name>array_output_write</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>array_output_data</name></name> <modifier>*</modifier></type><name>output</name> <init>= <expr><name>param</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>da_push_back_array</name><argument_list>(<argument><expr><name><name>output</name><operator>-&gt;</operator><name>bytes</name></name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>size</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int64_t</name></type> <name>array_output_get_pos</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>array_output_data</name></name> <modifier>*</modifier></type><name>data</name> <init>= <expr><name>param</name></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><name>int64_t</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>bytes</name><operator>.</operator><name>num</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>array_output_serializer_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>serializer</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>array_output_data</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>serializer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>array_output_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>write</name></name> <operator>=</operator> <name>array_output_write</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>get_pos</name></name> <operator>=</operator> <name>array_output_get_pos</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>array_output_serializer_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>array_output_data</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>da_free</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
