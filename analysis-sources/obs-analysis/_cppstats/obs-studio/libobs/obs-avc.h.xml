<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs\obs-avc.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util/c99defs.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct_decl>struct <name>encoder_packet</name>;</struct_decl>

<enum>enum <block>{ <decl><name>OBS_NAL_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>OBS_NAL_SLICE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>OBS_NAL_SLICE_DPA</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>OBS_NAL_SLICE_DPB</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>OBS_NAL_SLICE_DPC</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>OBS_NAL_SLICE_IDR</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>OBS_NAL_SEI</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>OBS_NAL_SPS</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>OBS_NAL_PPS</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>OBS_NAL_AUD</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>OBS_NAL_FILLER</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

}</block>;</enum>

<enum>enum <block>{ <decl><name>OBS_NAL_PRIORITY_DISPOSABLE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>OBS_NAL_PRIORITY_LOW</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>OBS_NAL_PRIORITY_HIGH</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>OBS_NAL_PRIORITY_HIGHEST</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_avc_keyframe</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>obs_avc_find_startcode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>end</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_parse_avc_packet</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>avc_packet</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>size_t</name></type> <name>obs_parse_avc_header</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>header</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_extract_avc_headers</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>packet</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>new_packet_data</name></decl></parameter>,

<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>new_packet_size</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>header_data</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>header_size</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>sei_data</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>sei_size</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
