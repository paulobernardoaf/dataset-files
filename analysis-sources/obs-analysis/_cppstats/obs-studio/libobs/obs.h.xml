<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs\obs.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util/c99defs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util/bmem.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util/profiler.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util/text-lookup.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"graphics/graphics.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"graphics/vec2.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"graphics/vec3.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"media-io/audio-io.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"media-io/video-io.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"callback/signal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"callback/proc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-defs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-data.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-ui.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-properties.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-interaction.h"</cpp:file></cpp:include>

<struct_decl>struct <name>matrix4</name>;</struct_decl>

<struct_decl>struct <name>obs_display</name>;</struct_decl>

<struct_decl>struct <name>obs_view</name>;</struct_decl>

<struct_decl>struct <name>obs_source</name>;</struct_decl>

<struct_decl>struct <name>obs_scene</name>;</struct_decl>

<struct_decl>struct <name>obs_scene_item</name>;</struct_decl>

<struct_decl>struct <name>obs_output</name>;</struct_decl>

<struct_decl>struct <name>obs_encoder</name>;</struct_decl>

<struct_decl>struct <name>obs_service</name>;</struct_decl>

<struct_decl>struct <name>obs_module</name>;</struct_decl>

<struct_decl>struct <name>obs_fader</name>;</struct_decl>

<struct_decl>struct <name>obs_volmeter</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>obs_display</name></name></type> <name>obs_display_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_view</name></name></type> <name>obs_view_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_source</name></name></type> <name>obs_source_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_scene</name></name></type> <name>obs_scene_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_scene_item</name></name></type> <name>obs_sceneitem_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_output</name></name></type> <name>obs_output_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_encoder</name></name></type> <name>obs_encoder_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_service</name></name></type> <name>obs_service_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_module</name></name></type> <name>obs_module_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_fader</name></name></type> <name>obs_fader_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_volmeter</name></name></type> <name>obs_volmeter_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_weak_source</name></name></type> <name>obs_weak_source_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_weak_output</name></name></type> <name>obs_weak_output_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_weak_encoder</name></name></type> <name>obs_weak_encoder_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>obs_weak_service</name></name></type> <name>obs_weak_service_t</name>;</typedef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-source.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-encoder.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-output.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-service.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-audio-controls.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-hotkey.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <name>obs_order_movement</name> <block>{

<decl><name>OBS_ORDER_MOVE_UP</name></decl>,

<decl><name>OBS_ORDER_MOVE_DOWN</name></decl>,

<decl><name>OBS_ORDER_MOVE_TOP</name></decl>,

<decl><name>OBS_ORDER_MOVE_BOTTOM</name></decl>,

}</block>;</enum>

<enum>enum <name>obs_allow_direct_render</name> <block>{

<decl><name>OBS_NO_DIRECT_RENDERING</name></decl>,

<decl><name>OBS_ALLOW_DIRECT_RENDERING</name></decl>,

}</block>;</enum>

<enum>enum <name>obs_scale_type</name> <block>{

<decl><name>OBS_SCALE_DISABLE</name></decl>,

<decl><name>OBS_SCALE_POINT</name></decl>,

<decl><name>OBS_SCALE_BICUBIC</name></decl>,

<decl><name>OBS_SCALE_BILINEAR</name></decl>,

<decl><name>OBS_SCALE_LANCZOS</name></decl>,

<decl><name>OBS_SCALE_AREA</name></decl>,

}</block>;</enum>

<enum>enum <name>obs_bounds_type</name> <block>{

<decl><name>OBS_BOUNDS_NONE</name></decl>, 

<decl><name>OBS_BOUNDS_STRETCH</name></decl>, 

<decl><name>OBS_BOUNDS_SCALE_INNER</name></decl>, 

<decl><name>OBS_BOUNDS_SCALE_OUTER</name></decl>, 

<decl><name>OBS_BOUNDS_SCALE_TO_WIDTH</name></decl>, 

<decl><name>OBS_BOUNDS_SCALE_TO_HEIGHT</name></decl>, 

<decl><name>OBS_BOUNDS_MAX_ONLY</name></decl>, 

}</block>;</enum>

<struct>struct <name>obs_transform_info</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vec2</name></name></type> <name>pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>rot</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec2</name></name></type> <name>scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>alignment</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>obs_bounds_type</name></name></type> <name>bounds_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>bounds_alignment</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec2</name></name></type> <name>bounds</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>obs_video_info</name> <block>{

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWIG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>graphics_module</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>fps_num</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>fps_den</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>base_width</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>base_height</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>output_width</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>output_height</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>video_format</name></name></type> <name>output_format</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>adapter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>gpu_conversion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>video_colorspace</name></name></type> <name>colorspace</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>video_range_type</name></name></type> <name>range</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>obs_scale_type</name></name></type> <name>scale_type</name></decl>;</decl_stmt> 

}</block>;</struct>

<struct>struct <name>obs_audio_info</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>samples_per_sec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>speaker_layout</name></name></type> <name>speakers</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>obs_audio_data</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><name>MAX_AV_PLANES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>timestamp</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>obs_source_audio</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><name>MAX_AV_PLANES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>speaker_layout</name></name></type> <name>speakers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>audio_format</name></name></type> <name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>samples_per_sec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>timestamp</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>obs_source_frame</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><name>MAX_AV_PLANES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>linesize</name><index>[<expr><name>MAX_AV_PLANES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>timestamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>video_format</name></name></type> <name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>color_matrix</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>full_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>color_range_min</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>color_range_max</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>flip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>volatile</specifier> <name>long</name></type> <name>refs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>prev_frame</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>obs_source_frame2</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><name>MAX_AV_PLANES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>linesize</name><index>[<expr><name>MAX_AV_PLANES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>timestamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>video_format</name></name></type> <name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>video_range_type</name></name></type> <name>range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>color_matrix</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>color_range_min</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>color_range_max</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>flip</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>obs_cmdline_args</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>argc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier></type><name>obs_find_data_file</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_add_data_path</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_remove_data_path</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_startup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>locale</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module_config_path</name></decl></parameter>,

<parameter><decl><type><name>profiler_name_store_t</name> <modifier>*</modifier></type><name>store</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_shutdown</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_initialized</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_get_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_version_string</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_set_cmdline_args</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>struct</name> <name>obs_cmdline_args</name></name></type> <name>obs_get_cmdline_args</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_set_locale</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>locale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_locale</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_init_win32_crash_handler</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>EXPORT</name> <name>profiler_name_store_t</name> <modifier>*</modifier></type><name>obs_get_profiler_name_store</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>obs_reset_video</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_video_info</name></name> <modifier>*</modifier></type><name>ovi</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_reset_audio</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_audio_info</name></name> <modifier>*</modifier></type><name>oai</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_get_video_info</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_video_info</name></name> <modifier>*</modifier></type><name>ovi</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_get_audio_info</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_audio_info</name></name> <modifier>*</modifier></type><name>oai</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>obs_open_module</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>module</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data_path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_init_module</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_log_loaded_modules</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_module_file_name</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_module_name</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_module_author</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_module_description</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_module_binary_path</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_module_data_path</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_add_module_path</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_load_all_modules</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_post_load_modules</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWIG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<struct>struct <name>obs_module_info</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>bin_path</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data_path</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_find_module_callback_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_module_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_find_modules</name><parameter_list>(<parameter><decl><type><name>obs_find_module_callback_t</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_enum_module_callback_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enum_modules</name><parameter_list>(<parameter><decl><type><name>obs_enum_module_callback_t</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>lookup_t</name> <modifier>*</modifier></type><name>obs_module_load_locale</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>default_locale</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>locale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier></type><name>obs_find_module_file</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier></type><name>obs_module_get_config_path</name><parameter_list>(<parameter><decl><type><name>obs_module_t</name> <modifier>*</modifier></type><name>module</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_source_types</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_input_types</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_input_types2</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>unversioned_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_latest_input_type_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>unversioned_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_filter_types</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_transition_types</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_output_types</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_encoder_types</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_enum_service_types</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enter_graphics</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_leave_graphics</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>audio_t</name> <modifier>*</modifier></type><name>obs_get_audio</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>video_t</name> <modifier>*</modifier></type><name>obs_get_video</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_video_active</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_set_output_source</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>channel</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_get_output_source</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>channel</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enum_sources</name><parameter_list>(<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>enum_proc</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enum_scenes</name><parameter_list>(<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>enum_proc</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enum_outputs</name><parameter_list>(<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>enum_proc</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enum_encoders</name><parameter_list>(<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>enum_proc</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enum_services</name><parameter_list>(<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>enum_proc</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_get_source_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_output_t</name> <modifier>*</modifier></type><name>obs_get_output_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>obs_get_encoder_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_service_t</name> <modifier>*</modifier></type><name>obs_get_service_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_base_effect</name> <block>{

<decl><name>OBS_EFFECT_DEFAULT</name></decl>, 

<decl><name>OBS_EFFECT_DEFAULT_RECT</name></decl>, 

<decl><name>OBS_EFFECT_OPAQUE</name></decl>, 

<decl><name>OBS_EFFECT_SOLID</name></decl>, 

<decl><name>OBS_EFFECT_BICUBIC</name></decl>, 

<decl><name>OBS_EFFECT_LANCZOS</name></decl>, 

<decl><name>OBS_EFFECT_BILINEAR_LOWRES</name></decl>, 

<decl><name>OBS_EFFECT_PREMULTIPLIED_ALPHA</name></decl>, 

<decl><name>OBS_EFFECT_REPEAT</name></decl>, 

<decl><name>OBS_EFFECT_AREA</name></decl>, 

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>gs_effect_t</name> <modifier>*</modifier></type><name>obs_get_base_effect</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>obs_base_effect</name></name></type> <name>effect</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWIG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>OBS_DEPRECATED</name>

<name>EXPORT</name> <name>gs_effect_t</name> <modifier>*</modifier></type><name>obs_get_default_rect_effect</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>EXPORT</name> <name>signal_handler_t</name> <modifier>*</modifier></type><name>obs_get_signal_handler</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>proc_handler_t</name> <modifier>*</modifier></type><name>obs_get_proc_handler</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWIG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>OBS_DEPRECATED</name>

<name>EXPORT</name> <name>void</name></type> <name>obs_render_main_view</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_render_main_texture</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_render_main_texture_src_color_only</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_texture_t</name> <modifier>*</modifier></type><name>obs_get_main_texture</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_set_master_volume</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>volume</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>float</name></type> <name>obs_get_master_volume</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_save_source</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_load_source</name><parameter_list>(<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_save</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_load</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_load_source_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_load_sources</name><parameter_list>(<parameter><decl><type><name>obs_data_array_t</name> <modifier>*</modifier></type><name>array</name></decl></parameter>, <parameter><decl><type><name>obs_load_source_cb</name></type> <name>cb</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_array_t</name> <modifier>*</modifier></type><name>obs_save_sources</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>obs_save_source_filter_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>obs_data_array_t</name> <modifier>*</modifier></type><name>obs_save_sources_filtered</name><parameter_list>(<parameter><decl><type><name>obs_save_source_filter_cb</name></type> <name>cb</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_obj_type</name> <block>{

<decl><name>OBS_OBJ_TYPE_INVALID</name></decl>,

<decl><name>OBS_OBJ_TYPE_SOURCE</name></decl>,

<decl><name>OBS_OBJ_TYPE_OUTPUT</name></decl>,

<decl><name>OBS_OBJ_TYPE_ENCODER</name></decl>,

<decl><name>OBS_OBJ_TYPE_SERVICE</name></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_obj_type</name></name></type> <name>obs_obj_get_type</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_obj_get_id</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_obj_invalid</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_obj_get_data</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>obs_enum_audio_device_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_enum_audio_monitoring_devices</name><parameter_list>(<parameter><decl><type><name>obs_enum_audio_device_cb</name></type> <name>cb</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_set_audio_monitoring_device</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_get_audio_monitoring_device</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_add_tick_callback</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>tick</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>seconds</name></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_remove_tick_callback</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>tick</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>seconds</name></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_add_main_render_callback</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>draw</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_remove_main_render_callback</name><parameter_list>(

<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>draw</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_add_raw_video_callback</name><parameter_list>(

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>video_scale_info</name></name> <modifier>*</modifier></type><name>conversion</name></decl></parameter>,

<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>video_data</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_remove_raw_video_callback</name><parameter_list>(

<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>video_data</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_get_video_frame_time</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>double</name></type> <name>obs_get_active_fps</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_get_average_frame_time_ns</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_get_frame_interval_ns</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_get_total_frames</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_get_lagged_frames</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_nv12_tex_active</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_apply_private_data</name><parameter_list>(<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_set_private_data</name><parameter_list>(<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_get_private_data</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_task_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<enum>enum <name>obs_task_type</name> <block>{

<decl><name>OBS_TASK_UI</name></decl>,

<decl><name>OBS_TASK_GRAPHICS</name></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_queue_task</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>obs_task_type</name></name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>obs_task_t</name></type> <name>task</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>wait</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_task_handler_t</name>)<parameter_list>(<parameter><decl><type><name>obs_task_t</name></type> <name>task</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>wait</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_set_ui_task_handler</name><parameter_list>(<parameter><decl><type><name>obs_task_handler_t</name></type> <name>handler</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_view_t</name> <modifier>*</modifier></type><name>obs_view_create</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_view_destroy</name><parameter_list>(<parameter><decl><type><name>obs_view_t</name> <modifier>*</modifier></type><name>view</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_view_set_source</name><parameter_list>(<parameter><decl><type><name>obs_view_t</name> <modifier>*</modifier></type><name>view</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>channel</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_view_get_source</name><parameter_list>(<parameter><decl><type><name>obs_view_t</name> <modifier>*</modifier></type><name>view</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>channel</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_view_render</name><parameter_list>(<parameter><decl><type><name>obs_view_t</name> <modifier>*</modifier></type><name>view</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_display_t</name> <modifier>*</modifier></type>

<name>obs_display_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_init_data</name></name> <modifier>*</modifier></type><name>graphics_data</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>backround_color</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_display_destroy</name><parameter_list>(<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_display_resize</name><parameter_list>(<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_display_add_draw_callback</name><parameter_list>(<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,

<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>draw</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_display_remove_draw_callback</name><parameter_list>(

<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,

<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>draw</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_display_set_enabled</name><parameter_list>(<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_display_enabled</name><parameter_list>(<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_display_set_background_color</name><parameter_list>(<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_display_size</name><parameter_list>(<parameter><decl><type><name>obs_display_t</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>width</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_source_get_display_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_source_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>hotkey_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_source_create_private</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_source_duplicate</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>desired_name</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>create_private</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_addref</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_release</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_source_addref</name><parameter_list>(<parameter><decl><type><name>obs_weak_source_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_source_release</name><parameter_list>(<parameter><decl><type><name>obs_weak_source_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_source_get_ref</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_weak_source_t</name> <modifier>*</modifier></type><name>obs_source_get_weak_source</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_weak_source_get_source</name><parameter_list>(<parameter><decl><type><name>obs_weak_source_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_weak_source_references_source</name><parameter_list>(<parameter><decl><type><name>obs_weak_source_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_remove</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_removed</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_output_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_get_source_output_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_get_source_defaults</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_get_source_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_is_source_configurable</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_configurable</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_source_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_update</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_video_render</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_width</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_height</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_filter_get_parent</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_filter_get_target</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_default_render</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_filter_add</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_filter_remove</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_filter_set_order</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_order_movement</name></name></type> <name>movement</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_source_get_settings</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_source_get_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_name</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_source_type</name></name></type> <name>obs_source_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_source_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_source_get_unversioned_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>signal_handler_t</name> <modifier>*</modifier></type>

<name>obs_source_get_signal_handler</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>proc_handler_t</name> <modifier>*</modifier></type><name>obs_source_get_proc_handler</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_volume</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>volume</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>float</name></type> <name>obs_source_get_volume</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>speaker_layout</name></name></type> <name>obs_source_get_speaker_layout</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_balance_value</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>balance</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>float</name></type> <name>obs_source_get_balance_value</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_sync_offset</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>offset</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int64_t</name></type> <name>obs_source_get_sync_offset</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_enum_active_sources</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>obs_source_enum_proc_t</name></type> <name>enum_callback</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_enum_active_tree</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>obs_source_enum_proc_t</name></type> <name>enum_callback</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_active</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_showing</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OBS_SOURCE_FLAG_UNUSED_1</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OBS_SOURCE_FLAG_FORCE_MONO</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_flags</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_audio_mixers</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>mixers</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_audio_mixers</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_inc_showing</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_inc_active</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_dec_showing</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_dec_active</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_enum_filters</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>obs_source_enum_proc_t</name></type> <name>callback</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_source_get_filter_by_name</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_copy_filters</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_enabled</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_enabled</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_muted</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_muted</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>muted</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_push_to_mute_enabled</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_enable_push_to_mute</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_source_get_push_to_mute_delay</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_push_to_mute_delay</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>uint64_t</name></type> <name>delay</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_push_to_talk_enabled</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_enable_push_to_talk</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_source_get_push_to_talk_delay</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_push_to_talk_delay</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>uint64_t</name></type> <name>delay</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_source_audio_capture_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>audio_data</name></name> <modifier>*</modifier></type><name>audio_data</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>muted</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_add_audio_capture_callback</name><parameter_list>(

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>obs_source_audio_capture_t</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_remove_audio_capture_callback</name><parameter_list>(

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>obs_source_audio_capture_t</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_deinterlace_mode</name> <block>{

<decl><name>OBS_DEINTERLACE_MODE_DISABLE</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_DISCARD</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_RETRO</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_BLEND</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_BLEND_2X</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_LINEAR</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_LINEAR_2X</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_YADIF</name></decl>,

<decl><name>OBS_DEINTERLACE_MODE_YADIF_2X</name></decl>,

}</block>;</enum>

<enum>enum <name>obs_deinterlace_field_order</name> <block>{

<decl><name>OBS_DEINTERLACE_FIELD_ORDER_TOP</name></decl>,

<decl><name>OBS_DEINTERLACE_FIELD_ORDER_BOTTOM</name></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_deinterlace_mode</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_deinterlace_mode</name></name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_deinterlace_mode</name></name></type>

<name>obs_source_get_deinterlace_mode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_deinterlace_field_order</name><parameter_list>(

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>obs_deinterlace_field_order</name></name></type> <name>field_order</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_deinterlace_field_order</name></name></type>

<name>obs_source_get_deinterlace_field_order</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_monitoring_type</name> <block>{

<decl><name>OBS_MONITORING_TYPE_NONE</name></decl>,

<decl><name>OBS_MONITORING_TYPE_MONITOR_ONLY</name></decl>,

<decl><name>OBS_MONITORING_TYPE_MONITOR_AND_OUTPUT</name></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_monitoring_type</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_monitoring_type</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_monitoring_type</name></name></type>

<name>obs_source_get_monitoring_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_source_get_private_settings</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_source_get_type_data</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type>

<name>obs_source_draw_set_color_matrix</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>matrix4</name></name> <modifier>*</modifier></type><name>color_matrix</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>color_range_min</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>color_range_max</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_draw</name><parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>image</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>flip</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_output_video</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_output_video2</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_source_frame2</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_async_rotation</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>rotation</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_preload_video</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_preload_video2</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_source_frame2</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_show_preloaded_video</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_output_audio</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_source_audio</name></name> <modifier>*</modifier></type><name>audio</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_update_properties</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>obs_source_get_frame</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_release_frame</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type>

<name>obs_source_process_filter_begin</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>format</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_allow_direct_render</name></name></type> <name>allow_direct</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_process_filter_end</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>gs_effect_t</name> <modifier>*</modifier></type><name>effect</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_process_filter_tech_end</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>gs_effect_t</name> <modifier>*</modifier></type><name>effect</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tech_name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_skip_video_filter</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_add_active_child</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>child</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_remove_active_child</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>child</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_send_mouse_click</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_mouse_event</name></name> <modifier>*</modifier></type><name>event</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>mouse_up</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>click_count</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_send_mouse_move</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_mouse_event</name></name> <modifier>*</modifier></type><name>event</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>mouse_leave</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_send_mouse_wheel</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_mouse_event</name></name> <modifier>*</modifier></type><name>event</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x_delta</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y_delta</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_send_focus</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>focus</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_send_key_click</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_key_event</name></name> <modifier>*</modifier></type><name>event</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>key_up</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_default_flags</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_base_width</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_base_height</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_audio_pending</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_source_get_audio_timestamp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_get_audio_mix</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>obs_source_audio_mix</name></name> <modifier>*</modifier></type><name>audio</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_async_unbuffered</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>unbuffered</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_async_unbuffered</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_async_decoupled</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>decouple</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_async_decoupled</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_set_audio_active</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>show</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_audio_active</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_source_get_last_obs_version</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_play_pause</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>pause</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_restart</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_stop</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_next</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_previous</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int64_t</name></type> <name>obs_source_media_get_duration</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int64_t</name></type> <name>obs_source_media_get_time</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_set_time</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>ms</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_media_state</name></name></type> <name>obs_source_media_get_state</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_started</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_media_ended</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_transition_target</name> <block>{

<decl><name>OBS_TRANSITION_SOURCE_A</name></decl>,

<decl><name>OBS_TRANSITION_SOURCE_B</name></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type>

<name>obs_transition_get_source</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_transition_target</name></name></type> <name>target</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_clear</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_transition_get_active_source</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_transition_mode</name> <block>{

<decl><name>OBS_TRANSITION_MODE_AUTO</name></decl>,

<decl><name>OBS_TRANSITION_MODE_MANUAL</name></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_transition_start</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_transition_mode</name></name></type> <name>mode</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>duration_ms</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_set</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_set_manual_time</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_set_manual_torque</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>torque</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>clamp</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_transition_scale_type</name> <block>{

<decl><name>OBS_TRANSITION_SCALE_MAX_ONLY</name></decl>,

<decl><name>OBS_TRANSITION_SCALE_ASPECT</name></decl>,

<decl><name>OBS_TRANSITION_SCALE_STRETCH</name></decl>,

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_set_scale_type</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_transition_scale_type</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_transition_scale_type</name></name></type>

<name>obs_transition_get_scale_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_set_alignment</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>alignment</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_transition_get_alignment</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_set_size</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_get_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>cx</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>cy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_enable_fixed</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>duration_ms</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_transition_fixed</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_transition_video_render_callback_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>a</name></decl></parameter>,

<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>t</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>cx</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>cy</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>float</name></type> (<modifier>*</modifier><name>obs_transition_audio_mix_callback_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>float</name></type> <name>obs_transition_get_time</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_force_stop</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type>

<name>obs_transition_video_render</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name>obs_transition_video_render_callback_t</name></type> <name>callback</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type>

<name>obs_transition_video_render_direct</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_transition_target</name></name></type> <name>target</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type>

<name>obs_transition_audio_render</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>ts_out</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>obs_source_audio_mix</name></name> <modifier>*</modifier></type><name>audio</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>mixers</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>channels</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>sample_rate</name></decl></parameter>,

<parameter><decl><type><name>obs_transition_audio_mix_callback_t</name></type> <name>mix_a_callback</name></decl></parameter>,

<parameter><decl><type><name>obs_transition_audio_mix_callback_t</name></type> <name>mix_b_callback</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_swap_begin</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>tr_dest</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>tr_source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_transition_swap_end</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>tr_dest</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>tr_source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_scene_t</name> <modifier>*</modifier></type><name>obs_scene_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_scene_t</name> <modifier>*</modifier></type><name>obs_scene_create_private</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>obs_scene_duplicate_type</name> <block>{

<decl><name>OBS_SCENE_DUP_REFS</name></decl>, 

<decl><name>OBS_SCENE_DUP_COPY</name></decl>, 

<decl><name>OBS_SCENE_DUP_PRIVATE_REFS</name></decl>, 

<decl><name>OBS_SCENE_DUP_PRIVATE_COPY</name></decl>, 

}</block>;</enum>

<function_decl><type><name>EXPORT</name> <name>obs_scene_t</name> <modifier>*</modifier></type><name>obs_scene_duplicate</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_scene_duplicate_type</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_scene_addref</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_scene_release</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_scene_get_source</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_scene_t</name> <modifier>*</modifier></type><name>obs_scene_from_source</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_find_source</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_find_source_recursive</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_find_sceneitem_by_id</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_scene_enum_items</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_scene_reorder_items</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>item_order</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>item_order_size</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>obs_sceneitem_order_info</name> <block>{

<decl_stmt><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>group</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>EXPORT</name> <name>bool</name></type>

<name>obs_scene_reorder_items2</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>obs_sceneitem_order_info</name></name> <modifier>*</modifier></type><name>item_order</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>item_order_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_add</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>, <parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_scene_atomic_update_func</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_scene_atomic_update</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><name>obs_scene_atomic_update_func</name></type> <name>func</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_addref</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_release</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_remove</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_scene_t</name> <modifier>*</modifier></type><name>obs_sceneitem_get_scene</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_sceneitem_get_source</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_select</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>select</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_sceneitem_selected</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_sceneitem_locked</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_sceneitem_set_locked</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>lock</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_pos</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>pos</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_rot</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rot_deg</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_scale</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>scale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_alignment</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>alignment</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_order</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_order_movement</name></name></type> <name>movement</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_order_position</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_bounds_type</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_bounds_type</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_bounds_alignment</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>alignment</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_bounds</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>bounds</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int64_t</name></type> <name>obs_sceneitem_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_pos</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>pos</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>float</name></type> <name>obs_sceneitem_get_rot</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_scale</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>scale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_sceneitem_get_alignment</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_bounds_type</name></name></type>

<name>obs_sceneitem_get_bounds_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_sceneitem_get_bounds_alignment</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_bounds</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>bounds</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_info</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>obs_transform_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_info</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_transform_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_draw_transform</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>matrix4</name></name> <modifier>*</modifier></type><name>transform</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_box_transform</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>matrix4</name></name> <modifier>*</modifier></type><name>transform</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_box_scale</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>scale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_sceneitem_visible</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_sceneitem_set_visible</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>visible</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>obs_sceneitem_crop</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>left</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>top</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>right</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bottom</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_crop</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_sceneitem_crop</name></name> <modifier>*</modifier></type><name>crop</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_get_crop</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>obs_sceneitem_crop</name></name> <modifier>*</modifier></type><name>crop</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_set_scale_filter</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>obs_scale_type</name></name></type> <name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_scale_type</name></name></type>

<name>obs_sceneitem_get_scale_filter</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_force_update_transform</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_defer_update_begin</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_defer_update_end</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_sceneitem_get_private_settings</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_add_group</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_insert_group</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>items</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_add_group2</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>signal</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_insert_group2</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>items</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>signal</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_scene_get_group</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_sceneitem_is_group</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_scene_t</name> <modifier>*</modifier></type><name>obs_sceneitem_group_get_scene</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>group</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_group_ungroup</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>group</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_group_ungroup2</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>group</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>signal</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_group_add_item</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>group</name></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_group_remove_item</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>group</name></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>obs_sceneitem_get_group</name><parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_source_is_group</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_scene_is_group</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_scene_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_group_enum_items</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>group</name></decl></parameter>,

<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>obs_scene_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_scene_t</name> <modifier>*</modifier></type><name>obs_group_from_source</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_source_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_defer_group_resize_begin</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_sceneitem_defer_group_resize_end</name><parameter_list>(<parameter><decl><type><name>obs_sceneitem_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_output_get_display_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_output_t</name> <modifier>*</modifier></type><name>obs_output_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>hotkey_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_addref</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_release</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_output_addref</name><parameter_list>(<parameter><decl><type><name>obs_weak_output_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_output_release</name><parameter_list>(<parameter><decl><type><name>obs_weak_output_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_output_t</name> <modifier>*</modifier></type><name>obs_output_get_ref</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_weak_output_t</name> <modifier>*</modifier></type><name>obs_output_get_weak_output</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_output_t</name> <modifier>*</modifier></type><name>obs_weak_output_get_output</name><parameter_list>(<parameter><decl><type><name>obs_weak_output_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_weak_output_references_output</name><parameter_list>(<parameter><decl><type><name>obs_weak_output_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>,

<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_output_get_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_start</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_stop</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OBS_OUTPUT_DELAY_PRESERVE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_delay</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>delay_sec</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_output_get_delay</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_output_get_active_delay</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_force_stop</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_active</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_output_get_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_get_output_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_output_defaults</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_get_output_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_output_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_update</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_can_pause</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_pause</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>pause</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_paused</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_output_get_settings</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>signal_handler_t</name> <modifier>*</modifier></type>

<name>obs_output_get_signal_handler</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>proc_handler_t</name> <modifier>*</modifier></type><name>obs_output_get_proc_handler</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_media</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>video_t</name> <modifier>*</modifier></type><name>video</name></decl></parameter>,

<parameter><decl><type><name>audio_t</name> <modifier>*</modifier></type><name>audio</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>video_t</name> <modifier>*</modifier></type><name>obs_output_video</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>audio_t</name> <modifier>*</modifier></type><name>obs_output_audio</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_mixer</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>mixer_idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>size_t</name></type> <name>obs_output_get_mixer</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_mixers</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>mixers</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>size_t</name></type> <name>obs_output_get_mixers</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_video_encoder</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_audio_encoder</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>obs_output_get_video_encoder</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>obs_output_get_audio_encoder</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_service</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_service_t</name> <modifier>*</modifier></type><name>obs_output_get_service</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_reconnect_settings</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>retry_count</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>retry_sec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_output_get_total_bytes</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>obs_output_get_frames_dropped</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>obs_output_get_total_frames</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_preferred_size</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_output_get_width</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_output_get_height</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_output_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BUILD_CAPTIONS</name></expr></cpp:if>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_output_caption_text1</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_output_caption_text2</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>,

<parameter><decl><type><name>double</name></type> <name>display_duration</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>EXPORT</name> <name>float</name></type> <name>obs_output_get_congestion</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>obs_output_get_connect_time_ms</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_reconnecting</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_set_last_error</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>message</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_output_get_last_error</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>obs_output_get_supported_video_codecs</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>obs_output_get_supported_audio_codecs</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_output_get_type_data</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type>

<name>obs_output_set_video_conversion</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>video_scale_info</name></name> <modifier>*</modifier></type><name>conversion</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type>

<name>obs_output_set_audio_conversion</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>audio_convert_info</name></name> <modifier>*</modifier></type><name>conversion</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_can_begin_data_capture</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_initialize_encoders</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_output_begin_data_capture</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_end_data_capture</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_output_signal_stop</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint64_t</name></type> <name>obs_output_get_pause_offset</name><parameter_list>(<parameter><decl><type><name>obs_output_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_encoder_get_display_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>obs_video_encoder_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>hotkey_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>obs_audio_encoder_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>mixer_idx</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>hotkey_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_addref</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_release</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_encoder_addref</name><parameter_list>(<parameter><decl><type><name>obs_weak_encoder_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_encoder_release</name><parameter_list>(<parameter><decl><type><name>obs_weak_encoder_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>obs_encoder_get_ref</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_weak_encoder_t</name> <modifier>*</modifier></type><name>obs_encoder_get_weak_encoder</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>obs_weak_encoder_get_encoder</name><parameter_list>(<parameter><decl><type><name>obs_weak_encoder_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_weak_encoder_references_encoder</name><parameter_list>(<parameter><decl><type><name>obs_weak_encoder_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>,

<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_set_name</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_encoder_get_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_get_encoder_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_encoder_type</name></name></type> <name>obs_get_encoder_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_encoder_get_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_encoder_type</name></name></type> <name>obs_encoder_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_set_scaled_size</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_encoder_scaling_enabled</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_encoder_get_width</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_encoder_get_height</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_encoder_get_sample_rate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_set_preferred_video_format</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>video_format</name></name></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>video_format</name></name></type>

<name>obs_encoder_get_preferred_video_format</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_encoder_defaults</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_encoder_get_defaults</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_get_encoder_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_encoder_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_update</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>, <parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_encoder_get_extra_data</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_data</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_encoder_get_settings</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_set_video</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>, <parameter><decl><type><name>video_t</name> <modifier>*</modifier></type><name>video</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_set_audio</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>, <parameter><decl><type><name>audio_t</name> <modifier>*</modifier></type><name>audio</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>video_t</name> <modifier>*</modifier></type><name>obs_encoder_video</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>audio_t</name> <modifier>*</modifier></type><name>obs_encoder_audio</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_encoder_active</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_encoder_get_type_data</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_encoder_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_get_encoder_caps</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>encoder_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>obs_encoder_get_caps</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWIG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>OBS_DEPRECATED</name>

<name>EXPORT</name> <name>void</name></type> <name>obs_duplicate_encoder_packet</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OBS_DEPRECATED</name>

<name>EXPORT</name> <name>void</name></type> <name>obs_free_encoder_packet</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>packet</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_packet_ref</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_encoder_packet_release</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>encoder_packet</name></name> <modifier>*</modifier></type><name>packet</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_encoder_create_rerouted</name><parameter_list>(<parameter><decl><type><name>obs_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>reroute_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_encoder_paused</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_encoder_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_display_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_service_t</name> <modifier>*</modifier></type><name>obs_service_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>hotkey_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_service_t</name> <modifier>*</modifier></type><name>obs_service_create_private</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_service_addref</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_service_release</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_service_addref</name><parameter_list>(<parameter><decl><type><name>obs_weak_service_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_weak_service_release</name><parameter_list>(<parameter><decl><type><name>obs_weak_service_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_service_t</name> <modifier>*</modifier></type><name>obs_service_get_ref</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_weak_service_t</name> <modifier>*</modifier></type><name>obs_service_get_weak_service</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_service_t</name> <modifier>*</modifier></type><name>obs_weak_service_get_service</name><parameter_list>(<parameter><decl><type><name>obs_weak_service_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_weak_service_references_service</name><parameter_list>(<parameter><decl><type><name>obs_weak_service_t</name> <modifier>*</modifier></type><name>weak</name></decl></parameter>,

<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_service_defaults</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_get_service_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_properties_t</name> <modifier>*</modifier></type><name>obs_service_properties</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_service_update</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>, <parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_data_t</name> <modifier>*</modifier></type><name>obs_service_get_settings</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_url</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_username</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_password</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type>

<name>obs_service_apply_encoder_settings</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>video_encoder_settings</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>audio_encoder_settings</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_service_get_type_data</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>obs_service_get_output_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_frame_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>video_format</name></name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>obs_source_frame_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>frame</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type>

<name>obs_source_frame_create</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>video_format</name></name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl>;</decl_stmt>

<expr_stmt><expr><name>frame</name> <operator>=</operator> <operator>(</operator>struct <name>obs_source_frame</name> <operator>*</operator><operator>)</operator><call><name>bzalloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_source_frame_init</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>format</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>frame</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>obs_source_frame_destroy</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>frame</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_source_frame_copy</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>obs_source_frame</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>obs_icon_type</name></name></type> <name>obs_source_get_icon_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
