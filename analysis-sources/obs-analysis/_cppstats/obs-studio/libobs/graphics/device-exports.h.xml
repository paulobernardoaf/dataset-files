<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs\graphics\device-exports.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/c99defs.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>device_get_name</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>device_get_type</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>device_enum_adapters</name><parameter_list>(<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>id</name></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>device_preprocessor_name</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>device_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>adapter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_destroy</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_enter_context</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_leave_context</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>device_get_device_obj</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_swapchain_t</name> <modifier>*</modifier></type><name>device_swapchain_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_init_data</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_resize</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_get_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>x</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>y</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>device_get_width</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>uint32_t</name></type> <name>device_get_height</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_texture_t</name> <modifier>*</modifier></type>

<name>device_texture_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>levels</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_texture_t</name> <modifier>*</modifier></type>

<name>device_cubetexture_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>size</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>levels</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_texture_t</name> <modifier>*</modifier></type>

<name>device_voltexture_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>depth</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>levels</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_zstencil_t</name> <modifier>*</modifier></type><name>device_zstencil_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_zstencil_format</name></name></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_stagesurf_t</name> <modifier>*</modifier></type>

<name>device_stagesurface_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_samplerstate_t</name> <modifier>*</modifier></type>

<name>device_samplerstate_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_sampler_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_shader_t</name> <modifier>*</modifier></type><name>device_vertexshader_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>error_string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_shader_t</name> <modifier>*</modifier></type><name>device_pixelshader_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>error_string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>device_vertexbuffer_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>gs_vb_data</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>device_indexbuffer_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_index_type</name></name></type> <name>type</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>indices</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>num</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_timer_t</name> <modifier>*</modifier></type><name>device_timer_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_timer_range_t</name> <modifier>*</modifier></type><name>device_timer_range_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>gs_texture_type</name></name></type>

<name>device_get_texture_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>texture</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_vertexbuffer</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>vertbuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_indexbuffer</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_texture</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>unit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_samplerstate</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>gs_samplerstate_t</name> <modifier>*</modifier></type><name>samplerstate</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>unit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_vertexshader</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>gs_shader_t</name> <modifier>*</modifier></type><name>vertshader</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_pixelshader</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>gs_shader_t</name> <modifier>*</modifier></type><name>pixelshader</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_default_samplerstate</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_3d</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>unit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_shader_t</name> <modifier>*</modifier></type><name>device_get_vertex_shader</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_shader_t</name> <modifier>*</modifier></type><name>device_get_pixel_shader</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_texture_t</name> <modifier>*</modifier></type><name>device_get_render_target</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>gs_zstencil_t</name> <modifier>*</modifier></type><name>device_get_zstencil_target</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_set_render_target</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>,

<parameter><decl><type><name>gs_zstencil_t</name> <modifier>*</modifier></type><name>zstencil</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_set_cube_render_target</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>cubetex</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>side</name></decl></parameter>,

<parameter><decl><type><name>gs_zstencil_t</name> <modifier>*</modifier></type><name>zstencil</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_copy_texture</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_copy_texture_region</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>dst_x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>dst_y</name></decl></parameter>,

<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>src_x</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>src_y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>src_w</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>src_h</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_stage_texture</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_begin_frame</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_begin_scene</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_draw</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_draw_mode</name></name></type> <name>draw_mode</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>start_vert</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>num_verts</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_end_scene</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_load_swapchain</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>gs_swapchain_t</name> <modifier>*</modifier></type><name>swapchain</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_clear</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>clear_flags</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec4</name></name> <modifier>*</modifier></type><name>color</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>depth</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name></type> <name>stencil</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_present</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_flush</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_set_cull_mode</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_cull_mode</name></name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name><name>enum</name> <name>gs_cull_mode</name></name></type> <name>device_get_cull_mode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_enable_blending</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_enable_depth_test</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_enable_stencil_test</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_enable_stencil_write</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_enable_color</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>red</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>green</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>blue</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>alpha</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_blend_function</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_blend_function_separate</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src_c</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest_c</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src_a</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest_a</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_depth_function</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_depth_test</name></name></type> <name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_stencil_function</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_stencil_side</name></name></type> <name>side</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_depth_test</name></name></type> <name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_stencil_op</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_stencil_side</name></name></type> <name>side</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_stencil_op_type</name></name></type> <name>fail</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_stencil_op_type</name></name></type> <name>zfail</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_stencil_op_type</name></name></type> <name>zpass</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_set_viewport</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_get_viewport</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>gs_rect</name></name> <modifier>*</modifier></type><name>rect</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_set_scissor_rect</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_rect</name></name> <modifier>*</modifier></type><name>rect</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_ortho</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>right</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>bottom</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>znear</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>zfar</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_frustum</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>right</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>bottom</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>znear</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>zfar</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_projection_push</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_projection_pop</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_debug_marker_begin</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>markername</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>color</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>device_debug_marker_end</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
