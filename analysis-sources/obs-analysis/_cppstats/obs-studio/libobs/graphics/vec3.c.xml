<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs\graphics\vec3.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vec3.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vec4.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"quat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"axisang.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"plane.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"matrix3.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"math-extra.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>vec3_from_vec4</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec4</name></name> <modifier>*</modifier></type><name>v</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>m</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>m</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>w</name></name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>float</name></type> <name>vec3_plane_dist</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>plane</name></name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vec3_dot</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>dir</name></name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>p</name><operator>-&gt;</operator><name>dist</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vec3_rotate</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>v</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>matrix3</name></name> <modifier>*</modifier></type><name>m</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>temp</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vec3_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <call><name>vec3_dot</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <call><name>vec3_dot</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>z</name></name> <operator>=</operator> <call><name>vec3_dot</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>w</name></name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vec3_transform</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>v</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>matrix4</name></name> <modifier>*</modifier></type><name>m</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vec4</name></name></type> <name>v4</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vec4_from_vec3</name><argument_list>(<argument><expr><operator>&amp;</operator><name>v4</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec4_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>v4</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>v4</name></expr></argument>, <argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_from_vec4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>v4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vec3_transform3x4</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>v</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>matrix3</name></name> <modifier>*</modifier></type><name>m</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>temp</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vec3_sub</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>t</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <call><name>vec3_dot</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <call><name>vec3_dot</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>z</name></name> <operator>=</operator> <call><name>vec3_dot</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>w</name></name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vec3_mirror</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>plane</name></name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>temp</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vec3_mulf</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>dir</name></name></expr></argument>, <argument><expr><call><name>vec3_plane_dist</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2.0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_sub</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vec3_mirrorv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>v</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>vec</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>temp</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vec3_mulf</name><argument_list>(<argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>, <argument><expr><name>vec</name></expr></argument>, <argument><expr><call><name>vec3_dot</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><name>vec</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2.0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_sub</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vec3_rand</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>positive_only</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <call><name>rand_float</name><argument_list>(<argument><expr><name>positive_only</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <call><name>rand_float</name><argument_list>(<argument><expr><name>positive_only</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>z</name></name> <operator>=</operator> <call><name>rand_float</name><argument_list>(<argument><expr><name>positive_only</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>w</name></name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
