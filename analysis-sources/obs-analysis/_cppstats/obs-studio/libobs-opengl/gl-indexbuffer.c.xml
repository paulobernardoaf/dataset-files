<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\libobs-opengl\gl-indexbuffer.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gl-subsystem.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>init_ib</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>gs_index_buffer</name></name> <modifier>*</modifier></type><name>ib</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GLenum</name></type> <name>usage</name> <init>= <expr><ternary><condition><expr><name><name>ib</name><operator>-&gt;</operator><name>dynamic</name></name></expr> ?</condition><then> <expr><name>GL_DYNAMIC_DRAW</name></expr> </then><else>: <expr><name>GL_STATIC_DRAW</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>success</name></decl>;</decl_stmt>

<expr_stmt><expr><name>success</name> <operator>=</operator> <call><name>gl_create_buffer</name><argument_list>(<argument><expr><name>GL_ELEMENT_ARRAY_BUFFER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ib</name><operator>-&gt;</operator><name>buffer</name></name></expr></argument>,

<argument><expr><name><name>ib</name><operator>-&gt;</operator><name>size</name></name></expr></argument>, <argument><expr><name><name>ib</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name>usage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>ib</name><operator>-&gt;</operator><name>dynamic</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>ib</name><operator>-&gt;</operator><name>data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>success</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>device_indexbuffer_create</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>gs_index_type</name></name></type> <name>type</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>indices</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>num</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>gs_index_buffer</name></name> <modifier>*</modifier></type><name>ib</name> <init>= <expr><call><name>bzalloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>gs_index_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>width</name> <init>= <expr><ternary><condition><expr><name>type</name> <operator>==</operator> <name>GS_UNSIGNED_LONG</name></expr> ?</condition><then> <expr><literal type="number">4</literal></expr> </then><else>: <expr><literal type="number">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>device</name></name> <operator>=</operator> <name>device</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name>indices</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>dynamic</name></name> <operator>=</operator> <name>flags</name> <operator>&amp;</operator> <name>GS_DYNAMIC</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>num</name></name> <operator>=</operator> <name>num</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>width</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <name>width</name> <operator>*</operator> <name>num</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ib</name><operator>-&gt;</operator><name>gl_type</name></name> <operator>=</operator> <ternary><condition><expr><name>type</name> <operator>==</operator> <name>GS_UNSIGNED_LONG</name></expr> ?</condition><then> <expr><name>GL_UNSIGNED_INT</name></expr>

</then><else>: <expr><name>GL_UNSIGNED_SHORT</name></expr></else></ternary></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>init_ib</name><argument_list>(<argument><expr><name>ib</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>blog</name><argument_list>(<argument><expr><name>LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"device_indexbuffer_create (GL) failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_indexbuffer_destroy</name><argument_list>(<argument><expr><name>ib</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>ib</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>gs_indexbuffer_destroy</name><parameter_list>(<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>ib</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>ib</name><operator>-&gt;</operator><name>buffer</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gl_delete_buffers</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ib</name><operator>-&gt;</operator><name>buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>ib</name><operator>-&gt;</operator><name>data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>ib</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>gs_indexbuffer_flush_internal</name><parameter_list>(<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>ib</name><operator>-&gt;</operator><name>dynamic</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>blog</name><argument_list>(<argument><expr><name>LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Index buffer is not dynamic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>update_buffer</name><argument_list>(<argument><expr><name>GL_ELEMENT_ARRAY_BUFFER</name></expr></argument>, <argument><expr><name><name>ib</name><operator>-&gt;</operator><name>buffer</name></name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name><name>ib</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<return>return;</return>

<label><name>fail</name>:</label>

<expr_stmt><expr><call><name>blog</name><argument_list>(<argument><expr><name>LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"gs_indexbuffer_flush (GL) failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>gs_indexbuffer_flush</name><parameter_list>(<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>gs_indexbuffer_flush_internal</name><argument_list>(<argument><expr><name>ib</name></expr></argument>, <argument><expr><name><name>ib</name><operator>-&gt;</operator><name>data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>gs_indexbuffer_flush_direct</name><parameter_list>(<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>gs_indexbuffer_flush_internal</name><argument_list>(<argument><expr><name>ib</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name> <modifier>*</modifier></type><name>gs_indexbuffer_get_data</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>ib</name><operator>-&gt;</operator><name>data</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>size_t</name></type> <name>gs_indexbuffer_get_num_indices</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>ib</name><operator>-&gt;</operator><name>num</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name><name>enum</name> <name>gs_index_type</name></name></type> <name>gs_indexbuffer_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>ib</name><operator>-&gt;</operator><name>type</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>device_load_indexbuffer</name><parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>ib</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>device</name><operator>-&gt;</operator><name>cur_index_buffer</name></name> <operator>=</operator> <name>ib</name></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
