<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\win-ivcam\seg_library\SegServerImpl.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Dependencies.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"SegImage.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"SegServer.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"seg_service.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pitch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>timestamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frameNumber</name></decl>;</decl_stmt>

}</block></struct></type> <name>FrameHeader</name>;</typedef>

<decl_stmt><decl><type><name>class</name></type> <name>SegServerImpl</name> <range>: <expr><name>public</name> <name>SegServer</name>

<block>{

<expr><name>private</name><operator>:</operator>

<specifier>static</specifier> <name>SegServerImpl</name><operator>*</operator> <name>instance</name></expr>;

<expr><name>ISegProc</name><operator>*</operator> <name>m_server</name></expr>;

<expr><name>bool</name> <name>m_comInit</name></expr>;

<expr><name>bool</name> <name>m_serviceConnected</name></expr>;

<expr><name>LPWSTR</name> <name>m_bufferName</name></expr>;

<expr><name>LPCTSTR</name> <name>m_sharedBuffer</name></expr>;

<expr><call><name>SegServerImpl</name><argument_list>()</argument_list></call></expr>;

<expr><call><name>SegServerImpl</name><argument_list>(<argument><expr><name>SegServerImpl</name> <specifier>const</specifier><operator>&amp;</operator> <name>src</name></expr></argument>)</argument_list></call> <operator>=</operator> <name>delete</name></expr>;

<expr><name>SegServerImpl</name><operator>&amp;</operator> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>SegServerImpl</name> <operator>&amp;</operator> <name>src</name><operator>)</operator> <operator>=</operator> <name>delete</name></expr>;

<expr><name>public</name><operator>:</operator>

<name>virtual</name> <operator>~</operator><call><name>SegServerImpl</name><argument_list>()</argument_list></call></expr>;

<expr><specifier>static</specifier> <name>SegServer</name><operator>*</operator> <call><name>CreateServer</name><argument_list>()</argument_list></call></expr>;

<expr><specifier>static</specifier> <name>SegServer</name><operator>*</operator> <call><name>GetServerInstance</name><argument_list>()</argument_list></call></expr>;

<expr><name>ServiceStatus</name> <call><name>Init</name><argument_list>()</argument_list></call></expr>;

<expr><name>ServiceStatus</name> <call><name>Stop</name><argument_list>()</argument_list></call></expr>;

<expr><name>void</name> <macro><name>SetFps</name><argument_list>(<argument>int fps</argument>)</argument_list></macro> <name>override</name></expr>;

<expr><name>int</name> <macro><name>GetFps</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>void</name> <macro><name>SetIVCAMMotionRangeTradeOff</name><argument_list>(<argument>int value</argument>)</argument_list></macro> <name>override</name></expr>;

<expr><name>int</name> <macro><name>GetIVCAMMotionRangeTradeOff</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>ServiceStatus</name> <call><name>GetFrame</name><argument_list>(<argument><expr><name>SegImage</name><operator>*</operator><operator>*</operator> <name>image</name></expr></argument>)</argument_list></call></expr>;

}</block></expr></range></decl>;</decl_stmt>

</unit>
