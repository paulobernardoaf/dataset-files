<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\win-ivcam\seg_library\SegServer.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Dependencies.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"SegImage.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_DEFAULT_PROPERTY_VALUE</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<decl_stmt><decl><type><name>class</name></type> <name>SegServer</name>

<block>{<block_content>

<label><name>public</name>:</label>

<enum>enum <name>ServiceStatus</name>

<block>{

<decl><name>COM_LIB_INIT_ERROR</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,

<decl><name>SERVICE_INIT_ERROR</name> <init>= <expr><operator>-</operator><literal type="number">2</literal></expr></init></decl>,

<decl><name>SERVICE_REINIT_ERROR</name> <init>= <expr><operator>-</operator><literal type="number">3</literal></expr></init></decl>,

<decl><name>SERVICE_FUNC_ERROR</name> <init>= <expr><operator>-</operator><literal type="number">4</literal></expr></init></decl>,

<decl><name>SHARED_MEMORY_ERROR</name> <init>= <expr><operator>-</operator><literal type="number">5</literal></expr></init></decl>,

<decl><name>ALLOCATION_FAILURE</name> <init>= <expr><operator>-</operator><literal type="number">6</literal></expr></init></decl>,

<decl><name>SERVICE_NO_ERROR</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>SERVICE_NOT_READY</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>

}</block>;</enum>

<function_decl><type><specifier>static</specifier> <name>SegServer</name><modifier>*</modifier></type> <name>CreateServer</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>SegServer</name><modifier>*</modifier></type> <name>GetServerInstance</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>virtual</name> <name>ServiceStatus</name></type> <name>Init</name><parameter_list>()</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<function_decl><type><name>virtual</name> <name>ServiceStatus</name></type> <name>Stop</name><parameter_list>()</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<function_decl><type><name>virtual</name> <name>ServiceStatus</name></type> <name>GetFrame</name><parameter_list>(<parameter><decl><type><name>SegImage</name><modifier>*</modifier><modifier>*</modifier></type> <name>image</name></decl></parameter>)</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<function_decl><type><name>virtual</name> <name>void</name></type> <name>SetFps</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fps</name></decl></parameter>)</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<function_decl><type><name>virtual</name> <name>int</name></type> <name>GetFps</name><parameter_list>()</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<function_decl><type><name>virtual</name> <name>void</name></type> <name>SetIVCAMMotionRangeTradeOff</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<function_decl><type><name>virtual</name> <name>int</name></type> <name>GetIVCAMMotionRangeTradeOff</name><parameter_list>()</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<expr_stmt><expr><name>virtual</name> <operator>~</operator><macro><name>SegServer</name><argument_list>()</argument_list></macro> <block>{}</block></expr>;</expr_stmt>

</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</unit>
