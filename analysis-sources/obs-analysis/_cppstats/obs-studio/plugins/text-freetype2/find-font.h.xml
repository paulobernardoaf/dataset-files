<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\text-freetype2\find-font.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ft2build.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> FT_FREETYPE_H</cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> FT_SFNT_NAMES_H</cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> FT_TRUETYPE_IDS_H</cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/dstr.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/darray.h&gt;</cpp:file></cpp:include>

<struct>struct <name>font_path_info</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>face_and_style</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>full_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>face_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>is_bitmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>num_sizes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>sizes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>bold</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>italic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FT_Long</name></type> <name>index</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>font_path_info_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>font_path_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>face_and_style</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>build_font_path_info</name><parameter_list>(<parameter><decl><type><name>FT_Face</name></type> <name>face</name></decl></parameter>, <parameter><decl><type><name>FT_Long</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>sfnt_name_to_utf8</name><parameter_list>(<parameter><decl><type><name>FT_SfntName</name> <modifier>*</modifier></type><name>sfnt_name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>load_cached_os_font_list</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>load_os_font_list</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>free_os_font_list</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>get_font_path</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>family</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>size</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>style</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>,

<parameter><decl><type><name>FT_Long</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
