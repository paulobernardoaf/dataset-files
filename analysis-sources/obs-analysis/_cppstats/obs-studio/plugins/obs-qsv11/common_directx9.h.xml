<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\obs-qsv11\common_directx9.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common_utils.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;initguid.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;d3d9.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dxva2api.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dxva.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_MAIN_FORMAT</name></cpp:macro> <cpp:value>D3DFMT_YUY2</cpp:value></cpp:define>

<decl_stmt><decl><type><name>class</name></type> <name>IGFXS3DControl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>template</name><argument_list type="generic">&lt;<argument><expr><name>class</name> <name>T</name></expr></argument>&gt;</argument_list></name> <name>class</name></type> <name>safe_array</name> <block>{<block_content>

<label><name>public</name>:</label>

<expr_stmt><expr><call><name>safe_array</name><argument_list>(<argument><expr><name>T</name> <operator>*</operator><name>ptr</name> <operator>=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call>

<operator>:</operator> <macro><name>m_ptr</name><argument_list>(<argument>ptr</argument>)</argument_list></macro><block>{

}</block></expr>;</expr_stmt>

<expr_stmt><expr><operator>~</operator><macro><name>safe_array</name><argument_list>()</argument_list></macro> <block>{ <expr><call><name>reset</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>; }</block>

<name>T</name> <operator>*</operator><macro><name>get</name><argument_list>()</argument_list></macro>

<block>{ 

<return>return <expr><name>m_ptr</name></expr>;</return>

}</block></expr></expr_stmt>

<function><type><name>T</name> <modifier>*</modifier></type><name>release</name><parameter_list>()</parameter_list>

<block>{<block_content> 

<decl_stmt><decl><type><name>T</name> <modifier>*</modifier></type><name>ptr</name> <init>= <expr><name>m_ptr</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>m_ptr</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>ptr</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>reset</name><parameter_list>(<parameter><decl><type><name>T</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>

<block>{<block_content> 

<if_stmt><if>if <condition>(<expr><name>m_ptr</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name><name>delete</name><index>[]</index></name></type> <name>m_ptr</name></decl>;</decl_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>m_ptr</name> <operator>=</operator> <name>ptr</name></expr>;</expr_stmt>

</block_content>}</block></function>

<label><name>protected</name>:</label>

<decl_stmt><decl><type><name>T</name> <modifier>*</modifier></type><name>m_ptr</name></decl>;</decl_stmt> 

</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<function_decl><type><name>mfxStatus</name></type> <name>dx9_simple_alloc</name><parameter_list>(<parameter><decl><type><name>mfxHDL</name></type> <name>pthis</name></decl></parameter>, <parameter><decl><type><name>mfxFrameAllocRequest</name> <modifier>*</modifier></type><name>request</name></decl></parameter>,

<parameter><decl><type><name>mfxFrameAllocResponse</name> <modifier>*</modifier></type><name>response</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>mfxStatus</name></type> <name>dx9_simple_lock</name><parameter_list>(<parameter><decl><type><name>mfxHDL</name></type> <name>pthis</name></decl></parameter>, <parameter><decl><type><name>mfxMemId</name></type> <name>mid</name></decl></parameter>, <parameter><decl><type><name>mfxFrameData</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>mfxStatus</name></type> <name>dx9_simple_unlock</name><parameter_list>(<parameter><decl><type><name>mfxHDL</name></type> <name>pthis</name></decl></parameter>, <parameter><decl><type><name>mfxMemId</name></type> <name>mid</name></decl></parameter>, <parameter><decl><type><name>mfxFrameData</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>mfxStatus</name></type> <name>dx9_simple_gethdl</name><parameter_list>(<parameter><decl><type><name>mfxHDL</name></type> <name>pthis</name></decl></parameter>, <parameter><decl><type><name>mfxMemId</name></type> <name>mid</name></decl></parameter>, <parameter><decl><type><name>mfxHDL</name> <modifier>*</modifier></type><name>handle</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>mfxStatus</name></type> <name>dx9_simple_free</name><parameter_list>(<parameter><decl><type><name>mfxHDL</name></type> <name>pthis</name></decl></parameter>, <parameter><decl><type><name>mfxFrameAllocResponse</name> <modifier>*</modifier></type><name>response</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>mfxStatus</name></type> <name>DX9_CreateHWDevice</name><parameter_list>(<parameter><decl><type><name>mfxSession</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>mfxHDL</name> <modifier>*</modifier></type><name>deviceHandle</name></decl></parameter>,

<parameter><decl><type><name>HWND</name></type> <name>hWnd</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>bCreateSharedHandles</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>DX9_CleanupHWDevice</name><parameter_list>()</parameter_list>;</function_decl>

</unit>
