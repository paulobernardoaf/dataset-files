<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\obs-qsv11\libmfx\include\msdk\include\mfxjpeg.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mfxdefs.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal>

<block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<enum>enum <block>{

<decl><name>MFX_CODEC_JPEG</name> <init>= <macro><name>MFX_MAKEFOURCC</name><argument_list>(<argument><literal type="char">'J'</literal></argument>,<argument><literal type="char">'P'</literal></argument>,<argument><literal type="char">'E'</literal></argument>,<argument><literal type="char">'G'</literal></argument>)</argument_list></macro></init></decl>

}</block>;</enum>

<enum>enum

<block>{

<decl><name>MFX_PROFILE_JPEG_BASELINE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>

}</block>;</enum>

<enum>enum

<block>{

<decl><name>MFX_ROTATION_0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>MFX_ROTATION_90</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>MFX_ROTATION_180</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>MFX_ROTATION_270</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>

}</block>;</enum>

<enum>enum <block>{

<decl><name>MFX_EXTBUFF_JPEG_QT</name> <init>= <expr><call><name>MFX_MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'J'</literal></expr></argument>,<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'G'</literal></expr></argument>,<argument><expr><literal type="char">'Q'</literal></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>MFX_EXTBUFF_JPEG_HUFFMAN</name> <init>= <macro><name>MFX_MAKEFOURCC</name><argument_list>(<argument><literal type="char">'J'</literal></argument>,<argument><literal type="char">'P'</literal></argument>,<argument><literal type="char">'G'</literal></argument>,<argument><literal type="char">'H'</literal></argument>)</argument_list></macro></init></decl>

}</block>;</enum>

<enum>enum <block>{

<decl><name>MFX_JPEG_COLORFORMAT_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>MFX_JPEG_COLORFORMAT_YCbCr</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>MFX_JPEG_COLORFORMAT_RGB</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>

}</block>;</enum>

<enum>enum <block>{

<decl><name>MFX_SCANTYPE_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>MFX_SCANTYPE_INTERLEAVED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>MFX_SCANTYPE_NONINTERLEAVED</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>

}</block>;</enum>

<enum>enum <block>{

<decl><name>MFX_CHROMAFORMAT_JPEG_SAMPLING</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>

}</block>;</enum>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>mfxExtBuffer</name></type> <name>Header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU16</name></type> <name><name>reserved</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU16</name></type> <name>NumTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU16</name></type> <name><name>Qm</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>mfxExtJPEGQuantTables</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>mfxExtBuffer</name></type> <name>Header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU16</name></type> <name><name>reserved</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU16</name></type> <name>NumDCTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU16</name></type> <name>NumACTable</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>mfxU8</name></type> <name><name>Bits</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU8</name></type> <name><name>Values</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name><name>DCTables</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name>mfxU8</name></type> <name><name>Bits</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU8</name></type> <name><name>Values</name><index>[<expr><literal type="number">162</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name><name>ACTables</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</struct>

}</block></struct></type> <name>mfxExtJPEGHuffmanTables</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
