<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\win-capture\get-graphics-offsets\get-graphics-offsets.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../graphics-hook-info.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DUMMY_WNDCLASS</name></cpp:macro> <cpp:value>"get_addrs_wndclass"</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><specifier>inline</specifier></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>inline</name></cpp:macro> <cpp:value>__inline</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint32_t</name></type> <name>vtable_offset</name><parameter_list>(<parameter><decl><type><name>HMODULE</name></type> <name>module</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cls</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>offset</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uintptr_t</name> <modifier>*</modifier></type><name>vtable</name> <init>= <expr><operator>*</operator><operator>(</operator><name>uintptr_t</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>cls</name></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><name>uint32_t</name><operator>)</operator><operator>(</operator><name><name>vtable</name><index>[<expr><name>offset</name></expr>]</index></name> <operator>-</operator> <operator>(</operator><name>uintptr_t</name><operator>)</operator><name>module</name><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>get_dxgi_offsets</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dxgi_offsets</name></name> <modifier>*</modifier></type><name>offsets</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>get_d3d9_offsets</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>d3d9_offsets</name></name> <modifier>*</modifier></type><name>offsets</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>get_d3d8_offsets</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>d3d8_offsets</name></name> <modifier>*</modifier></type><name>offsets</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
