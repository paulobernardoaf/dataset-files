<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\win-capture\window-helpers.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/dstr.h&gt;</cpp:file></cpp:include>

<enum>enum <name>window_priority</name> <block>{

<decl><name>WINDOW_PRIORITY_CLASS</name></decl>,

<decl><name>WINDOW_PRIORITY_TITLE</name></decl>,

<decl><name>WINDOW_PRIORITY_EXE</name></decl>,

}</block>;</enum>

<enum>enum <name>window_search_mode</name> <block>{

<decl><name>INCLUDE_MINIMIZED</name></decl>,

<decl><name>EXCLUDE_MINIMIZED</name></decl>,

}</block>;</enum>

<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>get_window_exe</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dstr</name></name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>HWND</name></type> <name>window</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>get_window_title</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dstr</name></name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>HWND</name></type> <name>hwnd</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>get_window_class</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dstr</name></name> <modifier>*</modifier></type><name>class</name></decl></parameter>, <parameter><decl><type><name>HWND</name></type> <name>hwnd</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>is_uwp_window</name><parameter_list>(<parameter><decl><type><name>HWND</name></type> <name>hwnd</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>HWND</name></type> <name>get_uwp_actual_window</name><parameter_list>(<parameter><decl><type><name>HWND</name></type> <name>parent</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>add_window_cb</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>exe</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>fill_window_list</name><parameter_list>(<parameter><decl><type><name>obs_property_t</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>window_search_mode</name></name></type> <name>mode</name></decl></parameter>,

<parameter><decl><type><name>add_window_cb</name></type> <name>callback</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>build_window_strings</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>class</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>title</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>exe</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>HWND</name></type> <name>find_window</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>window_search_mode</name></name></type> <name>mode</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>window_priority</name></name></type> <name>priority</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>exe</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>HWND</name></type> <name>find_window_top_level</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>window_search_mode</name></name></type> <name>mode</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>window_priority</name></name></type> <name>priority</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>exe</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
