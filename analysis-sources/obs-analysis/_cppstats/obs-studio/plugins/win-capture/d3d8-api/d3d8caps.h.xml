<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\win-capture\d3d8-api\d3d8caps.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DIRECT3D_VERSION</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIRECT3D_VERSION</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive><expr><operator>(</operator><name>DIRECT3D_VERSION</name> <operator>&gt;=</operator> <literal type="number">0x0800</literal><operator>)</operator></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_X86_</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>_IA64_</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>pack</name><name>(</name><name>4</name><name>)</name></cpp:pragma>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <name>_D3DCAPS8</name>

<block>{

<decl_stmt><decl><type><name>D3DDEVTYPE</name></type> <name>DeviceType</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT</name></type> <name>AdapterOrdinal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>Caps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>Caps2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>Caps3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>PresentationIntervals</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>CursorCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>DevCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>PrimitiveMiscCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>RasterCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>ZCmpCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>SrcBlendCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>DestBlendCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>AlphaCmpCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>ShadeCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>TextureCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>TextureFilterCaps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>CubeTextureFilterCaps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>VolumeTextureFilterCaps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>TextureAddressCaps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>VolumeTextureAddressCaps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>LineCaps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxTextureWidth</name></decl>, <name>MaxTextureHeight</name>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxVolumeExtent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxTextureRepeat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxTextureAspectRatio</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxAnisotropy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>MaxVertexW</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>GuardBandLeft</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>GuardBandTop</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>GuardBandRight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>GuardBandBottom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>ExtentsAdjust</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>StencilCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>FVFCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>TextureOpCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxTextureBlendStages</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxSimultaneousTextures</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>VertexProcessingCaps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxActiveLights</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxUserClipPlanes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxVertexBlendMatrices</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxVertexBlendMatrixIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>MaxPointSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxPrimitiveCount</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxVertexIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxStreams</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxStreamStride</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>VertexShaderVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>MaxVertexShaderConst</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DWORD</name></type> <name>PixelShaderVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>MaxPixelShaderValue</name></decl>;</decl_stmt> 

}</block></struct></type> <name>D3DCAPS8</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS_READ_SCANLINE</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS2_NO2DDURING3DSCENE</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS2_FULLSCREENGAMMA</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS2_CANRENDERWINDOWED</name></cpp:macro> <cpp:value>0x00080000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS2_CANCALIBRATEGAMMA</name></cpp:macro> <cpp:value>0x00100000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS2_RESERVED</name></cpp:macro> <cpp:value>0x02000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS2_CANMANAGERESOURCE</name></cpp:macro> <cpp:value>0x10000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS2_DYNAMICTEXTURES</name></cpp:macro> <cpp:value>0x20000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS3_RESERVED</name></cpp:macro> <cpp:value>0x8000001fL</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRESENT_INTERVAL_DEFAULT</name></cpp:macro> <cpp:value>0x00000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRESENT_INTERVAL_ONE</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRESENT_INTERVAL_TWO</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRESENT_INTERVAL_THREE</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRESENT_INTERVAL_FOUR</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRESENT_INTERVAL_IMMEDIATE</name></cpp:macro> <cpp:value>0x80000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCURSORCAPS_COLOR</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DCURSORCAPS_LOWRES</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_EXECUTESYSTEMMEMORY</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_EXECUTEVIDEOMEMORY</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_TLVERTEXSYSTEMMEMORY</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_TLVERTEXVIDEOMEMORY</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_TEXTURESYSTEMMEMORY</name></cpp:macro> <cpp:value>0x00000100L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_TEXTUREVIDEOMEMORY</name></cpp:macro> <cpp:value>0x00000200L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_DRAWPRIMTLVERTEX</name></cpp:macro> <cpp:value>0x00000400L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_CANRENDERAFTERFLIP</name></cpp:macro> <cpp:value>0x00000800L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_TEXTURENONLOCALVIDMEM</name></cpp:macro> <cpp:value>0x00001000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_DRAWPRIMITIVES2</name></cpp:macro> <cpp:value>0x00002000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_SEPARATETEXTUREMEMORIES</name></cpp:macro> <cpp:value>0x00004000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_DRAWPRIMITIVES2EX</name></cpp:macro> <cpp:value>0x00008000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_HWTRANSFORMANDLIGHT</name></cpp:macro> <cpp:value>0x00010000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_CANBLTSYSTONONLOCAL</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_HWRASTERIZATION</name></cpp:macro> <cpp:value>0x00080000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_PUREDEVICE</name></cpp:macro> <cpp:value>0x00100000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_QUINTICRTPATCHES</name></cpp:macro> <cpp:value>0x00200000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_RTPATCHES</name></cpp:macro> <cpp:value>0x00400000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_RTPATCHHANDLEZERO</name></cpp:macro> <cpp:value>0x00800000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DDEVCAPS_NPATCHES</name></cpp:macro> <cpp:value>0x01000000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_MASKZ</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_LINEPATTERNREP</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_CULLNONE</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_CULLCW</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_CULLCCW</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_COLORWRITEENABLE</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_CLIPPLANESCALEDPOINTS</name></cpp:macro> <cpp:value>0x00000100L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_CLIPTLVERTS</name></cpp:macro> <cpp:value>0x00000200L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_TSSARGTEMP</name></cpp:macro> <cpp:value>0x00000400L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_BLENDOP</name></cpp:macro> <cpp:value>0x00000800L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPMISCCAPS_NULLREFERENCE</name></cpp:macro> <cpp:value>0x00001000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DLINECAPS_TEXTURE</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DLINECAPS_ZTEST</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DLINECAPS_BLEND</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DLINECAPS_ALPHACMP</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DLINECAPS_FOG</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_DITHER</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_PAT</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_ZTEST</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_FOGVERTEX</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_FOGTABLE</name></cpp:macro> <cpp:value>0x00000100L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_ANTIALIASEDGES</name></cpp:macro> <cpp:value>0x00001000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_MIPMAPLODBIAS</name></cpp:macro> <cpp:value>0x00002000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_ZBIAS</name></cpp:macro> <cpp:value>0x00004000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_ZBUFFERLESSHSR</name></cpp:macro> <cpp:value>0x00008000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_FOGRANGE</name></cpp:macro> <cpp:value>0x00010000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_ANISOTROPY</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_WBUFFER</name></cpp:macro> <cpp:value>0x00040000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_WFOG</name></cpp:macro> <cpp:value>0x00100000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_ZFOG</name></cpp:macro> <cpp:value>0x00200000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_COLORPERSPECTIVE</name></cpp:macro> <cpp:value>0x00400000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE</name></cpp:macro> <cpp:value>0x00800000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_NEVER</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_LESS</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_EQUAL</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_LESSEQUAL</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_GREATER</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_NOTEQUAL</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_GREATEREQUAL</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPCMPCAPS_ALWAYS</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_ZERO</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_ONE</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_SRCCOLOR</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_INVSRCCOLOR</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_SRCALPHA</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_INVSRCALPHA</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_DESTALPHA</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_INVDESTALPHA</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_DESTCOLOR</name></cpp:macro> <cpp:value>0x00000100L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_INVDESTCOLOR</name></cpp:macro> <cpp:value>0x00000200L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_SRCALPHASAT</name></cpp:macro> <cpp:value>0x00000400L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_BOTHSRCALPHA</name></cpp:macro> <cpp:value>0x00000800L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPBLENDCAPS_BOTHINVSRCALPHA</name></cpp:macro> <cpp:value>0x00001000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPSHADECAPS_COLORGOURAUDRGB</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPSHADECAPS_SPECULARGOURAUDRGB</name></cpp:macro> <cpp:value>0x00000200L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPSHADECAPS_ALPHAGOURAUDBLEND</name></cpp:macro> <cpp:value>0x00004000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPSHADECAPS_FOGGOURAUD</name></cpp:macro> <cpp:value>0x00080000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_PERSPECTIVE</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_POW2</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_ALPHA</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_SQUAREONLY</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_ALPHAPALETTE</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_NONPOW2CONDITIONAL</name></cpp:macro> <cpp:value>0x00000100L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_PROJECTED</name></cpp:macro> <cpp:value>0x00000400L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_CUBEMAP</name></cpp:macro> <cpp:value>0x00000800L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_VOLUMEMAP</name></cpp:macro> <cpp:value>0x00002000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_MIPMAP</name></cpp:macro> <cpp:value>0x00004000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_MIPVOLUMEMAP</name></cpp:macro> <cpp:value>0x00008000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_MIPCUBEMAP</name></cpp:macro> <cpp:value>0x00010000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_CUBEMAP_POW2</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTEXTURECAPS_VOLUMEMAP_POW2</name></cpp:macro> <cpp:value>0x00040000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MINFPOINT</name></cpp:macro> <cpp:value>0x00000100L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MINFLINEAR</name></cpp:macro> <cpp:value>0x00000200L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MINFANISOTROPIC</name></cpp:macro> <cpp:value>0x00000400L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MIPFPOINT</name></cpp:macro> <cpp:value>0x00010000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MIPFLINEAR</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MAGFPOINT</name></cpp:macro> <cpp:value>0x01000000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MAGFLINEAR</name></cpp:macro> <cpp:value>0x02000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MAGFANISOTROPIC</name></cpp:macro> <cpp:value>0x04000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MAGFAFLATCUBIC</name></cpp:macro> <cpp:value>0x08000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC</name></cpp:macro> <cpp:value>0x10000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTADDRESSCAPS_WRAP</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTADDRESSCAPS_MIRROR</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTADDRESSCAPS_CLAMP</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTADDRESSCAPS_BORDER</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTADDRESSCAPS_INDEPENDENTUV</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DPTADDRESSCAPS_MIRRORONCE</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_KEEP</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_ZERO</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_REPLACE</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_INCRSAT</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_DECRSAT</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_INVERT</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_INCR</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DSTENCILCAPS_DECR</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_DISABLE</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_SELECTARG1</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_SELECTARG2</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MODULATE</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MODULATE2X</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MODULATE4X</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_ADD</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_ADDSIGNED</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_ADDSIGNED2X</name></cpp:macro> <cpp:value>0x00000100L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_SUBTRACT</name></cpp:macro> <cpp:value>0x00000200L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_ADDSMOOTH</name></cpp:macro> <cpp:value>0x00000400L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_BLENDDIFFUSEALPHA</name></cpp:macro> <cpp:value>0x00000800L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_BLENDTEXTUREALPHA</name></cpp:macro> <cpp:value>0x00001000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_BLENDFACTORALPHA</name></cpp:macro> <cpp:value>0x00002000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_BLENDTEXTUREALPHAPM</name></cpp:macro> <cpp:value>0x00004000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_BLENDCURRENTALPHA</name></cpp:macro> <cpp:value>0x00008000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_PREMODULATE</name></cpp:macro> <cpp:value>0x00010000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA</name></cpp:macro> <cpp:value>0x00040000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR</name></cpp:macro> <cpp:value>0x00080000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA</name></cpp:macro> <cpp:value>0x00100000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_BUMPENVMAP</name></cpp:macro> <cpp:value>0x00200000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_BUMPENVMAPLUMINANCE</name></cpp:macro> <cpp:value>0x00400000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_DOTPRODUCT3</name></cpp:macro> <cpp:value>0x00800000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_MULTIPLYADD</name></cpp:macro> <cpp:value>0x01000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DTEXOPCAPS_LERP</name></cpp:macro> <cpp:value>0x02000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DFVFCAPS_TEXCOORDCOUNTMASK</name></cpp:macro> <cpp:value>0x0000ffffL</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DFVFCAPS_DONOTSTRIPELEMENTS</name></cpp:macro> <cpp:value>0x00080000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DFVFCAPS_PSIZE</name></cpp:macro> <cpp:value>0x00100000L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DVTXPCAPS_TEXGEN</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DVTXPCAPS_MATERIALSOURCE7</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DVTXPCAPS_DIRECTIONALLIGHTS</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DVTXPCAPS_POSITIONALLIGHTS</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DVTXPCAPS_LOCALVIEWER</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DVTXPCAPS_TWEENING</name></cpp:macro> <cpp:value>0x00000040L</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3DVTXPCAPS_NO_VSDT_UBYTE4</name></cpp:macro> <cpp:value>0x00000080L</cpp:value></cpp:define> 

<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>pack</name><name>(</name><name>)</name></cpp:pragma>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
