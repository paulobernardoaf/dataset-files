<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\linux-v4l2\v4l2-helpers.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/videodev2.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libv4l2.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;obs-module.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;media-io/video-io.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>v4l2_mmap_info</name> <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>start</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>v4l2_buffer_data</name> <block>{

<decl_stmt><decl><type><name>uint_fast32_t</name></type> <name>count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_mmap_info</name></name> <modifier>*</modifier></type><name>info</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>video_format</name></name></type> <name>v4l2_to_obs_video_format</name><parameter_list>(<parameter><decl><type><name>uint_fast32_t</name></type> <name>format</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>V4L2_PIX_FMT_YVYU</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_YVYU</name></expr>;</return>

<case>case <expr><name>V4L2_PIX_FMT_YUYV</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_YUY2</name></expr>;</return>

<case>case <expr><name>V4L2_PIX_FMT_UYVY</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_UYVY</name></expr>;</return>

<case>case <expr><name>V4L2_PIX_FMT_NV12</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_NV12</name></expr>;</return>

<case>case <expr><name>V4L2_PIX_FMT_YUV420</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_I420</name></expr>;</return>

<case>case <expr><name>V4L2_PIX_FMT_YVU420</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_I420</name></expr>;</return>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>V4L2_PIX_FMT_XBGR32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<case>case <expr><name>V4L2_PIX_FMT_XBGR32</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_BGRX</name></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>V4L2_PIX_FMT_ABGR32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<case>case <expr><name>V4L2_PIX_FMT_ABGR32</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_BGRA</name></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<case>case <expr><name>V4L2_PIX_FMT_BGR24</name></expr>:</case>

<return>return <expr><name>VIDEO_FORMAT_BGR3</name></expr>;</return>

<default>default:</default>

<return>return <expr><name>VIDEO_FORMAT_NONE</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>v4l2_framesizes</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">160</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">120</literal></expr>, <expr><literal type="number">320</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">240</literal></expr>, <expr><literal type="number">480</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">320</literal></expr>, <expr><literal type="number">640</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">480</literal></expr>,

<expr><literal type="number">800</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">600</literal></expr>, <expr><literal type="number">1024</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">768</literal></expr>, <expr><literal type="number">1280</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">960</literal></expr>, <expr><literal type="number">1440</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1050</literal></expr>,

<expr><literal type="number">1440</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1080</literal></expr>, <expr><literal type="number">1600</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1200</literal></expr>,

<expr><literal type="number">640</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">360</literal></expr>, <expr><literal type="number">960</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">540</literal></expr>, <expr><literal type="number">1280</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">720</literal></expr>, <expr><literal type="number">1600</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">900</literal></expr>,

<expr><literal type="number">1920</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1080</literal></expr>, <expr><literal type="number">1920</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1200</literal></expr>, <expr><literal type="number">2560</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1440</literal></expr>,

<expr><literal type="number">3840</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">2160</literal></expr>,

<expr><literal type="number">2560</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1080</literal></expr>, <expr><literal type="number">3440</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">1440</literal></expr>, <expr><literal type="number">5120</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">2160</literal></expr>,

<expr><literal type="number">432</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">520</literal></expr>, <expr><literal type="number">480</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">320</literal></expr>, <expr><literal type="number">480</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">530</literal></expr>, <expr><literal type="number">486</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">440</literal></expr>,

<expr><literal type="number">576</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">310</literal></expr>, <expr><literal type="number">576</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">520</literal></expr>, <expr><literal type="number">576</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">570</literal></expr>, <expr><literal type="number">720</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">576</literal></expr>,

<expr><literal type="number">1024</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">576</literal></expr>,

<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>v4l2_framerates</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">60</literal></expr>,

<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">50</literal></expr>,

<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">30</literal></expr>,

<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">25</literal></expr>,

<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">20</literal></expr>,

<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">15</literal></expr>,

<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">10</literal></expr>,

<expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <literal type="number">5</literal></expr>,

<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>v4l2_pack_tuple</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><name>a</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>b</name> <operator>&amp;</operator> <literal type="number">0xffff</literal><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>v4l2_unpack_tuple</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>packed</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>a</name> <operator>=</operator> <name>packed</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>b</name> <operator>=</operator> <name>packed</name> <operator>&amp;</operator> <literal type="number">0xffff</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_start_capture</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>v4l2_buffer_data</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_stop_capture</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_create_mmap</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>v4l2_buffer_data</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_destroy_mmap</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>v4l2_buffer_data</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_set_input</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_get_input_caps</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>input</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>caps</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_set_format</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>resolution</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>pixelformat</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>bytesperline</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_set_framerate</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>framerate</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_set_standard</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>standard</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_enum_dv_timing</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>v4l2_dv_timings</name></name> <modifier>*</modifier></type><name>dvt</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_fast32_t</name></type> <name>v4l2_set_dv_timing</name><parameter_list>(<parameter><decl><type><name>int_fast32_t</name></type> <name>dev</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>timing</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
