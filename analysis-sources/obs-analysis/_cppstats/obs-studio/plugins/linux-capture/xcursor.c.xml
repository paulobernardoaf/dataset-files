<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\linux-capture\xcursor.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;X11/extensions/Xfixes.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/bmem.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"xcursor.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>xcursor_pixels</name><parameter_list>(<parameter><decl><type><name>XFixesCursorImage</name> <modifier>*</modifier></type><name>xc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint_fast32_t</name></type> <name>size</name> <init>= <expr><name><name>xc</name><operator>-&gt;</operator><name>width</name></name> <operator>*</operator> <name><name>xc</name><operator>-&gt;</operator><name>height</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>pixels</name> <init>= <expr><call><name>bmalloc</name><argument_list>(<argument><expr><name>size</name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>uint_fast32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>pixels</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>xc</name><operator>-&gt;</operator><name>pixels</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<return>return <expr><name>pixels</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>xcursor_create</name><parameter_list>(<parameter><decl><type><name>xcursor_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>XFixesCursorImage</name> <modifier>*</modifier></type><name>xc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>pixels</name> <init>= <expr><call><name>xcursor_pixels</name><argument_list>(<argument><expr><name>xc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>pixels</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name> <operator>&amp;&amp;</operator> <name><name>data</name><operator>-&gt;</operator><name>last_height</name></name> <operator>==</operator> <name><name>xc</name><operator>-&gt;</operator><name>width</name></name> <operator>&amp;&amp;</operator>

<name><name>data</name><operator>-&gt;</operator><name>last_width</name></name> <operator>==</operator> <name><name>xc</name><operator>-&gt;</operator><name>height</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>gs_texture_set_image</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>uint8_t</name> <operator>*</operator><operator>)</operator><name>pixels</name></expr></argument>,

<argument><expr><name><name>xc</name><operator>-&gt;</operator><name>width</name></name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>False</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gs_texture_destroy</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name> <operator>=</operator> <call><name>gs_texture_create</name><argument_list>(<argument><expr><name><name>xc</name><operator>-&gt;</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>xc</name><operator>-&gt;</operator><name>height</name></name></expr></argument>, <argument><expr><name>GS_BGRA</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>uint8_t</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pixels</name></expr></argument>,

<argument><expr><name>GS_DYNAMIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>pixels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>last_serial</name></name> <operator>=</operator> <name><name>xc</name><operator>-&gt;</operator><name>cursor_serial</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>last_width</name></name> <operator>=</operator> <name><name>xc</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>last_height</name></name> <operator>=</operator> <name><name>xc</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>xcursor_t</name> <modifier>*</modifier></type><name>xcursor_init</name><parameter_list>(<parameter><decl><type><name>Display</name> <modifier>*</modifier></type><name>dpy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>xcursor_t</name> <modifier>*</modifier></type><name>data</name> <init>= <expr><call><name>bzalloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>xcursor_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>dpy</name></name> <operator>=</operator> <name>dpy</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>xcursor_tick</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>data</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>xcursor_destroy</name><parameter_list>(<parameter><decl><type><name>xcursor_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gs_texture_destroy</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>xcursor_tick</name><parameter_list>(<parameter><decl><type><name>xcursor_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>XFixesCursorImage</name> <modifier>*</modifier></type><name>xc</name> <init>= <expr><call><name>XFixesGetCursorImage</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>dpy</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>xc</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>data</name><operator>-&gt;</operator><name>tex</name></name> <operator>||</operator> <name><name>data</name><operator>-&gt;</operator><name>last_serial</name></name> <operator>!=</operator> <name><name>xc</name><operator>-&gt;</operator><name>cursor_serial</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>xcursor_create</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>xc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <operator>(</operator><name>int_fast32_t</name><operator>)</operator><name><name>xc</name><operator>-&gt;</operator><name>x</name></name> <operator>-</operator> <operator>(</operator><name>int_fast32_t</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>x_org</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <operator>(</operator><name>int_fast32_t</name><operator>)</operator><name><name>xc</name><operator>-&gt;</operator><name>y</name></name> <operator>-</operator> <operator>(</operator><name>int_fast32_t</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>y_org</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>render_x</name></name> <operator>=</operator> <name><name>xc</name><operator>-&gt;</operator><name>x</name></name> <operator>-</operator> <name><name>xc</name><operator>-&gt;</operator><name>xhot</name></name> <operator>-</operator> <name><name>data</name><operator>-&gt;</operator><name>x_org</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>render_y</name></name> <operator>=</operator> <name><name>xc</name><operator>-&gt;</operator><name>y</name></name> <operator>-</operator> <name><name>xc</name><operator>-&gt;</operator><name>yhot</name></name> <operator>-</operator> <name><name>data</name><operator>-&gt;</operator><name>y_org</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XFree</name><argument_list>(<argument><expr><name>xc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>xcursor_render</name><parameter_list>(<parameter><decl><type><name>xcursor_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x_offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y_offset</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>gs_effect_t</name> <modifier>*</modifier></type><name>effect</name> <init>= <expr><call><name>gs_get_effect</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gs_eparam_t</name> <modifier>*</modifier></type><name>image</name> <init>= <expr><call><name>gs_effect_get_param_by_name</name><argument_list>(<argument><expr><name>effect</name></expr></argument>, <argument><expr><literal type="string">"image"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gs_effect_set_texture</name><argument_list>(<argument><expr><name>image</name></expr></argument>, <argument><expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_blend_state_push</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_blend_function</name><argument_list>(<argument><expr><name>GS_BLEND_SRCALPHA</name></expr></argument>, <argument><expr><name>GS_BLEND_INVSRCALPHA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_enable_color</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_matrix_push</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_matrix_translate3f</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>render_x</name></name> <operator>+</operator> <name>x_offset</name></expr></argument>,

<argument><expr><name><name>data</name><operator>-&gt;</operator><name>render_y</name></name> <operator>+</operator> <name>y_offset</name></expr></argument>, <argument><expr><literal type="number">0.0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_draw_sprite</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>tex</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_matrix_pop</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_enable_color</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_blend_state_pop</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>xcursor_offset</name><parameter_list>(<parameter><decl><type><name>xcursor_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int_fast32_t</name></type> <name>x_org</name></decl></parameter>, <parameter><decl><type><name>int_fast32_t</name></type> <name>y_org</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>x_org</name></name> <operator>=</operator> <name>x_org</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>y_org</name></name> <operator>=</operator> <name>y_org</name></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
