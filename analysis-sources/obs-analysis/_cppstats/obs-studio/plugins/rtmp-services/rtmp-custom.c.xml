<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\rtmp-services\rtmp-custom.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;obs-module.h&gt;</cpp:file></cpp:include>

<struct>struct <name>rtmp_custom</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>server</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>use_auth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>username</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>password</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rtmp_custom_name</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>unused</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>UNUSED_PARAMETER</name><argument_list>(<argument><expr><name>unused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>obs_module_text</name><argument_list>(<argument><expr><literal type="string">"CustomStreamingServer"</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>rtmp_custom_update</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>rtmp_custom</name></name> <modifier>*</modifier></type><name>service</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>service</name><operator>-&gt;</operator><name>server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>service</name><operator>-&gt;</operator><name>key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>service</name><operator>-&gt;</operator><name>server</name></name> <operator>=</operator> <call><name>bstrdup</name><argument_list>(<argument><expr><call><name>obs_data_get_string</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><literal type="string">"server"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>service</name><operator>-&gt;</operator><name>key</name></name> <operator>=</operator> <call><name>bstrdup</name><argument_list>(<argument><expr><call><name>obs_data_get_string</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><literal type="string">"key"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>service</name><operator>-&gt;</operator><name>use_auth</name></name> <operator>=</operator> <call><name>obs_data_get_bool</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><literal type="string">"use_auth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>service</name><operator>-&gt;</operator><name>username</name></name> <operator>=</operator> <call><name>bstrdup</name><argument_list>(<argument><expr><call><name>obs_data_get_string</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><literal type="string">"username"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>service</name><operator>-&gt;</operator><name>password</name></name> <operator>=</operator> <call><name>bstrdup</name><argument_list>(<argument><expr><call><name>obs_data_get_string</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>rtmp_custom_destroy</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>rtmp_custom</name></name> <modifier>*</modifier></type><name>service</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>service</name><operator>-&gt;</operator><name>server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>service</name><operator>-&gt;</operator><name>key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>service</name><operator>-&gt;</operator><name>username</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>service</name><operator>-&gt;</operator><name>password</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>service</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>rtmp_custom_create</name><parameter_list>(<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>, <parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>rtmp_custom</name></name> <modifier>*</modifier></type><name>data</name> <init>= <expr><call><name>bzalloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>rtmp_custom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rtmp_custom_update</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>settings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNUSED_PARAMETER</name><argument_list>(<argument><expr><name>service</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>data</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>use_auth_modified</name><parameter_list>(<parameter><decl><type><name>obs_properties_t</name> <modifier>*</modifier></type><name>ppts</name></decl></parameter>, <parameter><decl><type><name>obs_property_t</name> <modifier>*</modifier></type><name>p</name></decl></parameter>,

<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>use_auth</name> <init>= <expr><call><name>obs_data_get_bool</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><literal type="string">"use_auth"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>p</name> <operator>=</operator> <call><name>obs_properties_get</name><argument_list>(<argument><expr><name>ppts</name></expr></argument>, <argument><expr><literal type="string">"username"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_property_set_visible</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>use_auth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p</name> <operator>=</operator> <call><name>obs_properties_get</name><argument_list>(<argument><expr><name>ppts</name></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_property_set_visible</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>use_auth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>obs_properties_t</name> <modifier>*</modifier></type><name>rtmp_custom_properties</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>unused</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>UNUSED_PARAMETER</name><argument_list>(<argument><expr><name>unused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>obs_properties_t</name> <modifier>*</modifier></type><name>ppts</name> <init>= <expr><call><name>obs_properties_create</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>obs_property_t</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>obs_properties_add_text</name><argument_list>(<argument><expr><name>ppts</name></expr></argument>, <argument><expr><literal type="string">"server"</literal></expr></argument>, <argument><expr><literal type="string">"URL"</literal></expr></argument>, <argument><expr><name>OBS_TEXT_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_text</name><argument_list>(<argument><expr><name>ppts</name></expr></argument>, <argument><expr><literal type="string">"key"</literal></expr></argument>, <argument><expr><call><name>obs_module_text</name><argument_list>(<argument><expr><literal type="string">"StreamKey"</literal></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>OBS_TEXT_PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p</name> <operator>=</operator> <call><name>obs_properties_add_bool</name><argument_list>(<argument><expr><name>ppts</name></expr></argument>, <argument><expr><literal type="string">"use_auth"</literal></expr></argument>,

<argument><expr><call><name>obs_module_text</name><argument_list>(<argument><expr><literal type="string">"UseAuth"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_text</name><argument_list>(<argument><expr><name>ppts</name></expr></argument>, <argument><expr><literal type="string">"username"</literal></expr></argument>, <argument><expr><call><name>obs_module_text</name><argument_list>(<argument><expr><literal type="string">"Username"</literal></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>OBS_TEXT_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_text</name><argument_list>(<argument><expr><name>ppts</name></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><call><name>obs_module_text</name><argument_list>(<argument><expr><literal type="string">"Password"</literal></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>OBS_TEXT_PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_property_set_modified_callback</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>use_auth_modified</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ppts</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rtmp_custom_url</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>rtmp_custom</name></name> <modifier>*</modifier></type><name>service</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>service</name><operator>-&gt;</operator><name>server</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rtmp_custom_key</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>rtmp_custom</name></name> <modifier>*</modifier></type><name>service</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>service</name><operator>-&gt;</operator><name>key</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rtmp_custom_username</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>rtmp_custom</name></name> <modifier>*</modifier></type><name>service</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>service</name><operator>-&gt;</operator><name>use_auth</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name><name>service</name><operator>-&gt;</operator><name>username</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rtmp_custom_password</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>rtmp_custom</name></name> <modifier>*</modifier></type><name>service</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>service</name><operator>-&gt;</operator><name>use_auth</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name><name>service</name><operator>-&gt;</operator><name>password</name></name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name><name>struct</name> <name>obs_service_info</name></name></type> <name>rtmp_custom_service</name> <init>= <expr><block>{

<expr><operator>.</operator><name>id</name> <operator>=</operator> <literal type="string">"rtmp_custom"</literal></expr>,

<expr><operator>.</operator><name>get_name</name> <operator>=</operator> <name>rtmp_custom_name</name></expr>,

<expr><operator>.</operator><name>create</name> <operator>=</operator> <name>rtmp_custom_create</name></expr>,

<expr><operator>.</operator><name>destroy</name> <operator>=</operator> <name>rtmp_custom_destroy</name></expr>,

<expr><operator>.</operator><name>update</name> <operator>=</operator> <name>rtmp_custom_update</name></expr>,

<expr><operator>.</operator><name>get_properties</name> <operator>=</operator> <name>rtmp_custom_properties</name></expr>,

<expr><operator>.</operator><name>get_url</name> <operator>=</operator> <name>rtmp_custom_url</name></expr>,

<expr><operator>.</operator><name>get_key</name> <operator>=</operator> <name>rtmp_custom_key</name></expr>,

<expr><operator>.</operator><name>get_username</name> <operator>=</operator> <name>rtmp_custom_username</name></expr>,

<expr><operator>.</operator><name>get_password</name> <operator>=</operator> <name>rtmp_custom_password</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
