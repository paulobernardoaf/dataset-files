<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\win-dshow\ffmpeg-decode.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;obs.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>push</name><name>)</name></cpp:pragma>

<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>disable</name> <name>:</name> <name>4244</name><name>)</name></cpp:pragma>

<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>disable</name> <name>:</name> <name>4204</name><name>)</name></cpp:pragma>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavcodec/avcodec.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavutil/log.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>pop</name><name>)</name></cpp:pragma>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>ffmpeg_decode</name> <block>{

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>decoder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>hw_frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>hw</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>packet_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>packet_size</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>ffmpeg_decode_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ffmpeg_decode</name></name> <modifier>*</modifier></type><name>decode</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>use_hw</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>ffmpeg_decode_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ffmpeg_decode</name></name> <modifier>*</modifier></type><name>decode</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>ffmpeg_decode_audio</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ffmpeg_decode</name></name> <modifier>*</modifier></type><name>decode</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>obs_source_audio</name></name> <modifier>*</modifier></type><name>audio</name></decl></parameter>,

<parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>got_output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>ffmpeg_decode_video</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ffmpeg_decode</name></name> <modifier>*</modifier></type><name>decode</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>ts</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>video_range_type</name></name></type> <name>range</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>obs_source_frame2</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,

<parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>got_output</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>ffmpeg_decode_valid</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ffmpeg_decode</name></name> <modifier>*</modifier></type><name>decode</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>decode</name><operator>-&gt;</operator><name>decoder</name></name> <operator>!=</operator> <name>NULL</name></expr>;</return>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
