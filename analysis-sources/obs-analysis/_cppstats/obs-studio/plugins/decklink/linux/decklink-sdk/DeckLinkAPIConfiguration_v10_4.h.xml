<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\decklink\linux\decklink-sdk\DeckLinkAPIConfiguration_v10_4.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DeckLinkAPIConfiguration.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>BMD_CONST</name> <name>REFIID</name></type> <name>IID_IDeckLinkConfiguration_v10_4</name> <init>= <expr><block>{<expr><literal type="number">0x1E</literal></expr>,<expr><literal type="number">0x69</literal></expr>,<expr><literal type="number">0xFC</literal></expr>,<expr><literal type="number">0xF6</literal></expr>,<expr><literal type="number">0x42</literal></expr>,<expr><literal type="number">0x03</literal></expr>,<expr><literal type="number">0x49</literal></expr>,<expr><literal type="number">0x36</literal></expr>,<expr><literal type="number">0x80</literal></expr>,<expr><literal type="number">0x76</literal></expr>,<expr><literal type="number">0x2A</literal></expr>,<expr><literal type="number">0x9F</literal></expr>,<expr><literal type="number">0x4C</literal></expr>,<expr><literal type="number">0xFD</literal></expr>,<expr><literal type="number">0x50</literal></expr>,<expr><literal type="number">0xCB</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>IDeckLinkConfiguration_v10_4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name> <name>BMD_PUBLIC</name></type> <name>IDeckLinkConfiguration_v10_4</name> <range>: <expr><name>public</name> <name>IUnknown</name>

<block>{

<expr><name>public</name><operator>:</operator>

<name>virtual</name> <name>HRESULT</name> <macro><name>SetFlag</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>bool value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetFlag</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>bool *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <macro><name>SetInt</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>int64_t value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetInt</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>int64_t *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <macro><name>SetFloat</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>double value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetFloat</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>double *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <macro><name>SetString</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>const char *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetString</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>const char **value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>virtual</name> <name>HRESULT</name> <call><name>WriteConfigurationToPreferences</name> <argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>protected</name><operator>:</operator>

<name>virtual</name> <operator>~</operator><macro><name>IDeckLinkConfiguration_v10_4</name> <argument_list>()</argument_list></macro> <block>{}</block></expr> 

}</block></expr></range></decl>;</decl_stmt>

</unit>
