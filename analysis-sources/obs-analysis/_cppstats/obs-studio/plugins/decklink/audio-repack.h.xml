<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\decklink\audio-repack.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;obs.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>audio_repack</name>;</struct_decl>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>audio_repack_func_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>audio_repack</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>packet_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>packet_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>base_src_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>base_dst_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>extra_dst_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>audio_repack_func_t</name></type> <name>repack_func</name></decl>;</decl_stmt>

}</block>;</struct>

<enum>enum <name>_audio_repack_mode</name> <block>{

<decl><name>repack_mode_8to3ch</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>repack_mode_8to4ch</name></decl>,

<decl><name>repack_mode_8to5ch</name></decl>,

<decl><name>repack_mode_8to6ch</name></decl>,

<decl><name>repack_mode_8to5ch_swap</name></decl>,

<decl><name>repack_mode_8to6ch_swap</name></decl>,

<decl><name>repack_mode_8ch_swap</name></decl>,

<decl><name>repack_mode_8ch</name></decl>,

}</block>;</enum>

<typedef>typedef <type><name><name>enum</name> <name>_audio_repack_mode</name></name></type> <name>audio_repack_mode_t</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>audio_repack_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type><name>repack</name></decl></parameter>,

<parameter><decl><type><name>audio_repack_mode_t</name></type> <name>repack_mode</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name></type> <name>sample_bit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>audio_repack_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type><name>repack</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
