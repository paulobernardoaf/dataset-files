<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats\obs-studio\plugins\obs-filters\color-correction-filter.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;obs-module.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;graphics/matrix4.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;graphics/quat.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETTING_GAMMA</name></cpp:macro> <cpp:value>"gamma"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETTING_CONTRAST</name></cpp:macro> <cpp:value>"contrast"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETTING_BRIGHTNESS</name></cpp:macro> <cpp:value>"brightness"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETTING_SATURATION</name></cpp:macro> <cpp:value>"saturation"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETTING_HUESHIFT</name></cpp:macro> <cpp:value>"hue_shift"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETTING_OPACITY</name></cpp:macro> <cpp:value>"opacity"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETTING_COLOR</name></cpp:macro> <cpp:value>"color"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXT_GAMMA</name></cpp:macro> <cpp:value>obs_module_text("Gamma")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXT_CONTRAST</name></cpp:macro> <cpp:value>obs_module_text("Contrast")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXT_BRIGHTNESS</name></cpp:macro> <cpp:value>obs_module_text("Brightness")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXT_SATURATION</name></cpp:macro> <cpp:value>obs_module_text("Saturation")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXT_HUESHIFT</name></cpp:macro> <cpp:value>obs_module_text("HueShift")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXT_OPACITY</name></cpp:macro> <cpp:value>obs_module_text("Opacity")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXT_COLOR</name></cpp:macro> <cpp:value>obs_module_text("Color")</cpp:value></cpp:define>

<struct>struct <name>color_correction_filter_data</name> <block>{

<decl_stmt><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>context</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gs_effect_t</name> <modifier>*</modifier></type><name>effect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gs_eparam_t</name> <modifier>*</modifier></type><name>gamma_param</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gs_eparam_t</name> <modifier>*</modifier></type><name>final_matrix_param</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>gamma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>contrast</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>brightness</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>saturation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>hue_shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>opacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec4</name></name></type> <name>color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>matrix4</name></name></type> <name>con_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>matrix4</name></name></type> <name>bright_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>matrix4</name></name></type> <name>sat_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>matrix4</name></name></type> <name>hue_op_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>matrix4</name></name></type> <name>color_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>matrix4</name></name></type> <name>final_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>rot_quaternion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>rot_quaternion_w</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>cross</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>square</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>wimag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>diag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>a_line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>b_line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vec3</name></name></type> <name>half_unit</name></decl>;</decl_stmt>

}</block>;</struct>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name>root3</name> <init>= <expr><literal type="number">0.57735f</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name>red_weight</name> <init>= <expr><literal type="number">0.299f</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name>green_weight</name> <init>= <expr><literal type="number">0.587f</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name>blue_weight</name> <init>= <expr><literal type="number">0.114f</literal></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>color_correction_filter_name</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>unused</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>UNUSED_PARAMETER</name><argument_list>(<argument><expr><name>unused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>obs_module_text</name><argument_list>(<argument><expr><literal type="string">"ColorFilter"</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>color_correction_filter_update</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>color_correction_filter_data</name></name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>gamma</name> <init>= <expr><call><name>obs_data_get_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_GAMMA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>gamma</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name>gamma</name> <operator>&lt;</operator> <literal type="number">0.0</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><operator>-</operator><name>gamma</name> <operator>+</operator> <literal type="number">1.0</literal><operator>)</operator></expr> </then><else>: <expr><operator>(</operator><literal type="number">1.0</literal> <operator>/</operator> <operator>(</operator><name>gamma</name> <operator>+</operator> <literal type="number">1.0</literal><operator>)</operator><operator>)</operator></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_set</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>gamma</name></name></expr></argument>, <argument><expr><operator>(</operator><name>float</name><operator>)</operator><name>gamma</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name><operator>)</operator><name>gamma</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name><operator>)</operator><name>gamma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>contrast</name></name> <operator>=</operator>

<operator>(</operator><name>float</name><operator>)</operator><call><name>obs_data_get_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_CONTRAST</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1.0f</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>one_minus_con</name> <init>= <expr><operator>(</operator><literal type="number">1.0f</literal> <operator>-</operator> <name><name>filter</name><operator>-&gt;</operator><name>contrast</name></name><operator>)</operator> <operator>/</operator> <literal type="number">2.0f</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>con_matrix</name></name> <operator>=</operator> <operator>(</operator>struct <name>matrix4</name><operator>)</operator><block>{<expr><name><name>filter</name><operator>-&gt;</operator><name>contrast</name></name></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>contrast</name></name></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>contrast</name></name></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name>one_minus_con</name></expr>,

<expr><name>one_minus_con</name></expr>,

<expr><name>one_minus_con</name></expr>,

<expr><literal type="number">1.0f</literal></expr>}</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>brightness</name></name> <operator>=</operator>

<operator>(</operator><name>float</name><operator>)</operator><call><name>obs_data_get_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_BRIGHTNESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>bright_matrix</name><operator>.</operator><name>t</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>brightness</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>bright_matrix</name><operator>.</operator><name>t</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>brightness</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>bright_matrix</name><operator>.</operator><name>t</name><operator>.</operator><name>z</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>brightness</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>saturation</name></name> <operator>=</operator>

<operator>(</operator><name>float</name><operator>)</operator><call><name>obs_data_get_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_SATURATION</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1.0f</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>one_minus_sat_red</name> <init>= <expr><operator>(</operator><literal type="number">1.0f</literal> <operator>-</operator> <name><name>filter</name><operator>-&gt;</operator><name>saturation</name></name><operator>)</operator> <operator>*</operator> <name>red_weight</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>one_minus_sat_green</name> <init>= <expr><operator>(</operator><literal type="number">1.0f</literal> <operator>-</operator> <name><name>filter</name><operator>-&gt;</operator><name>saturation</name></name><operator>)</operator> <operator>*</operator> <name>green_weight</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>one_minus_sat_blue</name> <init>= <expr><operator>(</operator><literal type="number">1.0f</literal> <operator>-</operator> <name><name>filter</name><operator>-&gt;</operator><name>saturation</name></name><operator>)</operator> <operator>*</operator> <name>blue_weight</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>sat_val_red</name> <init>= <expr><name>one_minus_sat_red</name> <operator>+</operator> <name><name>filter</name><operator>-&gt;</operator><name>saturation</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>sat_val_green</name> <init>= <expr><name>one_minus_sat_green</name> <operator>+</operator> <name><name>filter</name><operator>-&gt;</operator><name>saturation</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>sat_val_blue</name> <init>= <expr><name>one_minus_sat_blue</name> <operator>+</operator> <name><name>filter</name><operator>-&gt;</operator><name>saturation</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>sat_matrix</name></name> <operator>=</operator> <operator>(</operator>struct <name>matrix4</name><operator>)</operator><block>{<expr><name>sat_val_red</name></expr>,

<expr><name>one_minus_sat_red</name></expr>,

<expr><name>one_minus_sat_red</name></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name>one_minus_sat_green</name></expr>,

<expr><name>sat_val_green</name></expr>,

<expr><name>one_minus_sat_green</name></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name>one_minus_sat_blue</name></expr>,

<expr><name>one_minus_sat_blue</name></expr>,

<expr><name>sat_val_blue</name></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">1.0f</literal></expr>}</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>hue_shift</name></name> <operator>=</operator>

<operator>(</operator><name>float</name><operator>)</operator><call><name>obs_data_get_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_HUESHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>opacity</name></name> <operator>=</operator>

<operator>(</operator><name>float</name><operator>)</operator><call><name>obs_data_get_int</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_OPACITY</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">0.01f</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>half_angle</name> <init>= <expr><literal type="number">0.5f</literal> <operator>*</operator> <operator>(</operator><name>float</name><operator>)</operator><operator>(</operator><name><name>filter</name><operator>-&gt;</operator><name>hue_shift</name></name> <operator>/</operator> <operator>(</operator><literal type="number">180.0f</literal> <operator>/</operator> <name>M_PI</name><operator>)</operator><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>rot_quad1</name> <init>= <expr><name>root3</name> <operator>*</operator> <operator>(</operator><name>float</name><operator>)</operator><call><name>sin</name><argument_list>(<argument><expr><name>half_angle</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vec3_set</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion</name></name></expr></argument>, <argument><expr><name>rot_quad1</name></expr></argument>, <argument><expr><name>rot_quad1</name></expr></argument>, <argument><expr><name>rot_quad1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion_w</name></name> <operator>=</operator> <operator>(</operator><name>float</name><operator>)</operator><call><name>cos</name><argument_list>(<argument><expr><name>half_angle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>cross</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>square</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_mulf</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>wimag</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion</name></name></expr></argument>,

<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>rot_quaternion_w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_mulf</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>square</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>square</name></name></expr></argument>, <argument><expr><literal type="number">2.0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_sub</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>diag</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>half_unit</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>square</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_add</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>a_line</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>cross</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>wimag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_sub</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>b_line</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>cross</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>wimag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>hue_op_matrix</name></name> <operator>=</operator> <operator>(</operator>struct <name>matrix4</name><operator>)</operator><block>{<expr><name><name>filter</name><operator>-&gt;</operator><name>diag</name><operator>.</operator><name>x</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>b_line</name><operator>.</operator><name>z</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>a_line</name><operator>.</operator><name>y</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>a_line</name><operator>.</operator><name>z</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>diag</name><operator>.</operator><name>y</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>b_line</name><operator>.</operator><name>x</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>b_line</name><operator>.</operator><name>y</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>a_line</name><operator>.</operator><name>x</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>diag</name><operator>.</operator><name>z</name></name> <operator>*</operator> <literal type="number">2.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><literal type="number">0.0f</literal></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>opacity</name></name></expr>}</block></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>color</name> <init>= <expr><operator>(</operator><name>uint32_t</name><operator>)</operator><call><name>obs_data_get_int</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_COLOR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vec4_from_rgba</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>color</name></name></expr></argument>, <argument><expr><name>color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name><operator>.</operator><name>x</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name><operator>.</operator><name>y</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name><operator>.</operator><name>z</name><operator>.</operator><name>z</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>z</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name><operator>.</operator><name>t</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>w</name></name> <operator>*</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name><operator>.</operator><name>t</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>w</name></name> <operator>*</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name><operator>.</operator><name>t</name><operator>.</operator><name>z</name></name> <operator>=</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>w</name></name> <operator>*</operator> <name><name>filter</name><operator>-&gt;</operator><name>color</name><operator>.</operator><name>z</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>matrix4_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>bright_matrix</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>con_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>matrix4_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>sat_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>matrix4_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>hue_op_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>matrix4_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>color_correction_filter_destroy</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>color_correction_filter_data</name></name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>obs_enter_graphics</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_effect_destroy</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_leave_graphics</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>color_correction_filter_create</name><parameter_list>(<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>,

<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>color_correction_filter_data</name></name> <modifier>*</modifier></type><name>filter</name> <init>=

<expr><call><name>bzalloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>color_correction_filter_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>effect_path</name> <init>= <expr><call><name>obs_module_file</name><argument_list>(<argument><expr><literal type="string">"color_correction_filter.effect"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>context</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec3_set</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>half_unit</name></name></expr></argument>, <argument><expr><literal type="number">0.5f</literal></expr></argument>, <argument><expr><literal type="number">0.5f</literal></expr></argument>, <argument><expr><literal type="number">0.5f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>matrix4_identity</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>bright_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>matrix4_identity</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>color_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_enter_graphics</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name> <operator>=</operator> <call><name>gs_effect_create_from_file</name><argument_list>(<argument><expr><name>effect_path</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>gamma_param</name></name> <operator>=</operator> <call><name>gs_effect_get_param_by_name</name><argument_list>(

<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name></expr></argument>, <argument><expr><name>SETTING_GAMMA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>final_matrix_param</name></name> <operator>=</operator> <call><name>gs_effect_get_param_by_name</name><argument_list>(

<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name></expr></argument>, <argument><expr><literal type="string">"color_matrix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>obs_leave_graphics</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>effect_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>color_correction_filter_destroy</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>color_correction_filter_update</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>settings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>filter</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>color_correction_filter_render</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>gs_effect_t</name> <modifier>*</modifier></type><name>effect</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>color_correction_filter_data</name></name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>obs_source_process_filter_begin</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>context</name></name></expr></argument>, <argument><expr><name>GS_RGBA</name></expr></argument>,

<argument><expr><name>OBS_ALLOW_DIRECT_RENDERING</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>gs_effect_set_vec3</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>gamma_param</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>gamma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gs_effect_set_matrix4</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>final_matrix_param</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>final_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_source_process_filter_end</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>context</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>effect</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNUSED_PARAMETER</name><argument_list>(<argument><expr><name>effect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>obs_properties_t</name> <modifier>*</modifier></type><name>color_correction_filter_properties</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>obs_properties_t</name> <modifier>*</modifier></type><name>props</name> <init>= <expr><call><name>obs_properties_create</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>obs_properties_add_float_slider</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>SETTING_GAMMA</name></expr></argument>, <argument><expr><name>TEXT_GAMMA</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">3.0</literal></expr></argument>,

<argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><literal type="number">0.01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_float_slider</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>SETTING_CONTRAST</name></expr></argument>, <argument><expr><name>TEXT_CONTRAST</name></expr></argument>,

<argument><expr><operator>-</operator><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">0.01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_float_slider</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>SETTING_BRIGHTNESS</name></expr></argument>,

<argument><expr><name>TEXT_BRIGHTNESS</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">0.01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_float_slider</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>SETTING_SATURATION</name></expr></argument>,

<argument><expr><name>TEXT_SATURATION</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">5.0</literal></expr></argument>, <argument><expr><literal type="number">0.01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_float_slider</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>SETTING_HUESHIFT</name></expr></argument>, <argument><expr><name>TEXT_HUESHIFT</name></expr></argument>,

<argument><expr><operator>-</operator><literal type="number">180.0</literal></expr></argument>, <argument><expr><literal type="number">180.0</literal></expr></argument>, <argument><expr><literal type="number">0.01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_int_slider</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>SETTING_OPACITY</name></expr></argument>, <argument><expr><name>TEXT_OPACITY</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_properties_add_color</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>SETTING_COLOR</name></expr></argument>, <argument><expr><name>TEXT_COLOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNUSED_PARAMETER</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>props</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>color_correction_filter_defaults</name><parameter_list>(<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>obs_data_set_default_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_GAMMA</name></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_data_set_default_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_CONTRAST</name></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_data_set_default_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_BRIGHTNESS</name></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_data_set_default_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_SATURATION</name></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_data_set_default_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_HUESHIFT</name></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_data_set_default_double</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_OPACITY</name></expr></argument>, <argument><expr><literal type="number">100.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>obs_data_set_default_int</name><argument_list>(<argument><expr><name>settings</name></expr></argument>, <argument><expr><name>SETTING_COLOR</name></expr></argument>, <argument><expr><literal type="number">0xFFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><name><name>struct</name> <name>obs_source_info</name></name></type> <name>color_filter</name> <init>= <expr><block>{

<expr><operator>.</operator><name>id</name> <operator>=</operator> <literal type="string">"color_filter"</literal></expr>,

<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>OBS_SOURCE_TYPE_FILTER</name></expr>,

<expr><operator>.</operator><name>output_flags</name> <operator>=</operator> <name>OBS_SOURCE_VIDEO</name></expr>,

<expr><operator>.</operator><name>get_name</name> <operator>=</operator> <name>color_correction_filter_name</name></expr>,

<expr><operator>.</operator><name>create</name> <operator>=</operator> <name>color_correction_filter_create</name></expr>,

<expr><operator>.</operator><name>destroy</name> <operator>=</operator> <name>color_correction_filter_destroy</name></expr>,

<expr><operator>.</operator><name>video_render</name> <operator>=</operator> <name>color_correction_filter_render</name></expr>,

<expr><operator>.</operator><name>update</name> <operator>=</operator> <name>color_correction_filter_update</name></expr>,

<expr><operator>.</operator><name>get_properties</name> <operator>=</operator> <name>color_correction_filter_properties</name></expr>,

<expr><operator>.</operator><name>get_defaults</name> <operator>=</operator> <name>color_correction_filter_defaults</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
