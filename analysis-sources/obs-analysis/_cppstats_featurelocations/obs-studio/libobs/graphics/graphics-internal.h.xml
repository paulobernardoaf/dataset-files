<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\libobs\graphics\graphics-internal.h">
















<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../util/threading.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../util/darray.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"graphics.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"matrix3.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"matrix4.h"</cpp:file></cpp:include>

<struct>struct <name>gs_exports</name> <block>{
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_get_name</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>device_get_type</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>device_enum_adapters</name>)<parameter_list>(<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list></function_decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_preprocessor_name</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>device_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>adapter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_enter_context</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_leave_context</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_get_device_obj</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_swapchain_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_swapchain_create</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_init_data</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_resize</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_get_size</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>x</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>y</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>device_get_width</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>device_get_height</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_texture_create</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>levels</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_cubetexture_create</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>size</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>levels</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_voltexture_create</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>depth</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>levels</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_zstencil_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_zstencil_create</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_zstencil_format</name></name></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_stagesurf_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_stagesurface_create</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> <name>color_format</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_samplerstate_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_samplerstate_create</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_sampler_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_shader_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_vertexshader_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>,
<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>error_string</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_shader_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_pixelshader_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>,
<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>error_string</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_vertexbuffer_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>gs_vb_data</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_indexbuffer_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_index_type</name></name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>indices</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>num</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_timer_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_timer_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_timer_range_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_timer_range_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>gs_texture_type</name></name></type> (<modifier>*</modifier><name>device_get_texture_type</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>texture</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_vertexbuffer</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>vertbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_indexbuffer</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_texture</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>unit</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_samplerstate</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_samplerstate_t</name> <modifier>*</modifier></type><name>samplerstate</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>unit</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_vertexshader</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_shader_t</name> <modifier>*</modifier></type><name>vertshader</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_pixelshader</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_shader_t</name> <modifier>*</modifier></type><name>pixelshader</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_default_samplerstate</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_3d</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>unit</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_shader_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_get_vertex_shader</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_shader_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_get_pixel_shader</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_get_render_target</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_zstencil_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_get_zstencil_target</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_set_render_target</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>,
<parameter><decl><type><name>gs_zstencil_t</name> <modifier>*</modifier></type><name>zstencil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_set_cube_render_target</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>cubetex</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>side</name></decl></parameter>,
<parameter><decl><type><name>gs_zstencil_t</name> <modifier>*</modifier></type><name>zstencil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_copy_texture</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_copy_texture_region</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>dst_x</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>dst_y</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>src_x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>src_y</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>src_w</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>src_h</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_stage_texture</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_begin_frame</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_begin_scene</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_draw</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>gs_draw_mode</name></name></type> <name>draw_mode</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>start_vert</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>num_verts</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_end_scene</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_load_swapchain</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_swapchain_t</name> <modifier>*</modifier></type><name>swaphchain</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_clear</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>clear_flags</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec4</name></name> <modifier>*</modifier></type><name>color</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>depth</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name></type> <name>stencil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_present</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_flush</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_set_cull_mode</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_cull_mode</name></name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>gs_cull_mode</name></name></type> (<modifier>*</modifier><name>device_get_cull_mode</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_enable_blending</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_enable_depth_test</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_enable_stencil_test</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_enable_stencil_write</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_enable_color</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>red</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>green</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>blue</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>alpha</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_blend_function</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_blend_function_separate</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src_c</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest_c</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src_a</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest_a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_depth_function</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_depth_test</name></name></type> <name>test</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_stencil_function</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_stencil_side</name></name></type> <name>side</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_depth_test</name></name></type> <name>test</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_stencil_op</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_stencil_side</name></name></type> <name>side</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_stencil_op_type</name></name></type> <name>fail</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_stencil_op_type</name></name></type> <name>zfail</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gs_stencil_op_type</name></name></type> <name>zpass</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_set_viewport</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_get_viewport</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>gs_rect</name></name> <modifier>*</modifier></type><name>rect</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_set_scissor_rect</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_rect</name></name> <modifier>*</modifier></type><name>rect</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_ortho</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>right</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>bottom</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>znear</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>zfar</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_frustum</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>right</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>bottom</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>znear</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>zfar</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_projection_push</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_projection_pop</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_swapchain_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_swapchain_t</name> <modifier>*</modifier></type><name>swapchain</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_texture_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_texture_get_width</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_texture_get_height</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> (<modifier>*</modifier><name>gs_texture_get_color_format</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_texture_map</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>ptr</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>linesize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_texture_unmap</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_texture_is_rect</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_texture_get_obj</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_cubetexture_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>cubetex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_cubetexture_get_size</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>cubetex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> (<modifier>*</modifier><name>gs_cubetexture_get_color_format</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>cubetex</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_voltexture_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>voltex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_voltexture_get_width</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>voltex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_voltexture_get_height</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>voltex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_voltexture_get_depth</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>voltex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> (<modifier>*</modifier><name>gs_voltexture_get_color_format</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_texture_t</name> <modifier>*</modifier></type><name>voltex</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_stagesurface_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>stagesurf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_stagesurface_get_width</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>stagesurf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>gs_stagesurface_get_height</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>stagesurf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>gs_color_format</name></name></type> (<modifier>*</modifier><name>gs_stagesurface_get_color_format</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>stagesurf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_stagesurface_map</name>)<parameter_list>(<parameter><decl><type><name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>stagesurf</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>linesize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_stagesurface_unmap</name>)<parameter_list>(<parameter><decl><type><name>gs_stagesurf_t</name> <modifier>*</modifier></type><name>stagesurf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_zstencil_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_zstencil_t</name> <modifier>*</modifier></type><name>zstencil</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_samplerstate_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_samplerstate_t</name> <modifier>*</modifier></type><name>samplerstate</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_vertexbuffer_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>vertbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_vertexbuffer_flush</name>)<parameter_list>(<parameter><decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>vertbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_vertexbuffer_flush_direct</name>)<parameter_list>(<parameter><decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>vertbuffer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_vb_data</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>gs_vb_data</name></name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_vertexbuffer_get_data</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>vertbuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_indexbuffer_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_indexbuffer_flush</name>)<parameter_list>(<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_indexbuffer_flush_direct</name>)<parameter_list>(<parameter><decl><type><name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_indexbuffer_get_data</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> (<modifier>*</modifier><name>gs_indexbuffer_get_num_indices</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>gs_index_type</name></name></type> (<modifier>*</modifier><name>gs_indexbuffer_get_type</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>gs_indexbuffer_t</name> <modifier>*</modifier></type><name>indexbuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_timer_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_t</name> <modifier>*</modifier></type><name>timer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_timer_begin</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_t</name> <modifier>*</modifier></type><name>timer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_timer_end</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_t</name> <modifier>*</modifier></type><name>timer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_timer_get_data</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_t</name> <modifier>*</modifier></type><name>timer</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>ticks</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_timer_range_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_range_t</name> <modifier>*</modifier></type><name>range</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_timer_range_begin</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_range_t</name> <modifier>*</modifier></type><name>range</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_timer_range_end</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_range_t</name> <modifier>*</modifier></type><name>range</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_timer_range_get_data</name>)<parameter_list>(<parameter><decl><type><name>gs_timer_range_t</name> <modifier>*</modifier></type><name>range</name></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>disjoint</name></decl></parameter>,
<parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>frequency</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_shader_t</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>gs_shader_get_num_params</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_shader_t</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_shader_get_param_by_idx</name>)<parameter_list>(<parameter><decl><type><name>gs_shader_t</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>param</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_shader_get_param_by_name</name>)<parameter_list>(<parameter><decl><type><name>gs_shader_t</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_shader_get_viewproj_matrix</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_shader_t</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_shader_get_world_matrix</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_shader_t</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_get_param_info</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>gs_shader_param_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_bool</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_float</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_int</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_matrix3</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>matrix3</name></name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_matrix4</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>matrix4</name></name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_vec2</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec2</name></name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_vec3</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec3</name></name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_vec4</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vec4</name></name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_texture</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_val</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>val</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_default</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_shader_set_next_sampler</name>)<parameter_list>(<parameter><decl><type><name>gs_sparam_t</name> <modifier>*</modifier></type><name>param</name></decl></parameter>,
<parameter><decl><type><name>gs_samplerstate_t</name> <modifier>*</modifier></type><name>sampler</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>device_nv12_available</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_debug_marker_begin</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>markername</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>color</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_debug_marker_end</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_texture_create_from_iosurface</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iosurf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_texture_rebind_iosurface</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>texture</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iosurf</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>_WIN32</name></expr></cpp:elif>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>device_gdi_texture_available</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>device_shared_texture_available</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>device_get_duplicator_monitor_info</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>monitor_idx</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>gs_monitor_info</name></name> <modifier>*</modifier></type><name>monitor_info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>gs_duplicator_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_duplicator_create</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>monitor_idx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_duplicator_destroy</name>)<parameter_list>(<parameter><decl><type><name>gs_duplicator_t</name> <modifier>*</modifier></type><name>duplicator</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>gs_duplicator_update_frame</name>)<parameter_list>(<parameter><decl><type><name>gs_duplicator_t</name> <modifier>*</modifier></type><name>duplicator</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_duplicator_get_texture</name>)<parameter_list>(<parameter><decl><type><name>gs_duplicator_t</name> <modifier>*</modifier></type><name>duplicator</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_texture_create_gdi</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>gs_texture_get_dc</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>gdi_tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>gs_texture_release_dc</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>gdi_tex</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>gs_texture_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_texture_open_shared</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>handle</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>device_texture_get_shared_handle</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>device_texture_acquire_sync</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>key</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>ms</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>device_texture_release_sync</name>)<parameter_list>(<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier></type><name>tex</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>device_texture_create_nv12</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>tex_y</name></decl></parameter>,
<parameter><decl><type><name>gs_texture_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>tex_uv</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>gs_stagesurf_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>device_stagesurface_create_nv12</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>width</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_register_loss_callbacks</name>)<parameter_list>(
<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>gs_device_loss</name></name> <modifier>*</modifier></type><name>callbacks</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>device_unregister_loss_callbacks</name>)<parameter_list>(<parameter><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block>;</struct>

<struct>struct <name>blend_state</name> <block>{
<decl_stmt><decl><type><name>bool</name></type> <name>enabled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src_c</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest_c</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>src_a</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>gs_blend_type</name></name></type> <name>dest_a</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>graphics_subsystem</name> <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>module</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>gs_device_t</name> <modifier>*</modifier></type><name>device</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>gs_exports</name></name></type> <name>exports</name></decl>;</decl_stmt>

<macro><name>DARRAY</name><argument_list>(<argument>struct gs_rect</argument>)</argument_list></macro> <expr_stmt><expr><name>viewport_stack</name></expr>;</expr_stmt>

<macro><name>DARRAY</name><argument_list>(<argument>struct matrix4</argument>)</argument_list></macro> <expr_stmt><expr><name>matrix_stack</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>cur_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>matrix4</name></name></type> <name>projection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>gs_effect</name></name> <modifier>*</modifier></type><name>cur_effect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>sprite_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>using_immediate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>gs_vb_data</name></name> <modifier>*</modifier></type><name>vbd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>gs_vertbuffer_t</name> <modifier>*</modifier></type><name>immediate_vertbuffer</name></decl>;</decl_stmt>
<macro><name>DARRAY</name><argument_list>(<argument>struct vec3</argument>)</argument_list></macro> <expr_stmt><expr><name>verts</name></expr>;</expr_stmt>
<macro><name>DARRAY</name><argument_list>(<argument>struct vec3</argument>)</argument_list></macro> <expr_stmt><expr><name>norms</name></expr>;</expr_stmt>
<macro><name>DARRAY</name><argument_list>(<argument>uint32_t</argument>)</argument_list></macro> <expr_stmt><expr><name>colors</name></expr>;</expr_stmt>
<macro><name>DARRAY</name><argument_list>(<argument>struct vec2</argument>)</argument_list></macro> <expr_stmt><expr><name><name>texverts</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>pthread_mutex_t</name></type> <name>effect_mutex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>gs_effect</name></name> <modifier>*</modifier></type><name>first_effect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>pthread_mutex_t</name></type> <name>mutex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>volatile</specifier> <name>long</name></type> <name>ref</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>blend_state</name></name></type> <name>cur_blend_state</name></decl>;</decl_stmt>
<macro><name>DARRAY</name><argument_list>(<argument>struct blend_state</argument>)</argument_list></macro> <expr_stmt><expr><name>blend_state_stack</name></expr>;</expr_stmt>
}</block>;</struct>
</unit>
