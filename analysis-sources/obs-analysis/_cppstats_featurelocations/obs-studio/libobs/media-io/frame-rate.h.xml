<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\libobs\media-io\frame-rate.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>media_frames_per_second</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>numerator</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>denominator</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>double</name></type>
<name>media_frames_per_second_to_frame_interval</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>media_frames_per_second</name></name></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>double</name><operator>)</operator><name><name>fps</name><operator>.</operator><name>denominator</name></name> <operator>/</operator> <name><name>fps</name><operator>.</operator><name>numerator</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>double</name></type>
<name>media_frames_per_second_to_fps</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>media_frames_per_second</name></name></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>double</name><operator>)</operator><name><name>fps</name><operator>.</operator><name>numerator</name></name> <operator>/</operator> <name><name>fps</name><operator>.</operator><name>denominator</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>
<name>media_frames_per_second_is_valid</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>media_frames_per_second</name></name></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>fps</name><operator>.</operator><name>numerator</name></name> <operator>&amp;&amp;</operator> <name><name>fps</name><operator>.</operator><name>denominator</name></name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
