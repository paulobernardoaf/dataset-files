<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\libobs\util\sse-intrin.h">
















<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>NEEDS_SIMDE</name></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"simde/sse2.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__m128</name></cpp:macro> <cpp:value>simde__m128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_setzero_ps</name></cpp:macro> <cpp:value>simde_mm_setzero_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_set_ps</name></cpp:macro> <cpp:value>simde_mm_set_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_add_ps</name></cpp:macro> <cpp:value>simde_mm_add_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_sub_ps</name></cpp:macro> <cpp:value>simde_mm_sub_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mul_ps</name></cpp:macro> <cpp:value>simde_mm_mul_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_div_ps</name></cpp:macro> <cpp:value>simde_mm_div_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_set1_ps</name></cpp:macro> <cpp:value>simde_mm_set1_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_movehl_ps</name></cpp:macro> <cpp:value>simde_mm_movehl_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_shuffle_ps</name></cpp:macro> <cpp:value>simde_mm_shuffle_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_min_ps</name></cpp:macro> <cpp:value>simde_mm_min_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_max_ps</name></cpp:macro> <cpp:value>simde_mm_max_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_movelh_ps</name></cpp:macro> <cpp:value>simde_mm_movelh_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_unpacklo_ps</name></cpp:macro> <cpp:value>simde_mm_unpacklo_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_unpackhi_ps</name></cpp:macro> <cpp:value>simde_mm_unpackhi_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_load_ps</name></cpp:macro> <cpp:value>simde_mm_load_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_andnot_ps</name></cpp:macro> <cpp:value>simde_mm_andnot_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_storeu_ps</name></cpp:macro> <cpp:value>simde_mm_storeu_ps</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_loadu_ps</name></cpp:macro> <cpp:value>simde_mm_loadu_ps</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__m128i</name></cpp:macro> <cpp:value>simde__m128i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_set1_epi32</name></cpp:macro> <cpp:value>simde_mm_set1_epi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_set1_epi16</name></cpp:macro> <cpp:value>simde_mm_set1_epi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_load_si128</name></cpp:macro> <cpp:value>simde_mm_load_si128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_packs_epi32</name></cpp:macro> <cpp:value>simde_mm_packs_epi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_srli_si128</name></cpp:macro> <cpp:value>simde_mm_srli_si128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_and_si128</name></cpp:macro> <cpp:value>simde_mm_and_si128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_packus_epi16</name></cpp:macro> <cpp:value>simde_mm_packus_epi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_add_epi64</name></cpp:macro> <cpp:value>simde_mm_add_epi64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_shuffle_epi32</name></cpp:macro> <cpp:value>simde_mm_shuffle_epi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_srai_epi16</name></cpp:macro> <cpp:value>simde_mm_srai_epi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_shufflelo_epi16</name></cpp:macro> <cpp:value>simde_mm_shufflelo_epi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_storeu_si128</name></cpp:macro> <cpp:value>simde_mm_storeu_si128</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_SHUFFLE</name></cpp:macro> <cpp:value>SIMDE_MM_SHUFFLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_TRANSPOSE4_PS</name></cpp:macro> <cpp:value>SIMDE_MM_TRANSPOSE4_PS</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;xmmintrin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;emmintrin.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
