<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\UI\obs-frontend-api\obs-frontend-api.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;obs.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/darray.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct_decl>struct <name>config_data</name>;</struct_decl>
<typedef>typedef <type><name><name>struct</name> <name>config_data</name></name></type> <name>config_t</name>;</typedef>

<struct_decl>struct <name>obs_data</name>;</struct_decl>
<typedef>typedef <type><name><name>struct</name> <name>obs_data</name></name></type> <name>obs_data_t</name>;</typedef>

<enum>enum <name>obs_frontend_event</name> <block>{
<decl><name>OBS_FRONTEND_EVENT_STREAMING_STARTING</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_STREAMING_STARTED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_STREAMING_STOPPING</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_STREAMING_STOPPED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_RECORDING_STARTING</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_RECORDING_STARTED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_RECORDING_STOPPING</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_RECORDING_STOPPED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_SCENE_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_SCENE_LIST_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_TRANSITION_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_TRANSITION_STOPPED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_TRANSITION_LIST_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_SCENE_COLLECTION_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_SCENE_COLLECTION_LIST_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_PROFILE_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_PROFILE_LIST_CHANGED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_EXIT</name></decl>,

<decl><name>OBS_FRONTEND_EVENT_REPLAY_BUFFER_STARTING</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_REPLAY_BUFFER_STARTED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_REPLAY_BUFFER_STOPPING</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_REPLAY_BUFFER_STOPPED</name></decl>,

<decl><name>OBS_FRONTEND_EVENT_STUDIO_MODE_ENABLED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_STUDIO_MODE_DISABLED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_PREVIEW_SCENE_CHANGED</name></decl>,

<decl><name>OBS_FRONTEND_EVENT_SCENE_COLLECTION_CLEANUP</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_FINISHED_LOADING</name></decl>,

<decl><name>OBS_FRONTEND_EVENT_RECORDING_PAUSED</name></decl>,
<decl><name>OBS_FRONTEND_EVENT_RECORDING_UNPAUSED</name></decl>,

<decl><name>OBS_FRONTEND_EVENT_TRANSITION_DURATION_CHANGED</name></decl>,
}</block>;</enum>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWIG</name></expr></argument>)</argument_list></call></expr></cpp:if>

<struct>struct <name>obs_frontend_source_list</name> <block>{
<macro><name>DARRAY</name><argument_list>(<argument>obs_source_t *</argument>)</argument_list></macro> <expr_stmt><expr><name>sources</name></expr>;</expr_stmt>
}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>
<name>obs_frontend_source_list_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_frontend_source_list</name></name> <modifier>*</modifier></type><name>source_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>num</name> <init>= <expr><name><name>source_list</name><operator>-&gt;</operator><name>sources</name><operator>.</operator><name>num</name></name></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>num</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>obs_source_release</name><argument_list>(<argument><expr><name><name>source_list</name><operator>-&gt;</operator><name>sources</name><operator>.</operator><name>array</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>da_free</name><argument_list>(<argument><expr><name><name>source_list</name><operator>-&gt;</operator><name>sources</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 














<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWIG</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_frontend_get_main_window</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_frontend_get_main_window_handle</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_frontend_get_system_tray</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>obs_frontend_get_scene_names</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_get_scenes</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_frontend_source_list</name></name> <modifier>*</modifier></type><name>sources</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_frontend_get_current_scene</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_current_scene</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type>
<name>obs_frontend_get_transitions</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>obs_frontend_source_list</name></name> <modifier>*</modifier></type><name>sources</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_frontend_get_current_transition</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_current_transition</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>transition</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>int</name></type> <name>obs_frontend_get_transition_duration</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_transition_duration</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>duration</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>obs_frontend_get_scene_collections</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier></type><name>obs_frontend_get_current_scene_collection</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_current_scene_collection</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>collection</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_frontend_add_scene_collection</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>obs_frontend_get_profiles</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>char</name> <modifier>*</modifier></type><name>obs_frontend_get_current_profile</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_current_profile</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>profile</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_frontend_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_frontend_add_tools_menu_qaction</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_add_tools_menu_item</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>obs_frontend_cb</name></type> <name>callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EXPORT</name> <name>void</name> <modifier>*</modifier></type><name>obs_frontend_add_dock</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dock</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_frontend_event_cb</name>)<parameter_list>(<parameter><decl><type><name><name>enum</name> <name>obs_frontend_event</name></name></type> <name>event</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_add_event_callback</name><parameter_list>(<parameter><decl><type><name>obs_frontend_event_cb</name></type> <name>callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_remove_event_callback</name><parameter_list>(<parameter><decl><type><name>obs_frontend_event_cb</name></type> <name>callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>obs_frontend_save_cb</name>)<parameter_list>(<parameter><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>save_data</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>saving</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_add_save_callback</name><parameter_list>(<parameter><decl><type><name>obs_frontend_save_cb</name></type> <name>callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_remove_save_callback</name><parameter_list>(<parameter><decl><type><name>obs_frontend_save_cb</name></type> <name>callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_add_preload_callback</name><parameter_list>(<parameter><decl><type><name>obs_frontend_save_cb</name></type> <name>callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_remove_preload_callback</name><parameter_list>(<parameter><decl><type><name>obs_frontend_save_cb</name></type> <name>callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>private_data</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>obs_frontend_translate_ui_cb</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>EXPORT</name> <name>void</name></type>
<name>obs_frontend_push_ui_translation</name><parameter_list>(<parameter><decl><type><name>obs_frontend_translate_ui_cb</name></type> <name>translate</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_pop_ui_translation</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_streaming_start</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_streaming_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_frontend_streaming_active</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_recording_start</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_recording_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_frontend_recording_active</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_recording_pause</name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>pause</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_frontend_recording_paused</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_replay_buffer_start</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_replay_buffer_save</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_replay_buffer_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_frontend_replay_buffer_active</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_open_projector</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>monitor</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>geometry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_save</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_defer_save_begin</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_defer_save_end</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_output_t</name> <modifier>*</modifier></type><name>obs_frontend_get_streaming_output</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>obs_output_t</name> <modifier>*</modifier></type><name>obs_frontend_get_recording_output</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>obs_output_t</name> <modifier>*</modifier></type><name>obs_frontend_get_replay_buffer_output</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>config_t</name> <modifier>*</modifier></type><name>obs_frontend_get_profile_config</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>config_t</name> <modifier>*</modifier></type><name>obs_frontend_get_global_config</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_streaming_service</name><parameter_list>(<parameter><decl><type><name>obs_service_t</name> <modifier>*</modifier></type><name>service</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>obs_service_t</name> <modifier>*</modifier></type><name>obs_frontend_get_streaming_service</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_save_streaming_service</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_frontend_preview_program_mode_active</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_preview_program_mode</name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_preview_program_trigger_transition</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_preview_enabled</name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>bool</name></type> <name>obs_frontend_preview_enabled</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EXPORT</name> <name>obs_source_t</name> <modifier>*</modifier></type><name>obs_frontend_get_current_preview_scene</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EXPORT</name> <name>void</name></type> <name>obs_frontend_set_current_preview_scene</name><parameter_list>(<parameter><decl><type><name>obs_source_t</name> <modifier>*</modifier></type><name>scene</name></decl></parameter>)</parameter_list>;</function_decl>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
