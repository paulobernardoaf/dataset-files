<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\libff\libff\ff-decoder.h">















<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ff-callbacks.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ff-circular-queue.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ff-clock.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ff-packet-queue.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ff-timer.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>ff_decoder</name> <block>{
<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>codec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>pthread_t</name></type> <name>decoder_thread</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ff_timer</name></name></type> <name>refresh_timer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ff_callbacks</name></name> <modifier>*</modifier></type><name>callbacks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ff_packet_queue</name></name></type> <name>packet_queue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ff_circular_queue</name></name></type> <name>frame_queue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>packet_queue_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>timer_next_wake</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>previous_pts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name></type> <name>previous_pts_diff</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name></type> <name>predicted_pts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name></type> <name>current_pts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>current_pts_time</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>start_pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>hwaccel_decoder</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVDiscard</name></name></type> <name>frame_drop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>clock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>ff_av_sync_type</name></name></type> <name>natural_sync_clock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>first_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>eof</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>abort</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>finished</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>ff_decoder</name></name></type> <name>ff_decoder_t</name>;</typedef>

<function_decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>ff_decoder_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>codec_context</name></decl></parameter>,
<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>packet_queue_size</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>frame_queue_size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ff_decoder_start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_decoder_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>ff_decoder_full</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ff_decoder_accept</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>ff_packet</name></name> <modifier>*</modifier></type><name>packet</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>double</name></type> <name>ff_decoder_clock</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_decoder_schedule_refresh</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delay</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_decoder_refresh</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>double</name></type> <name>ff_decoder_get_best_effort_pts</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>,
<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>ff_decoder_set_frame_drop_state</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_decoder</name></name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>start_time</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
