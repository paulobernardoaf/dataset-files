<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\libff\libff\ff-callbacks.h">















<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ff-frame.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavcodec/avcodec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>ff_callback_frame</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>ff_callback_format</name>)<parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>codec_context</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>ff_callback_initialize</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>ff_callbacks</name> <block>{
<decl_stmt><decl><type><name>ff_callback_frame</name></type> <name>frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ff_callback_format</name></type> <name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ff_callback_initialize</name></type> <name>initialize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ff_callback_frame</name></type> <name>frame_initialize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ff_callback_frame</name></type> <name>frame_free</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>bool</name></type> <name>ff_callbacks_frame</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_callbacks</name></name> <modifier>*</modifier></type><name>callbacks</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>ff_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ff_callbacks_format</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_callbacks</name></name> <modifier>*</modifier></type><name>callbacks</name></decl></parameter>,
<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>codec_context</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ff_callbacks_initialize</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_callbacks</name></name> <modifier>*</modifier></type><name>callbacks</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ff_callbacks_frame_initialize</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>ff_callbacks</name></name> <modifier>*</modifier></type><name>callbacks</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ff_callbacks_frame_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_frame</name></name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>ff_callbacks</name></name> <modifier>*</modifier></type><name>callbacks</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
