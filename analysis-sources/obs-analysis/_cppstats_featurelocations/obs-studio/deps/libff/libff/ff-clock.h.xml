<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\libff\libff\ff-clock.h">















<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_SYNC_THRESHOLD</name></cpp:macro> <cpp:value>0.01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_NOSYNC_THRESHOLD</name></cpp:macro> <cpp:value>10.0</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;pthread.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <name>ff_av_sync_type</name> <block>{
<decl><name>AV_SYNC_AUDIO_MASTER</name></decl>,
<decl><name>AV_SYNC_VIDEO_MASTER</name></decl>,
<decl><name>AV_SYNC_EXTERNAL_MASTER</name></decl>,
}</block>;</enum>

<typedef>typedef <function_decl><type><name>double</name></type> (<modifier>*</modifier><name>ff_sync_clock</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>ff_clock</name> <block>{
<decl_stmt><decl><type><name>ff_sync_clock</name></type> <name>sync_clock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>ff_av_sync_type</name></name></type> <name>sync_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>start_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>pthread_mutex_t</name></type> <name>mutex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>pthread_cond_t</name></type> <name>cond</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>volatile</specifier> <name>long</name></type> <name>retain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>started</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>ff_clock</name></name></type> <name>ff_clock_t</name>;</typedef>

<function_decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>ff_clock_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>ff_get_sync_clock</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>clock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>ff_clock_retain</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>clock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>ff_clock_move</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>clock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_clock_release</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>clock</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int64_t</name></type> <name>ff_clock_start_time</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>clock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ff_clock_start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ff_clock</name></name> <modifier>*</modifier></type><name>clock</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>ff_av_sync_type</name></name></type> <name>sync_type</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>bool</name> <modifier>*</modifier></type><name>abort</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
