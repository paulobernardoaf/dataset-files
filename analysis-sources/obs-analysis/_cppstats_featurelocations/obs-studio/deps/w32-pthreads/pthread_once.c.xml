<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\w32-pthreads\pthread_once.c">



































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pthread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"implement.h"</cpp:file></cpp:include>

<function><type><name>int</name></type>
<name>pthread_once</name> <parameter_list>(<parameter><decl><type><name>pthread_once_t</name> <modifier>*</modifier></type> <name>once_control</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<name>PTW32_CDECL</name> <modifier>*</modifier><name>init_routine</name>) <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>once_control</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>init_routine</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<return>return <expr><name>EINVAL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>PTW32_INTERLOCKED_LONG</name><operator>)</operator><name>PTW32_FALSE</name> <operator>==</operator>
<operator>(</operator><name>PTW32_INTERLOCKED_LONG</name><operator>)</operator><call><name>PTW32_INTERLOCKED_EXCHANGE_ADD_LONG</name><argument_list>(<argument><expr><operator>(</operator><name>PTW32_INTERLOCKED_LONGPTR</name><operator>)</operator><operator>&amp;</operator><name><name>once_control</name><operator>-&gt;</operator><name>done</name></name></expr></argument>,
<argument><expr><operator>(</operator><name>PTW32_INTERLOCKED_LONG</name><operator>)</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>)</condition> 
<block>{<block_content>
<decl_stmt><decl><type><name>ptw32_mcs_local_node_t</name></type> <name>node</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ptw32_mcs_lock_acquire</name><argument_list>(<argument><expr><operator>(</operator><name>ptw32_mcs_lock_t</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>once_control</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>once_control</name><operator>-&gt;</operator><name>done</name></name></expr>)</condition>
<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>_MSC_VER</name> <operator>&lt;</operator> <literal type="number">1400</literal></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>inline_depth</name><name>(</name><name>0</name><name>)</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>pthread_cleanup_push</name><argument_list>(<argument><expr><name>ptw32_mcs_lock_release</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call>(<modifier>*</modifier><name>init_routine</name>)<argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pthread_cleanup_pop</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>_MSC_VER</name> <operator>&lt;</operator> <literal type="number">1400</literal></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>inline_depth</name><name>(</name><name>)</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>once_control</name><operator>-&gt;</operator><name>done</name></name> <operator>=</operator> <name>PTW32_TRUE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ptw32_mcs_lock_release</name><argument_list>(<argument><expr><operator>&amp;</operator><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function> 
</unit>
