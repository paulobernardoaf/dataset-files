<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\w32-pthreads\pthread_getspecific.c">



































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pthread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"implement.h"</cpp:file></cpp:include>


<function><type><name>void</name> <modifier>*</modifier></type>
<name>pthread_getspecific</name> <parameter_list>(<parameter><decl><type><name>pthread_key_t</name></type> <name>key</name></decl></parameter>)</parameter_list>






















<block>{<block_content>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>ptr</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>key</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>ptr</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>lasterror</name> <init>= <expr><call><name>GetLastError</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RETAIN_WSALASTERROR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>int</name></type> <name>lastWSAerror</name> <init>= <expr><call><name>WSAGetLastError</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>TlsGetValue</name> <argument_list>(<argument><expr><name><name>key</name><operator>-&gt;</operator><name>key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SetLastError</name> <argument_list>(<argument><expr><name>lasterror</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RETAIN_WSALASTERROR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>WSASetLastError</name> <argument_list>(<argument><expr><name>lastWSAerror</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></else></if_stmt>

<return>return <expr><name>ptr</name></expr>;</return>
</block_content>}</block></function>
</unit>
