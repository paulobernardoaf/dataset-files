<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\w32-pthreads\pthread_attr_init.c">



































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pthread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"implement.h"</cpp:file></cpp:include>


<function><type><name>int</name></type>
<name>pthread_attr_init</name> <parameter_list>(<parameter><decl><type><name>pthread_attr_t</name> <modifier>*</modifier></type> <name>attr</name></decl></parameter>)</parameter_list>
























<block>{<block_content>
<decl_stmt><decl><type><name>pthread_attr_t</name></type> <name>attr_result</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>attr</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>

<return>return <expr><name>EINVAL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>attr_result</name> <operator>=</operator> <operator>(</operator><name>pthread_attr_t</name><operator>)</operator> <call><name>malloc</name> <argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>attr_result</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>attr_result</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<return>return <expr><name>ENOMEM</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_POSIX_THREAD_ATTR_STACKSIZE</name></expr></argument>)</argument_list></call></expr></cpp:if>





<expr_stmt><expr><name><name>attr_result</name><operator>-&gt;</operator><name>stacksize</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_POSIX_THREAD_ATTR_STACKADDR</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name><name>attr_result</name><operator>-&gt;</operator><name>stackaddr</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>attr_result</name><operator>-&gt;</operator><name>detachstate</name></name> <operator>=</operator> <name>PTHREAD_CREATE_JOINABLE</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SIGSET_T</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>memset</name> <argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name><name>attr_result</name><operator>-&gt;</operator><name>sigmask</name></name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 






<expr_stmt><expr><name><name>attr_result</name><operator>-&gt;</operator><name>param</name><operator>.</operator><name>sched_priority</name></name> <operator>=</operator> <name>THREAD_PRIORITY_NORMAL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>attr_result</name><operator>-&gt;</operator><name>inheritsched</name></name> <operator>=</operator> <name>PTHREAD_EXPLICIT_SCHED</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>attr_result</name><operator>-&gt;</operator><name>contentionscope</name></name> <operator>=</operator> <name>PTHREAD_SCOPE_SYSTEM</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attr_result</name><operator>-&gt;</operator><name>valid</name></name> <operator>=</operator> <name>PTW32_ATTR_VALID</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>attr</name> <operator>=</operator> <name>attr_result</name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
