<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\w32-pthreads\pthread_mutexattr_setrobust.c">



































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pthread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"implement.h"</cpp:file></cpp:include>


<function><type><name>int</name></type>
<name>pthread_mutexattr_setrobust</name> <parameter_list>(<parameter><decl><type><name>pthread_mutexattr_t</name> <modifier>*</modifier></type> <name>attr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>robust</name></decl></parameter>)</parameter_list>




























































<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><name>EINVAL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>attr</name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>attr</name> <operator>!=</operator> <name>NULL</name><operator>)</operator></expr>)</condition>
<block>{<block_content>
<switch>switch <condition>(<expr><name>robust</name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>PTHREAD_MUTEX_STALLED</name></expr>:</case>
<case>case <expr><name>PTHREAD_MUTEX_ROBUST</name></expr>:</case>
<expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>attr</name><operator>)</operator><operator>-&gt;</operator><name>robustness</name></name> <operator>=</operator> <name>robust</name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></if></if_stmt>

<return>return <expr><operator>(</operator><name>result</name><operator>)</operator></expr>;</return>
</block_content>}</block></function> 
</unit>
