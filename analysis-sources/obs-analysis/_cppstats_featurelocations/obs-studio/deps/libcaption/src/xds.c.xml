<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\libcaption\src\xds.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"xds.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"caption.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>xds_init</name><parameter_list>(<parameter><decl><type><name>xds_t</name><modifier>*</modifier></type> <name>xds</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>xds</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>xds_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>xds_decode</name><parameter_list>(<parameter><decl><type><name>xds_t</name><modifier>*</modifier></type> <name>xds</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>cc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name><name>xds</name><operator>-&gt;</operator><name>state</name></name></expr>)</condition> <block>{<block_content>
<default>default:</default>
<case>case <expr><literal type="number">0</literal></expr>:</case>
<expr_stmt><expr><call><name>xds_init</name><argument_list>(<argument><expr><name>xds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>class_code</name></name> <operator>=</operator> <operator>(</operator><name>cc</name> <operator>&amp;</operator> <literal type="number">0x0F00</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <operator>(</operator><name>cc</name> <operator>&amp;</operator> <literal type="number">0x000F</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>state</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<return>return <expr><name>LIBCAPTION_OK</name></expr>;</return>

<case>case <expr><literal type="number">1</literal></expr>:</case>
<if_stmt><if>if <condition>(<expr><literal type="number">0x8F00</literal> <operator>==</operator> <operator>(</operator><name>cc</name> <operator>&amp;</operator> <literal type="number">0xFF00</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>checksum</name></name> <operator>=</operator> <operator>(</operator><name>cc</name> <operator>&amp;</operator> <literal type="number">0x007F</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>state</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<return>return <expr><name>LIBCAPTION_READY</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>xds</name><operator>-&gt;</operator><name>size</name></name> <operator>&lt;</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>content</name><index>[<expr><name><name>xds</name><operator>-&gt;</operator><name>size</name></name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>cc</name> <operator>&amp;</operator> <literal type="number">0x7F00</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>content</name><index>[<expr><name><name>xds</name><operator>-&gt;</operator><name>size</name></name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>cc</name> <operator>&amp;</operator> <literal type="number">0x007F</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>size</name></name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<return>return <expr><name>LIBCAPTION_OK</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></switch>

<expr_stmt><expr><name><name>xds</name><operator>-&gt;</operator><name>state</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<return>return <expr><name>LIBCAPTION_ERROR</name></expr>;</return>
</block_content>}</block></function>
</unit>
