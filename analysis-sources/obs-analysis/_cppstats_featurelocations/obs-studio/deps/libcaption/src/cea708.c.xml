<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\libcaption\src\cea708.c">






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cea708.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;float.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;memory.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>cea708_cc_count</name><parameter_list>(<parameter><decl><type><name>user_data_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>data</name><operator>-&gt;</operator><name>cc_count</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint16_t</name></type> <name>cea708_cc_data</name><parameter_list>(<parameter><decl><type><name>user_data_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier></type> <name>valid</name></decl></parameter>, <parameter><decl><type><name>cea708_cc_type_t</name><modifier>*</modifier></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>(</operator><operator>*</operator><name>valid</name><operator>)</operator> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>cc_data</name><index>[<expr><name>index</name></expr>]</index></name><operator>.</operator><name>cc_valid</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><operator>*</operator><name>type</name><operator>)</operator> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>cc_data</name><index>[<expr><name>index</name></expr>]</index></name><operator>.</operator><name>cc_type</name></expr>;</expr_stmt>
<return>return <expr><name><name>data</name><operator>-&gt;</operator><name>cc_data</name><index>[<expr><name>index</name></expr>]</index></name><operator>.</operator><name>cc_data</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>cea708_init</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>timestamp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>cea708</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>cea708_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>country</name></name> <operator>=</operator> <name>country_united_states</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name> <operator>=</operator> <name>t35_provider_atsc</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>=</operator> <name>GA94</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>directv_user_data_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>process_em_data_flag</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>process_cc_data_flag</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>additional_data_flag</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>em_data</name></name> <operator>=</operator> <literal type="number">0xFF</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>timestamp</name></name> <operator>=</operator> <name>timestamp</name></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>cea708_parse_user_data_type_strcture</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>user_data_t</name><modifier>*</modifier></type> <name>user_data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>user_data</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>user_data_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>process_em_data_flag</name></name> <operator>=</operator> <operator>!</operator><operator>!</operator><operator>(</operator><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x80</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>process_cc_data_flag</name></name> <operator>=</operator> <operator>!</operator><operator>!</operator><operator>(</operator><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x40</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>additional_data_flag</name></name> <operator>=</operator> <operator>!</operator><operator>!</operator><operator>(</operator><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x20</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>cc_count</name></name> <operator>=</operator> <operator>(</operator><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x1F</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>em_data</name></name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">2</literal></expr><operator>,</operator> <expr><name>size</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><literal type="number">3</literal> <operator>&lt;</operator> <name>size</name> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>user_data</name><operator>-&gt;</operator><name>cc_count</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr><operator>,</operator> <expr><name>data</name> <operator>+=</operator> <literal type="number">3</literal></expr><operator>,</operator> <expr><name>size</name> <operator>-=</operator> <literal type="number">3</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>marker_bits</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_valid</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_type</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>user_data</name><operator>-&gt;</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_data</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal> <operator>|</operator> <name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>


<function><type><name>libcaption_stauts_t</name></type> <name>cea708_parse_h264</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">3</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>country</name></name> <operator>=</operator> <operator>(</operator><name>itu_t_t35_country_code_t</name><operator>)</operator><operator>(</operator><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name> <operator>=</operator> <operator>(</operator><name>itu_t_t35_provider_code_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">3</literal></expr><operator>,</operator> <expr><name>size</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>t35_provider_atsc</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>data</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">4</literal></expr><operator>,</operator> <expr><name>size</name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>




<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name> <operator>&amp;&amp;</operator> <literal type="number">0</literal> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>country</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">1</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><name>size</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>t35_provider_atsc</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name> <operator>||</operator> <name>t35_provider_direct_tv</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">1</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><name>size</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>t35_provider_direct_tv</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">1</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>directv_user_data_length</name></name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><name>size</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">3</literal> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name> <operator>&amp;&amp;</operator> <literal type="number">2</literal> <operator>&lt;=</operator> <name>size</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>cea708_parse_user_data_type_strcture</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name></expr>)</condition> <block>{<block_content>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">5</literal> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name></expr>)</condition> <block>{<block_content>

</block_content>}</block></if> <else>else <block>{<block_content>

</block_content>}</block></else></if_stmt>

<return>return <expr><name>LIBCAPTION_OK</name></expr>;</return>
<label><name>error</name>:</label>
<return>return <expr><name>LIBCAPTION_ERROR</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>libcaption_stauts_t</name></type> <name>cea708_parse_h262</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>data</name> <operator>||</operator> <literal type="number">7</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LIBCAPTION_ERROR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>data</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><literal type="number">3</literal> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>cea708_parse_user_data_type_strcture</name><argument_list>(<argument><expr><name>data</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>size</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>LIBCAPTION_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>cea708_add_cc_data</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>valid</name></decl></parameter>, <parameter><decl><type><name>cea708_cc_type_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>cc_data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">31</literal> <operator>&lt;=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>]</index></name><operator>.</operator><name>marker_bits</name> <operator>=</operator> <literal type="number">0x1F</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>]</index></name><operator>.</operator><name>cc_valid</name> <operator>=</operator> <name>valid</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>]</index></name><operator>.</operator><name>cc_type</name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>]</index></name><operator>.</operator><name>cc_data</name> <operator>=</operator> <name>cc_data</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>cea708_render</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>total</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>country</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name> <operator>&gt;&gt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>total</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>t35_provider_atsc</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&gt;&gt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>total</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>t35_provider_atsc</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name> <operator>||</operator> <name>t35_provider_direct_tv</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>total</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>t35_provider_direct_tv</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>directv_user_data_length</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>total</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>em_data</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>process_em_data_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0x80</literal></expr> </then><else>: <expr><literal type="number">0x00</literal></expr></else></ternary><operator>)</operator>
<operator>|</operator> <operator>(</operator><ternary><condition><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>process_cc_data_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0x40</literal></expr> </then><else>: <expr><literal type="number">0x00</literal></expr></else></ternary><operator>)</operator>
<operator>|</operator> <operator>(</operator><ternary><condition><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>additional_data_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0x20</literal></expr> </then><else>: <expr><literal type="number">0x00</literal></expr></else></ternary><operator>)</operator>
<operator>|</operator> <operator>(</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name> <operator>&amp;</operator> <literal type="number">0x1F</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>total</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>marker_bits</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_valid</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_type</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_data</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_data</name> <operator>&gt;&gt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>total</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xFF</literal></expr>;</expr_stmt> 
<return>return <expr><operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><name>total</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>cc_data_t</name></type> <name>cea708_encode_cc_data</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>cc_valid</name></decl></parameter>, <parameter><decl><type><name>cea708_cc_type_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>cc_data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>cc_data_t</name></type> <name>data</name> <init>= <expr><block>{ <expr><literal type="number">0x1F</literal></expr>, <expr><name>cc_valid</name></expr>, <expr><name>type</name></expr>, <expr><name>cc_data</name></expr> }</block></expr></init></decl>;</decl_stmt>
<return>return <expr><name>data</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>cea708_dump</name><parameter_list>(<parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"itu_t_t35_country_code_t %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>country</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"itu_t_t35_provider_code_t %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>provider</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_identifier %c%c%c%c\n"</literal></expr></argument>,
<argument><expr><operator>(</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>, <argument><expr><operator>(</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>,
<argument><expr><operator>(</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_data_type_code %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data_type_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"directv_user_data_length %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>directv_user_data_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_data.process_em_data_flag %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>process_em_data_flag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_data.process_cc_data_flag %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>process_cc_data_flag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_data.additional_data_flag %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>additional_data_flag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_data.cc_count %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_data.em_data %d\n"</literal></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>em_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_count</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>valid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>cea708_cc_type_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>cc_data</name> <init>= <expr><call><name>cea708_cc_data</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>valid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>valid</name> <operator>&amp;&amp;</operator> <name>cc_type_ntsc_cc_field_1</name> <operator>==</operator> <name>type</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>eia608_dump</name><argument_list>(<argument><expr><name>cc_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"user_data.cc_data[%d] cc_valid: %s, cc_type: %d, cc_data: %04x\n"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><ternary><condition><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_valid</name></expr> ?</condition><then> <expr><literal type="string">"true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_type</name></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name><operator>.</operator><name>cc_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cc_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>libcaption_stauts_t</name></type> <name>cea708_to_caption_frame</name><parameter_list>(<parameter><decl><type><name>caption_frame_t</name><modifier>*</modifier></type> <name>frame</name></decl></parameter>, <parameter><decl><type><name>cea708_t</name><modifier>*</modifier></type> <name>cea708</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>count</name> <init>= <expr><call><name>cea708_cc_count</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>libcaption_stauts_t</name></type> <name>status</name> <init>= <expr><name>LIBCAPTION_OK</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>GA94</name> <operator>==</operator> <name><name>cea708</name><operator>-&gt;</operator><name>user_identifier</name></name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>valid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>cea708_cc_type_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>cc_data</name> <init>= <expr><call><name>cea708_cc_data</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cea708</name><operator>-&gt;</operator><name>user_data</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>valid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>valid</name> <operator>&amp;&amp;</operator> <name>cc_type_ntsc_cc_field_1</name> <operator>==</operator> <name>type</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>libcaption_status_update</name><argument_list>(<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>caption_frame_decode</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>cc_data</name></expr></argument>, <argument><expr><name><name>cea708</name><operator>-&gt;</operator><name>timestamp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>status</name></expr>;</return>
</block_content>}</block></function>
</unit>
