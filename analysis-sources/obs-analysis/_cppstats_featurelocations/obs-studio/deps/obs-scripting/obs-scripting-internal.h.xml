<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\obs-scripting\obs-scripting-internal.h">
















<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/dstr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;callback/calldata.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"obs-scripting.h"</cpp:file></cpp:include>

<struct>struct <name>obs_script</name> <block>{
<decl_stmt><decl><type><name><name>enum</name> <name>obs_script_lang</name></name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>loaded</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>obs_data_t</name> <modifier>*</modifier></type><name>settings</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dstr</name></name></type> <name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>dstr</name></name></type> <name>file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>dstr</name></name></type> <name>desc</name></decl>;</decl_stmt>
}</block>;</struct>

<struct_decl>struct <name>script_callback</name>;</struct_decl>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>defer_call_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>defer_call_post</name><parameter_list>(<parameter><decl><type><name>defer_call_cb</name></type> <name>call</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>script_log</name><parameter_list>(<parameter><decl><type><name>obs_script_t</name> <modifier>*</modifier></type><name>script</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>level</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>,
<parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>script_log_va</name><parameter_list>(<parameter><decl><type><name>obs_script_t</name> <modifier>*</modifier></type><name>script</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>level</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>,
<parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>script_error</name><parameter_list>(<parameter><type><name>script</name></type></parameter>, <parameter><type><name>format</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>script_log(script, LOG_ERROR, format, ##__VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>script_warn</name><parameter_list>(<parameter><type><name>script</name></type></parameter>, <parameter><type><name>format</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>script_log(script, LOG_WARNING, format, ##__VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>script_info</name><parameter_list>(<parameter><type><name>script</name></type></parameter>, <parameter><type><name>format</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>script_log(script, LOG_INFO, format, ##__VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>script_debug</name><parameter_list>(<parameter><type><name>script</name></type></parameter>, <parameter><type><name>format</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>script_log(script, LOG_DEBUG, format, ##__VA_ARGS__)</cpp:value></cpp:define>

</unit>
