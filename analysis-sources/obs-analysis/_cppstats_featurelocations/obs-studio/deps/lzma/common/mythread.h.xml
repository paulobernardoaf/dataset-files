<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\lzma\common\mythread.h">











<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sysdefs.h"</cpp:file></cpp:include>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_PTHREAD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;pthread.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mythread_once</name><parameter_list>(<parameter><type><name>func</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { static pthread_once_t once_ = PTHREAD_ONCE_INIT; pthread_once(&amp;once_, &amp;func); } while (0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mythread_sigmask</name><parameter_list>(<parameter><type><name>how</name></type></parameter>, <parameter><type><name>set</name></type></parameter>, <parameter><type><name>oset</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>pthread_sigmask(how, set, oset)</cpp:value></cpp:define>


<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mythread_once</name><parameter_list>(<parameter><type><name>func</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { static bool once_ = false; if (!once_) { func(); once_ = true; } } while (0)</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mythread_sigmask</name><parameter_list>(<parameter><type><name>how</name></type></parameter>, <parameter><type><name>set</name></type></parameter>, <parameter><type><name>oset</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>sigprocmask(how, set, oset)</cpp:value></cpp:define>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
