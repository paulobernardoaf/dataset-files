<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\lzma\liblzma\common\stream_flags_common.h">











<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LZMA_STREAM_FLAGS_COMMON_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LZMA_STREAM_FLAGS_COMMON_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LZMA_STREAM_FLAGS_SIZE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>lzma_header_magic</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>lzma_footer_magic</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>


<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>
<name>is_backward_size_valid</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lzma_stream_flags</name> <modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>options</name><operator>-&gt;</operator><name>backward_size</name></name> <operator>&gt;=</operator> <name>LZMA_BACKWARD_SIZE_MIN</name>
<operator>&amp;&amp;</operator> <name><name>options</name><operator>-&gt;</operator><name>backward_size</name></name> <operator>&lt;=</operator> <name>LZMA_BACKWARD_SIZE_MAX</name>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>options</name><operator>-&gt;</operator><name>backward_size</name></name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
