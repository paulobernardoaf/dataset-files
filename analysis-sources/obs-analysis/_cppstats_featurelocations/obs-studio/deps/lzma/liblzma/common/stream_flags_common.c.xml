<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\lzma\liblzma\common\stream_flags_common.c">











<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stream_flags_common.h"</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>lzma_header_magic</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xFD</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x7A</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0x5A</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>lzma_footer_magic</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x5A</literal></expr> }</block></expr></init></decl>;</decl_stmt>


<extern>extern LZMA_API(lzma_ret</extern>)
<macro><name>lzma_stream_flags_compare</name><argument_list>(
<argument>const lzma_stream_flags *a</argument>, <argument>const lzma_stream_flags *b</argument>)</argument_list></macro>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>version</name></name> <operator>!=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>b</name><operator>-&gt;</operator><name>version</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LZMA_OPTIONS_ERROR</name></expr>;</return></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator><operator>(</operator><name><name>a</name><operator>-&gt;</operator><name>check</name></name><operator>)</operator> <operator>&gt;</operator> <name>LZMA_CHECK_ID_MAX</name>
<operator>||</operator> <operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator><operator>(</operator><name><name>b</name><operator>-&gt;</operator><name>check</name></name><operator>)</operator> <operator>&gt;</operator> <name>LZMA_CHECK_ID_MAX</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LZMA_PROG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>check</name></name> <operator>!=</operator> <name><name>b</name><operator>-&gt;</operator><name>check</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LZMA_DATA_ERROR</name></expr>;</return></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>backward_size</name></name> <operator>!=</operator> <name>LZMA_VLI_UNKNOWN</name>
<operator>&amp;&amp;</operator> <name><name>b</name><operator>-&gt;</operator><name>backward_size</name></name> <operator>!=</operator> <name>LZMA_VLI_UNKNOWN</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>is_backward_size_valid</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>is_backward_size_valid</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LZMA_PROG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>backward_size</name></name> <operator>!=</operator> <name><name>b</name><operator>-&gt;</operator><name>backward_size</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LZMA_DATA_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>LZMA_OK</name></expr>;</return>
</block_content>}</block>
</unit>
