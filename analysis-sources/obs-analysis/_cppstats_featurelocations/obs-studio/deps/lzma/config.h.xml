<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\deps\lzma\config.h">






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASSUME_RAM</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>


























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_CHECK_CRC32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_CHECK_CRC64</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_CHECK_SHA256</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_PROGRAM_INVOCATION_NAME</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_ARM</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_ARMTHUMB</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_DELTA</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_IA64</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_LZMA1</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_LZMA2</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_POWERPC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_SPARC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECODER_X86</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_ARM</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_ARMTHUMB</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_DELTA</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_IA64</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_LZMA1</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_LZMA2</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_POWERPC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_SPARC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ENCODER_X86</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_FCNTL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>




















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ICONV</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_INTTYPES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIMITS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MBRTOWC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MEMORY_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MF_BT2</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MF_BT3</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MF_BT4</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MF_HC3</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MF_HC4</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>














<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDBOOL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDINT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDLIB_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRING_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_PARAM_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_STAT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_TIME_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_TYPES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_UINTPTR_T</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_UNISTD_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_UTIME</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_VISIBILITY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE__BOOL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LT_OBJDIR</name></cpp:macro> <cpp:value>".libs/"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE</name></cpp:macro> <cpp:value>"xz"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_BUGREPORT</name></cpp:macro> <cpp:value>"lasse.collin@tukaani.org"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_NAME</name></cpp:macro> <cpp:value>"XZ Utils"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_TARNAME</name></cpp:macro> <cpp:value>"xz"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_URL</name></cpp:macro> <cpp:value>"http://tukaani.org/xz/"</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_SIZE_T</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STDC_HEADERS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TUKLIB_FAST_UNALIGNED_ACCESS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>






























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_ALL_SOURCE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALL_SOURCE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_GNU_SOURCE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GNU_SOURCE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_POSIX_PTHREAD_SEMANTICS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_POSIX_PTHREAD_SEMANTICS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_TANDEM_SOURCE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_TANDEM_SOURCE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__EXTENSIONS__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__EXTENSIONS__</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>AC_APPLE_UNIVERSAL_BUILD</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>__BIG_ENDIAN__</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WORDS_BIGENDIAN</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_DARWIN_USE_64_BIT_INODE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DARWIN_USE_64_BIT_INODE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_FILE_OFFSET_BITS</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>



























































</unit>
