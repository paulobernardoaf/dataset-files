<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\coreaudio-encoder\windows-imports.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NO_MIN_MAX</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WIN32_LEAN_AND_MEAN</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ShlObj.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/dstr.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name>unsigned</name> <name>long</name></type> <name>UInt32</name>;</typedef>
<typedef>typedef <type><name>signed</name> <name>long</name></type> <name>SInt32</name>;</typedef>
<typedef>typedef <type><name>signed</name> <name>long</name> <name>long</name></type> <name>SInt64</name>;</typedef>
<typedef>typedef <type><name>double</name></type> <name>Float64</name>;</typedef>

<typedef>typedef <type><name>SInt32</name></type> <name>OSStatus</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>Boolean</name>;</typedef>

<typedef>typedef <type><name>UInt32</name></type> <name>AudioFormatPropertyID</name>;</typedef>

<enum>enum <block>{ <decl><name>kVariableLengthArray</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
}</block>;</enum>

<struct_decl>struct <name>OpaqueAudioConverter</name>;</struct_decl>
<typedef>typedef <type><name><name>struct</name> <name>OpaqueAudioConverter</name></name> <modifier>*</modifier></type><name>AudioConverterRef</name>;</typedef>
<typedef>typedef <type><name>UInt32</name></type> <name>AudioConverterPropertyID</name>;</typedef>

<struct>struct <name>AudioValueRange</name> <block>{
<decl_stmt><decl><type><name>Float64</name></type> <name>mMinimum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Float64</name></type> <name>mMaximum</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>AudioValueRange</name></name></type> <name>AudioValueRange</name>;</typedef>

<struct>struct <name>AudioBuffer</name> <block>{
<decl_stmt><decl><type><name>UInt32</name></type> <name>mNumberChannels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mDataByteSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>mData</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>AudioBuffer</name></name></type> <name>AudioBuffer</name>;</typedef>

<struct>struct <name>AudioBufferList</name> <block>{
<decl_stmt><decl><type><name>UInt32</name></type> <name>mNumberBuffers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AudioBuffer</name></type> <name><name>mBuffers</name><index>[<expr><name>kVariableLengthArray</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>AudioBufferList</name></name></type> <name>AudioBufferList</name>;</typedef>

<struct>struct <name>AudioStreamBasicDescription</name> <block>{
<decl_stmt><decl><type><name>Float64</name></type> <name>mSampleRate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mFormatID</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mFormatFlags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mBytesPerPacket</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mFramesPerPacket</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mBytesPerFrame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mChannelsPerFrame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mBitsPerChannel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mReserved</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>AudioStreamBasicDescription</name></name></type> <name>AudioStreamBasicDescription</name>;</typedef>

<struct>struct <name>AudioStreamPacketDescription</name> <block>{
<decl_stmt><decl><type><name>SInt64</name></type> <name>mStartOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mVariableFramesInPacket</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UInt32</name></type> <name>mDataByteSize</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>AudioStreamPacketDescription</name></name></type> <name>AudioStreamPacketDescription</name>;</typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterComplexInputDataProc</name>)<parameter_list>(
<parameter><decl><type><name>AudioConverterRef</name></type> <name>inAudioConverter</name></decl></parameter>, <parameter><decl><type><name>UInt32</name> <modifier>*</modifier></type><name>ioNumberDataPackets</name></decl></parameter>,
<parameter><decl><type><name>AudioBufferList</name> <modifier>*</modifier></type><name>ioData</name></decl></parameter>,
<parameter><decl><type><name>AudioStreamPacketDescription</name> <modifier>*</modifier><modifier>*</modifier></type><name>outDataPacketDescription</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>inUserData</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<enum>enum <block>{ <decl><name>kAudioCodecPropertyNameCFString</name> <init>= <expr><literal type="char">'lnam'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyManufacturerCFString</name> <init>= <expr><literal type="char">'lmak'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyFormatCFString</name> <init>= <expr><literal type="char">'lfor'</literal></expr></init></decl>,

<decl><name>kAudioCodecPropertySupportedInputFormats</name> <init>= <expr><literal type="char">'ifm#'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertySupportedOutputFormats</name> <init>= <expr><literal type="char">'ofm#'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyAvailableInputSampleRates</name> <init>= <expr><literal type="char">'aisr'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyAvailableOutputSampleRates</name> <init>= <expr><literal type="char">'aosr'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyAvailableBitRateRange</name> <init>= <expr><literal type="char">'abrt'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyMinimumNumberInputPackets</name> <init>= <expr><literal type="char">'mnip'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyMinimumNumberOutputPackets</name> <init>= <expr><literal type="char">'mnop'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyAvailableNumberChannels</name> <init>= <expr><literal type="char">'cmnc'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyDoesSampleRateConversion</name> <init>= <expr><literal type="char">'lmrc'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyAvailableInputChannelLayoutTags</name> <init>= <expr><literal type="char">'aicl'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyAvailableOutputChannelLayoutTags</name> <init>= <expr><literal type="char">'aocl'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyInputFormatsForOutputFormat</name> <init>= <expr><literal type="char">'if4o'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyOutputFormatsForInputFormat</name> <init>= <expr><literal type="char">'of4i'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyFormatInfo</name> <init>= <expr><literal type="char">'acfi'</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{ <decl><name>kAudioCodecPropertyInputBufferSize</name> <init>= <expr><literal type="char">'tbuf'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyPacketFrameSize</name> <init>= <expr><literal type="char">'pakf'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyMaximumPacketByteSize</name> <init>= <expr><literal type="char">'pakb'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyCurrentInputFormat</name> <init>= <expr><literal type="char">'ifmt'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyCurrentOutputFormat</name> <init>= <expr><literal type="char">'ofmt'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyMagicCookie</name> <init>= <expr><literal type="char">'kuki'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyUsedInputBufferSize</name> <init>= <expr><literal type="char">'ubuf'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyIsInitialized</name> <init>= <expr><literal type="char">'init'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyCurrentTargetBitRate</name> <init>= <expr><literal type="char">'brat'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyCurrentInputSampleRate</name> <init>= <expr><literal type="char">'cisr'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyCurrentOutputSampleRate</name> <init>= <expr><literal type="char">'cosr'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyQualitySetting</name> <init>= <expr><literal type="char">'srcq'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyApplicableBitRateRange</name> <init>= <expr><literal type="char">'brta'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyApplicableInputSampleRates</name> <init>= <expr><literal type="char">'isra'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyApplicableOutputSampleRates</name> <init>= <expr><literal type="char">'osra'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyPaddedZeros</name> <init>= <expr><literal type="char">'pad0'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyPrimeMethod</name> <init>= <expr><literal type="char">'prmm'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyPrimeInfo</name> <init>= <expr><literal type="char">'prim'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyCurrentInputChannelLayout</name> <init>= <expr><literal type="char">'icl '</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyCurrentOutputChannelLayout</name> <init>= <expr><literal type="char">'ocl '</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertySettings</name> <init>= <expr><literal type="char">'acs '</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyFormatList</name> <init>= <expr><literal type="char">'acfl'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyBitRateControlMode</name> <init>= <expr><literal type="char">'acbf'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertySoundQualityForVBR</name> <init>= <expr><literal type="char">'vbrq'</literal></expr></init></decl>,
<decl><name>kAudioCodecPropertyMinimumDelayMode</name> <init>= <expr><literal type="char">'mdel'</literal></expr></init></decl> }</block>;</enum>

<enum>enum <block>{ <decl><name>kAudioCodecBitRateControlMode_Constant</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>kAudioCodecBitRateControlMode_LongTermAverage</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>kAudioCodecBitRateControlMode_VariableConstrained</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>kAudioCodecBitRateControlMode_Variable</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{ <decl><name>kAudioFormatLinearPCM</name> <init>= <expr><literal type="char">'lpcm'</literal></expr></init></decl>,
<decl><name>kAudioFormatAC3</name> <init>= <expr><literal type="char">'ac-3'</literal></expr></init></decl>,
<decl><name>kAudioFormat60958AC3</name> <init>= <expr><literal type="char">'cac3'</literal></expr></init></decl>,
<decl><name>kAudioFormatAppleIMA4</name> <init>= <expr><literal type="char">'ima4'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC</name> <init>= <expr><literal type="char">'aac '</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4CELP</name> <init>= <expr><literal type="char">'celp'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4HVXC</name> <init>= <expr><literal type="char">'hvxc'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4TwinVQ</name> <init>= <expr><literal type="char">'twvq'</literal></expr></init></decl>,
<decl><name>kAudioFormatMACE3</name> <init>= <expr><literal type="char">'MAC3'</literal></expr></init></decl>,
<decl><name>kAudioFormatMACE6</name> <init>= <expr><literal type="char">'MAC6'</literal></expr></init></decl>,
<decl><name>kAudioFormatULaw</name> <init>= <expr><literal type="char">'ulaw'</literal></expr></init></decl>,
<decl><name>kAudioFormatALaw</name> <init>= <expr><literal type="char">'alaw'</literal></expr></init></decl>,
<decl><name>kAudioFormatQDesign</name> <init>= <expr><literal type="char">'QDMC'</literal></expr></init></decl>,
<decl><name>kAudioFormatQDesign2</name> <init>= <expr><literal type="char">'QDM2'</literal></expr></init></decl>,
<decl><name>kAudioFormatQUALCOMM</name> <init>= <expr><literal type="char">'Qclp'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEGLayer1</name> <init>= <expr><literal type="char">'.mp1'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEGLayer2</name> <init>= <expr><literal type="char">'.mp2'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEGLayer3</name> <init>= <expr><literal type="char">'.mp3'</literal></expr></init></decl>,
<decl><name>kAudioFormatTimeCode</name> <init>= <expr><literal type="char">'time'</literal></expr></init></decl>,
<decl><name>kAudioFormatMIDIStream</name> <init>= <expr><literal type="char">'midi'</literal></expr></init></decl>,
<decl><name>kAudioFormatParameterValueStream</name> <init>= <expr><literal type="char">'apvs'</literal></expr></init></decl>,
<decl><name>kAudioFormatAppleLossless</name> <init>= <expr><literal type="char">'alac'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC_HE</name> <init>= <expr><literal type="char">'aach'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC_LD</name> <init>= <expr><literal type="char">'aacl'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC_ELD</name> <init>= <expr><literal type="char">'aace'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC_ELD_SBR</name> <init>= <expr><literal type="char">'aacf'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC_ELD_V2</name> <init>= <expr><literal type="char">'aacg'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC_HE_V2</name> <init>= <expr><literal type="char">'aacp'</literal></expr></init></decl>,
<decl><name>kAudioFormatMPEG4AAC_Spatial</name> <init>= <expr><literal type="char">'aacs'</literal></expr></init></decl>,
<decl><name>kAudioFormatAMR</name> <init>= <expr><literal type="char">'samr'</literal></expr></init></decl>,
<decl><name>kAudioFormatAudible</name> <init>= <expr><literal type="char">'AUDB'</literal></expr></init></decl>,
<decl><name>kAudioFormatiLBC</name> <init>= <expr><literal type="char">'ilbc'</literal></expr></init></decl>,
<decl><name>kAudioFormatDVIIntelIMA</name> <init>= <expr><literal type="number">0x6D730011</literal></expr></init></decl>,
<decl><name>kAudioFormatMicrosoftGSM</name> <init>= <expr><literal type="number">0x6D730031</literal></expr></init></decl>,
<decl><name>kAudioFormatAES3</name> <init>= <expr><literal type="char">'aes3'</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{ <decl><name>kAudioFormatFlagIsFloat</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr></init></decl>,
<decl><name>kAudioFormatFlagIsBigEndian</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>,
<decl><name>kAudioFormatFlagIsSignedInteger</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>,
<decl><name>kAudioFormatFlagIsPacked</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>,
<decl><name>kAudioFormatFlagIsAlignedHigh</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr></init></decl>,
<decl><name>kAudioFormatFlagIsNonInterleaved</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal><operator>)</operator></expr></init></decl>,
<decl><name>kAudioFormatFlagIsNonMixable</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator></expr></init></decl>,
<decl><name>kAudioFormatFlagsAreAllClear</name> <init>= <expr><operator>(</operator><literal type="number">1L</literal> <operator>&lt;&lt;</operator> <literal type="number">31</literal><operator>)</operator></expr></init></decl>,

<decl><name>kLinearPCMFormatFlagIsFloat</name> <init>= <expr><name>kAudioFormatFlagIsFloat</name></expr></init></decl>,
<decl><name>kLinearPCMFormatFlagIsBigEndian</name> <init>= <expr><name>kAudioFormatFlagIsBigEndian</name></expr></init></decl>,
<decl><name>kLinearPCMFormatFlagIsSignedInteger</name> <init>= <expr><name>kAudioFormatFlagIsSignedInteger</name></expr></init></decl>,
<decl><name>kLinearPCMFormatFlagIsPacked</name> <init>= <expr><name>kAudioFormatFlagIsPacked</name></expr></init></decl>,
<decl><name>kLinearPCMFormatFlagIsAlignedHigh</name> <init>= <expr><name>kAudioFormatFlagIsAlignedHigh</name></expr></init></decl>,
<decl><name>kLinearPCMFormatFlagIsNonInterleaved</name> <init>= <expr><name>kAudioFormatFlagIsNonInterleaved</name></expr></init></decl>,
<decl><name>kLinearPCMFormatFlagIsNonMixable</name> <init>= <expr><name>kAudioFormatFlagIsNonMixable</name></expr></init></decl>,
<decl><name>kLinearPCMFormatFlagsAreAllClear</name> <init>= <expr><name>kAudioFormatFlagsAreAllClear</name></expr></init></decl>,

<decl><name>kAppleLosslessFormatFlag_16BitSourceData</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>kAppleLosslessFormatFlag_20BitSourceData</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>kAppleLosslessFormatFlag_24BitSourceData</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>kAppleLosslessFormatFlag_32BitSourceData</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{ <decl><name>kAudioFormatFlagsNativeEndian</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> }</block>;</enum>

<enum>enum <block>{

<decl><name>kAudioFormatProperty_FormatInfo</name> <init>= <expr><literal type="char">'fmti'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_FormatName</name> <init>= <expr><literal type="char">'fnam'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_EncodeFormatIDs</name> <init>= <expr><literal type="char">'acof'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_DecodeFormatIDs</name> <init>= <expr><literal type="char">'acif'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_FormatList</name> <init>= <expr><literal type="char">'flst'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ASBDFromESDS</name> <init>= <expr><literal type="char">'essd'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelLayoutFromESDS</name> <init>= <expr><literal type="char">'escl'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_OutputFormatList</name> <init>= <expr><literal type="char">'ofls'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_Encoders</name> <init>= <expr><literal type="char">'aven'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_Decoders</name> <init>= <expr><literal type="char">'avde'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_FormatIsVBR</name> <init>= <expr><literal type="char">'fvbr'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_FormatIsExternallyFramed</name> <init>= <expr><literal type="char">'fexf'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_AvailableEncodeBitRates</name> <init>= <expr><literal type="char">'aebr'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_AvailableEncodeSampleRates</name> <init>= <expr><literal type="char">'aesr'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_AvailableEncodeChannelLayoutTags</name> <init>= <expr><literal type="char">'aecl'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_AvailableEncodeNumberChannels</name> <init>= <expr><literal type="char">'avnc'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ASBDFromMPEGPacket</name> <init>= <expr><literal type="char">'admp'</literal></expr></init></decl>,


<decl><name>kAudioFormatProperty_BitmapForLayoutTag</name> <init>= <expr><literal type="char">'bmtg'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_MatrixMixMap</name> <init>= <expr><literal type="char">'mmap'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelMap</name> <init>= <expr><literal type="char">'chmp'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_NumberOfChannelsForLayout</name> <init>= <expr><literal type="char">'nchm'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ValidateChannelLayout</name> <init>= <expr><literal type="char">'vacl'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelLayoutForTag</name> <init>= <expr><literal type="char">'cmpl'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_TagForChannelLayout</name> <init>= <expr><literal type="char">'cmpt'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelLayoutName</name> <init>= <expr><literal type="char">'lonm'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelLayoutSimpleName</name> <init>= <expr><literal type="char">'lsnm'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelLayoutForBitmap</name> <init>= <expr><literal type="char">'cmpb'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelName</name> <init>= <expr><literal type="char">'cnam'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ChannelShortName</name> <init>= <expr><literal type="char">'csnm'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_TagsForNumberOfChannels</name> <init>= <expr><literal type="char">'tagc'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_PanningMatrix</name> <init>= <expr><literal type="char">'panm'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_BalanceFade</name> <init>= <expr><literal type="char">'balf'</literal></expr></init></decl>,


<decl><name>kAudioFormatProperty_ID3TagSize</name> <init>= <expr><literal type="char">'id3s'</literal></expr></init></decl>,
<decl><name>kAudioFormatProperty_ID3TagToDictionary</name> <init>= <expr><literal type="char">'id3d'</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{ <decl><name>kAudioConverterPropertyMinimumInputBufferSize</name> <init>= <expr><literal type="char">'mibs'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyMinimumOutputBufferSize</name> <init>= <expr><literal type="char">'mobs'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyMaximumInputBufferSize</name> <init>= <expr><literal type="char">'xibs'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyMaximumInputPacketSize</name> <init>= <expr><literal type="char">'xips'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyMaximumOutputPacketSize</name> <init>= <expr><literal type="char">'xops'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyCalculateInputBufferSize</name> <init>= <expr><literal type="char">'cibs'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyCalculateOutputBufferSize</name> <init>= <expr><literal type="char">'cobs'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyInputCodecParameters</name> <init>= <expr><literal type="char">'icdp'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyOutputCodecParameters</name> <init>= <expr><literal type="char">'ocdp'</literal></expr></init></decl>,
<decl><name>kAudioConverterSampleRateConverterAlgorithm</name> <init>= <expr><literal type="char">'srci'</literal></expr></init></decl>,
<decl><name>kAudioConverterSampleRateConverterComplexity</name> <init>= <expr><literal type="char">'srca'</literal></expr></init></decl>,
<decl><name>kAudioConverterSampleRateConverterQuality</name> <init>= <expr><literal type="char">'srcq'</literal></expr></init></decl>,
<decl><name>kAudioConverterSampleRateConverterInitialPhase</name> <init>= <expr><literal type="char">'srcp'</literal></expr></init></decl>,
<decl><name>kAudioConverterCodecQuality</name> <init>= <expr><literal type="char">'cdqu'</literal></expr></init></decl>,
<decl><name>kAudioConverterPrimeMethod</name> <init>= <expr><literal type="char">'prmm'</literal></expr></init></decl>,
<decl><name>kAudioConverterPrimeInfo</name> <init>= <expr><literal type="char">'prim'</literal></expr></init></decl>,
<decl><name>kAudioConverterChannelMap</name> <init>= <expr><literal type="char">'chmp'</literal></expr></init></decl>,
<decl><name>kAudioConverterDecompressionMagicCookie</name> <init>= <expr><literal type="char">'dmgc'</literal></expr></init></decl>,
<decl><name>kAudioConverterCompressionMagicCookie</name> <init>= <expr><literal type="char">'cmgc'</literal></expr></init></decl>,
<decl><name>kAudioConverterEncodeBitRate</name> <init>= <expr><literal type="char">'brat'</literal></expr></init></decl>,
<decl><name>kAudioConverterEncodeAdjustableSampleRate</name> <init>= <expr><literal type="char">'ajsr'</literal></expr></init></decl>,
<decl><name>kAudioConverterInputChannelLayout</name> <init>= <expr><literal type="char">'icl '</literal></expr></init></decl>,
<decl><name>kAudioConverterOutputChannelLayout</name> <init>= <expr><literal type="char">'ocl '</literal></expr></init></decl>,
<decl><name>kAudioConverterApplicableEncodeBitRates</name> <init>= <expr><literal type="char">'aebr'</literal></expr></init></decl>,
<decl><name>kAudioConverterAvailableEncodeBitRates</name> <init>= <expr><literal type="char">'vebr'</literal></expr></init></decl>,
<decl><name>kAudioConverterApplicableEncodeSampleRates</name> <init>= <expr><literal type="char">'aesr'</literal></expr></init></decl>,
<decl><name>kAudioConverterAvailableEncodeSampleRates</name> <init>= <expr><literal type="char">'vesr'</literal></expr></init></decl>,
<decl><name>kAudioConverterAvailableEncodeChannelLayoutTags</name> <init>= <expr><literal type="char">'aecl'</literal></expr></init></decl>,
<decl><name>kAudioConverterCurrentOutputStreamDescription</name> <init>= <expr><literal type="char">'acod'</literal></expr></init></decl>,
<decl><name>kAudioConverterCurrentInputStreamDescription</name> <init>= <expr><literal type="char">'acid'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertySettings</name> <init>= <expr><literal type="char">'acps'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyBitDepthHint</name> <init>= <expr><literal type="char">'acbd'</literal></expr></init></decl>,
<decl><name>kAudioConverterPropertyFormatList</name> <init>= <expr><literal type="char">'flst'</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{ <decl><name>kAudioConverterQuality_Max</name> <init>= <expr><literal type="number">0x7F</literal></expr></init></decl>,
<decl><name>kAudioConverterQuality_High</name> <init>= <expr><literal type="number">0x60</literal></expr></init></decl>,
<decl><name>kAudioConverterQuality_Medium</name> <init>= <expr><literal type="number">0x40</literal></expr></init></decl>,
<decl><name>kAudioConverterQuality_Low</name> <init>= <expr><literal type="number">0x20</literal></expr></init></decl>,
<decl><name>kAudioConverterQuality_Min</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{ <decl><name>kAudio_UnimplementedError</name> <init>= <expr><operator>-</operator><literal type="number">4</literal></expr></init></decl>,
<decl><name>kAudio_FileNotFoundError</name> <init>= <expr><operator>-</operator><literal type="number">43</literal></expr></init></decl>,
<decl><name>kAudio_FilePermissionError</name> <init>= <expr><operator>-</operator><literal type="number">54</literal></expr></init></decl>,
<decl><name>kAudio_TooManyFilesOpenError</name> <init>= <expr><operator>-</operator><literal type="number">42</literal></expr></init></decl>,
<decl><name>kAudio_BadFilePathError</name> <init>= <expr><literal type="char">'!pth'</literal></expr></init></decl>, 
<decl><name>kAudio_ParamError</name> <init>= <expr><operator>-</operator><literal type="number">50</literal></expr></init></decl>,
<decl><name>kAudio_MemFullError</name> <init>= <expr><operator>-</operator><literal type="number">108</literal></expr></init></decl>,

<decl><name>kAudioConverterErr_FormatNotSupported</name> <init>= <expr><literal type="char">'fmt?'</literal></expr></init></decl>,
<decl><name>kAudioConverterErr_OperationNotSupported</name> <init>= <expr><literal type="number">0x6F703F3F</literal></expr></init></decl>,

<decl><name>kAudioConverterErr_PropertyNotSupported</name> <init>= <expr><literal type="char">'prop'</literal></expr></init></decl>,
<decl><name>kAudioConverterErr_InvalidInputSize</name> <init>= <expr><literal type="char">'insz'</literal></expr></init></decl>,
<decl><name>kAudioConverterErr_InvalidOutputSize</name> <init>= <expr><literal type="char">'otsz'</literal></expr></init></decl>,

<decl><name>kAudioConverterErr_UnspecifiedError</name> <init>= <expr><literal type="char">'what'</literal></expr></init></decl>,
<decl><name>kAudioConverterErr_BadPropertySizeError</name> <init>= <expr><literal type="char">'!siz'</literal></expr></init></decl>,
<decl><name>kAudioConverterErr_RequiresPacketDescriptionsError</name> <init>= <expr><literal type="char">'!pkd'</literal></expr></init></decl>,
<decl><name>kAudioConverterErr_InputSampleRateOutOfRange</name> <init>= <expr><literal type="char">'!isr'</literal></expr></init></decl>,
<decl><name>kAudioConverterErr_OutputSampleRateOutOfRange</name> <init>= <expr><literal type="char">'!osr'</literal></expr></init></decl>,
}</block>;</enum>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterNew_t</name>)<parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>AudioStreamBasicDescription</name> <modifier>*</modifier></type><name>inSourceFormat</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>AudioStreamBasicDescription</name> <modifier>*</modifier></type><name>inDestinationFormat</name></decl></parameter>,
<parameter><decl><type><name>AudioConverterRef</name> <modifier>*</modifier></type><name>outAudioConverter</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterDispose_t</name>)<parameter_list>(<parameter><decl><type><name>AudioConverterRef</name></type> <name>inAudioConverter</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterReset_t</name>)<parameter_list>(<parameter><decl><type><name>AudioConverterRef</name></type> <name>inAudioConverter</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterGetProperty_t</name>)<parameter_list>(
<parameter><decl><type><name>AudioConverterRef</name></type> <name>inAudioConverter</name></decl></parameter>,
<parameter><decl><type><name>AudioConverterPropertyID</name></type> <name>inPropertyID</name></decl></parameter>, <parameter><decl><type><name>UInt32</name> <modifier>*</modifier></type><name>ioPropertyDataSize</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>outPropertyData</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterGetPropertyInfo_t</name>)<parameter_list>(
<parameter><decl><type><name>AudioConverterRef</name></type> <name>inAudioConverter</name></decl></parameter>,
<parameter><decl><type><name>AudioConverterPropertyID</name></type> <name>inPropertyID</name></decl></parameter>, <parameter><decl><type><name>UInt32</name> <modifier>*</modifier></type><name>outSize</name></decl></parameter>,
<parameter><decl><type><name>Boolean</name> <modifier>*</modifier></type><name>outWritable</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterSetProperty_t</name>)<parameter_list>(
<parameter><decl><type><name>AudioConverterRef</name></type> <name>inAudioConverter</name></decl></parameter>,
<parameter><decl><type><name>AudioConverterPropertyID</name></type> <name>inPropertyID</name></decl></parameter>, <parameter><decl><type><name>UInt32</name></type> <name>inPropertyDataSize</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>inPropertyData</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioConverterFillComplexBuffer_t</name>)<parameter_list>(
<parameter><decl><type><name>AudioConverterRef</name></type> <name>inAudioConverter</name></decl></parameter>,
<parameter><decl><type><name>AudioConverterComplexInputDataProc</name></type> <name>inInputDataProc</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>inInputDataProcUserData</name></decl></parameter>, <parameter><decl><type><name>UInt32</name> <modifier>*</modifier></type><name>ioOutputDataPacketSize</name></decl></parameter>,
<parameter><decl><type><name>AudioBufferList</name> <modifier>*</modifier></type><name>outOutputData</name></decl></parameter>,
<parameter><decl><type><name>AudioStreamPacketDescription</name> <modifier>*</modifier></type><name>outPacketDescription</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioFormatGetProperty_t</name>)<parameter_list>(<parameter><decl><type><name>AudioFormatPropertyID</name></type> <name>inPropertyID</name></decl></parameter>,
<parameter><decl><type><name>UInt32</name></type> <name>inSpecifierSize</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>inSpecifier</name></decl></parameter>,
<parameter><decl><type><name>UInt32</name> <modifier>*</modifier></type><name>ioPropertyDataSize</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>outPropertyData</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>OSStatus</name></type> (<modifier>*</modifier><name>AudioFormatGetPropertyInfo_t</name>)<parameter_list>(
<parameter><decl><type><name>AudioFormatPropertyID</name></type> <name>inPropertyID</name></decl></parameter>, <parameter><decl><type><name>UInt32</name></type> <name>inSpecifierSize</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>inSpecifier</name></decl></parameter>, <parameter><decl><type><name>UInt32</name> <modifier>*</modifier></type><name>outPropertyDataSize</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<decl_stmt><decl><type><specifier>static</specifier> <name>AudioConverterNew_t</name></type> <name>AudioConverterNew</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioConverterDispose_t</name></type> <name>AudioConverterDispose</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioConverterReset_t</name></type> <name>AudioConverterReset</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioConverterGetProperty_t</name></type> <name>AudioConverterGetProperty</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioConverterGetPropertyInfo_t</name></type> <name>AudioConverterGetPropertyInfo</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioConverterSetProperty_t</name></type> <name>AudioConverterSetProperty</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioConverterFillComplexBuffer_t</name></type> <name>AudioConverterFillComplexBuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioFormatGetProperty_t</name></type> <name>AudioFormatGetProperty</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AudioFormatGetPropertyInfo_t</name></type> <name>AudioFormatGetPropertyInfo</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>HMODULE</name></type> <name>audio_toolbox</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>release_lib</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RELEASE_LIB</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>if (x) { FreeLibrary(x); x = NULL; }</cpp:value></cpp:define>





<expr_stmt><expr><call><name>RELEASE_LIB</name><argument_list>(<argument><expr><name>audio_toolbox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>RELEASE_LIB</name></cpp:undef>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>load_lib</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PWSTR</name></type> <name>common_path</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>SHGetKnownFolderPath</name><argument_list>(<argument><expr><name>FOLDERID_ProgramFilesCommon</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>common_path</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>S_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>CA_LOG</name><argument_list>(<argument><expr><name>LOG_WARNING</name></expr></argument>, <argument><expr><literal type="string">"Could not retrieve common files path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dstr</name></name></type> <name>path</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>dstr_printf</name><argument_list>(<argument><expr><operator>&amp;</operator><name>path</name></expr></argument>, <argument><expr><literal type="string">"%S\\Apple\\Apple Application Support"</literal></expr></argument>, <argument><expr><name>common_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CoTaskMemFree</name><argument_list>(<argument><expr><name>common_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>wchar_t</name> <modifier>*</modifier></type><name>w_path</name> <init>= <expr><call><name>dstr_to_wcs</name><argument_list>(<argument><expr><operator>&amp;</operator><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>dstr_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SetDllDirectory</name><argument_list>(<argument><expr><name>w_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name>w_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOAD_LIB</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>x = LoadLibrary(TEXT(n)); if (!x) CA_LOG(LOG_DEBUG, "Failed loading library '" n "'");</cpp:value></cpp:define>




<expr_stmt><expr><call><name>LOAD_LIB</name><argument_list>(<argument><expr><name>audio_toolbox</name></expr></argument>, <argument><expr><literal type="string">"CoreAudioToolbox.dll"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LOAD_LIB</name></cpp:undef>

<expr_stmt><expr><call><name>SetDllDirectory</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>audio_toolbox</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>release_lib</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unload_core_audio</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>AudioConverterNew</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioConverterDispose</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioConverterReset</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioConverterGetProperty</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioConverterGetPropertyInfo</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioConverterSetProperty</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioConverterFillComplexBuffer</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioFormatGetProperty</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>AudioFormatGetPropertyInfo</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>release_lib</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>push</name><name>)</name></cpp:pragma>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>disable</name> <name>:</name> <name>4706</name><name>)</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><specifier>static</specifier> <name>bool</name></type> <name>load_core_audio</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>load_lib</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOAD_SYM_FROM_LIB</name><parameter_list>(<parameter><type><name>sym</name></type></parameter>, <parameter><type><name>lib</name></type></parameter>, <parameter><type><name>dll</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>if (!(sym = (sym##_t)GetProcAddress(lib, #sym))) { DWORD err = GetLastError(); CA_LOG(LOG_ERROR, "Couldn't load " #sym " from " dll ": %lu (0x%lx)", err, err); goto unload_everything; }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOAD_SYM</name><parameter_list>(<parameter><type><name>sym</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LOAD_SYM_FROM_LIB(sym, audio_toolbox, "CoreAudioToolbox.dll")</cpp:value></cpp:define>

<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioConverterNew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioConverterDispose</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioConverterReset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioConverterGetProperty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioConverterGetPropertyInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioConverterSetProperty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioConverterFillComplexBuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioFormatGetProperty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD_SYM</name><argument_list>(<argument><expr><name>AudioFormatGetPropertyInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LOAD_SYM</name></cpp:undef>

<return>return <expr><name>true</name></expr>;</return>

<label><name>unload_everything</name>:</label>
<expr_stmt><expr><call><name>unload_core_audio</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>pop</name><name>)</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
