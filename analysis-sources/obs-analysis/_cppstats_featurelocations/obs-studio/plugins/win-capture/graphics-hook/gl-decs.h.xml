<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\win-capture\graphics-hook\gl-decs.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>GLenum</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>GLbitfield</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>GLuint</name>;</typedef>
<typedef>typedef <type><name>int</name></type> <name>GLint</name>;</typedef>
<typedef>typedef <type><name>int</name></type> <name>GLsizei</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>GLboolean</name>;</typedef>
<typedef>typedef <type><name>signed</name> <name>char</name></type> <name>GLbyte</name>;</typedef>
<typedef>typedef <type><name>short</name></type> <name>GLshort</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>GLubyte</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>short</name></type> <name>GLushort</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>long</name></type> <name>GLulong</name>;</typedef>
<typedef>typedef <type><name>float</name></type> <name>GLfloat</name>;</typedef>
<typedef>typedef <type><name>float</name></type> <name>GLclampf</name>;</typedef>
<typedef>typedef <type><name>double</name></type> <name>GLdouble</name>;</typedef>
<typedef>typedef <type><name>double</name></type> <name>GLclampd</name>;</typedef>
<typedef>typedef <type><name>void</name></type> <name>GLvoid</name>;</typedef>
<typedef>typedef <type><name>ptrdiff_t</name></type> <name>GLintptrARB</name>;</typedef>
<typedef>typedef <type><name>ptrdiff_t</name></type> <name>GLsizeiptrARB</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_FRONT</name></cpp:macro> <cpp:value>0x0404</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_BACK</name></cpp:macro> <cpp:value>0x0405</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_INVALID_OPERATION</name></cpp:macro> <cpp:value>0x0502</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_UNSIGNED_BYTE</name></cpp:macro> <cpp:value>0x1401</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_RGB</name></cpp:macro> <cpp:value>0x1907</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_RGBA</name></cpp:macro> <cpp:value>0x1908</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_BGR</name></cpp:macro> <cpp:value>0x80E0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_BGRA</name></cpp:macro> <cpp:value>0x80E1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_NEAREST</name></cpp:macro> <cpp:value>0x2600</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_LINEAR</name></cpp:macro> <cpp:value>0x2601</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_READ_ONLY</name></cpp:macro> <cpp:value>0x88B8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_WRITE_ONLY</name></cpp:macro> <cpp:value>0x88B9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_READ_WRITE</name></cpp:macro> <cpp:value>0x88BA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_BUFFER_ACCESS</name></cpp:macro> <cpp:value>0x88BB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_BUFFER_MAPPED</name></cpp:macro> <cpp:value>0x88BC</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_BUFFER_MAP_POINTER</name></cpp:macro> <cpp:value>0x88BD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_STREAM_DRAW</name></cpp:macro> <cpp:value>0x88E0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_STREAM_READ</name></cpp:macro> <cpp:value>0x88E1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_STREAM_COPY</name></cpp:macro> <cpp:value>0x88E2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_STATIC_DRAW</name></cpp:macro> <cpp:value>0x88E4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_STATIC_READ</name></cpp:macro> <cpp:value>0x88E5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_STATIC_COPY</name></cpp:macro> <cpp:value>0x88E6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_DYNAMIC_DRAW</name></cpp:macro> <cpp:value>0x88E8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_DYNAMIC_READ</name></cpp:macro> <cpp:value>0x88E9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_DYNAMIC_COPY</name></cpp:macro> <cpp:value>0x88EA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_PIXEL_PACK_BUFFER</name></cpp:macro> <cpp:value>0x88EB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_PIXEL_UNPACK_BUFFER</name></cpp:macro> <cpp:value>0x88EC</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_PIXEL_PACK_BUFFER_BINDING</name></cpp:macro> <cpp:value>0x88ED</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_PIXEL_UNPACK_BUFFER_BINDING</name></cpp:macro> <cpp:value>0x88EF</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_TEXTURE_2D</name></cpp:macro> <cpp:value>0x0DE1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_TEXTURE_BINDING_2D</name></cpp:macro> <cpp:value>0x8069</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_DRAW_FRAMEBUFFER_BINDING</name></cpp:macro> <cpp:value>0x8CA6</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WGL_ACCESS_READ_ONLY_NV</name></cpp:macro> <cpp:value>0x0000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WGL_ACCESS_READ_WRITE_NV</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WGL_ACCESS_WRITE_DISCARD_NV</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_READ_FRAMEBUFFER</name></cpp:macro> <cpp:value>0x8CA8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_DRAW_FRAMEBUFFER</name></cpp:macro> <cpp:value>0x8CA9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_COLOR_BUFFER_BIT</name></cpp:macro> <cpp:value>0x00004000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_COLOR_ATTACHMENT0</name></cpp:macro> <cpp:value>0x8CE0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_COLOR_ATTACHMENT1</name></cpp:macro> <cpp:value>0x8CE1</cpp:value></cpp:define>

<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLTEXIMAGE2DPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>level</name></decl></parameter>,
<parameter><decl><type><name>GLint</name></type> <name>internal_format</name></decl></parameter>, <parameter><decl><type><name>GLsizei</name></type> <name>width</name></decl></parameter>,
<parameter><decl><type><name>GLsizei</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>border</name></decl></parameter>,
<parameter><decl><type><name>GLenum</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>GLenum</name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GLvoid</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLGETTEXIMAGEPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>level</name></decl></parameter>,
<parameter><decl><type><name>GLenum</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>GLenum</name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><name>GLvoid</name> <modifier>*</modifier></type><name>img</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLREADBUFFERPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLDRAWBUFFERPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLGETINTEGERVPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>pname</name></decl></parameter>, <parameter><decl><type><name>GLint</name> <modifier>*</modifier></type><name>params</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>GLenum</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLGETERRORPROC</name>)<parameter_list>()</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLSWAPLAYERBUFFERSPROC</name>)<parameter_list>(<parameter><decl><type><name>HDC</name></type></decl></parameter>, <parameter><decl><type><name>UINT</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLSWAPBUFFERSPROC</name>)<parameter_list>(<parameter><decl><type><name>HDC</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDELETECONTEXTPROC</name>)<parameter_list>(<parameter><decl><type><name>HGLRC</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>PROC</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLGETPROCADDRESSPROC</name>)<parameter_list>(<parameter><decl><type><name>LPCSTR</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLMAKECURRENTPROC</name>)<parameter_list>(<parameter><decl><type><name>HDC</name></type></decl></parameter>, <parameter><decl><type><name>HGLRC</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>HDC</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLGETCURRENTDCPROC</name>)<parameter_list>()</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>HGLRC</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLGETCURRENTCONTEXTPROC</name>)<parameter_list>()</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>HGLRC</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLCREATECONTEXTPROC</name>)<parameter_list>(<parameter><decl><type><name>HDC</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLBUFFERDATAARBPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>GLsizeiptrARB</name></type> <name>size</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GLvoid</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>GLenum</name></type> <name>usage</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLDELETEBUFFERSARBPROC</name>)<parameter_list>(<parameter><decl><type><name>GLsizei</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GLuint</name> <modifier>*</modifier></type><name>buffers</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLDELETETEXTURESPROC</name>)<parameter_list>(<parameter><decl><type><name>GLsizei</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GLuint</name> <modifier>*</modifier></type><name>buffers</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLGENBUFFERSARBPROC</name>)<parameter_list>(<parameter><decl><type><name>GLsizei</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>GLuint</name> <modifier>*</modifier></type><name>buffers</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLGENTEXTURESPROC</name>)<parameter_list>(<parameter><decl><type><name>GLsizei</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>GLuint</name> <modifier>*</modifier></type><name>textures</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>GLvoid</name> <modifier>*</modifier></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLMAPBUFFERPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>GLenum</name></type> <name>access</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>GLboolean</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLUNMAPBUFFERPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLBINDBUFFERPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>GLuint</name></type> <name>buffer</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLBINDTEXTUREPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>GLuint</name></type> <name>texture</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLGENFRAMEBUFFERSPROC</name>)<parameter_list>(<parameter><decl><type><name>GLsizei</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>GLuint</name> <modifier>*</modifier></type><name>buffers</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLDELETEFRAMEBUFFERSPROC</name>)<parameter_list>(<parameter><decl><type><name>GLsizei</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>GLuint</name> <modifier>*</modifier></type><name>framebuffers</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLBINDFRAMEBUFFERPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>GLuint</name></type> <name>framebuffer</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLBLITFRAMEBUFFERPROC</name>)<parameter_list>(<parameter><decl><type><name>GLint</name></type> <name>srcX0</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>srcY0</name></decl></parameter>,
<parameter><decl><type><name>GLint</name></type> <name>srcX1</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>srcY1</name></decl></parameter>,
<parameter><decl><type><name>GLint</name></type> <name>dstX0</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>dstY0</name></decl></parameter>,
<parameter><decl><type><name>GLint</name></type> <name>dstX1</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>dstY1</name></decl></parameter>,
<parameter><decl><type><name>GLbitfield</name></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>GLenum</name></type> <name>filter</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>GLFRAMEBUFFERTEXTURE2DPROC</name>)<parameter_list>(<parameter><decl><type><name>GLenum</name></type> <name>target</name></decl></parameter>,
<parameter><decl><type><name>GLenum</name></type> <name>attachment</name></decl></parameter>,
<parameter><decl><type><name>GLenum</name></type> <name>textarget</name></decl></parameter>,
<parameter><decl><type><name>GLuint</name></type> <name>texture</name></decl></parameter>, <parameter><decl><type><name>GLint</name></type> <name>level</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLSETRESOURCESHAREHANDLENVPROC</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>HANDLE</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>HANDLE</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDXOPENDEVICENVPROC</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDXCLOSEDEVICENVPROC</name>)<parameter_list>(<parameter><decl><type><name>HANDLE</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>HANDLE</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDXREGISTEROBJECTNVPROC</name>)<parameter_list>(<parameter><decl><type><name>HANDLE</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>GLuint</name></type></decl></parameter>,
<parameter><decl><type><name>GLenum</name></type></decl></parameter>, <parameter><decl><type><name>GLenum</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDXUNREGISTEROBJECTNVPROC</name>)<parameter_list>(<parameter><decl><type><name>HANDLE</name></type></decl></parameter>, <parameter><decl><type><name>HANDLE</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDXOBJECTACCESSNVPROC</name>)<parameter_list>(<parameter><decl><type><name>HANDLE</name></type></decl></parameter>, <parameter><decl><type><name>GLenum</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDXLOCKOBJECTSNVPROC</name>)<parameter_list>(<parameter><decl><type><name>HANDLE</name></type></decl></parameter>, <parameter><decl><type><name>GLint</name></type></decl></parameter>, <parameter><decl><type><name>HANDLE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>BOOL</name></type>(<name>WINAPI</name> <modifier>*</modifier><name>WGLDXUNLOCKOBJECTSNVPROC</name>)<parameter_list>(<parameter><decl><type><name>HANDLE</name></type></decl></parameter>, <parameter><decl><type><name>GLint</name></type></decl></parameter>, <parameter><decl><type><name>HANDLE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<decl_stmt><decl><type><specifier>static</specifier> <name>GLTEXIMAGE2DPROC</name></type> <name>glTexImage2D</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLGETTEXIMAGEPROC</name></type> <name>glGetTexImage</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLREADBUFFERPROC</name></type> <name>glReadBuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLDRAWBUFFERPROC</name></type> <name>glDrawBuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLGETINTEGERVPROC</name></type> <name>glGetIntegerv</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLGETERRORPROC</name></type> <name>glGetError</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLGETPROCADDRESSPROC</name></type> <name>jimglGetProcAddress</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLMAKECURRENTPROC</name></type> <name>jimglMakeCurrent</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLGETCURRENTDCPROC</name></type> <name>jimglGetCurrentDC</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLGETCURRENTCONTEXTPROC</name></type> <name>jimglGetCurrentContext</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLBUFFERDATAARBPROC</name></type> <name>glBufferData</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLDELETEBUFFERSARBPROC</name></type> <name>glDeleteBuffers</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLDELETETEXTURESPROC</name></type> <name>glDeleteTextures</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLGENBUFFERSARBPROC</name></type> <name>glGenBuffers</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLGENTEXTURESPROC</name></type> <name>glGenTextures</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLMAPBUFFERPROC</name></type> <name>glMapBuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLUNMAPBUFFERPROC</name></type> <name>glUnmapBuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLBINDBUFFERPROC</name></type> <name>glBindBuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLBINDTEXTUREPROC</name></type> <name>glBindTexture</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLGENFRAMEBUFFERSPROC</name></type> <name>glGenFramebuffers</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLDELETEFRAMEBUFFERSPROC</name></type> <name>glDeleteFramebuffers</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLBINDFRAMEBUFFERPROC</name></type> <name>glBindFramebuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLBLITFRAMEBUFFERPROC</name></type> <name>glBlitFramebuffer</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>GLFRAMEBUFFERTEXTURE2DPROC</name></type> <name>glFramebufferTexture2D</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>WGLSETRESOURCESHAREHANDLENVPROC</name></type> <name>jimglDXSetResourceShareHandleNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLDXOPENDEVICENVPROC</name></type> <name>jimglDXOpenDeviceNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLDXCLOSEDEVICENVPROC</name></type> <name>jimglDXCloseDeviceNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLDXREGISTEROBJECTNVPROC</name></type> <name>jimglDXRegisterObjectNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLDXUNREGISTEROBJECTNVPROC</name></type> <name>jimglDXUnregisterObjectNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLDXOBJECTACCESSNVPROC</name></type> <name>jimglDXObjectAccessNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLDXLOCKOBJECTSNVPROC</name></type> <name>jimglDXLockObjectsNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>WGLDXUNLOCKOBJECTSNVPROC</name></type> <name>jimglDXUnlockObjectsNV</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
</unit>
