<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\win-capture\app-helpers.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"app-helpers.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nt-stuff.h"</cpp:file></cpp:include>

<function_decl><type><name>WINADVAPI</name> <name>WINAPI</name></type> <name>ConvertSidToStringSidW</name><parameter_list>(<parameter><decl><type><name>PSID</name></type> <name>sid</name></decl></parameter>, <parameter><decl><type><name>LPWSTR</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>bool</name></type> <name>is_app</name><parameter_list>(<parameter><decl><type><name>HANDLE</name></type> <name>process</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>DWORD</name></type> <name>size_ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HANDLE</name></type> <name>token</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>OpenProcessToken</name><argument_list>(<argument><expr><name>process</name></expr></argument>, <argument><expr><name>TOKEN_QUERY</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>token</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>BOOL</name></type> <name>success</name> <init>= <expr><call><name>GetTokenInformation</name><argument_list>(<argument><expr><name>token</name></expr></argument>, <argument><expr><name>TokenIsAppContainer</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>ret</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ret</name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><operator>&amp;</operator><name>size_ret</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>DWORD</name></type> <name>error</name> <init>= <expr><call><name>GetLastError</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>test</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>CloseHandle</name><argument_list>(<argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><operator>!</operator><operator>!</operator><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>wchar_t</name> <modifier>*</modifier></type><name>get_app_sid</name><parameter_list>(<parameter><decl><type><name>HANDLE</name></type> <name>process</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>wchar_t</name> <modifier>*</modifier></type><name>ret</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>size_ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BOOL</name></type> <name>success</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HANDLE</name></type> <name>token</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>OpenProcessToken</name><argument_list>(<argument><expr><name>process</name></expr></argument>, <argument><expr><name>TOKEN_QUERY</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>token</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>DWORD</name></type> <name>info_len</name> <init>= <expr><call><name>GetSidLengthRequired</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>+</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>TOKEN_APPCONTAINER_INFORMATION</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PTOKEN_APPCONTAINER_INFORMATION</name></type> <name>info</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><name>info_len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>success</name> <operator>=</operator> <call><name>GetTokenInformation</name><argument_list>(<argument><expr><name>token</name></expr></argument>, <argument><expr><name>TokenAppContainerSid</name></expr></argument>, <argument><expr><name>info</name></expr></argument>,
<argument><expr><name>info_len</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>size_ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ConvertSidToStringSidW</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>TokenAppContainer</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CloseHandle</name><argument_list>(<argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>path_format</name> <init>=
<expr><literal type="string">L"\\Sessions\\%lu\\AppContainerNamedObjects\\%s\\%s"</literal></expr></init></decl>;</decl_stmt>

<function><type><name>HANDLE</name></type> <name>create_app_mutex</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>sid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>wchar_t</name></type> <name><name>path</name><index>[<expr><name>MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>session_id</name> <init>= <expr><call><name>WTSGetActiveConsoleSessionId</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>_snwprintf</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>MAX_PATH</name></expr></argument>, <argument><expr><name>path_format</name></expr></argument>, <argument><expr><name>session_id</name></expr></argument>, <argument><expr><name>sid</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>nt_create_mutex</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>HANDLE</name></type> <name>open_app_mutex</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>sid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>wchar_t</name></type> <name><name>path</name><index>[<expr><name>MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>session_id</name> <init>= <expr><call><name>WTSGetActiveConsoleSessionId</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>_snwprintf</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>MAX_PATH</name></expr></argument>, <argument><expr><name>path_format</name></expr></argument>, <argument><expr><name>session_id</name></expr></argument>, <argument><expr><name>sid</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>nt_open_mutex</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>HANDLE</name></type> <name>open_app_event</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>sid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>wchar_t</name></type> <name><name>path</name><index>[<expr><name>MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>session_id</name> <init>= <expr><call><name>WTSGetActiveConsoleSessionId</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>_snwprintf</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>MAX_PATH</name></expr></argument>, <argument><expr><name>path_format</name></expr></argument>, <argument><expr><name>session_id</name></expr></argument>, <argument><expr><name>sid</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>nt_open_event</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>HANDLE</name></type> <name>open_app_map</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>sid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>wchar_t</name></type> <name><name>path</name><index>[<expr><name>MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>session_id</name> <init>= <expr><call><name>WTSGetActiveConsoleSessionId</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>_snwprintf</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>MAX_PATH</name></expr></argument>, <argument><expr><name>path_format</name></expr></argument>, <argument><expr><name>session_id</name></expr></argument>, <argument><expr><name>sid</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>nt_open_map</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
