<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\win-ivcam\seg_library\SegImage.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SEG_IMAGE_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEG_IMAGE_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Dependencies.h"</cpp:file></cpp:include>

<struct>struct <name>SegPixel</name>
<block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>red</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>green</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>blue</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><name>class</name></type> <name>SegImage</name>
<block>{<block_content>
<label><name>private</name>:</label>
<decl_stmt><decl><type><name>int</name></type> <name>m_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>m_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>m_pitch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>m_timestamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>m_number</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>m_data</name></decl>;</decl_stmt>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>SegImage</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SegImage</name><argument_list>(<argument><expr><name>SegImage</name> <specifier>const</specifier><operator>&amp;</operator> <name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>SegImage</name><argument_list>(<argument>int width</argument>, <argument>int height</argument>, <argument>int pitch</argument>, <argument>void* data</argument>, <argument>long long timestamp</argument>, <argument>int number</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><operator>~</operator><call><name>SegImage</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>SegImage</name><modifier>&amp;</modifier></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>SegImage</name> <operator>&amp;</operator> <name>src</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> <name>Width</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>Height</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>Pitch</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>long</name> <name>long</name></type> <name>TimeStamp</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>Number</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SegPixel</name></type> <name>Get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>j</name></decl></parameter>)</parameter_list>;</function_decl>
<function><type><name>void</name><modifier>*</modifier></type> <name>GetData</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>m_data</name></expr>;</return> </block_content>}</block></function><empty_stmt>;</empty_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
