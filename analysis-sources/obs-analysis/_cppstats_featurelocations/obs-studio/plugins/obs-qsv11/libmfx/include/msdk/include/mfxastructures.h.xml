<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\obs-qsv11\libmfx\include\msdk\include\mfxastructures.h">




























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__MFXASTRUCTURES_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__MFXASTRUCTURES_H__</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mfxcommon.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name> <argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>warning</name><name>(</name><name>disable</name><name>:</name> <name>4201</name><name>)</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal>
<block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 


<enum>enum <block>{
<decl><name>MFX_CODEC_AAC</name> <init>=<expr><call><name>MFX_MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'A'</literal></expr></argument>,<argument><expr><literal type="char">'A'</literal></expr></argument>,<argument><expr><literal type="char">'C'</literal></expr></argument>,<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>MFX_CODEC_MP3</name> <init>=<macro><name>MFX_MAKEFOURCC</name><argument_list>(<argument><literal type="char">'M'</literal></argument>,<argument><literal type="char">'P'</literal></argument>,<argument><literal type="char">'3'</literal></argument>,<argument><literal type="char">' '</literal></argument>)</argument_list></macro></init></decl>
}</block>;</enum>

<enum>enum <block>{

<decl><name>MFX_PROFILE_AAC_LC</name> <init>=<expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>MFX_PROFILE_AAC_LTP</name> <init>=<expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>MFX_PROFILE_AAC_MAIN</name> <init>=<expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>MFX_PROFILE_AAC_SSR</name> <init>=<expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>MFX_PROFILE_AAC_HE</name> <init>=<expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>MFX_PROFILE_AAC_ALS</name> <init>=<expr><literal type="number">0x20</literal></expr></init></decl>,
<decl><name>MFX_PROFILE_AAC_BSAC</name> <init>=<expr><literal type="number">22</literal></expr></init></decl>,
<decl><name>MFX_PROFILE_AAC_PS</name> <init>=<expr><literal type="number">29</literal></expr></init></decl>,


<decl><name>MFX_AUDIO_MPEG1_LAYER1</name> <init>=<expr><literal type="number">0x00000110</literal></expr></init></decl>, 
<decl><name>MFX_AUDIO_MPEG1_LAYER2</name> <init>=<expr><literal type="number">0x00000120</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_MPEG1_LAYER3</name> <init>=<expr><literal type="number">0x00000140</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_MPEG2_LAYER1</name> <init>=<expr><literal type="number">0x00000210</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_MPEG2_LAYER2</name> <init>=<expr><literal type="number">0x00000220</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_MPEG2_LAYER3</name> <init>=<expr><literal type="number">0x00000240</literal></expr></init></decl>
}</block>;</enum>


<enum>enum <block>{
<decl><name>MFX_AUDIO_AAC_HE_DWNSMPL_OFF</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_HE_DWNSMPL_ON</name><init>= <expr><literal type="number">1</literal></expr></init></decl>
}</block>;</enum>


<enum>enum <block>{
<decl><name>MFX_AUDIO_AAC_PS_DISABLE</name><init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_PS_PARSER</name><init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_PS_ENABLE_BL</name><init>= <expr><literal type="number">111</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_PS_ENABLE_UR</name><init>= <expr><literal type="number">411</literal></expr></init></decl>
}</block>;</enum>


<enum>enum <block>{
<decl><name>MFX_AUDIO_AAC_SBR_DISABLE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_SBR_ENABLE</name><init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_SBR_UNDEF</name><init>= <expr><literal type="number">2</literal></expr></init></decl>
}</block>;</enum>


<enum>enum<block>{
<decl><name>MFX_AUDIO_AAC_ADTS</name><init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_ADIF</name><init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_RAW</name><init>= <expr><literal type="number">3</literal></expr></init></decl>,
}</block>;</enum>


<enum>enum 
<block>{
<decl><name>MFX_AUDIO_AAC_MONO</name><init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_LR_STEREO</name><init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_MS_STEREO</name><init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>MFX_AUDIO_AAC_JOINT_STEREO</name><init>= <expr><literal type="number">3</literal></expr></init></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>mfxU32</name></type> <name>CodecId</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>CodecProfile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>CodecLevel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU32</name></type> <name>Bitrate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU32</name></type> <name>SampleFrequency</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>NumChannel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>BitPerSample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU16</name></type> <name><name>reserved1</name><index>[<expr><literal type="number">22</literal></expr>]</index></name></decl>;</decl_stmt> 

<union>union <block>{ 
<struct>struct <block>{ 
<decl_stmt><decl><type><name>mfxU16</name></type> <name>FlagPSSupportLev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>Layer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>AACHeaderDataSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU8</name></type> <name><name>AACHeaderData</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <block>{ 
<decl_stmt><decl><type><name>mfxU16</name></type> <name>OutputFormat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>StereoMode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name><name>reserved2</name><index>[<expr><literal type="number">61</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block>;</struct>
}</block>;</union>
}</block></struct></type> <name>mfxAudioInfoMFX</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>mfxU16</name></type> <name>AsyncDepth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>Protected</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name><name>reserved</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>mfxAudioInfoMFX</name></type> <name>mfx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxExtBuffer</name><modifier>*</modifier><modifier>*</modifier></type> <name>ExtParam</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>NumExtParam</name></decl>;</decl_stmt>
}</block></struct></type> <name>mfxAudioParam</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>mfxU32</name></type> <name>SuggestedInputSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU32</name></type> <name>SuggestedOutputSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU32</name></type> <name><name>reserved</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>mfxAudioAllocRequest</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>mfxU64</name></type> <name>TimeStamp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>mfxU16</name></type> <name>Locked</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>NumChannels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU32</name></type> <name>SampleFrequency</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name>BitPerSample</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU16</name></type> <name><name>reserved1</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>mfxU8</name><modifier>*</modifier></type> <name>Data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU32</name></type> <name>reserved2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU32</name></type> <name>DataLength</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxU32</name></type> <name>MaxLength</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxU32</name></type> <name>NumExtParam</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxExtBuffer</name> <modifier>*</modifier><modifier>*</modifier></type><name>ExtParam</name></decl>;</decl_stmt>
}</block></struct></type> <name>mfxAudioFrame</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


</unit>
