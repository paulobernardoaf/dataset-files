<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\decklink\linux\decklink-sdk\DeckLinkAPIModes.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BMD_DECKLINKAPIMODES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BMD_DECKLINKAPIMODES_H</name></cpp:macro></cpp:define>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BMD_CONST</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BMD_CONST</name></cpp:macro> <cpp:value>__declspec(selectany) static const</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BMD_CONST</name></cpp:macro> <cpp:value>static const</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BMD_PUBLIC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BMD_PUBLIC</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>






<decl_stmt><decl><type><name>BMD_CONST</name> <name>REFIID</name></type> <name>IID_IDeckLinkDisplayModeIterator</name> <init>= <expr><block>{<expr><literal type="number">0x9C</literal></expr>,<expr><literal type="number">0x88</literal></expr>,<expr><literal type="number">0x49</literal></expr>,<expr><literal type="number">0x9F</literal></expr>,<expr><literal type="number">0xF6</literal></expr>,<expr><literal type="number">0x01</literal></expr>,<expr><literal type="number">0x40</literal></expr>,<expr><literal type="number">0x21</literal></expr>,<expr><literal type="number">0xB8</literal></expr>,<expr><literal type="number">0x0B</literal></expr>,<expr><literal type="number">0x03</literal></expr>,<expr><literal type="number">0x2E</literal></expr>,<expr><literal type="number">0x4E</literal></expr>,<expr><literal type="number">0xB4</literal></expr>,<expr><literal type="number">0x1C</literal></expr>,<expr><literal type="number">0x35</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BMD_CONST</name> <name>REFIID</name></type> <name>IID_IDeckLinkDisplayMode</name> <init>= <expr><block>{<expr><literal type="number">0x3E</literal></expr>,<expr><literal type="number">0xB2</literal></expr>,<expr><literal type="number">0xC1</literal></expr>,<expr><literal type="number">0xAB</literal></expr>,<expr><literal type="number">0x0A</literal></expr>,<expr><literal type="number">0x3D</literal></expr>,<expr><literal type="number">0x45</literal></expr>,<expr><literal type="number">0x23</literal></expr>,<expr><literal type="number">0xA3</literal></expr>,<expr><literal type="number">0xAD</literal></expr>,<expr><literal type="number">0xF4</literal></expr>,<expr><literal type="number">0x0D</literal></expr>,<expr><literal type="number">0x7F</literal></expr>,<expr><literal type="number">0xB1</literal></expr>,<expr><literal type="number">0x4E</literal></expr>,<expr><literal type="number">0x78</literal></expr>}</block></expr></init></decl>;</decl_stmt>



<typedef>typedef <type><name>uint32_t</name></type> <name>BMDDisplayMode</name>;</typedef>
<enum>enum <name>_BMDDisplayMode</name> <block>{



<decl><name>bmdModeNTSC</name> <init>= <expr><literal type="number">0x6E747363</literal></expr></init></decl>,
<decl><name>bmdModeNTSC2398</name> <init>= <expr><literal type="number">0x6E743233</literal></expr></init></decl>, 
<decl><name>bmdModePAL</name> <init>= <expr><literal type="number">0x70616C20</literal></expr></init></decl>,
<decl><name>bmdModeNTSCp</name> <init>= <expr><literal type="number">0x6E747370</literal></expr></init></decl>,
<decl><name>bmdModePALp</name> <init>= <expr><literal type="number">0x70616C70</literal></expr></init></decl>,



<decl><name>bmdModeHD1080p2398</name> <init>= <expr><literal type="number">0x32337073</literal></expr></init></decl>,
<decl><name>bmdModeHD1080p24</name> <init>= <expr><literal type="number">0x32347073</literal></expr></init></decl>,
<decl><name>bmdModeHD1080p25</name> <init>= <expr><literal type="number">0x48703235</literal></expr></init></decl>,
<decl><name>bmdModeHD1080p2997</name> <init>= <expr><literal type="number">0x48703239</literal></expr></init></decl>,
<decl><name>bmdModeHD1080p30</name> <init>= <expr><literal type="number">0x48703330</literal></expr></init></decl>,
<decl><name>bmdModeHD1080p50</name> <init>= <expr><literal type="number">0x48703530</literal></expr></init></decl>,
<decl><name>bmdModeHD1080p5994</name> <init>= <expr><literal type="number">0x48703539</literal></expr></init></decl>,
<decl><name>bmdModeHD1080p6000</name> <init>= <expr><literal type="number">0x48703630</literal></expr></init></decl>, 
<decl><name>bmdModeHD1080i50</name> <init>= <expr><literal type="number">0x48693530</literal></expr></init></decl>,
<decl><name>bmdModeHD1080i5994</name> <init>= <expr><literal type="number">0x48693539</literal></expr></init></decl>,
<decl><name>bmdModeHD1080i6000</name> <init>= <expr><literal type="number">0x48693630</literal></expr></init></decl>, 



<decl><name>bmdModeHD720p50</name> <init>= <expr><literal type="number">0x68703530</literal></expr></init></decl>,
<decl><name>bmdModeHD720p5994</name> <init>= <expr><literal type="number">0x68703539</literal></expr></init></decl>,
<decl><name>bmdModeHD720p60</name> <init>= <expr><literal type="number">0x68703630</literal></expr></init></decl>,



<decl><name>bmdMode2k2398</name> <init>= <expr><literal type="number">0x326B3233</literal></expr></init></decl>,
<decl><name>bmdMode2k24</name> <init>= <expr><literal type="number">0x326B3234</literal></expr></init></decl>,
<decl><name>bmdMode2k25</name> <init>= <expr><literal type="number">0x326B3235</literal></expr></init></decl>,



<decl><name>bmdMode2kDCI2398</name> <init>= <expr><literal type="number">0x32643233</literal></expr></init></decl>,
<decl><name>bmdMode2kDCI24</name> <init>= <expr><literal type="number">0x32643234</literal></expr></init></decl>,
<decl><name>bmdMode2kDCI25</name> <init>= <expr><literal type="number">0x32643235</literal></expr></init></decl>,
<decl><name>bmdMode2kDCI2997</name> <init>= <expr><literal type="number">0x32643239</literal></expr></init></decl>,
<decl><name>bmdMode2kDCI30</name> <init>= <expr><literal type="number">0x32643330</literal></expr></init></decl>,
<decl><name>bmdMode2kDCI50</name> <init>= <expr><literal type="number">0x32643530</literal></expr></init></decl>,
<decl><name>bmdMode2kDCI5994</name> <init>= <expr><literal type="number">0x32643539</literal></expr></init></decl>,
<decl><name>bmdMode2kDCI60</name> <init>= <expr><literal type="number">0x32643630</literal></expr></init></decl>,



<decl><name>bmdMode4K2160p2398</name> <init>= <expr><literal type="number">0x346B3233</literal></expr></init></decl>,
<decl><name>bmdMode4K2160p24</name> <init>= <expr><literal type="number">0x346B3234</literal></expr></init></decl>,
<decl><name>bmdMode4K2160p25</name> <init>= <expr><literal type="number">0x346B3235</literal></expr></init></decl>,
<decl><name>bmdMode4K2160p2997</name> <init>= <expr><literal type="number">0x346B3239</literal></expr></init></decl>,
<decl><name>bmdMode4K2160p30</name> <init>= <expr><literal type="number">0x346B3330</literal></expr></init></decl>,
<decl><name>bmdMode4K2160p50</name> <init>= <expr><literal type="number">0x346B3530</literal></expr></init></decl>,
<decl><name>bmdMode4K2160p5994</name> <init>= <expr><literal type="number">0x346B3539</literal></expr></init></decl>,
<decl><name>bmdMode4K2160p60</name> <init>= <expr><literal type="number">0x346B3630</literal></expr></init></decl>,



<decl><name>bmdMode4kDCI2398</name> <init>= <expr><literal type="number">0x34643233</literal></expr></init></decl>,
<decl><name>bmdMode4kDCI24</name> <init>= <expr><literal type="number">0x34643234</literal></expr></init></decl>,
<decl><name>bmdMode4kDCI25</name> <init>= <expr><literal type="number">0x34643235</literal></expr></init></decl>,
<decl><name>bmdMode4kDCI2997</name> <init>= <expr><literal type="number">0x34643239</literal></expr></init></decl>,
<decl><name>bmdMode4kDCI30</name> <init>= <expr><literal type="number">0x34643330</literal></expr></init></decl>,
<decl><name>bmdMode4kDCI50</name> <init>= <expr><literal type="number">0x34643530</literal></expr></init></decl>,
<decl><name>bmdMode4kDCI5994</name> <init>= <expr><literal type="number">0x34643539</literal></expr></init></decl>,
<decl><name>bmdMode4kDCI60</name> <init>= <expr><literal type="number">0x34643630</literal></expr></init></decl>,



<decl><name>bmdMode8K4320p2398</name> <init>= <expr><literal type="number">0x386B3233</literal></expr></init></decl>,
<decl><name>bmdMode8K4320p24</name> <init>= <expr><literal type="number">0x386B3234</literal></expr></init></decl>,
<decl><name>bmdMode8K4320p25</name> <init>= <expr><literal type="number">0x386B3235</literal></expr></init></decl>,
<decl><name>bmdMode8K4320p2997</name> <init>= <expr><literal type="number">0x386B3239</literal></expr></init></decl>,
<decl><name>bmdMode8K4320p30</name> <init>= <expr><literal type="number">0x386B3330</literal></expr></init></decl>,
<decl><name>bmdMode8K4320p50</name> <init>= <expr><literal type="number">0x386B3530</literal></expr></init></decl>,
<decl><name>bmdMode8K4320p5994</name> <init>= <expr><literal type="number">0x386B3539</literal></expr></init></decl>,
<decl><name>bmdMode8K4320p60</name> <init>= <expr><literal type="number">0x386B3630</literal></expr></init></decl>,



<decl><name>bmdMode8kDCI2398</name> <init>= <expr><literal type="number">0x38643233</literal></expr></init></decl>,
<decl><name>bmdMode8kDCI24</name> <init>= <expr><literal type="number">0x38643234</literal></expr></init></decl>,
<decl><name>bmdMode8kDCI25</name> <init>= <expr><literal type="number">0x38643235</literal></expr></init></decl>,
<decl><name>bmdMode8kDCI2997</name> <init>= <expr><literal type="number">0x38643239</literal></expr></init></decl>,
<decl><name>bmdMode8kDCI30</name> <init>= <expr><literal type="number">0x38643330</literal></expr></init></decl>,
<decl><name>bmdMode8kDCI50</name> <init>= <expr><literal type="number">0x38643530</literal></expr></init></decl>,
<decl><name>bmdMode8kDCI5994</name> <init>= <expr><literal type="number">0x38643539</literal></expr></init></decl>,
<decl><name>bmdMode8kDCI60</name> <init>= <expr><literal type="number">0x38643630</literal></expr></init></decl>,



<decl><name>bmdModeCintelRAW</name> <init>= <expr><literal type="number">0x72776369</literal></expr></init></decl>, 
<decl><name>bmdModeCintelCompressedRAW</name> <init>= <expr><literal type="number">0x72776363</literal></expr></init></decl>, 



<decl><name>bmdModeUnknown</name> <init>= <expr><literal type="number">0x69756E6B</literal></expr></init></decl>
}</block>;</enum>



<typedef>typedef <type><name>uint32_t</name></type> <name>BMDFieldDominance</name>;</typedef>
<enum>enum <name>_BMDFieldDominance</name> <block>{
<decl><name>bmdUnknownFieldDominance</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>bmdLowerFieldFirst</name> <init>= <expr><literal type="number">0x6C6F7772</literal></expr></init></decl>,
<decl><name>bmdUpperFieldFirst</name> <init>= <expr><literal type="number">0x75707072</literal></expr></init></decl>,
<decl><name>bmdProgressiveFrame</name> <init>= <expr><literal type="number">0x70726F67</literal></expr></init></decl>,
<decl><name>bmdProgressiveSegmentedFrame</name> <init>= <expr><literal type="number">0x70736620</literal></expr></init></decl>
}</block>;</enum>



<typedef>typedef <type><name>uint32_t</name></type> <name>BMDPixelFormat</name>;</typedef>
<enum>enum <name>_BMDPixelFormat</name> <block>{
<decl><name>bmdFormat8BitYUV</name> <init>= <expr><literal type="number">0x32767579</literal></expr></init></decl>,
<decl><name>bmdFormat10BitYUV</name> <init>= <expr><literal type="number">0x76323130</literal></expr></init></decl>,
<decl><name>bmdFormat8BitARGB</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>,
<decl><name>bmdFormat8BitBGRA</name> <init>= <expr><literal type="number">0x42475241</literal></expr></init></decl>,
<decl><name>bmdFormat10BitRGB</name> <init>= <expr><literal type="number">0x72323130</literal></expr></init></decl>, 
<decl><name>bmdFormat12BitRGB</name> <init>= <expr><literal type="number">0x52313242</literal></expr></init></decl>, 
<decl><name>bmdFormat12BitRGBLE</name> <init>= <expr><literal type="number">0x5231324C</literal></expr></init></decl>, 
<decl><name>bmdFormat10BitRGBXLE</name> <init>= <expr><literal type="number">0x5231306C</literal></expr></init></decl>, 
<decl><name>bmdFormat10BitRGBX</name> <init>= <expr><literal type="number">0x52313062</literal></expr></init></decl>, 
<decl><name>bmdFormatH265</name> <init>= <expr><literal type="number">0x68657631</literal></expr></init></decl>, 



<decl><name>bmdFormatDNxHR</name> <init>= <expr><literal type="number">0x41566468</literal></expr></init></decl>,



<decl><name>bmdFormat12BitRAWGRBG</name> <init>= <expr><literal type="number">0x72313270</literal></expr></init></decl>, 
<decl><name>bmdFormat12BitRAWJPEG</name> <init>= <expr><literal type="number">0x72313670</literal></expr></init></decl> 
}</block>;</enum>



<typedef>typedef <type><name>uint32_t</name></type> <name>BMDDisplayModeFlags</name>;</typedef>
<enum>enum <name>_BMDDisplayModeFlags</name> <block>{
<decl><name>bmdDisplayModeSupports3D</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,
<decl><name>bmdDisplayModeColorspaceRec601</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,
<decl><name>bmdDisplayModeColorspaceRec709</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,
<decl><name>bmdDisplayModeColorspaceRec2020</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>
}</block>;</enum>



<decl_stmt><decl><type><name>class</name></type> <name>IDeckLinkDisplayModeIterator</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>IDeckLinkDisplayMode</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>class</name> <name>BMD_PUBLIC</name></type> <name>IDeckLinkDisplayModeIterator</name> <range>: <expr><name>public</name> <name>IUnknown</name>
<block>{
<expr><name>public</name><operator>:</operator>
<name>virtual</name> <name>HRESULT</name> <call><name>Next</name> <argument_list>( <argument><expr><name>IDeckLinkDisplayMode</name> <operator>*</operator><operator>*</operator><name>deckLinkDisplayMode</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>protected</name><operator>:</operator>
<name>virtual</name> <operator>~</operator><macro><name>IDeckLinkDisplayModeIterator</name> <argument_list>()</argument_list></macro> <block>{}</block></expr> 
}</block></expr></range></decl>;</decl_stmt>



<decl_stmt><decl><type><name>class</name> <name>BMD_PUBLIC</name></type> <name>IDeckLinkDisplayMode</name> <range>: <expr><name>public</name> <name>IUnknown</name>
<block>{
<expr><name>public</name><operator>:</operator>
<name>virtual</name> <name>HRESULT</name> <call><name>GetName</name> <argument_list>( <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>*</operator><name>name</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>BMDDisplayMode</name> <call><name>GetDisplayMode</name> <argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>long</name> <call><name>GetWidth</name> <argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>long</name> <call><name>GetHeight</name> <argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <call><name>GetFrameRate</name> <argument_list>( <argument><expr><name>BMDTimeValue</name> <operator>*</operator><name>frameDuration</name></expr></argument>, <argument><expr><name>BMDTimeScale</name> <operator>*</operator><name>timeScale</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>BMDFieldDominance</name> <call><name>GetFieldDominance</name> <argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>BMDDisplayModeFlags</name> <call><name>GetFlags</name> <argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>protected</name><operator>:</operator>
<name>virtual</name> <operator>~</operator><macro><name>IDeckLinkDisplayMode</name> <argument_list>()</argument_list></macro> <block>{}</block></expr> 
}</block></expr></range></decl>;</decl_stmt>



<extern>extern <literal type="string">"C"</literal> <block>{<block_content>


</block_content>}</block></extern>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
