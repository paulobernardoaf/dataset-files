<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\decklink\mac\decklink-sdk\DeckLinkAPIConfiguration_v10_2.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BMD_DECKLINKAPICONFIGURATION_v10_2_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BMD_DECKLINKAPICONFIGURATION_v10_2_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DeckLinkAPIConfiguration.h"</cpp:file></cpp:include>



<decl_stmt><decl><type><name>BMD_CONST</name> <name>REFIID</name></type> <name>IID_IDeckLinkConfiguration_v10_2</name> <init>= <expr><block>{<expr><literal type="number">0xC6</literal></expr>,<expr><literal type="number">0x79</literal></expr>,<expr><literal type="number">0xA3</literal></expr>,<expr><literal type="number">0x5B</literal></expr>,<expr><literal type="number">0x61</literal></expr>,<expr><literal type="number">0x0C</literal></expr>,<expr><literal type="number">0x4D</literal></expr>,<expr><literal type="number">0x09</literal></expr>,<expr><literal type="number">0xB7</literal></expr>,<expr><literal type="number">0x48</literal></expr>,<expr><literal type="number">0x1D</literal></expr>,<expr><literal type="number">0x04</literal></expr>,<expr><literal type="number">0x78</literal></expr>,<expr><literal type="number">0x10</literal></expr>,<expr><literal type="number">0x0F</literal></expr>,<expr><literal type="number">0xC0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><name>class</name></type> <name>IDeckLinkConfiguration_v10_2</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>class</name></type> <name>IDeckLinkConfiguration_v10_2</name> <range>: <expr><name>public</name> <name>IUnknown</name>
<block>{
<expr><name>public</name><operator>:</operator>
<name>virtual</name> <name>HRESULT</name> <macro><name>SetFlag</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>bool value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetFlag</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>bool *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <macro><name>SetInt</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>int64_t value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetInt</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>int64_t *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <macro><name>SetFloat</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>double value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetFloat</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>double *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <macro><name>SetString</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>CFStringRef value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <macro><name>GetString</name> <argument_list>( <argument>BMDDeckLinkConfigurationID cfgID</argument>, <argument>CFStringRef *value</argument>)</argument_list></macro> <operator>=</operator> <literal type="number">0</literal></expr>;
<expr><name>virtual</name> <name>HRESULT</name> <call><name>WriteConfigurationToPreferences</name> <argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;

<expr><name>protected</name><operator>:</operator>
<name>virtual</name> <operator>~</operator><macro><name>IDeckLinkConfiguration_v10_2</name> <argument_list>()</argument_list></macro> <block>{}</block></expr> 
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
