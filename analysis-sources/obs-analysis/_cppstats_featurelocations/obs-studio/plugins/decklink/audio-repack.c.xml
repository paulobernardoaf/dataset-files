<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\decklink\audio-repack.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"audio-repack.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/sse-intrin.h&gt;</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>check_buffer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type><name>repack</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>frame_count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>new_size</name> <init>=
<expr><name>frame_count</name> <operator>*</operator> <name><name>repack</name><operator>-&gt;</operator><name>base_dst_size</name></name> <operator>+</operator> <name><name>repack</name><operator>-&gt;</operator><name>extra_dst_size</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>repack</name><operator>-&gt;</operator><name>packet_size</name></name> <operator>&lt;</operator> <name>new_size</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>repack</name><operator>-&gt;</operator><name>packet_buffer</name></name> <operator>=</operator>
<call><name>brealloc</name><argument_list>(<argument><expr><name><name>repack</name><operator>-&gt;</operator><name>packet_buffer</name></name></expr></argument>, <argument><expr><name>new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>repack</name><operator>-&gt;</operator><name>packet_buffer</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>repack</name><operator>-&gt;</operator><name>packet_size</name></name> <operator>=</operator> <name>new_size</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>











<function><type><name>int</name></type> <name>repack_squash</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type><name>repack</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>bsrc</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>frame_count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>check_buffer</name><argument_list>(<argument><expr><name>repack</name></expr></argument>, <argument><expr><name>frame_count</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>squash</name> <init>= <expr><name><name>repack</name><operator>-&gt;</operator><name>extra_dst_size</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>__m128i</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>__m128i</name> <operator>*</operator><operator>)</operator><name>bsrc</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>__m128i</name> <modifier>*</modifier></type><name>esrc</name> <init>= <expr><name>src</name> <operator>+</operator> <name>frame_count</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>dst</name> <init>= <expr><operator>(</operator><name>uint16_t</name> <operator>*</operator><operator>)</operator><name><name>repack</name><operator>-&gt;</operator><name>packet_buffer</name></name></expr></init></decl>;</decl_stmt>




<if_stmt><if>if <condition>(<expr><name>squash</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<while>while <condition>(<expr><name>src</name> <operator>!=</operator> <name>esrc</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>__m128i</name></type> <name>target</name> <init>= <expr><call><name>_mm_load_si128</name><argument_list>(<argument><expr><name>src</name><operator>++</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>_mm_storeu_si128</name><argument_list>(<argument><expr><operator>(</operator><name>__m128i</name> <operator>*</operator><operator>)</operator><name>dst</name></expr></argument>, <argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal> <operator>-</operator> <name>squash</name></expr>;</expr_stmt>
</block_content>}</block></while>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>repack_squash_swap</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type><name>repack</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>bsrc</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>frame_count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>check_buffer</name><argument_list>(<argument><expr><name>repack</name></expr></argument>, <argument><expr><name>frame_count</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>squash</name> <init>= <expr><name><name>repack</name><operator>-&gt;</operator><name>extra_dst_size</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>__m128i</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>__m128i</name> <operator>*</operator><operator>)</operator><name>bsrc</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>__m128i</name> <modifier>*</modifier></type><name>esrc</name> <init>= <expr><name>src</name> <operator>+</operator> <name>frame_count</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>dst</name> <init>= <expr><operator>(</operator><name>uint16_t</name> <operator>*</operator><operator>)</operator><name><name>repack</name><operator>-&gt;</operator><name>packet_buffer</name></name></expr></init></decl>;</decl_stmt>
<while>while <condition>(<expr><name>src</name> <operator>!=</operator> <name>esrc</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>__m128i</name></type> <name>target</name> <init>= <expr><call><name>_mm_load_si128</name><argument_list>(<argument><expr><name>src</name><operator>++</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__m128i</name></type> <name>buf</name> <init>=
<expr><call><name>_mm_shufflelo_epi16</name><argument_list>(<argument><expr><name>target</name></expr></argument>, <argument><expr><call><name>_MM_SHUFFLE</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>_mm_storeu_si128</name><argument_list>(<argument><expr><operator>(</operator><name>__m128i</name> <operator>*</operator><operator>)</operator><name>dst</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal> <operator>-</operator> <name>squash</name></expr>;</expr_stmt>
</block_content>}</block></while>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>audio_repack_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type><name>repack</name></decl></parameter>,
<parameter><decl><type><name>audio_repack_mode_t</name></type> <name>repack_mode</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>sample_bit</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>repack</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>repack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>sample_bit</name> <operator>!=</operator> <literal type="number">16</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>_audio_repack_ch</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>repack</name><operator>-&gt;</operator><name>base_src_size</name></name> <operator>=</operator> <literal type="number">8</literal> <operator>*</operator> <operator>(</operator><literal type="number">16</literal> <operator>/</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>repack</name><operator>-&gt;</operator><name>base_dst_size</name></name> <operator>=</operator> <name><name>_audio_repack_ch</name><index>[<expr><name>repack_mode</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><literal type="number">16</literal> <operator>/</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>repack</name><operator>-&gt;</operator><name>extra_dst_size</name></name> <operator>=</operator> <literal type="number">8</literal> <operator>-</operator> <name><name>_audio_repack_ch</name><index>[<expr><name>repack_mode</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>repack</name><operator>-&gt;</operator><name>repack_func</name></name> <operator>=</operator> <operator>&amp;</operator><name>repack_squash</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>repack_mode</name> <operator>==</operator> <name>repack_mode_8to5ch_swap</name> <operator>||</operator>
<name>repack_mode</name> <operator>==</operator> <name>repack_mode_8to6ch_swap</name> <operator>||</operator>
<name>repack_mode</name> <operator>==</operator> <name>repack_mode_8ch_swap</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>repack</name><operator>-&gt;</operator><name>repack_func</name></name> <operator>=</operator> <operator>&amp;</operator><name>repack_squash_swap</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>audio_repack_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>audio_repack</name></name> <modifier>*</modifier></type><name>repack</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>repack</name><operator>-&gt;</operator><name>packet_buffer</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>bfree</name><argument_list>(<argument><expr><name><name>repack</name><operator>-&gt;</operator><name>packet_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>repack</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>repack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
