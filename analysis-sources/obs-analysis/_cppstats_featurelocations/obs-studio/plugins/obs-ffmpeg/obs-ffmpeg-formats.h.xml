<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\obs-analysis\_cppstats_featurelocations\obs-studio\plugins\obs-ffmpeg\obs-ffmpeg-formats.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>once</name></cpp:pragma>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int64_t</name></type> <name>rescale_ts</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>val</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>,
<parameter><decl><type><name>AVRational</name></type> <name>new_base</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>av_rescale_q_rnd</name><argument_list>(<argument><expr><name>val</name></expr></argument>, <argument><expr><name><name>context</name><operator>-&gt;</operator><name>time_base</name></name></expr></argument>, <argument><expr><name>new_base</name></expr></argument>,
<argument><expr><name>AV_ROUND_NEAR_INF</name> <operator>|</operator> <name>AV_ROUND_PASS_MINMAX</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>AVPixelFormat</name></name></type>
<name>obs_to_ffmpeg_video_format</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>video_format</name></name></type> <name>format</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VIDEO_FORMAT_I444</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_YUV444P</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_I420</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_YUV420P</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_NV12</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_NV12</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_YUY2</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_YUYV422</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_UYVY</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_UYVY422</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_RGBA</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_RGBA</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_BGRA</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_BGRA</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_BGRX</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_BGRA</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_Y800</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_GRAY8</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_BGR3</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_BGR24</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_I422</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_YUV422P</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_I40A</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_YUVA420P</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_I42A</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_YUVA422P</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_YUVA</name></expr>:</case>
<return>return <expr><name>AV_PIX_FMT_YUVA444P</name></expr>;</return>
<case>case <expr><name>VIDEO_FORMAT_NONE</name></expr>:</case>
<case>case <expr><name>VIDEO_FORMAT_YVYU</name></expr>:</case>
<case>case <expr><name>VIDEO_FORMAT_AYUV</name></expr>:</case>

<return>return <expr><name>AV_PIX_FMT_NONE</name></expr>;</return>
</block_content>}</block></switch>

<return>return <expr><name>AV_PIX_FMT_NONE</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>video_format</name></name></type>
<name>ffmpeg_to_obs_video_format</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>format</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>AV_PIX_FMT_YUV444P</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_I444</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUV420P</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_I420</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_NV12</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_NV12</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUYV422</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_YUY2</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_UYVY422</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_UYVY</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_RGBA</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_RGBA</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_BGRA</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_BGRA</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_GRAY8</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_Y800</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_BGR24</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_BGR3</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUV422P</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_I422</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUVA420P</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_I40A</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUVA422P</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_I42A</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUVA444P</name></expr>:</case>
<return>return <expr><name>VIDEO_FORMAT_YUVA</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_NONE</name></expr>:</case>
<default>default:</default>
<return>return <expr><name>VIDEO_FORMAT_NONE</name></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>audio_format</name></name></type>
<name>convert_ffmpeg_sample_format</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>format</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><operator>(</operator><name>uint32_t</name><operator>)</operator><name>format</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>AV_SAMPLE_FMT_U8</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_U8BIT</name></expr>;</return>
<case>case <expr><name>AV_SAMPLE_FMT_S16</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_16BIT</name></expr>;</return>
<case>case <expr><name>AV_SAMPLE_FMT_S32</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_32BIT</name></expr>;</return>
<case>case <expr><name>AV_SAMPLE_FMT_FLT</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_FLOAT</name></expr>;</return>
<case>case <expr><name>AV_SAMPLE_FMT_U8P</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_U8BIT_PLANAR</name></expr>;</return>
<case>case <expr><name>AV_SAMPLE_FMT_S16P</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_16BIT_PLANAR</name></expr>;</return>
<case>case <expr><name>AV_SAMPLE_FMT_S32P</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_32BIT_PLANAR</name></expr>;</return>
<case>case <expr><name>AV_SAMPLE_FMT_FLTP</name></expr>:</case>
<return>return <expr><name>AUDIO_FORMAT_FLOAT_PLANAR</name></expr>;</return>
</block_content>}</block></switch>


<return>return <expr><name>AUDIO_FORMAT_16BIT</name></expr>;</return>
</block_content>}</block></function>
</unit>
