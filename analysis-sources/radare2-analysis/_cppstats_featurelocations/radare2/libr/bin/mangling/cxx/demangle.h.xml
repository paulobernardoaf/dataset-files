<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\mangling\cxx\demangle.h">



























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name> <argument_list>(<argument><expr><name>DEMANGLE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEMANGLE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libiberty.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_NO_OPTS</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_PARAMS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_ANSI</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_JAVA</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_VERBOSE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 3)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_TYPES</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_RET_POSTFIX</name></cpp:macro> <cpp:value>(1 &lt;&lt; 5)</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_RET_DROP</name></cpp:macro> <cpp:value>(1 &lt;&lt; 6)</cpp:value></cpp:define> 




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_AUTO</name></cpp:macro> <cpp:value>(1 &lt;&lt; 8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_GNU</name></cpp:macro> <cpp:value>(1 &lt;&lt; 9)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_LUCID</name></cpp:macro> <cpp:value>(1 &lt;&lt; 10)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_ARM</name></cpp:macro> <cpp:value>(1 &lt;&lt; 11)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_HP</name></cpp:macro> <cpp:value>(1 &lt;&lt; 12)</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_EDG</name></cpp:macro> <cpp:value>(1 &lt;&lt; 13)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_GNU_V3</name></cpp:macro> <cpp:value>(1 &lt;&lt; 14)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_GNAT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 15)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_DLANG</name></cpp:macro> <cpp:value>(1 &lt;&lt; 16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_RUST</name></cpp:macro> <cpp:value>(1 &lt;&lt; 17)</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMGL_STYLE_MASK</name></cpp:macro> <cpp:value>(DMGL_AUTO|DMGL_GNU|DMGL_LUCID|DMGL_ARM|DMGL_HP|DMGL_EDG|DMGL_GNU_V3|DMGL_JAVA|DMGL_GNAT|DMGL_DLANG|DMGL_RUST)</cpp:value></cpp:define>









<enum><specifier>extern</specifier> enum <name>demangling_styles</name>
<block>{
<decl><name>no_demangling</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>unknown_demangling</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>auto_demangling</name> <init>= <expr><name>DMGL_AUTO</name></expr></init></decl>,
<decl><name>gnu_demangling</name> <init>= <expr><name>DMGL_GNU</name></expr></init></decl>,
<decl><name>lucid_demangling</name> <init>= <expr><name>DMGL_LUCID</name></expr></init></decl>,
<decl><name>arm_demangling</name> <init>= <expr><name>DMGL_ARM</name></expr></init></decl>,
<decl><name>hp_demangling</name> <init>= <expr><name>DMGL_HP</name></expr></init></decl>,
<decl><name>edg_demangling</name> <init>= <expr><name>DMGL_EDG</name></expr></init></decl>,
<decl><name>gnu_v3_demangling</name> <init>= <expr><name>DMGL_GNU_V3</name></expr></init></decl>,
<decl><name>java_demangling</name> <init>= <expr><name>DMGL_JAVA</name></expr></init></decl>,
<decl><name>gnat_demangling</name> <init>= <expr><name>DMGL_GNAT</name></expr></init></decl>,
<decl><name>dlang_demangling</name> <init>= <expr><name>DMGL_DLANG</name></expr></init></decl>,
<decl><name>rust_demangling</name> <init>= <expr><name>DMGL_RUST</name></expr></init></decl>
}</block> <decl><name>current_demangling_style</name></decl>;</enum>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NO_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"none"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUTO_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"auto"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"gnu"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LUCID_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"lucid"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"arm"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HP_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"hp"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EDG_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"edg"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_V3_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"gnu-v3"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JAVA_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"java"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNAT_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"gnat"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DLANG_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"dlang"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUST_DEMANGLING_STYLE_STRING</name></cpp:macro> <cpp:value>"rust"</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURRENT_DEMANGLING_STYLE</name></cpp:macro> <cpp:value>current_demangling_style</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUTO_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_AUTO)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_GNU)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LUCID_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_LUCID)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_ARM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HP_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_HP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EDG_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_EDG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_V3_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_GNU_V3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JAVA_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_JAVA)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNAT_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_GNAT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DLANG_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_DLANG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUST_DEMANGLING</name></cpp:macro> <cpp:value>(((int) CURRENT_DEMANGLING_STYLE) &amp; DMGL_RUST)</cpp:value></cpp:define>




<struct><specifier>extern</specifier> <specifier>const</specifier> struct <name>demangler_engine</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name>demangling_style_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>enum</name> <name>demangling_styles</name></name></type> <name>demangling_style</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name>demangling_style_doc</name></decl>;</decl_stmt>
}</block> <decl><name><name>libiberty_demanglers</name><index>[]</index></name></decl>;</struct>

<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type>
<name>cplus_demangle</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_opname</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>opname</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>result</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>cplus_mangle_opname</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>opname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><specifier>extern</specifier> <name>void</name></type>
<name>set_cplus_marker_for_demangling</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>ch</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name><name>enum</name> <name>demangling_styles</name></name></type>
<name>cplus_demangle_set_style</name> <parameter_list>(<parameter><decl><type><name><name>enum</name> <name>demangling_styles</name></name></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name><name>enum</name> <name>demangling_styles</name></name></type>
<name>cplus_demangle_name_to_style</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>demangle_callbackref</name>) <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>




<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_v3_callback</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>,
<parameter><decl><type><name>demangle_callbackref</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>char</name><modifier>*</modifier></type>
<name>cplus_demangle_v3</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>java_demangle_v3_callback</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>,
<parameter><decl><type><name>demangle_callbackref</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>char</name><modifier>*</modifier></type>
<name>java_demangle_v3</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type>
<name>ada_demangle</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type>
<name>dlang_demangle</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>rust_is_mangled</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>extern</specifier> <name>void</name></type>
<name>rust_demangle_sym</name> <parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>sym</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type>
<name>rust_demangle</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>gnu_v3_ctor_kinds</name> <block>{
<decl><name>gnu_v3_complete_object_ctor</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>gnu_v3_base_object_ctor</name></decl>,
<decl><name>gnu_v3_complete_object_allocating_ctor</name></decl>,



<decl><name>gnu_v3_unified_ctor</name></decl>,
<decl><name>gnu_v3_object_ctor_group</name></decl>
}</block>;</enum>





<function_decl><type><specifier>extern</specifier> <name><name>enum</name> <name>gnu_v3_ctor_kinds</name></name></type>
<name>is_gnu_v3_mangled_ctor</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>


<enum>enum <name>gnu_v3_dtor_kinds</name> <block>{
<decl><name>gnu_v3_deleting_dtor</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>gnu_v3_complete_object_dtor</name></decl>,
<decl><name>gnu_v3_base_object_dtor</name></decl>,



<decl><name>gnu_v3_unified_dtor</name></decl>,
<decl><name>gnu_v3_object_dtor_group</name></decl>
}</block>;</enum>





<function_decl><type><specifier>extern</specifier> <name><name>enum</name> <name>gnu_v3_dtor_kinds</name></name></type>
<name>is_gnu_v3_mangled_dtor</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>















<enum>enum <name>demangle_component_type</name>
<block>{

<decl><name>DEMANGLE_COMPONENT_NAME</name></decl>,



<decl><name>DEMANGLE_COMPONENT_QUAL_NAME</name></decl>,


<decl><name>DEMANGLE_COMPONENT_LOCAL_NAME</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TYPED_NAME</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TEMPLATE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TEMPLATE_PARAM</name></decl>,

<decl><name>DEMANGLE_COMPONENT_FUNCTION_PARAM</name></decl>,


<decl><name>DEMANGLE_COMPONENT_CTOR</name></decl>,

<decl><name>DEMANGLE_COMPONENT_DTOR</name></decl>,


<decl><name>DEMANGLE_COMPONENT_VTABLE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_VTT</name></decl>,



<decl><name>DEMANGLE_COMPONENT_CONSTRUCTION_VTABLE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TYPEINFO</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TYPEINFO_NAME</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TYPEINFO_FN</name></decl>,


<decl><name>DEMANGLE_COMPONENT_THUNK</name></decl>,


<decl><name>DEMANGLE_COMPONENT_VIRTUAL_THUNK</name></decl>,


<decl><name>DEMANGLE_COMPONENT_COVARIANT_THUNK</name></decl>,

<decl><name>DEMANGLE_COMPONENT_JAVA_CLASS</name></decl>,


<decl><name>DEMANGLE_COMPONENT_GUARD</name></decl>,

<decl><name>DEMANGLE_COMPONENT_TLS_INIT</name></decl>,
<decl><name>DEMANGLE_COMPONENT_TLS_WRAPPER</name></decl>,


<decl><name>DEMANGLE_COMPONENT_REFTEMP</name></decl>,


<decl><name>DEMANGLE_COMPONENT_HIDDEN_ALIAS</name></decl>,


<decl><name>DEMANGLE_COMPONENT_SUB_STD</name></decl>,


<decl><name>DEMANGLE_COMPONENT_RESTRICT</name></decl>,


<decl><name>DEMANGLE_COMPONENT_VOLATILE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_CONST</name></decl>,


<decl><name>DEMANGLE_COMPONENT_RESTRICT_THIS</name></decl>,


<decl><name>DEMANGLE_COMPONENT_VOLATILE_THIS</name></decl>,


<decl><name>DEMANGLE_COMPONENT_CONST_THIS</name></decl>,


<decl><name>DEMANGLE_COMPONENT_REFERENCE_THIS</name></decl>,


<decl><name>DEMANGLE_COMPONENT_RVALUE_REFERENCE_THIS</name></decl>,



<decl><name>DEMANGLE_COMPONENT_VENDOR_TYPE_QUAL</name></decl>,


<decl><name>DEMANGLE_COMPONENT_POINTER</name></decl>,


<decl><name>DEMANGLE_COMPONENT_REFERENCE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_RVALUE_REFERENCE</name></decl>,

<decl><name>DEMANGLE_COMPONENT_COMPLEX</name></decl>,

<decl><name>DEMANGLE_COMPONENT_IMAGINARY</name></decl>,

<decl><name>DEMANGLE_COMPONENT_BUILTIN_TYPE</name></decl>,

<decl><name>DEMANGLE_COMPONENT_VENDOR_TYPE</name></decl>,



<decl><name>DEMANGLE_COMPONENT_FUNCTION_TYPE</name></decl>,



<decl><name>DEMANGLE_COMPONENT_ARRAY_TYPE</name></decl>,



<decl><name>DEMANGLE_COMPONENT_PTRMEM_TYPE</name></decl>,

<decl><name>DEMANGLE_COMPONENT_FIXED_TYPE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_VECTOR_TYPE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_ARGLIST</name></decl>,



<decl><name>DEMANGLE_COMPONENT_TEMPLATE_ARGLIST</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TPARM_OBJ</name></decl>,


<decl><name>DEMANGLE_COMPONENT_INITIALIZER_LIST</name></decl>,


<decl><name>DEMANGLE_COMPONENT_OPERATOR</name></decl>,


<decl><name>DEMANGLE_COMPONENT_EXTENDED_OPERATOR</name></decl>,


<decl><name>DEMANGLE_COMPONENT_CAST</name></decl>,



<decl><name>DEMANGLE_COMPONENT_CONVERSION</name></decl>,

<decl><name>DEMANGLE_COMPONENT_NULLARY</name></decl>,


<decl><name>DEMANGLE_COMPONENT_UNARY</name></decl>,


<decl><name>DEMANGLE_COMPONENT_BINARY</name></decl>,


<decl><name>DEMANGLE_COMPONENT_BINARY_ARGS</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TRINARY</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TRINARY_ARG1</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TRINARY_ARG2</name></decl>,


<decl><name>DEMANGLE_COMPONENT_LITERAL</name></decl>,






<decl><name>DEMANGLE_COMPONENT_LITERAL_NEG</name></decl>,


<decl><name>DEMANGLE_COMPONENT_JAVA_RESOURCE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_COMPOUND_NAME</name></decl>,

<decl><name>DEMANGLE_COMPONENT_CHARACTER</name></decl>,

<decl><name>DEMANGLE_COMPONENT_NUMBER</name></decl>,

<decl><name>DEMANGLE_COMPONENT_DECLTYPE</name></decl>,

<decl><name>DEMANGLE_COMPONENT_GLOBAL_CONSTRUCTORS</name></decl>,

<decl><name>DEMANGLE_COMPONENT_GLOBAL_DESTRUCTORS</name></decl>,

<decl><name>DEMANGLE_COMPONENT_LAMBDA</name></decl>,

<decl><name>DEMANGLE_COMPONENT_DEFAULT_ARG</name></decl>,

<decl><name>DEMANGLE_COMPONENT_UNNAMED_TYPE</name></decl>,


<decl><name>DEMANGLE_COMPONENT_TRANSACTION_CLONE</name></decl>,



<decl><name>DEMANGLE_COMPONENT_NONTRANSACTION_CLONE</name></decl>,

<decl><name>DEMANGLE_COMPONENT_PACK_EXPANSION</name></decl>,

<decl><name>DEMANGLE_COMPONENT_TAGGED_NAME</name></decl>,

<decl><name>DEMANGLE_COMPONENT_TRANSACTION_SAFE</name></decl>,

<decl><name>DEMANGLE_COMPONENT_CLONE</name></decl>,
<decl><name>DEMANGLE_COMPONENT_NOEXCEPT</name></decl>,
<decl><name>DEMANGLE_COMPONENT_THROW_SPEC</name></decl>
}</block>;</enum>



<struct_decl>struct <name>demangle_operator_info</name>;</struct_decl>
<struct_decl>struct <name>demangle_builtin_type_info</name>;</struct_decl>






<struct>struct <name>demangle_component</name>
<block>{

<decl_stmt><decl><type><name><name>enum</name> <name>demangle_component_type</name></name></type> <name>type</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>d_printing</name></decl>;</decl_stmt>

<union>union
<block>{

<struct>struct
<block>{


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
}</block> <decl><name>s_name</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>demangle_operator_info</name></name> <modifier>*</modifier></type><name>op</name></decl>;</decl_stmt>
}</block> <decl><name>s_operator</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><name>int</name></type> <name>args</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
}</block> <decl><name>s_extended_operator</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name>accum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name>sat</name></decl>;</decl_stmt>
}</block> <decl><name>s_fixed</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><name><name>enum</name> <name>gnu_v3_ctor_kinds</name></name></type> <name>kind</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
}</block> <decl><name>s_ctor</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><name><name>enum</name> <name>gnu_v3_dtor_kinds</name></name></type> <name>kind</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
}</block> <decl><name>s_dtor</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>demangle_builtin_type_info</name></name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
}</block> <decl><name>s_builtin</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>string</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
}</block> <decl><name>s_string</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><name>long</name></type> <name>number</name></decl>;</decl_stmt>
}</block> <decl><name>s_number</name></decl>;</struct>


<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>character</name></decl>;</decl_stmt>
}</block> <decl><name>s_character</name></decl>;</struct>


<struct>struct
<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>left</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>right</name></decl>;</decl_stmt>
}</block> <decl><name>s_binary</name></decl>;</struct>

<struct>struct
<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>sub</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>
}</block> <decl><name>s_unary_num</name></decl>;</struct>

}</block> <decl><name>u</name></decl>;</union>
}</block>;</struct>









<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_fill_component</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>fill</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>demangle_component_type</name></name></type></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>left</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>right</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_fill_name</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>fill</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_fill_builtin_type</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>fill</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type_name</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_fill_operator</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>fill</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>opname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>args</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_fill_extended_operator</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>fill</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>numargs</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>nm</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_fill_ctor</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>fill</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gnu_v3_ctor_kinds</name></name></type> <name>kind</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_fill_dtor</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>fill</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>gnu_v3_dtor_kinds</name></name></type> <name>kind</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type>
<name>cplus_demangle_v3_components</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mangled</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>mem</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type>
<name>cplus_demangle_print</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>tree</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>estimated_length</name></decl></parameter>,
<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>p_allocated_size</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><specifier>extern</specifier> <name>int</name></type>
<name>cplus_demangle_print_callback</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>options</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>demangle_component</name></name> <modifier>*</modifier></type><name>tree</name></decl></parameter>,
<parameter><decl><type><name>demangle_callbackref</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
