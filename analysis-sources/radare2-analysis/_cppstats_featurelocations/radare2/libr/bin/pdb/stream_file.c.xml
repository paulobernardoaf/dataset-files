<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\pdb\stream_file.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stream_file.h"</cpp:file></cpp:include>





<function><type><name>int</name></type> <name>init_r_stream_file</name><parameter_list>(<parameter><decl><type><name>R_STREAM_FILE</name> <modifier>*</modifier></type><name>stream_file</name></decl></parameter>, <parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>pages</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pages_amount</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>page_size</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>buf</name></name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pages</name></name> <operator>=</operator> <name>pages</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pages_amount</name></name> <operator>=</operator> <name>pages_amount</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name> <operator>=</operator> <name>page_size</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>size</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name> <operator>=</operator> <name>pages_amount</name> <operator>*</operator> <name>page_size</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name> <operator>=</operator> <name>size</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>stream_file_read_pages</name><parameter_list>(<parameter><decl><type><name>R_STREAM_FILE</name> <modifier>*</modifier></type><name>stream_file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>start_indx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>end_indx</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>page_offset</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>end_indx</name> <operator>-</operator> <name>start_indx</name><operator>)</operator> <operator>&gt;</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>READ_PAGE_FAIL</name></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>end_indx</name> <operator>=</operator> <call><name>R_MIN</name> <argument_list>(<argument><expr><name>end_indx</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pages_amount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <name>start_indx</name></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>end_indx</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>page_offset</name> <operator>=</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>pages</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>page_offset</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>r_buf_seek</name> <argument_list>(<argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>, <argument><expr><name>page_offset</name></expr></argument>, <argument><expr><name>R_BUF_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_buf_read_at</name> <argument_list>(<argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>, <argument><expr><name>page_offset</name></expr></argument>,
<argument><expr><operator>(</operator><name>ut8</name> <operator>*</operator><operator>)</operator><name>res</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>+=</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>



<function><type><name>void</name></type> <name>stream_file_read</name><parameter_list>(<parameter><decl><type><name>R_STREAM_FILE</name> <modifier>*</modifier></type><name>stream_file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>pn_start</name></decl>, <decl><type ref="prev"/><name>off_start</name></decl>, <decl><type ref="prev"/><name>pn_end</name></decl>, <decl><type ref="prev"/><name>off_end</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>size</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>pdata</name> <init>= <expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator> <call><name>malloc</name><argument_list>(<argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pages_amount</name></name> <operator>*</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>pdata</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>GET_PAGE</name><argument_list>(<argument><expr><name>pn_start</name></expr></argument>, <argument><expr><name>off_start</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>off_end</name></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>stream_file_read_pages</name> <argument_list>(<argument><expr><name>stream_file</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pages_amount</name></name></expr></argument>, <argument><expr><name>pdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name> <argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>pdata</name> <operator>+</operator> <name>off_start</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name> <operator>-</operator> <name>off_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>pdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>GET_PAGE</name><argument_list>(<argument><expr><name>pn_start</name></expr></argument>, <argument><expr><name>off_start</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>GET_PAGE</name><argument_list>(<argument><expr><name>pn_end</name></expr></argument>, <argument><expr><name>off_end</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>+</operator> <name>size</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>off_end</name></expr>;</expr_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>pdata</name> <init>= <expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator> <call><name>calloc</name><argument_list>(<argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name> <operator>*</operator> <operator>(</operator><name>pn_end</name> <operator>+</operator> <literal type="number">1</literal> <operator>-</operator> <name>pn_start</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>pdata</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>stream_file_read_pages</name><argument_list>(<argument><expr><name>stream_file</name></expr></argument>, <argument><expr><name>pn_start</name></expr></argument>, <argument><expr><name>pn_end</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>pdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>+=</operator> <name>size</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>pdata</name> <operator>+</operator> <name>off_start</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>pdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>stream_file_seek</name><parameter_list>(<parameter><decl><type><name>R_STREAM_FILE</name> <modifier>*</modifier></type><name>stream_file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>whence</name></decl></parameter>)</parameter_list> <block>{<block_content>
<switch>switch <condition>(<expr><name>whence</name></expr>)</condition> <block>{<block_content>
<case>case <expr><literal type="number">0</literal></expr>:</case>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name>offset</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">1</literal></expr>:</case>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>+=</operator> <name>offset</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">2</literal></expr>:</case>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name> <operator>+</operator> <name>offset</name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
<if_stmt><if>if <condition>(<expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>&gt;</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>stream_file_tell</name><parameter_list>(<parameter><decl><type><name>R_STREAM_FILE</name> <modifier>*</modifier></type><name>stream_file</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>stream_file_get_data</name><parameter_list>(<parameter><decl><type><name>R_STREAM_FILE</name> <modifier>*</modifier></type><name>stream_file</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><call><name>stream_file_tell</name> <argument_list>(<argument><expr><name>stream_file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>stream_file_seek</name> <argument_list>(<argument><expr><name>stream_file</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>stream_file_read</name> <argument_list>(<argument><expr><name>stream_file</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>stream_file_seek</name> <argument_list>(<argument><expr><name>stream_file</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>stream_file_get_size</name><parameter_list>(<parameter><decl><type><name>R_STREAM_FILE</name> <modifier>*</modifier></type><name>stream_file</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>data_size</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>pn_start</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>off_start</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>GET_PAGE</name><argument_list>(<argument><expr><name>pn_start</name></expr></argument>, <argument><expr><name>off_start</name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>pos</name></name></expr></argument>, <argument><expr><name><name>stream_file</name><operator>-&gt;</operator><name>page_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>pn_start</name></expr>;</expr_stmt> 
<expr_stmt><expr><operator>*</operator><name>data_size</name> <operator>=</operator> <name><name>stream_file</name><operator>-&gt;</operator><name>end</name></name> <operator>-</operator> <name>off_start</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
