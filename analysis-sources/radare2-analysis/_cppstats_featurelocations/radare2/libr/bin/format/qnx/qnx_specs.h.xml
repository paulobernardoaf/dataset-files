<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\qnx\qnx_specs.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>QNX_SPECS_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_SPECS_H_</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_VERSION</name></cpp:macro> <cpp:value>400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VERIFY_OFFSET</name></cpp:macro> <cpp:value>36</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_MAX_REC_SIZE</name></cpp:macro> <cpp:value>(0x8000 - 512)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_MAX_DATA_SIZE</name></cpp:macro> <cpp:value>(QNX_MAX_REC_SIZE - sizeof(lmf_data))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VERIFY_END</name></cpp:macro> <cpp:value>(VERIFY_OFFSET + sizeof(RWEndRec.verify))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_MAX_FIXUPS</name></cpp:macro> <cpp:value>(0x8000 - 512)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_MAGIC</name></cpp:macro> <cpp:value>"\x00\x00\x38\x00\x00\x00"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_HDR_SIZE</name></cpp:macro> <cpp:value>sizeof (lmf_header)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_RECORD_SIZE</name></cpp:macro> <cpp:value>sizeof (lmf_record)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNX_HEADER_ADDR</name></cpp:macro> <cpp:value>sizeof (lmf_record)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_TCF_LONG_LIVED</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_TCF_32BIT</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_TCF_PRIV_MASK</name></cpp:macro> <cpp:value>0x000c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_TCF_FLAT</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEG16_CODE_FIXUP</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINEAR32_CODE_FIXUP</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINEAR32_SELF_RELATIVE_FIXUP</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif></unit>
