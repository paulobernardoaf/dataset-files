





















#ifndef YXML_H
#define YXML_H

#include <stdint.h>
#include <stddef.h>

#if defined(_MSC_VER) && !defined(__cplusplus) && !defined(inline)
#define inline __inline
#endif




typedef enum {
	YXML_EEOF        = -5, 
	YXML_EREF        = -4, 
	YXML_ECLOSE      = -3, 
	YXML_ESTACK      = -2, 
	YXML_ESYN        = -1, 
	YXML_OK          =  0, 
	YXML_ELEMSTART   =  1, 
	YXML_CONTENT     =  2, 
	YXML_ELEMEND     =  3, 
	YXML_ATTRSTART   =  4, 
	YXML_ATTRVAL     =  5, 
	YXML_ATTREND     =  6, 
	YXML_PISTART     =  7, 
	YXML_PICONTENT   =  8, 
	YXML_PIEND       =  9  
} yxml_ret_t;























typedef struct {
	

	



	char *elem;

	










	char data[8];

	

	char *attr;

	


	char *pi;

	


	uint64_t byte;
	uint64_t total;
	uint32_t line;


	
	int state;
	unsigned char *stack; 
	size_t stacksize, stacklen;
	unsigned reflen;
	unsigned quote;
	int nextstate; 
	unsigned ignore;
	unsigned char *string;
} yxml_t;


#ifdef __cplusplus
extern "C" {
#endif

void yxml_init(yxml_t *, void *, size_t);


yxml_ret_t yxml_parse(yxml_t *, int);








yxml_ret_t yxml_eof(yxml_t *);

#ifdef __cplusplus
}
#endif








static inline size_t yxml_symlen(yxml_t *x, const char *s) {
	return (x->stack + x->stacklen) - (const unsigned char*)s;
}

#endif


