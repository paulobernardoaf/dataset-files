<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\nin\n3ds.h">





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NIN_N3DS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NIN_N3DS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types_base.h&gt;</cpp:file></cpp:include>
<macro><name>R_PACKED</name> <argument_list>(
<argument>struct n3ds_firm_sect_hdr
{
ut32 offset;
ut32 address;
ut32 size;
ut32 type; 
ut8 sha256[<literal type="number">0x20</literal>];
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>R_PACKED</name> <argument_list>(
<argument>struct n3ds_firm_hdr
{
ut8 magic[<literal type="number">4</literal>];
ut8 reserved1[<literal type="number">4</literal>];
ut32 arm11_ep;
ut32 arm9_ep;
ut8 reserved2[<literal type="number">0x30</literal>];
struct n3ds_firm_sect_hdr sections[<literal type="number">4</literal>];
ut8 rsa2048[<literal type="number">0x100</literal>];
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
