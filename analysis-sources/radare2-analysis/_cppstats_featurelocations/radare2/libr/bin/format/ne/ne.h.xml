<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\ne\ne.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NE_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_list.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ne_specs.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
}</block></struct></type> <name>r_ne_resource_entry</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>entry</name></decl>;</decl_stmt>
}</block></struct></type> <name>r_ne_resource</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>NE_image_header</name> <modifier>*</modifier></type><name>ne_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>header_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>alignment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>NE_image_segment_entry</name> <modifier>*</modifier></type><name>segment_entries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>entry_table</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>resident_name_table</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>segments</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>entries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>resources</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>imports</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>symbols</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>os</name></decl>;</decl_stmt>
}</block></struct></type> <name>r_bin_ne_obj_t</name>;</typedef>

<function_decl><type><name>void</name></type> <name>r_bin_ne_free</name><parameter_list>(<parameter><decl><type><name>r_bin_ne_obj_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>r_bin_ne_obj_t</name> <modifier>*</modifier></type><name>r_bin_ne_new_buf</name><parameter_list>(<parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>verbose</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type><name>r_bin_ne_get_relocs</name><parameter_list>(<parameter><decl><type><name>r_bin_ne_obj_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type><name>r_bin_ne_get_imports</name><parameter_list>(<parameter><decl><type><name>r_bin_ne_obj_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type><name>r_bin_ne_get_symbols</name><parameter_list>(<parameter><decl><type><name>r_bin_ne_obj_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type><name>r_bin_ne_get_segments</name><parameter_list>(<parameter><decl><type><name>r_bin_ne_obj_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type><name>r_bin_ne_get_entrypoints</name><parameter_list>(<parameter><decl><type><name>r_bin_ne_obj_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
