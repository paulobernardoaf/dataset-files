<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\nxo\nxo.h">

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_NXO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_NXO_H</name></cpp:macro></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>unused</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>mod_memoffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>padding</name></decl>;</decl_stmt>
}</block></struct></type> <name>NXOStart</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>magic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dynamic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>bss_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>bss_end</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>unwind_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>unwind_end</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>mod_object</name></decl>;</decl_stmt>
}</block></struct></type> <name>MODHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>prev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>relplt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>reldyn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>base</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>dynamic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>is_rela</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>relplt_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>init</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>fini</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>bucket</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>chain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>strtab</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>symtab</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>strtab_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>got</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>reladyn_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>reldyn_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>relcount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>relacount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>nchain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>nbucket</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>got_value</name></decl>;</decl_stmt>
}</block></struct></type> <name>MODObject</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>mod_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>text_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>text_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ro_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ro_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>data_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>bss_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>MODMeta</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name> <modifier>*</modifier></type><name>strings</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>methods_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>imports_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>classes_list</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinNXOObj</name>;</typedef>

<function_decl><type><name>void</name></type> <name>parseMod</name><parameter_list>(<parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>RBinNXOObj</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>mod0</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>baddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fileType</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
