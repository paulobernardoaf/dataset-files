<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\zimg\zimg.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_lib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bin.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_ZIMG_MAXSTR</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>

<struct>struct <name>zimg_header_t</name> <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name><name>magic</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name><name>filler</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name><name>arm_magic</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>kernel_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>kernel_end</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><struct>struct <name>r_bin_zimg_obj_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>b</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>zimg_header_t</name></name></type> <name>header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name> <modifier>*</modifier></type><name>strings</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>methods_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>imports_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>code_from</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>code_to</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>kv</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinZimgObj</name>;</typedef>

<struct>struct <name>r_bin_zimg_str_t</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>str</name><index>[<expr><name>R_BIN_ZIMG_MAXSTR</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>ordinal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>last</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name><name>struct</name> <name>r_bin_zimg_obj_t</name></name> <modifier>*</modifier></type><name>r_bin_zimg_new_buf</name><parameter_list>(<parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>r_bin_zimg_str_t</name></name> <modifier>*</modifier></type><name>r_bin_zimg_get_strings</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_bin_zimg_obj_t</name></name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
</unit>
