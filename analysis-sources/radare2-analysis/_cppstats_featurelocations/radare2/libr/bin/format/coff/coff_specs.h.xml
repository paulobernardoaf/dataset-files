<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\coff\coff_specs.h">
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>COFF_SPECS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SPECS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types_base.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_UNKNOWN</name></cpp:macro> <cpp:value>0x0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_AM33</name></cpp:macro> <cpp:value>0x1d3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_AMD64</name></cpp:macro> <cpp:value>0x8664</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_ARM</name></cpp:macro> <cpp:value>0x1c0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_ARMNT</name></cpp:macro> <cpp:value>0x1c4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_ARM64</name></cpp:macro> <cpp:value>0xaa64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_EBC</name></cpp:macro> <cpp:value>0xebc</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_I386</name></cpp:macro> <cpp:value>0x14c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_IA64</name></cpp:macro> <cpp:value>0x200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_M32R</name></cpp:macro> <cpp:value>0x9041</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_MIPS16</name></cpp:macro> <cpp:value>0x266</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_MIPSFPU</name></cpp:macro> <cpp:value>0x366</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_MIPSFPU16</name></cpp:macro> <cpp:value>0x466</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_AMD29KBE</name></cpp:macro> <cpp:value>0x7a01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_AMD29KLE</name></cpp:macro> <cpp:value>0x17a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_POWERPC</name></cpp:macro> <cpp:value>0x1f0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_POWERPCFP</name></cpp:macro> <cpp:value>0x1f1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_R4000</name></cpp:macro> <cpp:value>0x166</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_SH3</name></cpp:macro> <cpp:value>0x1a2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_SH3DSP</name></cpp:macro> <cpp:value>0x1a3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_SH4</name></cpp:macro> <cpp:value>0x1a6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_SH5</name></cpp:macro> <cpp:value>0x1a8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_THUMB</name></cpp:macro> <cpp:value>0x1c2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_WCEMIPSV2</name></cpp:macro> <cpp:value>0x169</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_H8300</name></cpp:macro> <cpp:value>0x0083</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_TI_COFF</name></cpp:macro> <cpp:value>0xc1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_TMS470</name></cpp:macro> <cpp:value>0x0097</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_TMS320C54</name></cpp:macro> <cpp:value>0x0098</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_TMS320C60</name></cpp:macro> <cpp:value>0x0099</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_TMS320C55</name></cpp:macro> <cpp:value>0x009C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_TMS320C28</name></cpp:macro> <cpp:value>0x009D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_MSP430</name></cpp:macro> <cpp:value>0x00A0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FILE_MACHINE_TMS320C55PLUS</name></cpp:macro> <cpp:value>0x00A1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FLAGS_TI_F_RELFLG</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FLAGS_TI_F_EXEC</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FLAGS_TI_F_LNNO</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FLAGS_TI_F_LSYMS</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FLAGS_TI_F_BIG</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_FLAGS_TI_F_LITTLE</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_TYPE_NO_PAD</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_CNT_CODE</name></cpp:macro> <cpp:value>0x00000020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_CNT_INIT_DATA</name></cpp:macro> <cpp:value>0x00000040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_LNK_OTHER</name></cpp:macro> <cpp:value>0x00000100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_LNK_INFO</name></cpp:macro> <cpp:value>0x00000200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_LNK_REMOVE</name></cpp:macro> <cpp:value>0x00000800</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_LNK_COMDAT</name></cpp:macro> <cpp:value>0x00001000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_GPREL</name></cpp:macro> <cpp:value>0x00008000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_PURGEABLE</name></cpp:macro> <cpp:value>0x00010000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_16BIT</name></cpp:macro> <cpp:value>0x00020000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_LOCKED</name></cpp:macro> <cpp:value>0x00040000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_PRELOAD</name></cpp:macro> <cpp:value>0x00080000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_1BYTES</name></cpp:macro> <cpp:value>0x00100000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_2BYTES</name></cpp:macro> <cpp:value>0x00200000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_4BYTES</name></cpp:macro> <cpp:value>0x00300000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_8BYTES</name></cpp:macro> <cpp:value>0x00400000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_16BYTES</name></cpp:macro> <cpp:value>0x00500000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_32BYTES</name></cpp:macro> <cpp:value>0x00600000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_64BYTES</name></cpp:macro> <cpp:value>0x00700000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_128BYTES</name></cpp:macro> <cpp:value>0x00800000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_256BYTES</name></cpp:macro> <cpp:value>0x00900000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_512BYTES</name></cpp:macro> <cpp:value>0x00A00000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_1024BYTES</name></cpp:macro> <cpp:value>0x00B00000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_2048BYTES</name></cpp:macro> <cpp:value>0x00C00000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_4096BYTES</name></cpp:macro> <cpp:value>0x00D00000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_ALIGN_8192BYTES</name></cpp:macro> <cpp:value>0x00E00000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_LNK_NRELOC_OVFL</name></cpp:macro> <cpp:value>0x01000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_DISCARDABLE</name></cpp:macro> <cpp:value>0x02000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_NOT_CACHED</name></cpp:macro> <cpp:value>0x04000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_NOT_PAGED</name></cpp:macro> <cpp:value>0x08000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_SHARED</name></cpp:macro> <cpp:value>0x10000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_EXECUTE</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_READ</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SCN_MEM_WRITE</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_NULL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_VOID</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_CHAR</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_SHORT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_INT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_LONG</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_FLOAT</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_DOUBLE</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_STRUCT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_UNION</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_ENUM</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_MOE</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_BYTE</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_WORD</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_UINT</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_TYPE_DWORD</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_DTYPE_NULL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_DTYPE_POINTER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_DTYPE_FUNCTION</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_DTYPE_ARRAY</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_END_OF_FUNCTION</name></cpp:macro> <cpp:value>0xFF</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_NULL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_AUTOMATIC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_EXTERNAL</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_STATIC</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_REGISTER</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_EXTERNAL_DEF</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_LABEL</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_UNDEFINED_LABEL</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_MEMBER_OF_STRUCT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_ARGUMENT</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_STRUCT_TAG</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_MEMBER_OF_UNION</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_UNION_TAG</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_TYPE_DEFINITION</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_UNDEFINED_STATIC</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_ENUM_TAG</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_MEMBER_OF_ENUM</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_REGISTER_PARAM</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_BIT_FIELD</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_BLOCK</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_FUNCTION</name></cpp:macro> <cpp:value>101</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_END_OF_STRUCT</name></cpp:macro> <cpp:value>102</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_FILE</name></cpp:macro> <cpp:value>103</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_SECTION</name></cpp:macro> <cpp:value>104</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_WEAK_EXTERNAL</name></cpp:macro> <cpp:value>105</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COFF_SYM_CLASS_CLR_TOKEN</name></cpp:macro> <cpp:value>107</cpp:value></cpp:define>

<macro><name>R_PACKED</name><argument_list>(
<argument>struct coff_hdr {
ut16 f_magic; 
ut16 f_nscns; 
ut32 f_timdat; 
ut32 f_symptr; 
ut32 f_nsyms; 
ut16 f_opthdr; 
ut16 f_flags; 
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>R_PACKED</name> <argument_list>(
<argument>struct coff_opt_hdr {
ut16 magic; 
ut16 vstamp; 
ut32 tsize; 
ut32 dsize; 
ut32 bsize; 
ut32 entry; 
ut32 text_start; 
ut32 data_start; 
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>R_PACKED</name> <argument_list>(
<argument>struct coff_scn_hdr {
char s_name[<literal type="number">8</literal>]; 
ut32 s_paddr; 
ut32 s_vaddr; 
ut32 s_size; 
ut32 s_scnptr; 
ut32 s_relptr; 
ut32 s_lnnoptr; 
ut16 s_nreloc; 
ut16 s_nlnno; 
ut32 s_flags; 
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>R_PACKED</name> <argument_list>(
<argument>struct coff_symbol {
char n_name[<literal type="number">8</literal>]; 
ut32 n_value; 
ut16 n_scnum; 
ut16 n_type; 
ut8 n_sclass; 
ut8 n_numaux; 
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>R_PACKED</name> <argument_list>(
<argument>struct coff_reloc {
ut32 r_vaddr; 
ut32 r_symndx; 
ut16 r_type; 
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
