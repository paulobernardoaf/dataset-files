<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\pe\pe_specs.h">

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PE_</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ILT_MASK1</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ILT_MASK2</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PE_Word</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PE_DWord</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PE_VWord</name></cpp:undef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_BIN_PE64</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>Pe64_ ##name</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ILT_MASK1</name></cpp:macro> <cpp:value>0x8000000000000000LL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ILT_MASK2</name></cpp:macro> <cpp:value>0x7fffffffffffffffLL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_Word</name></cpp:macro> <cpp:value>ut16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_DWord</name></cpp:macro> <cpp:value>ut64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VWord</name></cpp:macro> <cpp:value>ut32</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>Pe32_ ##name</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ILT_MASK1</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ILT_MASK2</name></cpp:macro> <cpp:value>0x7fffffff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_Word</name></cpp:macro> <cpp:value>ut16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_DWord</name></cpp:macro> <cpp:value>ut32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VWord</name></cpp:macro> <cpp:value>ut32</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_INCLUDE_R_BIN_PE_SPECS_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_INCLUDE_R_BIN_PE_SPECS_H_</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_NAME_LENGTH</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_STRING_LENGTH</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>e_magic</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_cblp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_cp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_crlc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_cparhdr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_minalloc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_maxalloc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_ss</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_sp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_csum</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_ip</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_cs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_lfarlc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_ovno</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name><name>e_res</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_oemid</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>e_oeminfo</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name><name>e_res2</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>e_lfanew</name></decl>;</decl_stmt> 
}</block></struct></type> <name>Pe32_image_dos_header</name><operator>,</operator> <name>Pe64_image_dos_header</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_TYPE_PE32</name></cpp:macro> <cpp:value>0x10b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_TYPE_PE32PLUS</name></cpp:macro> <cpp:value>0x20b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_UNKNOWN</name></cpp:macro> <cpp:value>0x0000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_ALPHA</name></cpp:macro> <cpp:value>0x0184</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_ALPHA64</name></cpp:macro> <cpp:value>0x0284</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_AM33</name></cpp:macro> <cpp:value>0x01d3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_AMD64</name></cpp:macro> <cpp:value>0x8664</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_ARM</name></cpp:macro> <cpp:value>0x01c0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_ARM64</name></cpp:macro> <cpp:value>0xaa64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_AXP64</name></cpp:macro> <cpp:value>PE_IMAGE_FILE_MACHINE_ALPHA64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_CEE</name></cpp:macro> <cpp:value>0xc0ee</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_CEF</name></cpp:macro> <cpp:value>0x0cef</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_EBC</name></cpp:macro> <cpp:value>0x0ebc</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_I386</name></cpp:macro> <cpp:value>0x014c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_IA64</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_M32R</name></cpp:macro> <cpp:value>0x9041</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_M68K</name></cpp:macro> <cpp:value>0x0268</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_MIPS16</name></cpp:macro> <cpp:value>0x0266</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_MIPSFPU</name></cpp:macro> <cpp:value>0x0366</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_MIPSFPU16</name></cpp:macro> <cpp:value>0x0466</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_POWERPC</name></cpp:macro> <cpp:value>0x01f0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_POWERPCFP</name></cpp:macro> <cpp:value>0x01f1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_R10000</name></cpp:macro> <cpp:value>0x0168</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_R3000</name></cpp:macro> <cpp:value>0x0162</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_R4000</name></cpp:macro> <cpp:value>0x0166</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_SH3</name></cpp:macro> <cpp:value>0x01a2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_SH3DSP</name></cpp:macro> <cpp:value>0x01a3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_SH3E</name></cpp:macro> <cpp:value>0x01a4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_SH4</name></cpp:macro> <cpp:value>0x01a6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_SH5</name></cpp:macro> <cpp:value>0x01a8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_THUMB</name></cpp:macro> <cpp:value>0x01c2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_TRICORE</name></cpp:macro> <cpp:value>0x0520</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_MACHINE_WCEMIPSV2</name></cpp:macro> <cpp:value>0x0169</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_RELOCS_STRIPPED</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_EXECUTABLE_IMAGE</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_LINE_NUMS_STRIPPED</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_LOCAL_SYMS_STRIPPED</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_AGGRESSIVE_WS_TRIM</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_LARGE_ADDRESS_AWARE</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_16BIT_MACHINE</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_BYTES_REVERSED_LO</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_32BIT_MACHINE</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_DEBUG_STRIPPED</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_NET_RUN_FROM_SWAP</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_SYSTEM</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_DLL</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_UP_SYSTEM_ONLY</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_FILE_BYTES_REVERSED_HI</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLL_CHARACTERISTICS_NX_COMPAT</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_NO_ISOLATION</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_NO_SEH</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_NO_BIND</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_APPCONTAINER</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_WDM_DRIVER</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_GUARD_CF</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DEBUG_TYPE_CODEVIEW</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMAGE_DEBUG_TYPE_MISC</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>Machine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>NumberOfSections</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>TimeDateStamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>PointerToSymbolTable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>NumberOfSymbols</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>SizeOfOptionalHeader</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>Characteristics</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_file_header</name><operator>,</operator> <name>Pe64_image_file_header</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRIES</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_EXPORT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_IMPORT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_RESOURCE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_EXCEPTION</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_SECURITY</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_BASERELOC</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_DEBUG</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_COPYRIGHT</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_ARCHITECTURE</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_GLOBALPTR</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_TLS</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_IAT</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_UNKNOWN</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_NATIVE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_WINDOWS_GUI</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_WINDOWS_CUI</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_POSIX_CUI</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_WINDOWS_CE_GUI</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_EFI_APPLICATION</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_EFI_ROM</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SUBSYSTEM_XBOX</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_NEUTRAL</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_INVARIANT</name></cpp:macro> <cpp:value>0x7f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_AFRIKAANS</name></cpp:macro> <cpp:value>0x36</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ALBANIAN</name></cpp:macro> <cpp:value>0x1c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ARABIC</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ARMENIAN</name></cpp:macro> <cpp:value>0x2b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ASSAMESE</name></cpp:macro> <cpp:value>0x4d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_AZERI</name></cpp:macro> <cpp:value>0x2c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_BASQUE</name></cpp:macro> <cpp:value>0x2d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_BELARUSIAN</name></cpp:macro> <cpp:value>0x23</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_BENGALI</name></cpp:macro> <cpp:value>0x45</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_BULGARIAN</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_CATALAN</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_CHINESE</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_CROATIAN</name></cpp:macro> <cpp:value>0x1a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_CZECH</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_DANISH</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_DIVEHI</name></cpp:macro> <cpp:value>0x65</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_DUTCH</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ENGLISH</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ESTONIAN</name></cpp:macro> <cpp:value>0x25</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_FAEROESE</name></cpp:macro> <cpp:value>0x38</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_FARSI</name></cpp:macro> <cpp:value>0x29</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_FINNISH</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_FRENCH</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_GALICIAN</name></cpp:macro> <cpp:value>0x56</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_GEORGIAN</name></cpp:macro> <cpp:value>0x37</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_GERMAN</name></cpp:macro> <cpp:value>0x07</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_GREEK</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_GUJARATI</name></cpp:macro> <cpp:value>0x47</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_HEBREW</name></cpp:macro> <cpp:value>0x0d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_HINDI</name></cpp:macro> <cpp:value>0x39</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_HUNGARIAN</name></cpp:macro> <cpp:value>0x0e</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ICELANDIC</name></cpp:macro> <cpp:value>0x0f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_INDONESIAN</name></cpp:macro> <cpp:value>0x21</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ITALIAN</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_JAPANESE</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_KANNADA</name></cpp:macro> <cpp:value>0x4b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_KASHMIRI</name></cpp:macro> <cpp:value>0x60</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_KAZAK</name></cpp:macro> <cpp:value>0x3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_KONKANI</name></cpp:macro> <cpp:value>0x57</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_KOREAN</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_KYRGYZ</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_LATVIAN</name></cpp:macro> <cpp:value>0x26</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_LITHUANIAN</name></cpp:macro> <cpp:value>0x27</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MACEDONIAN</name></cpp:macro> <cpp:value>0x2f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MALAY</name></cpp:macro> <cpp:value>0x3e</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MALAYALAM</name></cpp:macro> <cpp:value>0x4c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MANIPURI</name></cpp:macro> <cpp:value>0x58</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MARATHI</name></cpp:macro> <cpp:value>0x4e</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MONGOLIAN</name></cpp:macro> <cpp:value>0x50</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_NEPALI</name></cpp:macro> <cpp:value>0x61</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_NORWEGIAN</name></cpp:macro> <cpp:value>0x14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ORIYA</name></cpp:macro> <cpp:value>0x48</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_POLISH</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_PORTUGUESE</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_PUNJABI</name></cpp:macro> <cpp:value>0x46</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ROMANIAN</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_RUSSIAN</name></cpp:macro> <cpp:value>0x19</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SANSKRIT</name></cpp:macro> <cpp:value>0x4f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SERBIAN</name></cpp:macro> <cpp:value>0x1a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SINDHI</name></cpp:macro> <cpp:value>0x59</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SLOVAK</name></cpp:macro> <cpp:value>0x1b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SLOVENIAN</name></cpp:macro> <cpp:value>0x24</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SPANISH</name></cpp:macro> <cpp:value>0x0a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SWAHILI</name></cpp:macro> <cpp:value>0x41</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SWEDISH</name></cpp:macro> <cpp:value>0x1d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SYRIAC</name></cpp:macro> <cpp:value>0x5a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_TAMIL</name></cpp:macro> <cpp:value>0x49</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_TATAR</name></cpp:macro> <cpp:value>0x44</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_TELUGU</name></cpp:macro> <cpp:value>0x4a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_THAI</name></cpp:macro> <cpp:value>0x1e</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_TURKISH</name></cpp:macro> <cpp:value>0x1f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_UKRAINIAN</name></cpp:macro> <cpp:value>0x22</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_URDU</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_UZBEK</name></cpp:macro> <cpp:value>0x43</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_VIETNAMESE</name></cpp:macro> <cpp:value>0x2a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_GAELIC</name></cpp:macro> <cpp:value>0x3c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MALTESE</name></cpp:macro> <cpp:value>0x3a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_MAORI</name></cpp:macro> <cpp:value>0x28</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_RHAETO_ROMANCE</name></cpp:macro> <cpp:value>0x17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SAAMI</name></cpp:macro> <cpp:value>0x3b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SORBIAN</name></cpp:macro> <cpp:value>0x2e</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_SUTU</name></cpp:macro> <cpp:value>0x30</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_TSONGA</name></cpp:macro> <cpp:value>0x31</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_TSWANA</name></cpp:macro> <cpp:value>0x32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_VENDA</name></cpp:macro> <cpp:value>0x33</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_XHOSA</name></cpp:macro> <cpp:value>0x34</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ZULU</name></cpp:macro> <cpp:value>0x35</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_ESPERANTO</name></cpp:macro> <cpp:value>0x8f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_WALON</name></cpp:macro> <cpp:value>0x90</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_CORNISH</name></cpp:macro> <cpp:value>0x91</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_WELSH</name></cpp:macro> <cpp:value>0x92</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_LANG_BRETON</name></cpp:macro> <cpp:value>0x93</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>VirtualAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Size</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_data_directory</name><operator>,</operator> <name>Pe64_image_data_directory</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut16</name></type> <name>Magic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>MajorLinkerVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>MinorLinkerVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfCode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfInitializedData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfUninitializedData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfEntryPoint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>BaseOfCode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>BaseOfData</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>ImageBase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SectionAlignment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>FileAlignment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorOperatingSystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorOperatingSystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorImageVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorImageVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorSubsystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorSubsystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Win32VersionValue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfImage</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfHeaders</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>CheckSum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>Subsystem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>DllCharacteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfStackReserve</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfStackCommit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfHeapReserve</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfHeapCommit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>LoaderFlags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>NumberOfRvaAndSizes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Pe32_image_data_directory</name></type> <name><name>DataDirectory</name><index>[<expr><name>PE_IMAGE_DIRECTORY_ENTRIES</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_optional_header</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut16</name></type> <name>Magic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>MajorLinkerVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>MinorLinkerVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfCode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfInitializedData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfUninitializedData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfEntryPoint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>BaseOfCode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>ImageBase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SectionAlignment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>FileAlignment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorOperatingSystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorOperatingSystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorImageVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorImageVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorSubsystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorSubsystemVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Win32VersionValue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfImage</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfHeaders</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>CheckSum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>Subsystem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>DllCharacteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>SizeOfStackReserve</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>SizeOfStackCommit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>SizeOfHeapReserve</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>SizeOfHeapCommit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>LoaderFlags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>NumberOfRvaAndSizes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Pe64_image_data_directory</name></type> <name><name>DataDirectory</name><index>[<expr><name>PE_IMAGE_DIRECTORY_ENTRIES</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe64_image_optional_header</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>HeaderSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorRuntimeVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorRuntimeVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>MetaDataDirectoryAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>MetaDataDirectorySize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>EntryPointToken</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ResourcesDirectoryAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ResourcesDirectorySize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>StrongNameSignatureAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>StrongNameSignatureSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>CodeManagerTableAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>CodeManagerTableSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>VTableFixupsAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>VTableFixupsSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ExportAddressTableJumpsAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ExportAddressTableJumpsSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ManagedNativeHeaderAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ManagedNativeHeaderSize</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_clr_header</name><operator>,</operator> <name>Pe64_image_clr_header</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>Signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Reserved</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>VersionStringLength</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>VersionString</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>Flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>NumberOfStreams</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_metadata_header</name><operator>,</operator> <name>Pe64_image_metadata_header</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>Name</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_metadata_stream</name><operator>,</operator> <name>Pe64_image_metadata_stream</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>productId</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>minVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>timesUsed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>productName</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe_image_rich_entry</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SIZEOF_SHORT_NAME</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SCN_MEM_SHARED</name></cpp:macro> <cpp:value>0x10000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SCN_MEM_EXECUTE</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SCN_MEM_READ</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_IMAGE_SCN_MEM_WRITE</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name><name>Name</name><index>[<expr><name>PE_IMAGE_SIZEOF_SHORT_NAME</name></expr>]</index></name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>PhysicalAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>VirtualSize</name></decl>;</decl_stmt>
}</block> <decl><name>Misc</name></decl>;</union>
<decl_stmt><decl><type><name>ut32</name></type> <name>VirtualAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfRawData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>PointerToRawData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>PointerToRelocations</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>PointerToLinenumbers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>NumberOfRelocations</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>NumberOfLinenumbers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Characteristics</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_section_header</name><operator>,</operator> <name>Pe64_image_section_header</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Characteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>TimeDateStamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Base</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>NumberOfFunctions</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>NumberOfNames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfFunctions</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfNames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfOrdinals</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_export_directory</name><operator>,</operator> <name>Pe64_image_export_directory</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Characteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>TimeDateStamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ForwarderChain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>FirstThunk</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_import_directory</name><operator>,</operator> <name>Pe64_image_import_directory</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Attributes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ModulePlugin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>DelayImportAddressTable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>DelayImportNameTable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>BoundDelayImportTable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>UnloadDelayImportTable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>TimeStamp</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_delay_import_directory</name><operator>,</operator> <name>Pe64_image_delay_import_directory</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>StartAddressOfRawData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>EndAddressOfRawData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfCallBacks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfZeroFill</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Characteristics</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_tls_directory</name><operator>,</operator> <name>Pe64_image_tls_directory</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>dwLength</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>wRevision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>wCertificateType</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>bCertificate</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe_certificate</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Pe_certificate</name> <modifier>*</modifier><modifier>*</modifier></type><name>certificates</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe_image_security_directory</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_WIN_CERT_REVISION_1_0</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_WIN_CERT_REVISION_2_0</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_WIN_CERT_TYPE_X509</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_WIN_CERT_TYPE_PKCS_SIGNED_DATA</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_WIN_CERT_TYPE_RESERVED_1</name></cpp:macro> <cpp:value>0x0003</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_WIN_CERT_TYPE_TS_STACK_SIGNED</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Pe32_image_file_header</name></type> <name>file_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Pe32_image_optional_header</name></type> <name>optional_header</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_nt_headers</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Pe64_image_file_header</name></type> <name>file_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Pe64_image_optional_header</name></type> <name>optional_header</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe64_image_nt_headers</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Characteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>TimeDateStamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>SizeOfData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>AddressOfRawData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>PointerToRawData</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe32_image_debug_directory_entry</name><operator>,</operator> <name>Pe64_image_debug_directory_entry</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Characteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>TimeDateStamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MajorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>MinorVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>NumberOfNamedEntries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>NumberOfIdEntries</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe_image_resource_directory</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<union>union <block>{
<struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>NameOffset</name><range>: <expr><literal type="number">31</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>NameIsString</name><range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
}</block> <decl><name>s</name></decl>;</struct>
<decl_stmt><decl><type><name>ut32</name></type> <name>Name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>Id</name></decl>;</decl_stmt>
}</block> <decl><name>u1</name></decl>;</union>
<union>union <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>OffsetToData</name></decl>;</decl_stmt>
<struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>OffsetToDirectory</name><range>: <expr><literal type="number">31</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>DataIsDirectory</name><range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
}</block> <decl><name>s</name></decl>;</struct>
}</block> <decl><name>u2</name></decl>;</union>
}</block></struct></type> <name>Pe_image_resource_directory_entry</name>;</typedef>





<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>Length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>NameString</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe_image_resource_directory_string</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>Length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>NameString</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe_image_resource_directory_string_u</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>OffsetToData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>CodePage</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>Reserved</name></decl>;</decl_stmt>
}</block></struct></type> <name>Pe_image_resource_data_entry</name>;</typedef>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_PE_MAX_RESOURCES</name></cpp:macro> <cpp:value>2056</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_CURSOR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_BITMAP</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_ICON</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_MENU</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_DIALOG</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_STRING</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_FONTDIR</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_FONT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_ACCELERATOR</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_RCDATA</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_MESSAGETABLE</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_GROUP_CURSOR</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_GROUP_ICON</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_VERSION</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_DLGINCLUDE</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_PLUGPLAY</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_VXD</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_ANICURSOR</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_ANIICON</name></cpp:macro> <cpp:value>22</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_HTML</name></cpp:macro> <cpp:value>23</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_RESOURCE_ENTRY_MANIFEST</name></cpp:macro> <cpp:value>24</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRINGFILEINFO_TEXT</name></cpp:macro> <cpp:value>"StringFileInfo"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRANSLATION_TEXT</name></cpp:macro> <cpp:value>"Translation"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VARFILEINFO_TEXT</name></cpp:macro> <cpp:value>"VarFileInfo"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VS_VERSION_INFO_TEXT</name></cpp:macro> <cpp:value>"VS_VERSION_INFO"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRINGFILEINFO_TEXT_LEN</name></cpp:macro> <cpp:value>sizeof(STRINGFILEINFO_TEXT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRANSLATION_TEXT_LEN</name></cpp:macro> <cpp:value>sizeof(TRANSLATION_TEXT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VARFILEINFO_TEXT_LEN</name></cpp:macro> <cpp:value>sizeof(VARFILEINFO_TEXT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VS_VERSION_INFO_TEXT_LEN</name></cpp:macro> <cpp:value>sizeof(VS_VERSION_INFO_TEXT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EIGHT_HEX_DIG_UTF_16_LEN</name></cpp:macro> <cpp:value>((8 + 1) * 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRINGFILEINFO_UTF_16</name></cpp:macro> <cpp:value>"S\0t\0r\0i\0n\0g\0F\0i\0l\0e\0I\0n\0f\0o\0\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRANSLATION_UTF_16</name></cpp:macro> <cpp:value>"T\0r\0a\0n\0s\0l\0a\0t\0i\0o\0n\0\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VARFILEINFO_UTF_16</name></cpp:macro> <cpp:value>"V\0a\0r\0F\0i\0l\0e\0I\0n\0f\0o\0\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VS_VERSION_INFO_UTF_16</name></cpp:macro> <cpp:value>"V\0S\0_\0V\0E\0R\0S\0I\0O\0N\0_\0I\0N\0F\0O\0\0"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRINGFILEINFO_UTF_16_LEN</name></cpp:macro> <cpp:value>sizeof (STRINGFILEINFO_UTF_16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRANSLATION_UTF_16_LEN</name></cpp:macro> <cpp:value>sizeof (TRANSLATION_UTF_16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VARFILEINFO_UTF_16_LEN</name></cpp:macro> <cpp:value>sizeof (VARFILEINFO_UTF_16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VS_VERSION_INFO_UTF_16_LEN</name></cpp:macro> <cpp:value>sizeof (VS_VERSION_INFO_UTF_16)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>wLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wValueLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wType</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wKeyLen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>szKey</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>Value</name></decl>;</decl_stmt> 
}</block></struct></type> <name>String</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>wLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wValueLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wType</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>szKey</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>ut32</name></type> <name>numOfChildren</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>String</name><modifier>*</modifier><modifier>*</modifier></type> <name>Children</name></decl>;</decl_stmt> 
}</block></struct></type> <name>StringTable</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>wLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wValueLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wType</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>szKey</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut32</name></type> <name>numOfChildren</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>StringTable</name><modifier>*</modifier><modifier>*</modifier></type> <name>Children</name></decl>;</decl_stmt> 
}</block></struct></type> <name>StringFileInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>wLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wValueLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wType</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>szKey</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut32</name></type> <name>numOfValues</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name><modifier>*</modifier></type> <name>Value</name></decl>;</decl_stmt> 
}</block></struct></type> <name>Var</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>wLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wValueLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wType</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>szKey</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut32</name></type> <name>numOfChildren</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Var</name><modifier>*</modifier><modifier>*</modifier></type> <name>Children</name></decl>;</decl_stmt> 
}</block></struct></type> <name>VarFileInfo</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VS_FF_DEBUG</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VS_FF_PRERELEASE</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VS_FF_PATCHED</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VS_FF_PRIVATEBUILD</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VS_FF_INFOINFERRED</name></cpp:macro> <cpp:value>0x00000010L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VS_FF_SPECIALBUILD</name></cpp:macro> <cpp:value>0x00000020L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_DOS</name></cpp:macro> <cpp:value>0x00010000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_NT</name></cpp:macro> <cpp:value>0x00040000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS__WINDOWS16</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS__WINDOWS32</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_OS216</name></cpp:macro> <cpp:value>0x00020000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_OS232</name></cpp:macro> <cpp:value>0x00030000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS__PM16</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS__PM32</name></cpp:macro> <cpp:value>0x00000003L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_UNKNOWN</name></cpp:macro> <cpp:value>0x00000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_DOS_WINDOWS16</name></cpp:macro> <cpp:value>0x00010001L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_DOS_WINDOWS32</name></cpp:macro> <cpp:value>0x00010004L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_NT_WINDOWS32</name></cpp:macro> <cpp:value>0x00040004L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_OS216_PM16</name></cpp:macro> <cpp:value>0x00020002L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VOS_OS232_PM32</name></cpp:macro> <cpp:value>0x00030003L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT_APP</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT_DLL</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT_DRV</name></cpp:macro> <cpp:value>0x00000003L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT_FONT</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT_STATIC_LIB</name></cpp:macro> <cpp:value>0x00000007L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT_UNKNOWN</name></cpp:macro> <cpp:value>0x00000000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT_VXD</name></cpp:macro> <cpp:value>0x00000005L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_COMM</name></cpp:macro> <cpp:value>0x0000000AL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_DISPLAY</name></cpp:macro> <cpp:value>0x00000004L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_INSTALLABLE</name></cpp:macro> <cpp:value>0x00000008L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_KEYBOARD</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_LANGUAGE</name></cpp:macro> <cpp:value>0x00000003L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_MOUSE</name></cpp:macro> <cpp:value>0x00000005L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_NETWORK</name></cpp:macro> <cpp:value>0x00000006L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_PRINTER</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_SOUND</name></cpp:macro> <cpp:value>0x00000009L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_SYSTEM</name></cpp:macro> <cpp:value>0x00000007L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_DRV_VERSIONED_PRINTER</name></cpp:macro> <cpp:value>0x0000000CL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_UNKNOWN</name></cpp:macro> <cpp:value>0x00000000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_FONT_RASTER</name></cpp:macro> <cpp:value>0x00000001L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_FONT_TRUETYPE</name></cpp:macro> <cpp:value>0x00000003L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_FONT_VECTOR</name></cpp:macro> <cpp:value>0x00000002L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_VFT2_UNKNOWN</name></cpp:macro> <cpp:value>0x00000000L</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>dwSignature</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>dwStrucVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileVersionMS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileVersionLS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwProductVersionMS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwProductVersionLS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileFlagsMask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileFlags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileOS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileType</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileSubtype</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileDateMS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>dwFileDateLS</name></decl>;</decl_stmt>
}</block></struct></type> <name>PE_VS_FIXEDFILEINFO</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut16</name></type> <name>wLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wValueLength</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>wType</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name><modifier>*</modifier></type> <name>szKey</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>PE_VS_FIXEDFILEINFO</name><modifier>*</modifier></type> <name>Value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VarFileInfo</name><modifier>*</modifier></type> <name>varFileInfo</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>StringFileInfo</name><modifier>*</modifier></type> <name>stringFileInfo</name></decl>;</decl_stmt> 
}</block></struct></type> <name>PE_VS_VERSIONINFO</name>;</typedef>



<typedef>typedef <type><enum>enum <block>{
<decl><name>UWOP_PUSH_NONVOL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>UWOP_ALLOC_LARGE</name></decl>, 
<decl><name>UWOP_ALLOC_SMALL</name></decl>, 
<decl><name>UWOP_SET_FPREG</name></decl>, 
<decl><name>UWOP_SAVE_NONVOL</name></decl>, 
<decl><name>UWOP_SAVE_NONVOL_FAR</name></decl>, 
<decl><name>UWOP_SAVE_XMM128</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>, 
<decl><name>UWOP_SAVE_XMM128_FAR</name></decl>, 
<decl><name>UWOP_PUSH_MACHFRAME</name></decl> 
}</block></enum></type> <name>PE64_UNWIND_CODE_OPS</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE64_UNW_FLAG_NHANDLER</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE64_UNW_FLAG_EHANDLER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE64_UNW_FLAG_UHANDLER</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE64_UNW_FLAG_CHAININFO</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>BeginAddress</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>EndAddress</name></decl>;</decl_stmt> 
<union>union <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>UnwindInfoAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>UnwindData</name></decl>;</decl_stmt>
}</block>;</union>
}</block></struct></type> <name>PE64_RUNTIME_FUNCTION</name>;</typedef>

<typedef>typedef <type><union>union <block>{
<struct>struct <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name>CodeOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>UnwindOp</name> <range>: <expr><literal type="number">4</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>OpInfo</name> <range>: <expr><literal type="number">4</literal></expr></range></decl>;</decl_stmt>
}</block>;</struct>
<decl_stmt><decl><type><name>ut16</name></type> <name>FrameOffset</name></decl>;</decl_stmt>
}</block></union></type> <name>PE64_UNWIND_CODE</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name>Version</name> <range>: <expr><literal type="number">3</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>Flags</name> <range>: <expr><literal type="number">5</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>SizeOfProlog</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>CountOfCodes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>FrameRegister</name> <range>: <expr><literal type="number">4</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>FrameOffset</name> <range>: <expr><literal type="number">4</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PE64_UNWIND_CODE</name></type> <name><name>UnwindCode</name><index>[]</index></name></decl>;</decl_stmt>







}</block></struct></type> <name>PE64_UNWIND_INFO</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>BeginAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>EndAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>HandlerAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>JumpTarget</name></decl>;</decl_stmt>
}</block></struct></type> <name>PE64_SCOPE_RECORD</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>Count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PE64_SCOPE_RECORD</name></type> <name><name>ScopeRecord</name><index>[]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>PE64_SCOPE_TABLE</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
