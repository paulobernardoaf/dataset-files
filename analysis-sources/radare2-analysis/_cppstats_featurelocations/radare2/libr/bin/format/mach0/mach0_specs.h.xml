<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bin\format\mach0\mach0_specs.h">
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_INCLUDE_R_BIN_MACH0_SPECS_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_INCLUDE_R_BIN_MACH0_SPECS_H_</name></cpp:macro></cpp:define>

<typedef>typedef <type><name>int</name></type> <name>integer_t</name>;</typedef>



<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mach0_defines.h"</cpp:file></cpp:include>




<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>MACH0_</name></cpp:undef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_BIN_MACH064</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MACH0_</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>name##_64</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MACH0_</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>name</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_MACH0_SYMBOL_TYPE_EXT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_MACH0_SYMBOL_TYPE_LOCAL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<struct>struct <name>x86_thread_state32</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>eax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ebx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ecx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>edx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>edi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>esi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ebp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>esp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ss</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>eflags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>eip</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>es</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>gs</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>x86_thread_state64</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>rax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rbx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rcx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rdx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rdi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rsi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rbp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rsp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r13</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r14</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rip</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rflags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>gs</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>X86_THREAD_STATE32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>X86_THREAD_STATE64</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<struct>struct <name>ppc_thread_state32</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>srr0</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>srr1</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>r0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r13</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r14</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r17</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r18</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r19</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r20</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r21</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r22</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r23</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r24</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r25</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r26</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r27</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r28</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r29</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r30</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r31</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>cr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>xer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>lr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>ctr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>mq</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut32</name></type> <name>vrsave</name></decl>;</decl_stmt> 
}</block>;</struct>

<struct>struct <name>ppc_thread_state64</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>srr0</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>srr1</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>r0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r13</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r14</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r17</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r18</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r19</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r20</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r21</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r22</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r23</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r24</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r25</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r26</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r27</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r28</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r29</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r30</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>r31</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>cr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>xer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>lr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>ctr</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut32</name></type> <name>vrsave</name></decl>;</decl_stmt> 
}</block>;</struct>

<struct>struct <name>arm_thread_state32</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>r0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r13</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r14</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>r16</name></decl>;</decl_stmt> 
}</block>;</struct>

<struct>struct <name>arm_thread_state64</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name><name>x</name><index>[<expr><literal type="number">29</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>fp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>lr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>sp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>pc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>cpsr</name></decl>;</decl_stmt>
}</block>;</struct>



<struct>struct <name>cache_header</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>version</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>baseaddroff</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>mappingCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>startaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>numlibs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>dyldaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>codeSignatureOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>codeSignatureSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>slideInfoOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>slideInfoSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>localSymbolsOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>localSymbolsSize</name></decl>;</decl_stmt>
}</block>;</struct>


<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>magic</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mappingOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mappingCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>imagesOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>imagesCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>dyldBaseAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>codeSignatureOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>codeSignatureSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>slideInfoOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>slideInfoSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>localSymbolsOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>localSymbolsSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>uuid</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>cacheType</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>branchPoolsOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>branchPoolsCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>accelerateInfoAddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>accelerateInfoSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>imagesTextOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>imagesTextCount</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_hdr_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>address</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>fileOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>maxProt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>initProt</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_map_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>address</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>modTime</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>inode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>pathFileOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>pad</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_img_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>page_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>page_starts_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>padding</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>auth_value_add</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_slide3_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>page_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>page_starts_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>page_starts_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>page_extras_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>page_extras_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>delta_mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>value_add</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_slide2_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>toc_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>toc_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>entries_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>entries_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>entries_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_slide1_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>imageExtrasCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>imagesExtrasOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>bottomUpListOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dylibTrieOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dylibTrieSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>initializersOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>initializersCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dofSectionsOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dofSectionsCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>reExportListOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>reExportCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>depListOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>depListCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>rangeTableOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>rangeTableCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>dyldSectionAddr</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_accel_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>exportsTrieAddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>weakBindingsAddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>exportsTrieSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>weakBindingsSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dependentsStartArrayIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>reExportsStartArrayIndex</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_imgxtr_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>nlistOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>nlistCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>stringsOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>stringsSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>entriesOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>entriesCount</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_locsym_info_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dylibOffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>nlistStartIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>nlistCount</name></decl>;</decl_stmt>
}</block></struct></type> <name>cache_locsym_entry_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DYLD_CACHE_SLIDE_PAGE_ATTRS</name></cpp:macro> <cpp:value>0xC000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DYLD_CACHE_SLIDE_PAGE_ATTR_EXTRA</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DYLD_CACHE_SLIDE_PAGE_ATTR_NO_REBASE</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DYLD_CACHE_SLIDE_PAGE_ATTR_END</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DYLD_CACHE_SLIDE_V3_PAGE_ATTR_NO_REBASE</name></cpp:macro> <cpp:value>0xFFFF</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
