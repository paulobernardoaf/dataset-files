<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\p\asm_v850.c">

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_lib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_asm.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;v850_disas.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>int</name></type> <name>disassemble</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>v850_cmd</name></name></type> <name>cmd</name> <init>= <expr><block>{
<expr><operator>.</operator><name>addr</name> <operator>=</operator> <name><name>a</name><operator>-&gt;</operator><name>pc</name></name></expr>,
<expr><operator>.</operator><name>instr</name> <operator>=</operator> <literal type="string">""</literal></expr>,
<expr><operator>.</operator><name>operands</name> <operator>=</operator> <literal type="string">""</literal></expr>
}</block></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>len</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>v850_decode_command</name> <argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>r_asm_op_set_asm</name> <argument_list>(<argument><expr><name>op</name></expr></argument>, <argument><expr><call><name>sdb_fmt</name> <argument_list>(<argument><expr><literal type="string">"%s %s"</literal></expr></argument>, <argument><expr><name><name>cmd</name><operator>.</operator><name>instr</name></name></expr></argument>, <argument><expr><name><name>cmd</name><operator>.</operator><name>operands</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name><name>op</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <name>ret</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><name>RAsmPlugin</name></type> <name>r_asm_plugin_v850</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"v850"</literal></expr>,
<expr><operator>.</operator><name>license</name> <operator>=</operator> <literal type="string">"LGPL3"</literal></expr>,
<expr><operator>.</operator><name>desc</name> <operator>=</operator> <literal type="string">"v850 disassembly plugin"</literal></expr>,
<expr><operator>.</operator><name>arch</name> <operator>=</operator> <literal type="string">"v850"</literal></expr>,
<expr><operator>.</operator><name>bits</name> <operator>=</operator> <literal type="number">32</literal></expr>,
<expr><operator>.</operator><name>endian</name> <operator>=</operator> <name>R_SYS_ENDIAN_LITTLE</name></expr>,
<expr><operator>.</operator><name>disassemble</name> <operator>=</operator> <operator>&amp;</operator><name>disassemble</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_PLUGIN_INCORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>R_API</name> <name>RLibStruct</name></type> <name>radare_plugin</name> <init>= <expr><block>{
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>R_LIB_TYPE_ASM</name></expr>,
<expr><operator>.</operator><name>data</name> <operator>=</operator> <operator>&amp;</operator><name>r_asm_plugin_v850</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>R2_VERSION</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
