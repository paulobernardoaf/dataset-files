<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\tms320\c55x_plus\hashtable.c">

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ins.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hashvector.c"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>st32</name></type> <name>hash_const_01</name> <init>= <expr><literal type="number">0x2474f685</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>st32</name></type> <name>hash_const_02</name> <init>= <expr><literal type="number">0x42fbc0b8</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>st32</name></type> <name>hash_const_03</name> <init>= <expr><literal type="number">0x086a18eb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>st32</name></type> <name>hash_const_04</name> <init>= <expr><literal type="number">0x001d02e8</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>st32</name></type> <name>hash_const_05</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>ut8</name><modifier>*</modifier></type> <name>ins_buff</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>ut32</name></type> <name>ins_buff_len</name></decl>;</decl_stmt>

<function><type><name>st32</name></type> <name>get_hashfunc_01</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_02</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name>v4</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xFE000000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xFE000000u</literal><operator>)</operator> <operator>&gt;</operator> <literal type="number">0x72000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0xD8000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">0xd8000000</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xC4000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xCE000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xD4000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">704643072</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">95</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">738197504</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">805306368</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">771751936</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">95</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">838860800</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xCA000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">872415232</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">95</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">905969664</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">973078528</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">939524096</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">95</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">1006632960</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x7E000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">2113929216</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x78000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">2046820352</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">2080374784</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">2013265920</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">1946157056</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1979711488</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xC0000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">1040187392</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">95</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">0xC0000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">1610612736</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">540</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">1577058304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">541</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">95</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xEC000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xF6000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xFC000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">33554432</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">67108864</literal> <operator>||</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">134217728</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">100663296</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">167772160</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xF2000000</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">201326592</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">234881024</literal> <operator>||</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">301989888</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">268435456</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">335544320</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xE2000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xE8000000</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">369098752</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">402653184</literal> <operator>||</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">469762048</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">436207616</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">503316480</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0xDE000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">570425344</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">637534208</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <operator>-</operator><literal type="number">603979776</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">95</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <operator>-</operator><literal type="number">536870912</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v4</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">96</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xFE000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">1912602624</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x48000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x5E000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1577058304</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x54000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x5A000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">1543503872</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1509949440</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">1442840576</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1476395008</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1409286144</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x4E000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1342177280</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1375731712</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1308622848</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">1241513984</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1275068416</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x68000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x6E000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1879048192</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1845493760</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">1778384896</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1811939328</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1744830464</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x64000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1711276032</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1677721600</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">1610612736</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1644167168</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><literal type="number">226</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1207959552</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x14000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">335544320</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0xA000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x10000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">301989888</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">268435456</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">201326592</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">234881024</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">167772160</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x4000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">100663296</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">134217728</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">67108864</literal> <operator>&amp;&amp;</operator> <name>v2</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">33554432</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x1E000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x44000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1174405120</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1140850688</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">0x40000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1107296256</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">178</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">503316480</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x1A000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">436207616</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">369098752</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">402653184</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">469762048</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">142</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_03</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xE0000000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xE0000000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xE0000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">102</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">485</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">536870912</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">486</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">0xA0000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">475</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_04</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">99</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">100</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_05</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">97</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">98</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_06</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>st32</name><operator>)</operator> <operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">228</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">227</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_07</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">52</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">140</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_08</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>tmp</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC0000000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC0000000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC0000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">87</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tmp</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">85</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>==</operator> <literal type="number">0x40000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">86</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>!=</operator> <literal type="number">0xC0000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">88</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_09</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC0000000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC0000000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC0000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">91</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">89</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">0x40000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">90</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">0xC0000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">92</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_10</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x500000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x400000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">247</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">245</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">1048576</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">249</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">5242880</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">248</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_11</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 



<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>hash_const_05</name> <operator>&amp;</operator> <name>arg2</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>ut32</name><operator>)</operator><name>hash_const_05</name> <operator>&amp;</operator> <name>arg2</name><operator>)</operator> <operator>==</operator> <literal type="number">524288</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">460</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">244</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_12</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>tmp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>tmp</name> <operator>&amp;</operator> <literal type="number">0x400000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">521</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">374</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_13</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_14</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>(<expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x1000000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">61</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">60</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_15</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">63</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">62</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_16</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">69</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_17</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">68</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">67</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_18</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">66</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">65</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_19</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC1000000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC1000000u</literal><operator>)</operator> <operator>&gt;</operator> <literal type="number">0x40000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">0x80000000</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">0xC0000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC1000000</literal><operator>)</operator> <operator>!=</operator> <literal type="number">0x40000000</literal> <operator>&amp;&amp;</operator> <name>v2</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">469</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><literal type="number">59</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_20</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">75</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">74</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">78</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">20971520</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">77</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_21</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">73</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">72</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">108</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">20971520</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">109</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_22</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8200</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8200</literal><operator>)</operator> <operator>==</operator> <literal type="number">512</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">364</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">357</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_23</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x41C000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x400000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">323</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0xC000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">49152</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">324</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">16384</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">370</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">325</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">372</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">65536</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">81920</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">114688</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">371</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">373</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">314</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x410000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">4259840</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4210688</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">369</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <name>hash_const_01</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">325</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">4243456</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">372</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">314</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">4276224</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4308992</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">371</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">373</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_24</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x418000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x400000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">330</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x10000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">65536</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">329</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">307</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">480</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">98304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">467</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <name>hash_const_01</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4259840</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">480</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4292608</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">467</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">308</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_25</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>ut32</name></type> <name>v2</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <operator>(</operator><name>ut32</name><operator>)</operator><name>hash_const_02</name> <operator>&amp;</operator> <name>arg2</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><operator>(</operator><name>ut32</name><operator>)</operator><name>hash_const_02</name> <operator>&amp;</operator> <name>arg2</name><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x8000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><operator>(</operator><name>ut32</name><operator>)</operator><name>hash_const_02</name> <operator>&amp;</operator> <name>arg2</name><operator>)</operator> <operator>!=</operator> <literal type="number">32768</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x400</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">1024</literal> <operator>&amp;&amp;</operator> <name>v2</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">512</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">365</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">365</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">1536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">365</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">382</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x8600</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">34304</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">33280</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">33792</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">382</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <name>hash_const_01</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">380</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_26</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x41C000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x404000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4210688</literal> <operator>||</operator> <name>v3</name> <operator>==</operator> <literal type="number">16384</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">310</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">49152</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">312</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">311</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <name>hash_const_01</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">4243456</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">311</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">313</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_27</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x18000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">376</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">377</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">375</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>st32</name></type> <name>get_hashfunc_28</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name>v5</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x1F800</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0xA000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">40960</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x3000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">12288</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">384</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x1800</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">6144</literal> <operator>&amp;&amp;</operator> <name>v3</name> <operator>&amp;&amp;</operator> <name>v3</name> <operator>!=</operator> <literal type="number">2048</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4096</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">384</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">384</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">8192</literal> <operator>||</operator> <name>v3</name> <operator>==</operator> <literal type="number">10240</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">384</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&gt;</operator> <literal type="number">0x8800</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">36864</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">38912</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">385</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">34816</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">14336</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">24576</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">388</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">385</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">384</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">385</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x11000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">69632</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">386</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0xE000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">57344</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">387</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">43008</literal> <operator>&amp;&amp;</operator> <name>v3</name> <operator>!=</operator> <literal type="number">45056</literal> <operator>&amp;&amp;</operator> <name>v3</name> <operator>!=</operator> <literal type="number">47104</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">385</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">386</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v5</name> <operator>=</operator> <name>v3</name> <operator>==</operator> <literal type="number">67584</literal></expr>;</expr_stmt>
<label><name>LABEL_35</name>:</label>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v5</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">386</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x13000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">77824</literal> <operator>||</operator> <name>v3</name> <operator>==</operator> <literal type="number">71680</literal> <operator>||</operator> <name>v3</name> <operator>==</operator> <literal type="number">73728</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">386</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v5</name> <operator>=</operator> <name>v3</name> <operator>==</operator> <literal type="number">75776</literal></expr>;</expr_stmt>
<goto>goto <name>LABEL_35</name>;</goto>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">79872</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">386</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">90112</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">389</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_29</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x40F800</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>&lt;=</operator> <operator>(</operator><name>ut32</name><operator>)</operator><name>hash_const_03</name></expr> )</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <name>hash_const_03</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">305</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">40960</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">306</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">57344</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">391</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">4218880</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">390</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_30</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x18000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">303</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">304</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">302</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_31</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x380000</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x200000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">2097152</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">271</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&gt;</operator> <literal type="number">0x100000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">1572864</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">534</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">1048576</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">317</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">319</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">524288</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">533</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">2621440</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">535</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">3145728</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">321</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">3670016</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">536</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_32</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x18000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">258</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">259</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">261</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>st32</name></type> <name>get_hashfunc_33</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8000</literal><operator>)</operator> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">327</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">326</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_34</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>v2</name> <operator>&amp;</operator> <literal type="number">0x580000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x180000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">1572864</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">471</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">392</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">524288</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">470</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">1048576</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">393</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">4194304</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">394</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">5242880</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">395</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>st32</name></type> <name>get_hashfunc_35</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">189</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">186</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_36</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1C00000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1C00000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">188</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">187</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_37</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1800000</literal><operator>)</operator> <operator>==</operator> <literal type="number">8388608</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">473</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1800000</literal><operator>)</operator> <operator>==</operator> <literal type="number">25165824</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">474</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_38</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">472</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">23</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">24</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">16842752</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">26</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_39</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">65536</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">25</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16842752</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">27</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_40</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">135</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">134</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_41</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">16777216</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">138</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">16842752</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">139</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">137</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_42</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">12</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">11</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">8</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">16842752</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">9</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_43</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">13</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">15</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">10</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">16842752</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">14</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_44</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">29</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">28</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_45</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">17</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_46</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC1000000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC1000000u</literal><operator>)</operator> <operator>&gt;</operator> <literal type="number">0x40000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">0x80000000</literal> <operator>&amp;&amp;</operator> <name>v2</name> <operator>!=</operator> <literal type="number">0xC0000000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0xC1000000</literal><operator>)</operator> <operator>!=</operator> <literal type="number">0x40000000</literal> <operator>&amp;&amp;</operator> <name>v2</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">136</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><literal type="number">18</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_47</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">130</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">132</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_48</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">133</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">131</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_49</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>(<expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">33</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">35</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_50</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x780000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x400000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">522</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&gt;</operator> <literal type="number">0x180000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">2621440</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">402</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">3145728</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">411</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">1572864</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">401</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">403</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">524288</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">400</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x680000</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">0x680000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">526</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <name>hash_const_05</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">524</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">0x580000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">525</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">7340032</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">523</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_51</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x180000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&gt;</operator> <literal type="number">0x100000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">1572864</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>!=</operator> <literal type="number">1048576</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">396</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">524288</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">532</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><literal type="number">398</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_52</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x18000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x10000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">0x10000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">296</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">0x8000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">300</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">298</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">0x18000</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">301</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_53</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8200</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>(<expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8200</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">512</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">530</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name>v2</name><operator>==</operator><literal type="number">0x8000</literal><operator>)</operator></expr>?</condition><then> <expr><literal type="number">297</literal></expr></then><else>: <expr><name>arg1</name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">355</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_54</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8200</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x8000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">316</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8200</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">410</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">512</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">531</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">33280</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">315</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_55</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8000</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8000</literal><operator>)</operator> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">295</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">294</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_56</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x18180</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x8080</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32896</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">528</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">406</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">527</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">407</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">98304</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">408</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">98432</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">529</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_57</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8000</literal><operator>)</operator> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">405</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">404</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_58</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x18000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">263</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">264</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">262</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_59</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8180</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">505</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x8180</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">503</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">504</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">384</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">506</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">507</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_60</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">173</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">172</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_61</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">175</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">174</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_62</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">152</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">151</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_63</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">154</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">153</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_64</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">180</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">179</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_65</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">182</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">181</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_66</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1C00000</literal><operator>)</operator> <operator>==</operator> <literal type="number">12582912</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">157</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1C00000</literal><operator>)</operator> <operator>==</operator> <literal type="number">29360128</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">158</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>st32</name></type> <name>get_hashfunc_67</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">57</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">56</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_68</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">208</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">207</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_69</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">209</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">210</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_70</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">16777216</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">217</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">20971520</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">212</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">216</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_71</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1400000</literal><operator>)</operator> <operator>==</operator> <literal type="number">4194304</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">211</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">218</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_72</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">221</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">220</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_73</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">215</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">214</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_74</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">65536</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">213</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1010000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16842752</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">426</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_75</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x80000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x80000000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">457</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">459</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_76</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">21</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">19</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_77</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">22</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">20</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_78</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x18000</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x10000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">429</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">427</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">428</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">98304</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">252</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_79</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x18180</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x8100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">33024</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">437</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&gt;</operator> <literal type="number">0x180</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">431</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32896</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">435</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">384</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">440</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">430</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">432</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">434</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x10100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65792</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">442</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">33152</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">441</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">433</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65664</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">436</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">65920</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">439</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">98688</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">438</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_80</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v3</name> <operator>=</operator> <name>v2</name> <operator>&amp;</operator> <literal type="number">0x18180</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x8100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">33024</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">450</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&gt;</operator> <literal type="number">0x180</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">444</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">32896</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">448</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">384</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">453</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v3</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">443</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">445</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">447</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x10100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65792</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">455</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">33152</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">454</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">446</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">65664</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">449</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v3</name> <operator>==</operator> <literal type="number">65920</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">452</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <literal type="number">98688</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">451</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_81</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">191</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">384</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">200</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">538</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">190</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">537</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">16777344</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">194</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">16777472</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">539</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">16777600</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">201</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_82</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal><operator>)</operator> <operator>==</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">203</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v2</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">192</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">195</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">384</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">198</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">16777600</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">196</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_83</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name>v4</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1810180</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1810180u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x800080</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1810180</literal><operator>)</operator> <operator>!=</operator> <literal type="number">8388736</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x10000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">65536</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">193</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">256</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">197</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">193</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">202</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <literal type="number">384</literal></expr>;</expr_stmt>
<label><name>LABEL_11</name>:</label>
<if_stmt><if>if <condition>(<expr><name>v4</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">199</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&gt;</operator> <literal type="number">0x10180</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">8388608</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">193</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">65920</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">199</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">65664</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">65792</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">202</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">197</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x810100</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">8454400</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">202</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x810000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">8454144</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">193</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">8388864</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">202</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>==</operator> <literal type="number">8388992</literal></expr>;</expr_stmt>
<goto>goto <name>LABEL_11</name>;</goto>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">8454272</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">197</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">8454528</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">199</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">16777216</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">205</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>!=</operator> <literal type="number">16777344</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">206</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>st32</name></type> <name>get_hashfunc_84</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>==</operator> <literal type="number">16777344</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">509</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">16777472</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">510</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">508</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_85</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal><operator>)</operator> <operator>==</operator> <literal type="number">128</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">511</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000180</literal><operator>)</operator> <operator>==</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">512</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_86</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777216</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">171</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">170</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_87</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>v2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>v2</name> <operator>&amp;</operator> <literal type="number">0x79B981</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">33024</literal> <operator>||</operator> <name>v3</name> <operator>==</operator> <literal type="number">4227328</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">490</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name>v3</name> <operator>==</operator> <literal type="number">4260097</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">491</literal></expr> </then><else>: <expr><name>arg1</name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_88</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name> <init>= <expr><name>arg2</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st32</name></type> <name>v3</name> <init>= <expr><name>v2</name> <operator>&amp;</operator> <literal type="number">0x79B981</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v3</name> <operator>&lt;=</operator> <literal type="number">0x410101</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">0x410101</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">493</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>==</operator> <literal type="number">0x8100</literal> <operator>||</operator> <name>v3</name> <operator>==</operator> <literal type="number">0x408100</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">492</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v3</name> <operator>!=</operator> <name>hash_const_04</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">494</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_89</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1B901B9</literal><operator>)</operator> <operator>==</operator> <literal type="number">16777600</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">488</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1B901B9</literal><operator>)</operator> <operator>==</operator> <literal type="number">25231616</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">495</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_90</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>v2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v4</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st32</name></type> <name>v5</name></decl>;</decl_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1F901B9</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1F901B9u</literal><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0x1810101</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1F901B9</literal><operator>)</operator> <operator>==</operator> <literal type="number">25231617</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">498</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>( <expr><operator>(</operator><name>ut32</name><operator>)</operator><name>v2</name> <operator>&lt;=</operator> <literal type="number">0x1000180</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>v2</name> <operator>!=</operator> <literal type="number">16777600</literal></expr> )</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">8454401</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">497</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">8454529</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">499</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">489</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>v2</name> <operator>==</operator> <literal type="number">20971904</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">489</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>v4</name> <operator>=</operator> <name>v2</name> <operator>-</operator> <literal type="number">25231744</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>v4</name></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>v5</name> <operator>=</operator> <name>v4</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>v5</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">500</literal></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>v5</name> <operator>-=</operator> <literal type="number">0x3FFFFF</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>v5</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>arg1</name></expr>;</return>
</block_content>}</block></if></if_stmt>




</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">496</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>st32</name></type> <name>get_hashfunc_91</name><parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg1</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>st32</name></type> <name>result</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>( <expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1F901BF</literal><operator>)</operator> <operator>==</operator> <literal type="number">8454145</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">501</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>arg2</name> <operator>&amp;</operator> <literal type="number">0x1F901BF</literal><operator>)</operator> <operator>==</operator> <literal type="number">25231361</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">502</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>arg1</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>st32</name></type> <name>get_hash_code</name><parameter_list>(<parameter><decl><type><name>ut32</name></type> <name>ins_pos</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>ut32</name></type> <name>len</name></decl>, <decl><type ref="prev"/><name>ins_part1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>opcode</name></decl>, <decl><type ref="prev"/><name>pos</name></decl>;</decl_stmt>
<function_decl><type><name>st32</name></type> (<modifier>*</modifier><name>get_hashcode_func</name>)<parameter_list>(<parameter><decl><type><name>st32</name></type> <name>arg</name></decl></parameter>, <parameter><decl><type><name>st32</name></type> <name>arg2</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>ut32</name></type> <name>ins_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st32</name></type> <name>arg</name></decl>, <decl><type ref="prev"/><name>ins_part2</name></decl>, <decl><type ref="prev"/><name>hash_code</name></decl>;</decl_stmt>

<expr_stmt><expr><name>ins_part1</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>ins_part2</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>opcode</name> <operator>=</operator> <call><name>get_ins_part</name><argument_list>(<argument><expr><name>ins_pos</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ins_len</name> <operator>=</operator> <call><name>get_ins_len</name><argument_list>(<argument><expr><name>opcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>C55PLUS_DEBUG</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"opcode: 0x%x part: %d\n"</literal></expr></argument>, <argument><expr><name>opcode</name></expr></argument>, <argument><expr><name>ins_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"ins_len: 0x%x\n"</literal></expr></argument>, <argument><expr><name>ins_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ins_len</name> <operator>&gt;</operator> <literal type="number">1</literal></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><name>len</name> <operator>=</operator> <name>ins_len</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>len</name> <operator>&gt;=</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ins_part1</name> <operator>=</operator> <call><name>get_ins_part</name><argument_list>(<argument><expr><name>ins_pos</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <operator>(</operator><literal type="number">4</literal> <operator>-</operator> <name>len</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>ins_part2</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ins_len</name> <operator>&gt;</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ins_part2</name> <operator>=</operator> <call><name>get_ins_part</name> <argument_list>(<argument><expr><name>ins_pos</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>pos</name> <operator>=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>opcode</name> <operator>|</operator> <operator>(</operator><name>ins_part1</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>arg</name> <operator>=</operator> <name><name>ins_hash</name><index>[<expr><name>pos</name></expr>]</index></name><operator>.</operator><name>code</name></expr>;</expr_stmt>

<expr_stmt><expr><name>ins_part2</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>ins_part2</name> <operator>|=</operator> <operator>(</operator><name>ins_part1</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>


<expr_stmt><expr><name>get_hashcode_func</name> <operator>=</operator> <name><name>ins_hash</name><index>[<expr><name>pos</name></expr>]</index></name><operator>.</operator><name>hash_func</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>C55PLUS_DEBUG</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"hashfunc =&gt; %p 0x%x\n"</literal></expr></argument>, <argument><expr><name>get_hashcode_func</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"hashargs =&gt; 0x%x 0x%x 0x%x\n"</literal></expr></argument>, <argument><expr><operator>(</operator><name>ut32</name><operator>)</operator><name>arg</name></expr></argument>, <argument><expr><name>ins_part1</name></expr></argument>, <argument><expr><name>ins_part2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>hash_code</name> <operator>=</operator> <call><name>get_hashcode_func</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>ins_part2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>C55PLUS_DEBUG</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name> <argument_list>(<argument><expr><literal type="string">"ret hashcode: 0x%x\n"</literal></expr></argument>, <argument><expr><name>hash_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>hash_code</name></expr>;</return>
</block_content>}</block></function>
</unit>
