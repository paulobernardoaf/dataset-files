<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\pic\pic_midrange.h">

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>PIC_MIDRANGE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_asm.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <block>{
<decl><name>PIC_MIDRANGE_OP_ARGS_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_2F</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_7F</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_1D_7F</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_1N_6K</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_3B_7F</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_4K</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_8K</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_9K</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_11K</name></decl>,
<decl><name>PIC_MIDRANGE_OP_ARGS_1N_2M</name></decl>
}</block></enum></type> <name>PicMidrangeOpArgs</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_2F_MASK_F</name></cpp:macro> <cpp:value>0x3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_7F_MASK_F</name></cpp:macro> <cpp:value>0x7f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_1D_7F_MASK_D</name></cpp:macro> <cpp:value>(1 &lt;&lt; 7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_1D_7F_MASK_F</name></cpp:macro> <cpp:value>0x7f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_1N_6K_MASK_N</name></cpp:macro> <cpp:value>(1 &lt;&lt; 6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_1N_6K_MASK_K</name></cpp:macro> <cpp:value>0x3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_3B_7F_MASK_B</name></cpp:macro> <cpp:value>(0x7 &lt;&lt; 7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_3B_7F_MASK_F</name></cpp:macro> <cpp:value>0x7f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_4K_MASK_K</name></cpp:macro> <cpp:value>0xf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_8K_MASK_K</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_9K_MASK_K</name></cpp:macro> <cpp:value>0x1ff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_11K_MASK_K</name></cpp:macro> <cpp:value>0x7ff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_1N_2M_MASK_N</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PIC_MIDRANGE_OP_ARGS_1N_2M_MASK_M</name></cpp:macro> <cpp:value>0x3</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>_pic_midrange_op</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mnemonic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PicMidrangeOpArgs</name></type> <name>args</name></decl>;</decl_stmt>
}</block></struct></type> <name>PicMidrangeOpInfo</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>PIC_MIDRANGE_OPCODE_NOP</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_RETURN</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_RETFIE</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_OPTION</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_SLEEP</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_CLRWDT</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_TRIS</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVWF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_CLR</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_SUBWF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_DECF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_IORWF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_ANDWF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_XORWF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_ADDWF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_COMF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_INCF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_DECFSZ</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_RRF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_RLF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_SWAPF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_INCFSZ</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_BCF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_BSF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_BTFSC</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_BTFSS</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_CALL</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_GOTO</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_RETLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_IORLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_ANDLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_XORLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_SUBLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_ADDLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_RESET</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_CALLW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_BRW</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVIW_1</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVWI_1</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVLB</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_LSLF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_LSRF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_ASRF</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_SUBWFB</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_ADDWFC</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_ADDFSR</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVLP</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_BRA</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVIW_2</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_MOVWI_2</name></decl>,
<decl><name>PIC_MIDRANGE_OPCODE_INVALID</name></decl>
}</block></enum></type> <name>PicMidrangeOpcode</name>;</typedef>

<function_decl><type><name>PicMidrangeOpcode</name></type> <name>pic_midrange_get_opcode</name> <parameter_list>(<parameter><decl><type><name>ut16</name></type> <name>instr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>PicMidrangeOpInfo</name> <modifier>*</modifier></type><name>pic_midrange_get_op_info</name> <parameter_list>(<parameter><decl><type><name>PicMidrangeOpcode</name></type> <name>opcode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pic_midrange_disassemble</name> <parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>opbuf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>l</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
