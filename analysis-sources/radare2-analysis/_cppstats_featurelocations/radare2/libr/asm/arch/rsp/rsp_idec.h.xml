<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\rsp\rsp_idec.h">
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R_ASM_ARCH_RSP_RSP_IDEC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_RSP_RSP_IDEC_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_gp_reg_soft_names</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_c0_reg_soft_names</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_gp_reg_names</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_c0_reg_names</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_c2_creg_names</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_c2_accu_names</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_c2_vreg_names</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>rsp_c2_vreg_element_names</name><index>[]</index></name></decl>;</decl_stmt>


<enum>enum <block>{
<decl><name>RSP_DMEM_OFFSET</name> <init>= <expr><literal type="number">0x0000</literal></expr></init></decl>,
<decl><name>RSP_IMEM_OFFSET</name> <init>= <expr><literal type="number">0x1000</literal></expr></init></decl>
}</block>;</enum>


<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>ut64</name></type> <name>rsp_mem_addr</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><name>addr</name> <operator>&amp;=</operator> <literal type="number">0xfff</literal></expr>;</expr_stmt> <expr_stmt><expr><name>addr</name> <operator>|=</operator> <name>base</name></expr>;</expr_stmt> <return>return <expr><name>addr</name></expr>;</return> </block_content>}</block></function>


<typedef>typedef <type><enum>enum <block>{
<decl><name>RSP_OP_INVALID</name></decl>,
<decl><name>RSP_OP_NOP</name></decl>,
<decl><name>RSP_OP_SLL</name></decl>,
<decl><name>RSP_OP_SRL</name></decl>,
<decl><name>RSP_OP_SRA</name></decl>,
<decl><name>RSP_OP_SLLV</name></decl>,
<decl><name>RSP_OP_SRLV</name></decl>,
<decl><name>RSP_OP_SRAV</name></decl>,
<decl><name>RSP_OP_JR</name></decl>,
<decl><name>RSP_OP_BREAK</name></decl>,
<decl><name>RSP_OP_ADD</name></decl>,
<decl><name>RSP_OP_ADDU</name></decl>,
<decl><name>RSP_OP_SUB</name></decl>,
<decl><name>RSP_OP_SUBU</name></decl>,
<decl><name>RSP_OP_AND</name></decl>,
<decl><name>RSP_OP_OR</name></decl>,
<decl><name>RSP_OP_XOR</name></decl>,
<decl><name>RSP_OP_NOR</name></decl>,
<decl><name>RSP_OP_SLT</name></decl>,
<decl><name>RSP_OP_SLTU</name></decl>,
<decl><name>RSP_OP_BLTZ</name></decl>,
<decl><name>RSP_OP_BGEZ</name></decl>,
<decl><name>RSP_OP_BLTZAL</name></decl>,
<decl><name>RSP_OP_BGEZAL</name></decl>,
<decl><name>RSP_OP_MFC0</name></decl>,
<decl><name>RSP_OP_MTC0</name></decl>,
<decl><name>RSP_OP_MFC2</name></decl>,
<decl><name>RSP_OP_MTC2</name></decl>,
<decl><name>RSP_OP_CFC2</name></decl>,
<decl><name>RSP_OP_CTC2</name></decl>,
<decl><name>RSP_OP_VMULF</name></decl>,
<decl><name>RSP_OP_VMULU</name></decl>,
<decl><name>RSP_OP_VMUDL</name></decl>,
<decl><name>RSP_OP_VMUDM</name></decl>,
<decl><name>RSP_OP_VMUDN</name></decl>,
<decl><name>RSP_OP_VMUDH</name></decl>,
<decl><name>RSP_OP_VMACF</name></decl>,
<decl><name>RSP_OP_VMACU</name></decl>,
<decl><name>RSP_OP_VMADL</name></decl>,
<decl><name>RSP_OP_VMADM</name></decl>,
<decl><name>RSP_OP_VMADN</name></decl>,
<decl><name>RSP_OP_VMADH</name></decl>,
<decl><name>RSP_OP_VADD</name></decl>,
<decl><name>RSP_OP_VSUB</name></decl>,
<decl><name>RSP_OP_VABS</name></decl>,
<decl><name>RSP_OP_VADDC</name></decl>,
<decl><name>RSP_OP_VSUBC</name></decl>,
<decl><name>RSP_OP_VSAR</name></decl>,
<decl><name>RSP_OP_VLT</name></decl>,
<decl><name>RSP_OP_VEQ</name></decl>,
<decl><name>RSP_OP_VNE</name></decl>,
<decl><name>RSP_OP_VGE</name></decl>,
<decl><name>RSP_OP_VCL</name></decl>,
<decl><name>RSP_OP_VCH</name></decl>,
<decl><name>RSP_OP_VCR</name></decl>,
<decl><name>RSP_OP_VMRG</name></decl>,
<decl><name>RSP_OP_VAND</name></decl>,
<decl><name>RSP_OP_VNAND</name></decl>,
<decl><name>RSP_OP_VOR</name></decl>,
<decl><name>RSP_OP_VNOR</name></decl>,
<decl><name>RSP_OP_VXOR</name></decl>,
<decl><name>RSP_OP_VNXOR</name></decl>,
<decl><name>RSP_OP_VRCP</name></decl>,
<decl><name>RSP_OP_VRCPL</name></decl>,
<decl><name>RSP_OP_VRCPH</name></decl>,
<decl><name>RSP_OP_VMOV</name></decl>,
<decl><name>RSP_OP_VRSQ</name></decl>,
<decl><name>RSP_OP_VRSQL</name></decl>,
<decl><name>RSP_OP_VRSQH</name></decl>,
<decl><name>RSP_OP_VNOP</name></decl>,
<decl><name>RSP_OP_LBV</name></decl>,
<decl><name>RSP_OP_LSV</name></decl>,
<decl><name>RSP_OP_LLV</name></decl>,
<decl><name>RSP_OP_LDV</name></decl>,
<decl><name>RSP_OP_LQV</name></decl>,
<decl><name>RSP_OP_LRV</name></decl>,
<decl><name>RSP_OP_LPV</name></decl>,
<decl><name>RSP_OP_LUV</name></decl>,
<decl><name>RSP_OP_LHV</name></decl>,
<decl><name>RSP_OP_LFV</name></decl>,
<decl><name>RSP_OP_LTV</name></decl>,
<decl><name>RSP_OP_SBV</name></decl>,
<decl><name>RSP_OP_SSV</name></decl>,
<decl><name>RSP_OP_SLV</name></decl>,
<decl><name>RSP_OP_SDV</name></decl>,
<decl><name>RSP_OP_SQV</name></decl>,
<decl><name>RSP_OP_SRV</name></decl>,
<decl><name>RSP_OP_SPV</name></decl>,
<decl><name>RSP_OP_SUV</name></decl>,
<decl><name>RSP_OP_SHV</name></decl>,
<decl><name>RSP_OP_SFV</name></decl>,
<decl><name>RSP_OP_SWV</name></decl>,
<decl><name>RSP_OP_STV</name></decl>,
<decl><name>RSP_OP_J</name></decl>,
<decl><name>RSP_OP_JAL</name></decl>,
<decl><name>RSP_OP_BEQ</name></decl>,
<decl><name>RSP_OP_BNE</name></decl>,
<decl><name>RSP_OP_BLEZ</name></decl>,
<decl><name>RSP_OP_BGTZ</name></decl>,
<decl><name>RSP_OP_ADDI</name></decl>,
<decl><name>RSP_OP_ADDIU</name></decl>,
<decl><name>RSP_OP_SLTI</name></decl>,
<decl><name>RSP_OP_SLTIU</name></decl>,
<decl><name>RSP_OP_ANDI</name></decl>,
<decl><name>RSP_OP_ORI</name></decl>,
<decl><name>RSP_OP_XORI</name></decl>,
<decl><name>RSP_OP_LUI</name></decl>,
<decl><name>RSP_OP_LB</name></decl>,
<decl><name>RSP_OP_LH</name></decl>,
<decl><name>RSP_OP_LW</name></decl>,
<decl><name>RSP_OP_LBU</name></decl>,
<decl><name>RSP_OP_LHU</name></decl>,
<decl><name>RSP_OP_SB</name></decl>,
<decl><name>RSP_OP_SH</name></decl>,
<decl><name>RSP_OP_SW</name></decl>
}</block></enum></type> <name>rsp_opcode</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>RSP_OPND_GP_REG</name></decl>, 
<decl><name>RSP_OPND_TARGET</name></decl>, 
<decl><name>RSP_OPND_OFFSET</name></decl>, 
<decl><name>RSP_OPND_ZIMM</name></decl>, 
<decl><name>RSP_OPND_SIMM</name></decl>, 
<decl><name>RSP_OPND_SHIFT_AMOUNT</name></decl>, 
<decl><name>RSP_OPND_BASE_OFFSET</name></decl>, 
<decl><name>RSP_OPND_C0_REG</name></decl>, 
<decl><name>RSP_OPND_C2_CREG</name></decl>, 
<decl><name>RSP_OPND_C2_ACCU</name></decl>, 
<decl><name>RSP_OPND_C2_VREG</name></decl>, 
<decl><name>RSP_OPND_C2_VREG_BYTE</name></decl>, 
<decl><name>RSP_OPND_C2_VREG_SCALAR</name></decl>, 
<decl><name>RSP_OPND_C2_VREG_ELEMENT</name></decl> 
}</block></enum></type> <name>rsp_operand_type</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>rsp_operand_type</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>u</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st64</name></type> <name>s</name></decl>;</decl_stmt>
}</block></struct></type> <name>rsp_operand</name>;</typedef>

<enum>enum <block>{ <decl><name>RSP_MAX_OPNDS</name> <init>= <expr><literal type="number">3</literal></expr></init></decl> }</block>;</enum>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>mnemonic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rsp_opcode</name></type> <name>opcode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>noperands</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rsp_operand</name></type> <name><name>operands</name><index>[<expr><name>RSP_MAX_OPNDS</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>rsp_instruction</name>;</typedef>

<function_decl><type><name>rsp_instruction</name></type> <name>rsp_instruction_decode</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>iw</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
