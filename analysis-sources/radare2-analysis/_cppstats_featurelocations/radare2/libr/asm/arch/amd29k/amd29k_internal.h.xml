<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\amd29k\amd29k_internal.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ASM_AMD_29K_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASM_AMD_29K_INTERNAL_H</name></cpp:macro></cpp:define>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>amd29k_decode</name>)<parameter_list>(<parameter><decl><type><name>amd29k_instr_t</name><modifier>*</modifier></type> <name>instruction</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>buffer</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>amd29k_encode</name>)<parameter_list>(<parameter><decl><type><name>amd29k_instr_t</name><modifier>*</modifier></type> <name>instruction</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>assembly</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>amd29k_instruction_s</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>cpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>mnemonic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>op_type</name></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>mask</name></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>amd29k_decode</name></type> <name>decode</name></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>amd29k_encode</name></type> <name>encode</name></decl> ;</decl_stmt>
}</block></struct></type> <name>amd29k_instruction_t</name>;</typedef>

<enum>enum <name>amd29k_types</name> <block>{
<decl><name>AMD29K_TYPE_UNK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>AMD29K_TYPE_REG</name></decl>,
<decl><name>AMD29K_TYPE_IMM</name></decl>,
<decl><name>AMD29K_TYPE_JMP</name></decl>,
}</block>;</enum>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif></unit>
