<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\cr16\cr16_disas.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_CR16_DISASM_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_CR16_DISASM_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CR16_INSTR_MAXLEN</name></cpp:macro> <cpp:value>24</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STOR_LOAD_MASK</name></cpp:macro> <cpp:value>0x181F</cpp:value></cpp:define>

<enum>enum <name>cr16_cmd_types</name> <block>{
<decl><name>CR16_TYPE_MOV</name></decl>,
<decl><name>CR16_TYPE_ADD</name></decl>,
<decl><name>CR16_TYPE_MUL</name></decl>,
<decl><name>CR16_TYPE_SUB</name></decl>,
<decl><name>CR16_TYPE_CMP</name></decl>,
<decl><name>CR16_TYPE_BE</name></decl>,
<decl><name>CR16_TYPE_BNE</name></decl>,
<decl><name>CR16_TYPE_AND</name></decl>,
<decl><name>CR16_TYPE_OR</name></decl>,
<decl><name>CR16_TYPE_SCOND</name></decl>,
<decl><name>CR16_TYPE_XOR</name></decl>,
<decl><name>CR16_TYPE_SHIFT</name></decl>,
<decl><name>CR16_TYPE_BIT</name></decl>,
<decl><name>CR16_TYPE_SLPR</name></decl>,
<decl><name>CR16_TYPE_BCOND</name></decl>,
<decl><name>CR16_TYPE_BAL</name></decl>,
<decl><name>CR16_TYPE_BR</name></decl>,
<decl><name>CR16_TYPE_EXCP</name></decl>,
<decl><name>CR16_TYPE_JCOND</name></decl>,
<decl><name>CR16_TYPE_JAL</name></decl>,
<decl><name>CR16_TYPE_JUMP</name></decl>,
<decl><name>CR16_TYPE_JUMP_UNK</name></decl>,
<decl><name>CR16_TYPE_RETX</name></decl>,
<decl><name>CR16_TYPE_PUSH</name></decl>,
<decl><name>CR16_TYPE_POP</name></decl>,
<decl><name>CR16_TYPE_LOAD</name></decl>,
<decl><name>CR16_TYPE_STOR</name></decl>,
<decl><name>CR16_TYPE_DI</name></decl>,
<decl><name>CR16_TYPE_EI</name></decl>,
<decl><name>CR16_TYPE_NOP</name></decl>,
<decl><name>CR16_TYPE_WAIT</name></decl>,
<decl><name>CR16_TYPE_EWAIT</name></decl>,
}</block>;</enum>

<struct>struct <name>cr16_cmd</name> <block>{
<decl_stmt><decl><type><name>st32</name></type> <name>reladdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>instr</name><index>[<expr><name>CR16_INSTR_MAXLEN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>operands</name><index>[<expr><name>CR16_INSTR_MAXLEN</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>cr16_decode_command</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>instr</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>cr16_cmd</name></name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>cr16_opcodes</name> <block>{
<decl><name>CR16_ADD</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>CR16_ADDU</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>CR16_BITI</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>,
<decl><name>CR16_MUL</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>CR16_ASHU</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>CR16_LSH</name> <init>= <expr><literal type="number">0x5</literal></expr></init></decl>,
<decl><name>CR16_XOR</name> <init>= <expr><literal type="number">0x6</literal></expr></init></decl>,
<decl><name>CR16_CMP</name> <init>= <expr><literal type="number">0x7</literal></expr></init></decl>,
<decl><name>CR16_AND</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl>,
<decl><name>CR16_ADDC</name> <init>= <expr><literal type="number">0x9</literal></expr></init></decl>,
<decl><name>CR16_BCOND01</name> <init>= <expr><literal type="number">0xA</literal></expr></init></decl>,
<decl><name>CR16_TBIT</name> <init>= <expr><literal type="number">0xB</literal></expr></init></decl>,
<decl><name>CR16_MOV</name> <init>= <expr><literal type="number">0xC</literal></expr></init></decl>,
<decl><name>CR16_SUB</name> <init>= <expr><literal type="number">0xF</literal></expr></init></decl>,
<decl><name>CR16_SUBC</name> <init>= <expr><literal type="number">0xD</literal></expr></init></decl>,
<decl><name>CR16_OR</name> <init>= <expr><literal type="number">0xE</literal></expr></init></decl>,
<decl><name>CR16_MOVD</name> <init>= <expr><literal type="number">0x19</literal></expr></init></decl>,
<decl><name>CR16_MULSB</name> <init>= <expr><literal type="number">0x30</literal></expr></init></decl>,
<decl><name>CR16_MULSW</name> <init>= <expr><literal type="number">0x31</literal></expr></init></decl>,
<decl><name>CR16_MULUW</name> <init>= <expr><literal type="number">0x3F</literal></expr></init></decl>,
<decl><name>CR16_MOVXB</name> <init>= <expr><literal type="number">0x34</literal></expr></init></decl>,
<decl><name>CR16_MOVZB</name> <init>= <expr><literal type="number">0x35</literal></expr></init></decl>,
<decl><name>CR16_SCOND</name> <init>= <expr><literal type="number">0x37</literal></expr></init></decl>,
<decl><name>CR16_TBIT_R_R</name> <init>= <expr><literal type="number">0x3B</literal></expr></init></decl>,
<decl><name>CR16_TBIT_I_R</name> <init>= <expr><literal type="number">0x1B</literal></expr></init></decl>,
<decl><name>CR16_JUMP</name> <init>= <expr><literal type="number">0x2A</literal></expr></init></decl>,
<decl><name>CR16_JAL</name> <init>= <expr><literal type="number">0x3A</literal></expr></init></decl>,
<decl><name>CR16_BAL</name> <init>= <expr><literal type="number">0x1A</literal></expr></init></decl>,
<decl><name>CR16_LPR</name> <init>= <expr><literal type="number">0x38</literal></expr></init></decl>,
<decl><name>CR16_SPR</name> <init>= <expr><literal type="number">0x39</literal></expr></init></decl>,
<decl><name>CR16_BCOND_2</name> <init>= <expr><literal type="number">0x0A</literal></expr></init></decl>,
<decl><name>CR16_PUSH</name> <init>= <expr><literal type="number">0xD8</literal></expr></init></decl>,
<decl><name>CR16_POP</name> <init>= <expr><literal type="number">0xD9</literal></expr></init></decl>,
<decl><name>CR16_POPRET_1</name> <init>= <expr><literal type="number">0xDA</literal></expr></init></decl>,
<decl><name>CR16_POPRET_2</name> <init>= <expr><literal type="number">0xDB</literal></expr></init></decl>,
<decl><name>CR16_LOADM</name> <init>= <expr><literal type="number">0xFC</literal></expr></init></decl>,
<decl><name>CR16_STORM</name> <init>= <expr><literal type="number">0xFD</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>cr16_opcodes_long</name> <block>{
<decl><name>CR16_RETX</name> <init>= <expr><literal type="number">0x79FE</literal></expr></init></decl>,
<decl><name>CR16_DI</name> <init>= <expr><literal type="number">0x7DDE</literal></expr></init></decl>,
<decl><name>CR16_EI</name> <init>= <expr><literal type="number">0x7DFE</literal></expr></init></decl>,
<decl><name>CR16_NOP</name> <init>= <expr><literal type="number">0x0200</literal></expr></init></decl>,
<decl><name>CR16_WAIT</name> <init>= <expr><literal type="number">0x7FFE</literal></expr></init></decl>,
<decl><name>CR16_EWAIT</name> <init>= <expr><literal type="number">0x7FD6</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>cr16_cmd_forms</name> <block>{
<decl><name>CR16_I_R</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>CR16_R_R</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>cr16_regs</name> <block>{
<decl><name>CR16_R0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>CR16_R1</name></decl>,
<decl><name>CR16_R2</name></decl>,
<decl><name>CR16_R3</name></decl>,
<decl><name>CR16_R4</name></decl>,
<decl><name>CR16_R5</name></decl>,
<decl><name>CR16_R6</name></decl>,
<decl><name>CR16_R7</name></decl>,
<decl><name>CR16_R8</name></decl>,
<decl><name>CR16_R9</name></decl>,
<decl><name>CR16_R10</name></decl>,
<decl><name>CR16_R11</name></decl>,
<decl><name>CR16_R12</name></decl>,
<decl><name>CR16_R13</name></decl>,
<decl><name>CR16_RA</name></decl>,
<decl><name>CR16_SP</name></decl>,
<decl><name>CR16_LAST</name></decl>,
}</block>;</enum>

<enum>enum <name>cr16_dedic_regs</name> <block>{
<decl><name>CR16_PSR</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>CR16_INTBASE</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>CR16_ISP</name> <init>= <expr><literal type="number">0xB</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>cr16_conds</name> <block>{
<decl><name>CR16_COND_EQ</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>CR16_COND_NE</name></decl>,
<decl><name>CR16_COND_CS</name></decl>,
<decl><name>CR16_COND_CC</name></decl>,
<decl><name>CR16_COND_HI</name></decl>,
<decl><name>CR16_COND_LS</name></decl>,
<decl><name>CR16_COND_GT</name></decl>,
<decl><name>CR16_COND_LE</name></decl>,
<decl><name>CR16_COND_FS</name></decl>,
<decl><name>CR16_COND_FC</name></decl>,
<decl><name>CR16_COND_LO</name></decl>,
<decl><name>CR16_COND_HS</name></decl>,
<decl><name>CR16_COND_LT</name></decl>,
<decl><name>CR16_COND_GE</name></decl>,
}</block>;</enum>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
