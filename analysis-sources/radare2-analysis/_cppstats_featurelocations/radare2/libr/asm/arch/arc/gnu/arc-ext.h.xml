<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\arc\gnu\arc-ext.h">













































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ARC_EXTENSIONS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARC_EXTENSIONS_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IGNORE_FIRST_OPD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNMANGLED</name></cpp:macro></cpp:define>





<enum>enum <name>ExtOperType</name>
<block>{
<decl><name>EXT_INSTRUCTION</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>EXT_CORE_REGISTER</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>EXT_AUX_REGISTER</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>EXT_COND_CODE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>EXT_INSTRUCTION32</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 
<decl><name>EXT_AC_INSTRUCTION</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 
<decl><name>EXT_REMOVE_CORE_REG</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>EXT_LONG_CORE_REGISTER</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>EXT_AUX_REGISTER_EXTENDED</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,
<decl><name>EXT_INSTRUCTION32_EXTENDED</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>EXT_CORE_REGISTER_CLASS</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>
}</block>;</enum>


<enum>enum <name>ExtReadWrite</name>
<block>{
<decl><name>REG_INVALID</name></decl>,
<decl><name>REG_READ</name></decl>,
<decl><name>REG_WRITE</name></decl>,
<decl><name>REG_READWRITE</name></decl>
}</block>;</enum>



<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>build_ARC_extmap</name> <parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>text_bfd</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name><name>enum</name> <name>ExtReadWrite</name></name></type> <name>arcExtMap_coreReadWrite</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>regnum</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>arcExtMap_coreRegName</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>regnum</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>arcExtMap_auxRegName</name> <parameter_list>(<parameter><decl><type><name>long</name></type> <name>regnum</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>arcExtMap_condCodeName</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>arcExtMap_instName</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>opcode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>insn</name></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>dump_ARC_extmap</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
