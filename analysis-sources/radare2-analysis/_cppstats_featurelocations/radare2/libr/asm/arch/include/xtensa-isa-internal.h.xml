<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\include\xtensa-isa-internal.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>XTENSA_ISA_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_ISA_INTERNAL_H</name></cpp:macro></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPERAND_IS_REGISTER</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPERAND_IS_PCRELATIVE</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPERAND_IS_INVISIBLE</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPERAND_IS_UNKNOWN</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPCODE_IS_BRANCH</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPCODE_IS_JUMP</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPCODE_IS_LOOP</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_OPCODE_IS_CALL</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_STATE_IS_EXPORTED</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_STATE_IS_SHARED_OR</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XTENSA_INTERFACE_HAS_SIDE_EFFECT</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>xtensa_format_encode_fn</name>) <parameter_list>(<parameter><decl><type><name>xtensa_insnbuf</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>xtensa_get_slot_fn</name>) <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>xtensa_insnbuf</name></type></decl></parameter>, <parameter><decl><type><name>xtensa_insnbuf</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>xtensa_set_slot_fn</name>) <parameter_list>(<parameter><decl><type><name>xtensa_insnbuf</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>xtensa_insnbuf</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>xtensa_opcode_decode_fn</name>) <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>xtensa_insnbuf</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>uint32</name></type> (<modifier>*</modifier><name>xtensa_get_field_fn</name>) <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>xtensa_insnbuf</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>xtensa_set_field_fn</name>) <parameter_list>(<parameter><decl><type><name>xtensa_insnbuf</name></type></decl></parameter>, <parameter><decl><type><name>uint32</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>xtensa_immed_decode_fn</name>) <parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>xtensa_immed_encode_fn</name>) <parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>xtensa_do_reloc_fn</name>) <parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>xtensa_undo_reloc_fn</name>) <parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>xtensa_opcode_encode_fn</name>) <parameter_list>(<parameter><decl><type><name>xtensa_insnbuf</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>xtensa_format_decode_fn</name>) <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>xtensa_insnbuf</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>xtensa_length_decode_fn</name>) <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>xtensa_format_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>length</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_format_encode_fn</name></type> <name>encode_fn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num_slots</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>slot_id</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_format_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_slot_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>position</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_get_slot_fn</name></type> <name>get_fn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_set_slot_fn</name></type> <name>set_fn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_get_field_fn</name> <modifier>*</modifier></type><name>get_field_fns</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_set_field_fn</name> <modifier>*</modifier></type><name>set_field_fns</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_opcode_decode_fn</name></type> <name>opcode_decode_fn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>nop_name</name></decl>;</decl_stmt>
}</block></struct></type> <name>xtensa_slot_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_operand_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>field_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_regfile</name></type> <name>regfile</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_regs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32</name></type> <name>flags</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_immed_encode_fn</name></type> <name>encode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_immed_decode_fn</name></type> <name>decode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_do_reloc_fn</name></type> <name>do_reloc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_undo_reloc_fn</name></type> <name>undo_reloc</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_operand_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_arg_internal_struct</name>
<block>{
<union>union <block>{
<decl_stmt><decl><type><name>int</name></type> <name>operand_id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_state</name></type> <name>state</name></decl>;</decl_stmt> 
}</block> <decl><name>u</name></decl>;</union>
<decl_stmt><decl><type><name>char</name></type> <name>inout</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_arg_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_iclass_internal_struct</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>num_operands</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_arg_internal</name> <modifier>*</modifier></type><name>operands</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_stateOperands</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_arg_internal</name> <modifier>*</modifier></type><name>stateOperands</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_interfaceOperands</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_interface</name> <modifier>*</modifier></type><name>interfaceOperands</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_iclass_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_opcode_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>iclass_id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32</name></type> <name>flags</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_opcode_encode_fn</name> <modifier>*</modifier></type><name>encode_fns</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_funcUnit_uses</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_funcUnit_use</name> <modifier>*</modifier></type><name>funcUnit_uses</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_opcode_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_regfile_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>shortname</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_regfile</name></type> <name>parent</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_bits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_entries</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_regfile_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_interface_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_bits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32</name></type> <name>flags</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>class_id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name>inout</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_interface_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_funcUnit_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_copies</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_funcUnit_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_state_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_bits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32</name></type> <name>flags</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_state_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_sysreg_internal_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>number</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>is_user</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xtensa_sysreg_internal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_lookup_entry_struct</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<union>union
<block>{
<decl_stmt><decl><type><name>xtensa_opcode</name></type> <name>opcode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_sysreg</name></type> <name>sysreg</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_state</name></type> <name>state</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_interface</name></type> <name>intf</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>xtensa_funcUnit</name></type> <name>fun</name></decl>;</decl_stmt> 
}</block> <decl><name>u</name></decl>;</union>
}</block></struct></type> <name>xtensa_lookup_entry</name>;</typedef>

<typedef>typedef <type><struct>struct <name>xtensa_isa_internal_struct</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>is_big_endian</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>insn_size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>insnbuf_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_formats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_format_internal</name> <modifier>*</modifier></type><name>formats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_format_decode_fn</name></type> <name>format_decode_fn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_length_decode_fn</name></type> <name>length_decode_fn</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_slots</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_slot_internal</name> <modifier>*</modifier></type><name>slots</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_fields</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_operands</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_operand_internal</name> <modifier>*</modifier></type><name>operands</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_iclasses</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_iclass_internal</name> <modifier>*</modifier></type><name>iclasses</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_opcodes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_opcode_internal</name> <modifier>*</modifier></type><name>opcodes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_lookup_entry</name> <modifier>*</modifier></type><name>opname_lookup_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_regfiles</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_regfile_internal</name> <modifier>*</modifier></type><name>regfiles</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_states</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_state_internal</name> <modifier>*</modifier></type><name>states</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_lookup_entry</name> <modifier>*</modifier></type><name>state_lookup_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_sysregs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_sysreg_internal</name> <modifier>*</modifier></type><name>sysregs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_lookup_entry</name> <modifier>*</modifier></type><name>sysreg_lookup_table</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int</name></type> <name><name>max_sysreg_num</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_sysreg</name> <modifier>*</modifier></type><name><name>sysreg_table</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_interfaces</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_interface_internal</name> <modifier>*</modifier></type><name>interfaces</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_lookup_entry</name> <modifier>*</modifier></type><name>interface_lookup_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_funcUnits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_funcUnit_internal</name> <modifier>*</modifier></type><name>funcUnits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>xtensa_lookup_entry</name> <modifier>*</modifier></type><name>funcUnit_lookup_table</name></decl>;</decl_stmt>

}</block></struct></type> <name>xtensa_isa_internal</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>xtensa_isa_name_compare</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>xtensa_isa_status</name></type> <name>xtisa_errno</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name></type> <name><name>xtisa_error_msg</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
