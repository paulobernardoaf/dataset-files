<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\include\elf\common.h">






























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_ELF_COMMON_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ELF_COMMON_H</name></cpp:macro></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_MAG0</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFMAG0</name></cpp:macro> <cpp:value>0x7F</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_MAG1</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFMAG1</name></cpp:macro> <cpp:value>'E'</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_MAG2</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFMAG2</name></cpp:macro> <cpp:value>'L'</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_MAG3</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFMAG3</name></cpp:macro> <cpp:value>'F'</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_CLASS</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFCLASSNONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFCLASS32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFCLASS64</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_DATA</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFDATANONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFDATA2LSB</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFDATA2MSB</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_VERSION</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_OSABI</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_HPUX</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_NETBSD</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_LINUX</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_HURD</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_SOLARIS</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_AIX</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_IRIX</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_FREEBSD</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_TRU64</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_MODESTO</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_OPENBSD</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_OPENVMS</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_NSK</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_AROS</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_ARM</name></cpp:macro> <cpp:value>97</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFOSABI_STANDALONE</name></cpp:macro> <cpp:value>255</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_ABIVERSION</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EI_PAD</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define> 




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_REL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_EXEC</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_DYN</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_CORE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_LOOS</name></cpp:macro> <cpp:value>0xFE00</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_HIOS</name></cpp:macro> <cpp:value>0xFEFF</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_LOPROC</name></cpp:macro> <cpp:value>0xFF00</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ET_HIPROC</name></cpp:macro> <cpp:value>0xFFFF</cpp:value></cpp:define> 





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_M32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_SPARC</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_386</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_68K</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_88K</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_486</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_860</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MIPS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_S370</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MIPS_RS3_LE</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PARISC</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_VPP550</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_SPARC32PLUS</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_960</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PPC</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PPC64</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_S390</name></cpp:macro> <cpp:value>22</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_SPU</name></cpp:macro> <cpp:value>23</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_V800</name></cpp:macro> <cpp:value>36</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_FR20</name></cpp:macro> <cpp:value>37</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_RH32</name></cpp:macro> <cpp:value>38</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MCORE</name></cpp:macro> <cpp:value>39</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_RCE</name></cpp:macro> <cpp:value>39</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ARM</name></cpp:macro> <cpp:value>40</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_OLD_ALPHA</name></cpp:macro> <cpp:value>41</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_SH</name></cpp:macro> <cpp:value>42</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_SPARCV9</name></cpp:macro> <cpp:value>43</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_TRICORE</name></cpp:macro> <cpp:value>44</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ARC</name></cpp:macro> <cpp:value>45</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_H8_300</name></cpp:macro> <cpp:value>46</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_H8_300H</name></cpp:macro> <cpp:value>47</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_H8S</name></cpp:macro> <cpp:value>48</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_H8_500</name></cpp:macro> <cpp:value>49</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_IA_64</name></cpp:macro> <cpp:value>50</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MIPS_X</name></cpp:macro> <cpp:value>51</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_COLDFIRE</name></cpp:macro> <cpp:value>52</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_68HC12</name></cpp:macro> <cpp:value>53</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MMA</name></cpp:macro> <cpp:value>54</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PCP</name></cpp:macro> <cpp:value>55</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_NCPU</name></cpp:macro> <cpp:value>56</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_NDR1</name></cpp:macro> <cpp:value>57</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_STARCORE</name></cpp:macro> <cpp:value>58</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ME16</name></cpp:macro> <cpp:value>59</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ST100</name></cpp:macro> <cpp:value>60</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_TINYJ</name></cpp:macro> <cpp:value>61</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_X86_64</name></cpp:macro> <cpp:value>62</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PDP10</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PDP11</name></cpp:macro> <cpp:value>65</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_FX66</name></cpp:macro> <cpp:value>66</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ST9PLUS</name></cpp:macro> <cpp:value>67</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ST7</name></cpp:macro> <cpp:value>68</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_68HC16</name></cpp:macro> <cpp:value>69</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_68HC11</name></cpp:macro> <cpp:value>70</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_68HC08</name></cpp:macro> <cpp:value>71</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_68HC05</name></cpp:macro> <cpp:value>72</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_SVX</name></cpp:macro> <cpp:value>73</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ST19</name></cpp:macro> <cpp:value>74</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_VAX</name></cpp:macro> <cpp:value>75</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CRIS</name></cpp:macro> <cpp:value>76</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_JAVELIN</name></cpp:macro> <cpp:value>77</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_FIREPATH</name></cpp:macro> <cpp:value>78</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ZSP</name></cpp:macro> <cpp:value>79</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MMIX</name></cpp:macro> <cpp:value>80</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_HUANY</name></cpp:macro> <cpp:value>81</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PRISM</name></cpp:macro> <cpp:value>82</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_AVR</name></cpp:macro> <cpp:value>83</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_FR30</name></cpp:macro> <cpp:value>84</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_D10V</name></cpp:macro> <cpp:value>85</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_D30V</name></cpp:macro> <cpp:value>86</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_V850</name></cpp:macro> <cpp:value>87</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_M32R</name></cpp:macro> <cpp:value>88</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MN10300</name></cpp:macro> <cpp:value>89</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MN10200</name></cpp:macro> <cpp:value>90</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PJ</name></cpp:macro> <cpp:value>91</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_OPENRISC</name></cpp:macro> <cpp:value>92</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ARC_A5</name></cpp:macro> <cpp:value>93</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_XTENSA</name></cpp:macro> <cpp:value>94</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_IP2K</name></cpp:macro> <cpp:value>101</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CR</name></cpp:macro> <cpp:value>103</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MSP430</name></cpp:macro> <cpp:value>105</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_BLACKFIN</name></cpp:macro> <cpp:value>106</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ALTERA_NIOS2</name></cpp:macro> <cpp:value>113</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CRX</name></cpp:macro> <cpp:value>114</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CR16</name></cpp:macro> <cpp:value>115</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_SCORE</name></cpp:macro> <cpp:value>135</cpp:value></cpp:define> 













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_RISCV</name></cpp:macro> <cpp:value>243</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_OLD_SPARCV9</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PPC_OLD</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_PJ_OLD</name></cpp:macro> <cpp:value>99</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_AVR_OLD</name></cpp:macro> <cpp:value>0x1057</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MSP430_OLD</name></cpp:macro> <cpp:value>0x1059</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_MT</name></cpp:macro> <cpp:value>0x2530</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_FR30</name></cpp:macro> <cpp:value>0x3330</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_OPENRISC_OLD</name></cpp:macro> <cpp:value>0x3426</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_DLX</name></cpp:macro> <cpp:value>0x5aa5</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_FRV</name></cpp:macro> <cpp:value>0x5441</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_XC16X</name></cpp:macro> <cpp:value>0x4688</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_D10V</name></cpp:macro> <cpp:value>0x7650</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_D30V</name></cpp:macro> <cpp:value>0x7676</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_IP2K_OLD</name></cpp:macro> <cpp:value>0x8217</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_OR32</name></cpp:macro> <cpp:value>0x8472</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_POWERPC</name></cpp:macro> <cpp:value>0x9025</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_ALPHA</name></cpp:macro> <cpp:value>0x9026</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_M32R</name></cpp:macro> <cpp:value>0x9041</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_V850</name></cpp:macro> <cpp:value>0x9080</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_S390_OLD</name></cpp:macro> <cpp:value>0xa390</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_XTENSA_OLD</name></cpp:macro> <cpp:value>0xabc7</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_XSTORMY16</name></cpp:macro> <cpp:value>0xad45</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_MN10300</name></cpp:macro> <cpp:value>0xbeef</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_MN10200</name></cpp:macro> <cpp:value>0xdead</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_M32C</name></cpp:macro> <cpp:value>0xFEB0</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_IQ2000</name></cpp:macro> <cpp:value>0xFEBA</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_NIOS32</name></cpp:macro> <cpp:value>0xFEBB</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EM_CYGNUS_MEP</name></cpp:macro> <cpp:value>0xF00D</cpp:value></cpp:define> 





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EV_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EV_CURRENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_NULL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_LOAD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_DYNAMIC</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_INTERP</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_NOTE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_SHLIB</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_PHDR</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_TLS</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_LOOS</name></cpp:macro> <cpp:value>0x60000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_HIOS</name></cpp:macro> <cpp:value>0x6fffffff</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_LOPROC</name></cpp:macro> <cpp:value>0x70000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_HIPROC</name></cpp:macro> <cpp:value>0x7FFFFFFF</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_GNU_EH_FRAME</name></cpp:macro> <cpp:value>(PT_LOOS + 0x474e550)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_SUNW_EH_FRAME</name></cpp:macro> <cpp:value>PT_GNU_EH_FRAME</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_GNU_STACK</name></cpp:macro> <cpp:value>(PT_LOOS + 0x474e551)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PT_GNU_RELRO</name></cpp:macro> <cpp:value>(PT_LOOS + 0x474e552)</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PF_X</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PF_W</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PF_R</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PF_MASKOS</name></cpp:macro> <cpp:value>0x0FF00000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PF_MASKPROC</name></cpp:macro> <cpp:value>0xF0000000</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_NULL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_PROGBITS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_SYMTAB</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_STRTAB</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_RELA</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_HASH</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_DYNAMIC</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_NOTE</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_NOBITS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_REL</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_SHLIB</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_DYNSYM</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_INIT_ARRAY</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_FINI_ARRAY</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_PREINIT_ARRAY</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_GROUP</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_SYMTAB_SHNDX</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_LOOS</name></cpp:macro> <cpp:value>0x60000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_HIOS</name></cpp:macro> <cpp:value>0x6fffffff</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_GNU_ATTRIBUTES</name></cpp:macro> <cpp:value>0x6ffffff5</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_GNU_HASH</name></cpp:macro> <cpp:value>0x6ffffff6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_GNU_LIBLIST</name></cpp:macro> <cpp:value>0x6ffffff7</cpp:value></cpp:define> 




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_SUNW_verdef</name></cpp:macro> <cpp:value>0x6ffffffd</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_SUNW_verneed</name></cpp:macro> <cpp:value>0x6ffffffe</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_SUNW_versym</name></cpp:macro> <cpp:value>0x6fffffff</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_GNU_verdef</name></cpp:macro> <cpp:value>SHT_SUNW_verdef</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_GNU_verneed</name></cpp:macro> <cpp:value>SHT_SUNW_verneed</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_GNU_versym</name></cpp:macro> <cpp:value>SHT_SUNW_versym</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_LOPROC</name></cpp:macro> <cpp:value>0x70000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_HIPROC</name></cpp:macro> <cpp:value>0x7FFFFFFF</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_LOUSER</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHT_HIUSER</name></cpp:macro> <cpp:value>0xFFFFFFFF</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_WRITE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_ALLOC</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_EXECINSTR</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_MERGE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_STRINGS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 5)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_INFO_LINK</name></cpp:macro> <cpp:value>(1 &lt;&lt; 6)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_LINK_ORDER</name></cpp:macro> <cpp:value>(1 &lt;&lt; 7)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_OS_NONCONFORMING</name></cpp:macro> <cpp:value>(1 &lt;&lt; 8)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_GROUP</name></cpp:macro> <cpp:value>(1 &lt;&lt; 9)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_TLS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 10)</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_MASKOS</name></cpp:macro> <cpp:value>0x0FF00000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHF_MASKPROC</name></cpp:macro> <cpp:value>0xF0000000</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_PRSTATUS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_FPREGSET</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_PRPSINFO</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_TASKSTRUCT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_AUXV</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_PRXFPREG</name></cpp:macro> <cpp:value>0x46e62b7f</cpp:value></cpp:define> 




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_PSTATUS</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_FPREGS</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_PSINFO</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_LWPSTATUS</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_LWPSINFO</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_WIN32PSTATUS</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define> 





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_NETBSDCORE_PROCINFO</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_NETBSDCORE_FIRSTMACH</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define> 




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_SPU</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_VERSION</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_ARCH</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_GNU_ABI_TAG</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_GNU_HWCAP</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_GNU_BUILD_ID</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_ABI_TAG_LINUX</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_ABI_TAG_HURD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_ABI_TAG_SOLARIS</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_ABI_TAG_FREEBSD</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GNU_ABI_TAG_NETBSD</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_NETBSD_IDENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_OPENBSD_IDENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NT_FREEBSD_ABI_TAG</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF_ST_BIND</name><parameter_list>(<parameter><type><name>val</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((unsigned int)(val)) &gt;&gt; 4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF_ST_TYPE</name><parameter_list>(<parameter><type><name>val</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((val) &amp; 0xF)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF_ST_INFO</name><parameter_list>(<parameter><type><name>bind</name></type></parameter>,<parameter><type><name>type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((bind) &lt;&lt; 4) + ((type) &amp; 0xF))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF32_ST_BIND</name></cpp:macro> <cpp:value>ELF_ST_BIND</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF32_ST_TYPE</name></cpp:macro> <cpp:value>ELF_ST_TYPE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF32_ST_INFO</name></cpp:macro> <cpp:value>ELF_ST_INFO</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF64_ST_BIND</name></cpp:macro> <cpp:value>ELF_ST_BIND</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF64_ST_TYPE</name></cpp:macro> <cpp:value>ELF_ST_TYPE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF64_ST_INFO</name></cpp:macro> <cpp:value>ELF_ST_INFO</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF_ST_VISIBILITY</name><parameter_list>(<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v) &amp; 0x3)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF32_ST_VISIBILITY</name></cpp:macro> <cpp:value>ELF_ST_VISIBILITY</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF64_ST_VISIBILITY</name></cpp:macro> <cpp:value>ELF_ST_VISIBILITY</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STN_UNDEF</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STB_LOCAL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STB_GLOBAL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STB_WEAK</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STB_LOOS</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STB_HIOS</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STB_LOPROC</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STB_HIPROC</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_NOTYPE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_OBJECT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_FUNC</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_SECTION</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_FILE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_COMMON</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_TLS</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_RELC</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_SRELC</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_LOOS</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_HIOS</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_LOPROC</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STT_HIPROC</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define> 




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_UNDEF</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_LORESERVE</name></cpp:macro> <cpp:value>0xFF00</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_LOPROC</name></cpp:macro> <cpp:value>0xFF00</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_HIPROC</name></cpp:macro> <cpp:value>0xFF1F</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_LOOS</name></cpp:macro> <cpp:value>0xFF20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_HIOS</name></cpp:macro> <cpp:value>0xFF3F</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_ABS</name></cpp:macro> <cpp:value>0xFFF1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_COMMON</name></cpp:macro> <cpp:value>0xFFF2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_XINDEX</name></cpp:macro> <cpp:value>0xFFFF</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_HIRESERVE</name></cpp:macro> <cpp:value>0xFFFF</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHN_BAD</name></cpp:macro> <cpp:value>((unsigned) -1)</cpp:value></cpp:define> 




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STV_DEFAULT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STV_INTERNAL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STV_HIDDEN</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STV_PROTECTED</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF32_R_SYM</name><parameter_list>(<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((i) &gt;&gt; 8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF32_R_TYPE</name><parameter_list>(<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((i) &amp; 0xff)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF32_R_INFO</name><parameter_list>(<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((s) &lt;&lt; 8) + ((t) &amp; 0xff))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF64_R_SYM</name><parameter_list>(<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((i) &gt;&gt; 32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF64_R_TYPE</name><parameter_list>(<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((i) &amp; 0xffffffff)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF64_R_INFO</name><parameter_list>(<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((bfd_vma) (s) &lt;&lt; 31 &lt;&lt; 1) + (bfd_vma) (t))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_NULL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_NEEDED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_PLTRELSZ</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_PLTGOT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_HASH</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_STRTAB</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_SYMTAB</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RELA</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RELASZ</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RELAENT</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_STRSZ</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_SYMENT</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_INIT</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_FINI</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_SONAME</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RPATH</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_SYMBOLIC</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_REL</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RELSZ</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RELENT</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_PLTREL</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_DEBUG</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_TEXTREL</name></cpp:macro> <cpp:value>22</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_JMPREL</name></cpp:macro> <cpp:value>23</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_BIND_NOW</name></cpp:macro> <cpp:value>24</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_INIT_ARRAY</name></cpp:macro> <cpp:value>25</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_FINI_ARRAY</name></cpp:macro> <cpp:value>26</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_INIT_ARRAYSZ</name></cpp:macro> <cpp:value>27</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_FINI_ARRAYSZ</name></cpp:macro> <cpp:value>28</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RUNPATH</name></cpp:macro> <cpp:value>29</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_FLAGS</name></cpp:macro> <cpp:value>30</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_ENCODING</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_PREINIT_ARRAY</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_PREINIT_ARRAYSZ</name></cpp:macro> <cpp:value>33</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OLD_DT_LOOS</name></cpp:macro> <cpp:value>0x60000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_LOOS</name></cpp:macro> <cpp:value>0x6000000d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_HIOS</name></cpp:macro> <cpp:value>0x6ffff000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OLD_DT_HIOS</name></cpp:macro> <cpp:value>0x6fffffff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_LOPROC</name></cpp:macro> <cpp:value>0x70000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_HIPROC</name></cpp:macro> <cpp:value>0x7fffffff</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_VALRNGLO</name></cpp:macro> <cpp:value>0x6ffffd00</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_GNU_PRELINKED</name></cpp:macro> <cpp:value>0x6ffffdf5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_GNU_CONFLICTSZ</name></cpp:macro> <cpp:value>0x6ffffdf6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_GNU_LIBLISTSZ</name></cpp:macro> <cpp:value>0x6ffffdf7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_CHECKSUM</name></cpp:macro> <cpp:value>0x6ffffdf8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_PLTPADSZ</name></cpp:macro> <cpp:value>0x6ffffdf9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_MOVEENT</name></cpp:macro> <cpp:value>0x6ffffdfa</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_MOVESZ</name></cpp:macro> <cpp:value>0x6ffffdfb</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_FEATURE</name></cpp:macro> <cpp:value>0x6ffffdfc</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_POSFLAG_1</name></cpp:macro> <cpp:value>0x6ffffdfd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_SYMINSZ</name></cpp:macro> <cpp:value>0x6ffffdfe</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_SYMINENT</name></cpp:macro> <cpp:value>0x6ffffdff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_VALRNGHI</name></cpp:macro> <cpp:value>0x6ffffdff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_ADDRRNGLO</name></cpp:macro> <cpp:value>0x6ffffe00</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_GNU_HASH</name></cpp:macro> <cpp:value>0x6ffffef5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_TLSDESC_PLT</name></cpp:macro> <cpp:value>0x6ffffef6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_TLSDESC_GOT</name></cpp:macro> <cpp:value>0x6ffffef7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_GNU_CONFLICT</name></cpp:macro> <cpp:value>0x6ffffef8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_GNU_LIBLIST</name></cpp:macro> <cpp:value>0x6ffffef9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_CONFIG</name></cpp:macro> <cpp:value>0x6ffffefa</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_DEPAUDIT</name></cpp:macro> <cpp:value>0x6ffffefb</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_AUDIT</name></cpp:macro> <cpp:value>0x6ffffefc</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_PLTPAD</name></cpp:macro> <cpp:value>0x6ffffefd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_MOVETAB</name></cpp:macro> <cpp:value>0x6ffffefe</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_SYMINFO</name></cpp:macro> <cpp:value>0x6ffffeff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_ADDRRNGHI</name></cpp:macro> <cpp:value>0x6ffffeff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RELACOUNT</name></cpp:macro> <cpp:value>0x6ffffff9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_RELCOUNT</name></cpp:macro> <cpp:value>0x6ffffffa</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_FLAGS_1</name></cpp:macro> <cpp:value>0x6ffffffb</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_VERDEF</name></cpp:macro> <cpp:value>0x6ffffffc</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_VERDEFNUM</name></cpp:macro> <cpp:value>0x6ffffffd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_VERNEED</name></cpp:macro> <cpp:value>0x6ffffffe</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_VERNEEDNUM</name></cpp:macro> <cpp:value>0x6fffffff</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_VERSYM</name></cpp:macro> <cpp:value>0x6ffffff0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_LOPROC</name></cpp:macro> <cpp:value>0x70000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_HIPROC</name></cpp:macro> <cpp:value>0x7fffffff</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_AUXILIARY</name></cpp:macro> <cpp:value>0x7ffffffd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_USED</name></cpp:macro> <cpp:value>0x7ffffffe</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_FILTER</name></cpp:macro> <cpp:value>0x7fffffff</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTF_1_PARINIT</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTF_1_CONFEXP</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_P1_LAZYLOAD</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_P1_GROUPPERM</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_NOW</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_GLOBAL</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_GROUP</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_NODELETE</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_LOADFLTR</name></cpp:macro> <cpp:value>0x00000010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_INITFIRST</name></cpp:macro> <cpp:value>0x00000020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_NOOPEN</name></cpp:macro> <cpp:value>0x00000040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_ORIGIN</name></cpp:macro> <cpp:value>0x00000080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_DIRECT</name></cpp:macro> <cpp:value>0x00000100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_TRANS</name></cpp:macro> <cpp:value>0x00000200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_INTERPOSE</name></cpp:macro> <cpp:value>0x00000400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_NODEFLIB</name></cpp:macro> <cpp:value>0x00000800</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_NODUMP</name></cpp:macro> <cpp:value>0x00001000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_1_CONLFAT</name></cpp:macro> <cpp:value>0x00002000</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_ORIGIN</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_SYMBOLIC</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_TEXTREL</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_BIND_NOW</name></cpp:macro> <cpp:value>(1 &lt;&lt; 3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DF_STATIC_TLS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_DEF_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_DEF_CURRENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_FLG_BASE</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_FLG_WEAK</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_NDX_LOCAL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_NDX_GLOBAL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_NEED_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VER_NEED_CURRENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VERSYM_HIDDEN</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VERSYM_VERSION</name></cpp:macro> <cpp:value>0x7fff</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELF_VER_CHR</name></cpp:macro> <cpp:value>'@'</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_BT_SELF</name></cpp:macro> <cpp:value>0xffff</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_BT_PARENT</name></cpp:macro> <cpp:value>0xfffe</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_BT_LOWRESERVE</name></cpp:macro> <cpp:value>0xff00</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_FLG_DIRECT</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_FLG_PASSTHRU</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_FLG_COPY</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_FLG_LAZYLOAD</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_CURRENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMINFO_NUM</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRP_COMDAT</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_NULL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_IGNORE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_EXECFD</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_PHDR</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_PHENT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_PHNUM</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_PAGESZ</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_BASE</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_FLAGS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_ENTRY</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_NOTELF</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_UID</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_EUID</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_GID</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_EGID</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_CLKTCK</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_PLATFORM</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_HWCAP</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_FPUCW</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_DCACHEBSIZE</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_ICACHEBSIZE</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_UCACHEBSIZE</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_IGNOREPPC</name></cpp:macro> <cpp:value>22</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SECURE</name></cpp:macro> <cpp:value>23</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SYSINFO</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SYSINFO_EHDR</name></cpp:macro> <cpp:value>33</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_UID</name></cpp:macro> <cpp:value>2000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_RUID</name></cpp:macro> <cpp:value>2001</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_GID</name></cpp:macro> <cpp:value>2002</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_RGID</name></cpp:macro> <cpp:value>2003</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_LDELF</name></cpp:macro> <cpp:value>2004</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_LDSHDR</name></cpp:macro> <cpp:value>2005</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_LDNAME</name></cpp:macro> <cpp:value>2006</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_LPAGESZ</name></cpp:macro> <cpp:value>2007</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_PLATFORM</name></cpp:macro> <cpp:value>2008</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_HWCAP</name></cpp:macro> <cpp:value>2009</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_IFLUSH</name></cpp:macro> <cpp:value>2010</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_CPU</name></cpp:macro> <cpp:value>2011</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_EMUL_ENTRY</name></cpp:macro> <cpp:value>2012</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_EMUL_EXECFD</name></cpp:macro> <cpp:value>2013</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_EXECNAME</name></cpp:macro> <cpp:value>2014</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_MMU</name></cpp:macro> <cpp:value>2015</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AT_SUN_LDDATA</name></cpp:macro> <cpp:value>2016</cpp:value></cpp:define> 


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
