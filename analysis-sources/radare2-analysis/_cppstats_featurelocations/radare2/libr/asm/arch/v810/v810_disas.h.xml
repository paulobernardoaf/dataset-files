<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\v810\v810_disas.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_V810_DISASM_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_V810_DISASM_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V810_INSTR_MAXLEN</name></cpp:macro> <cpp:value>24</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPCODE</name><parameter_list>(<parameter><type><name>instr</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((instr) &gt;&gt; 10) &amp; 0x3F)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REG1</name><parameter_list>(<parameter><type><name>instr</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((instr) &amp; 0x1F)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REG2</name><parameter_list>(<parameter><type><name>instr</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((instr) &gt;&gt; 5) &amp; 0x1F)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IMM5</name><parameter_list>(<parameter><type><name>instr</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>REG1((instr))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COND</name><parameter_list>(<parameter><type><name>instr</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((instr) &gt;&gt; 9) &amp; 0xF)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEXT5</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((imm) &amp; 0x10) ? (imm) | 0xE0 : (imm))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEXT9</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((imm) &amp; 0x100) ? (imm) | 0xFFFFFE00 : (imm))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEXT26</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((imm) &amp; 0x2000000) ? (imm) | 0xFC000000 : (imm))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DISP9</name><parameter_list>(<parameter><type><name>word1</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SEXT9((word1) &amp; 0x1FE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DISP26</name><parameter_list>(<parameter><type><name>word1</name></type></parameter>, <parameter><type><name>word2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SEXT26((((word1) &amp; 0x3FF) &lt;&lt; 16) | (word2))</cpp:value></cpp:define>

<enum>enum <name>v810_cmd_opcodes</name> <block>{
<decl><name>V810_MOV</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>V810_ADD</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>V810_SUB</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>,
<decl><name>V810_CMP</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>V810_SHL</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>V810_SHR</name> <init>= <expr><literal type="number">0x5</literal></expr></init></decl>,
<decl><name>V810_JMP</name> <init>= <expr><literal type="number">0x6</literal></expr></init></decl>,
<decl><name>V810_SAR</name> <init>= <expr><literal type="number">0x7</literal></expr></init></decl>,
<decl><name>V810_MUL</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl>,
<decl><name>V810_DIV</name> <init>= <expr><literal type="number">0x9</literal></expr></init></decl>,
<decl><name>V810_MULU</name> <init>= <expr><literal type="number">0xA</literal></expr></init></decl>,
<decl><name>V810_DIVU</name> <init>= <expr><literal type="number">0xB</literal></expr></init></decl>,
<decl><name>V810_OR</name> <init>= <expr><literal type="number">0xC</literal></expr></init></decl>,
<decl><name>V810_AND</name> <init>= <expr><literal type="number">0xD</literal></expr></init></decl>,
<decl><name>V810_XOR</name> <init>= <expr><literal type="number">0xE</literal></expr></init></decl>,
<decl><name>V810_NOT</name> <init>= <expr><literal type="number">0xF</literal></expr></init></decl>,
<decl><name>V810_MOV_IMM5</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>,
<decl><name>V810_ADD_IMM5</name> <init>= <expr><literal type="number">0x11</literal></expr></init></decl>,
<decl><name>V810_SETF</name> <init>= <expr><literal type="number">0x12</literal></expr></init></decl>,
<decl><name>V810_CMP_IMM5</name> <init>= <expr><literal type="number">0x13</literal></expr></init></decl>,
<decl><name>V810_SHL_IMM5</name> <init>= <expr><literal type="number">0x14</literal></expr></init></decl>,
<decl><name>V810_SHR_IMM5</name> <init>= <expr><literal type="number">0x15</literal></expr></init></decl>,
<decl><name>V810_CLI</name> <init>= <expr><literal type="number">0x16</literal></expr></init></decl>,
<decl><name>V810_SAR_IMM5</name> <init>= <expr><literal type="number">0x17</literal></expr></init></decl>,
<decl><name>V810_TRAP</name> <init>= <expr><literal type="number">0x18</literal></expr></init></decl>,
<decl><name>V810_RETI</name> <init>= <expr><literal type="number">0x19</literal></expr></init></decl>,
<decl><name>V810_HALT</name> <init>= <expr><literal type="number">0x1A</literal></expr></init></decl>,
<decl><name>V810_LDSR</name> <init>= <expr><literal type="number">0x1C</literal></expr></init></decl>,
<decl><name>V810_STSR</name> <init>= <expr><literal type="number">0x1D</literal></expr></init></decl>,
<decl><name>V810_SEI</name> <init>= <expr><literal type="number">0x1E</literal></expr></init></decl>,
<decl><name>V810_BSTR</name> <init>= <expr><literal type="number">0x1F</literal></expr></init></decl>,
<decl><name>V810_BCOND</name> <init>= <expr><literal type="number">0x20</literal></expr></init></decl>,
<decl><name>V810_MOVEA</name> <init>= <expr><literal type="number">0x28</literal></expr></init></decl>,
<decl><name>V810_ADDI</name> <init>= <expr><literal type="number">0x29</literal></expr></init></decl>,
<decl><name>V810_JR</name> <init>= <expr><literal type="number">0x2A</literal></expr></init></decl>,
<decl><name>V810_JAL</name> <init>= <expr><literal type="number">0x2B</literal></expr></init></decl>,
<decl><name>V810_ORI</name> <init>= <expr><literal type="number">0x2C</literal></expr></init></decl>,
<decl><name>V810_ANDI</name> <init>= <expr><literal type="number">0x2D</literal></expr></init></decl>,
<decl><name>V810_XORI</name> <init>= <expr><literal type="number">0x2E</literal></expr></init></decl>,
<decl><name>V810_MOVHI</name> <init>= <expr><literal type="number">0x2F</literal></expr></init></decl>,
<decl><name>V810_LDB</name> <init>= <expr><literal type="number">0x30</literal></expr></init></decl>,
<decl><name>V810_LDH</name> <init>= <expr><literal type="number">0x31</literal></expr></init></decl>,
<decl><name>V810_LDW</name> <init>= <expr><literal type="number">0x33</literal></expr></init></decl>,
<decl><name>V810_STB</name> <init>= <expr><literal type="number">0x34</literal></expr></init></decl>,
<decl><name>V810_STH</name> <init>= <expr><literal type="number">0x35</literal></expr></init></decl>,
<decl><name>V810_STW</name> <init>= <expr><literal type="number">0x37</literal></expr></init></decl>,
<decl><name>V810_INB</name> <init>= <expr><literal type="number">0x38</literal></expr></init></decl>,
<decl><name>V810_INH</name> <init>= <expr><literal type="number">0x39</literal></expr></init></decl>,
<decl><name>V810_CAXI</name> <init>= <expr><literal type="number">0x3A</literal></expr></init></decl>,
<decl><name>V810_INW</name> <init>= <expr><literal type="number">0x3B</literal></expr></init></decl>,
<decl><name>V810_OUTB</name> <init>= <expr><literal type="number">0x3C</literal></expr></init></decl>,
<decl><name>V810_OUTH</name> <init>= <expr><literal type="number">0x3D</literal></expr></init></decl>,
<decl><name>V810_EXT</name> <init>= <expr><literal type="number">0x3E</literal></expr></init></decl>,
<decl><name>V810_OUTW</name> <init>= <expr><literal type="number">0x3F</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>v810_bit_ops</name> <block>{
<decl><name>V810_BIT_SCH0U</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>V810_BIT_SCH0D</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>V810_BIT_SCH1U</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>,
<decl><name>V810_BIT_SCH1D</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>V810_BIT_ORU</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl>,
<decl><name>V810_BIT_ANDU</name> <init>= <expr><literal type="number">0x9</literal></expr></init></decl>,
<decl><name>V810_BIT_XORU</name> <init>= <expr><literal type="number">0xA</literal></expr></init></decl>,
<decl><name>V810_BIT_MOVU</name> <init>= <expr><literal type="number">0xB</literal></expr></init></decl>,
<decl><name>V810_BIT_ORNU</name> <init>= <expr><literal type="number">0xC</literal></expr></init></decl>,
<decl><name>V810_BIT_ANDNU</name> <init>= <expr><literal type="number">0xD</literal></expr></init></decl>,
<decl><name>V810_BIT_XORNU</name> <init>= <expr><literal type="number">0xE</literal></expr></init></decl>,
<decl><name>V810_BIT_NOTU</name> <init>= <expr><literal type="number">0xF</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>v810_ext_ops</name> <block>{
<decl><name>V810_EXT_CMPF_S</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>V810_EXT_CVT_WS</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>,
<decl><name>V810_EXT_CVT_SW</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>V810_EXT_ADDF_S</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>V810_EXT_SUBF_S</name> <init>= <expr><literal type="number">0x5</literal></expr></init></decl>,
<decl><name>V810_EXT_MULF_S</name> <init>= <expr><literal type="number">0x6</literal></expr></init></decl>,
<decl><name>V810_EXT_DIVF_S</name> <init>= <expr><literal type="number">0x7</literal></expr></init></decl>,
<decl><name>V810_EXT_XB</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl>,
<decl><name>V810_EXT_XH</name> <init>= <expr><literal type="number">0x9</literal></expr></init></decl>,
<decl><name>V810_EXT_REV</name> <init>= <expr><literal type="number">0xA</literal></expr></init></decl>,
<decl><name>V810_EXT_TRNC_SW</name> <init>= <expr><literal type="number">0xB</literal></expr></init></decl>,
<decl><name>V810_EXT_MPYHW</name> <init>= <expr><literal type="number">0xC</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>v810_conds</name> <block>{
<decl><name>V810_COND_V</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>V810_COND_L</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>V810_COND_E</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>,
<decl><name>V810_COND_NH</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>V810_COND_N</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>V810_COND_NONE</name> <init>= <expr><literal type="number">0x5</literal></expr></init></decl>,
<decl><name>V810_COND_LT</name> <init>= <expr><literal type="number">0x6</literal></expr></init></decl>,
<decl><name>V810_COND_LE</name> <init>= <expr><literal type="number">0x7</literal></expr></init></decl>,
<decl><name>V810_COND_NV</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl>,
<decl><name>V810_COND_NL</name> <init>= <expr><literal type="number">0x9</literal></expr></init></decl>,
<decl><name>V810_COND_NE</name> <init>= <expr><literal type="number">0xA</literal></expr></init></decl>,
<decl><name>V810_COND_H</name> <init>= <expr><literal type="number">0xB</literal></expr></init></decl>,
<decl><name>V810_COND_P</name> <init>= <expr><literal type="number">0xC</literal></expr></init></decl>,
<decl><name>V810_COND_NOP</name> <init>= <expr><literal type="number">0xD</literal></expr></init></decl>,
<decl><name>V810_COND_GE</name> <init>= <expr><literal type="number">0xE</literal></expr></init></decl>,
<decl><name>V810_COND_GT</name> <init>= <expr><literal type="number">0xF</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>v810_sysregs</name> <block>{
<decl><name>V810_SREG_EIPC</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>,
<decl><name>V810_SREG_EIPSW</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>V810_SREG_FEPC</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>,
<decl><name>V810_SREG_FEPSW</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>V810_SREG_ECR</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>V810_SREG_PSW</name> <init>= <expr><literal type="number">0x5</literal></expr></init></decl>,
<decl><name>V810_SREG_PIR</name> <init>= <expr><literal type="number">0x6</literal></expr></init></decl>,
<decl><name>V810_SREG_TKCW</name> <init>= <expr><literal type="number">0x7</literal></expr></init></decl>,
<decl><name>V810_SREG_CHCW</name> <init>= <expr><literal type="number">0x18</literal></expr></init></decl>,
<decl><name>V810_SREG_ADTRE</name> <init>= <expr><literal type="number">0x19</literal></expr></init></decl>,
}</block>;</enum>

<struct>struct <name>v810_cmd</name> <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>instr</name><index>[<expr><name>V810_INSTR_MAXLEN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>operands</name><index>[<expr><name>V810_INSTR_MAXLEN</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>v810_decode_command</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>instr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>v810_cmd</name></name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
