<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\msp430\msp430_disas.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>MSP430_DISAS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSP430_DISAS_H</name></cpp:macro></cpp:define>

<enum>enum <name>msp430_oneop_opcodes</name> <block>{
<decl><name>MSP430_RRC</name></decl>,
<decl><name>MSP430_SWPB</name></decl>,
<decl><name>MSP430_RRA</name></decl>,
<decl><name>MSP430_SXT</name></decl>,
<decl><name>MSP430_PUSH</name></decl>,
<decl><name>MSP430_CALL</name></decl>,
<decl><name>MSP430_RETI</name></decl>,
<decl><name>MSP430_UNUSED</name></decl>,
}</block>;</enum>

<enum>enum <name>msp430_jumps</name> <block>{
<decl><name>MSP430_JNE</name></decl>,
<decl><name>MSP430_JEQ</name></decl>,
<decl><name>MSP430_JNC</name></decl>,
<decl><name>MSP430_JC</name></decl>,
<decl><name>MSP430_JN</name></decl>,
<decl><name>MSP430_JGE</name></decl>,
<decl><name>MSP430_JL</name></decl>,
<decl><name>MSP430_JMP</name></decl>,
}</block>;</enum>

<enum>enum <name>msp430_twoop_opcodes</name> <block>{
<decl><name>MSP430_JMP_OPC</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>MSP430_MOV</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>MSP430_ADD</name></decl>,
<decl><name>MSP430_ADDC</name></decl>,
<decl><name>MSP430_SUBC</name></decl>,
<decl><name>MSP430_SUB</name></decl>,
<decl><name>MSP430_CMP</name></decl>,
<decl><name>MSP430_DADD</name></decl>,
<decl><name>MSP430_BIT</name></decl>,
<decl><name>MSP430_BIC</name></decl>,
<decl><name>MSP430_BIS</name></decl>,
<decl><name>MSP430_XOR</name></decl>,
<decl><name>MSP430_AND</name></decl>,
}</block>;</enum>

<enum>enum <name>msp430_addr_modes</name> <block>{
<decl><name>MSP430_DIRECT</name></decl>,
<decl><name>MSP430_INDEXED</name></decl>,
<decl><name>MSP430_INDIRECT</name></decl>,
<decl><name>MSP430_INDIRECT_INC</name></decl>,
}</block>;</enum>

<enum>enum <name>msp430_cmd_type</name> <block>{
<decl><name>MSP430_ONEOP</name></decl>,
<decl><name>MSP430_TWOOP</name></decl>,
<decl><name>MSP430_JUMP</name></decl>,
<decl><name>MSP430_INV</name></decl>,
}</block>;</enum>

<enum>enum <name>msp430_registers</name> <block>{
<decl><name>MSP430_PC</name></decl>,
<decl><name>MSP430_SP</name></decl>,
<decl><name>MSP430_SR</name></decl>,
<decl><name>MSP430_R3</name></decl>,
<decl><name>MSP430_R4</name></decl>,
<decl><name>MSP430_R5</name></decl>,
<decl><name>MSP430_R6</name></decl>,
<decl><name>MSP430_R7</name></decl>,
<decl><name>MSP430_R8</name></decl>,
<decl><name>MSP430_R9</name></decl>,
<decl><name>MSP430_R10</name></decl>,
<decl><name>MSP430_R11</name></decl>,
<decl><name>MSP430_R12</name></decl>,
<decl><name>MSP430_R13</name></decl>,
<decl><name>MSP430_R14</name></decl>,
<decl><name>MSP430_R15</name></decl>,
}</block>;</enum>

<struct>struct <name>msp430_cmd</name> <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>opcode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st16</name></type> <name>jmp_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>call_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>jmp_cond</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>char</name></type> <name><name>instr</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>char</name></type> <name><name>operands</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">3</literal><operator>)</operator> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>msp430_decode_command</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>instr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>msp430_cmd</name></name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
