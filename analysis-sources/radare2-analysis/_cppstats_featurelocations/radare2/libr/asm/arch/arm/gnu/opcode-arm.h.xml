<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\arm\gnu\opcode-arm.h">




















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V1</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V2</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V2S</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V3</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V3M</name></cpp:macro> <cpp:value>0x00000010</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V4</name></cpp:macro> <cpp:value>0x00000020</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V4T</name></cpp:macro> <cpp:value>0x00000040</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V5</name></cpp:macro> <cpp:value>0x00000080</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V5T</name></cpp:macro> <cpp:value>0x00000100</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V5ExP</name></cpp:macro> <cpp:value>0x00000200</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V5E</name></cpp:macro> <cpp:value>0x00000400</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V5J</name></cpp:macro> <cpp:value>0x00000800</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V6</name></cpp:macro> <cpp:value>0x00001000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V6K</name></cpp:macro> <cpp:value>0x00002000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V8</name></cpp:macro> <cpp:value>0x00004000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V6T2</name></cpp:macro> <cpp:value>0x00008000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_DIV</name></cpp:macro> <cpp:value>0x00010000</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V5E_NOTM</name></cpp:macro> <cpp:value>0x00020000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V6_NOTM</name></cpp:macro> <cpp:value>0x00040000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V7</name></cpp:macro> <cpp:value>0x00080000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V7A</name></cpp:macro> <cpp:value>0x00100000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V7R</name></cpp:macro> <cpp:value>0x00200000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V7M</name></cpp:macro> <cpp:value>0x00400000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V6M</name></cpp:macro> <cpp:value>0x00800000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_BARRIER</name></cpp:macro> <cpp:value>0x01000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_THUMB_MSR</name></cpp:macro> <cpp:value>0x02000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_V6_DSP</name></cpp:macro> <cpp:value>0x04000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_MP</name></cpp:macro> <cpp:value>0x08000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_SEC</name></cpp:macro> <cpp:value>0x10000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_OS</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_ADIV</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT_VIRT</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_PAN</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_V8_2A</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_V8M</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_ATOMICS</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_V6T2_V8M</name></cpp:macro> <cpp:value>0x00000010</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_FP16_INST</name></cpp:macro> <cpp:value>0x00000020</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_V8M_MAIN</name></cpp:macro> <cpp:value>0x00000040</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_RAS</name></cpp:macro> <cpp:value>0x00000080</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_EXT2_V8_3A</name></cpp:macro> <cpp:value>0x00000100</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_CEXT_XSCALE</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_CEXT_MAVERICK</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_CEXT_IWMMXT</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_CEXT_IWMMXT2</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ENDIAN_PURE</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ENDIAN_BIG</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_FPA_EXT_V1</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_FPA_EXT_V2</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_MAVERICK</name></cpp:macro> <cpp:value>0x10000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_V1xD</name></cpp:macro> <cpp:value>0x08000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_V1</name></cpp:macro> <cpp:value>0x04000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_V2</name></cpp:macro> <cpp:value>0x02000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_V3xD</name></cpp:macro> <cpp:value>0x01000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_V3</name></cpp:macro> <cpp:value>0x00800000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_NEON_EXT_V1</name></cpp:macro> <cpp:value>0x00400000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_D32</name></cpp:macro> <cpp:value>0x00200000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_FP16</name></cpp:macro> <cpp:value>0x00100000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_NEON_EXT_FMA</name></cpp:macro> <cpp:value>0x00080000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_FMA</name></cpp:macro> <cpp:value>0x00040000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_ARMV8</name></cpp:macro> <cpp:value>0x00020000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_NEON_EXT_ARMV8</name></cpp:macro> <cpp:value>0x00010000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_CRYPTO_EXT_ARMV8</name></cpp:macro> <cpp:value>0x00008000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CRC_EXT_ARMV8</name></cpp:macro> <cpp:value>0x00004000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_EXT_ARMV8xD</name></cpp:macro> <cpp:value>0x00002000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_NEON_EXT_RDMA</name></cpp:macro> <cpp:value>0x00001000</cpp:value></cpp:define> 






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V1</name></cpp:macro> <cpp:value>ARM_EXT_V1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V2</name></cpp:macro> <cpp:value>(ARM_AEXT_V1 | ARM_EXT_V2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V2S</name></cpp:macro> <cpp:value>(ARM_AEXT_V2 | ARM_EXT_V2S)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V3</name></cpp:macro> <cpp:value>(ARM_AEXT_V2S | ARM_EXT_V3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V3M</name></cpp:macro> <cpp:value>(ARM_AEXT_V3 | ARM_EXT_V3M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V4xM</name></cpp:macro> <cpp:value>(ARM_AEXT_V3 | ARM_EXT_V4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V4</name></cpp:macro> <cpp:value>(ARM_AEXT_V3M | ARM_EXT_V4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V4TxM</name></cpp:macro> <cpp:value>(ARM_AEXT_V4xM | ARM_EXT_V4T)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V4T</name></cpp:macro> <cpp:value>(ARM_AEXT_V4 | ARM_EXT_V4T)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V5xM</name></cpp:macro> <cpp:value>(ARM_AEXT_V4xM | ARM_EXT_V5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V5</name></cpp:macro> <cpp:value>(ARM_AEXT_V4 | ARM_EXT_V5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V5TxM</name></cpp:macro> <cpp:value>(ARM_AEXT_V5xM | ARM_EXT_V4T | ARM_EXT_V5T)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V5T</name></cpp:macro> <cpp:value>(ARM_AEXT_V5 | ARM_EXT_V4T | ARM_EXT_V5T)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V5TExP</name></cpp:macro> <cpp:value>(ARM_AEXT_V5T | ARM_EXT_V5ExP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V5TE</name></cpp:macro> <cpp:value>(ARM_AEXT_V5TExP | ARM_EXT_V5E)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V5TEJ</name></cpp:macro> <cpp:value>(ARM_AEXT_V5TE | ARM_EXT_V5J)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6</name></cpp:macro> <cpp:value>(ARM_AEXT_V5TEJ | ARM_EXT_V6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6K</name></cpp:macro> <cpp:value>(ARM_AEXT_V6 | ARM_EXT_V6K)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6Z</name></cpp:macro> <cpp:value>(ARM_AEXT_V6K | ARM_EXT_SEC)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6KZ</name></cpp:macro> <cpp:value>(ARM_AEXT_V6K | ARM_EXT_SEC)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6T2</name></cpp:macro> <cpp:value>(ARM_AEXT_V6 | ARM_EXT_V6T2 | ARM_EXT_V6_NOTM | ARM_EXT_THUMB_MSR | ARM_EXT_V6_DSP )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6KT2</name></cpp:macro> <cpp:value>(ARM_AEXT_V6T2 | ARM_EXT_V6K)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6ZT2</name></cpp:macro> <cpp:value>(ARM_AEXT_V6T2 | ARM_EXT_SEC)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6KZT2</name></cpp:macro> <cpp:value>(ARM_AEXT_V6T2 | ARM_EXT_V6K | ARM_EXT_SEC)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V7_ARM</name></cpp:macro> <cpp:value>(ARM_AEXT_V6KT2 | ARM_EXT_V7 | ARM_EXT_BARRIER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V7A</name></cpp:macro> <cpp:value>(ARM_AEXT_V7_ARM | ARM_EXT_V7A)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V7VE</name></cpp:macro> <cpp:value>(ARM_AEXT_V7A | ARM_EXT_DIV | ARM_EXT_ADIV | ARM_EXT_VIRT | ARM_EXT_SEC | ARM_EXT_MP)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V7R</name></cpp:macro> <cpp:value>(ARM_AEXT_V7_ARM | ARM_EXT_V7R | ARM_EXT_DIV)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_NOTM</name></cpp:macro> <cpp:value>(ARM_AEXT_V4 | ARM_EXT_V5ExP | ARM_EXT_V5J | ARM_EXT_V6_NOTM | ARM_EXT_V6_DSP )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6M_ONLY</name></cpp:macro> <cpp:value>((ARM_EXT_BARRIER | ARM_EXT_V6M | ARM_EXT_THUMB_MSR) &amp; ~(ARM_AEXT_NOTM))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6M</name></cpp:macro> <cpp:value>((ARM_AEXT_V6K | ARM_AEXT_V6M_ONLY) &amp; ~(ARM_AEXT_NOTM))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V6SM</name></cpp:macro> <cpp:value>(ARM_AEXT_V6M | ARM_EXT_OS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V7M</name></cpp:macro> <cpp:value>((ARM_AEXT_V7_ARM | ARM_EXT_V6M | ARM_EXT_V7M | ARM_EXT_DIV) &amp; ~(ARM_AEXT_NOTM))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V7</name></cpp:macro> <cpp:value>(ARM_AEXT_V7A &amp; ARM_AEXT_V7R &amp; ARM_AEXT_V7M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V7EM</name></cpp:macro> <cpp:value>(ARM_AEXT_V7M | ARM_EXT_V5ExP | ARM_EXT_V6_DSP)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V8A</name></cpp:macro> <cpp:value>(ARM_AEXT_V7A | ARM_EXT_MP | ARM_EXT_SEC | ARM_EXT_DIV | ARM_EXT_ADIV | ARM_EXT_VIRT | ARM_EXT_V8)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT2_V8A</name></cpp:macro> <cpp:value>(ARM_EXT2_V6T2_V8M | ARM_EXT2_ATOMICS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT2_V8_1A</name></cpp:macro> <cpp:value>(ARM_AEXT2_V8A | ARM_EXT2_PAN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT2_V8_2A</name></cpp:macro> <cpp:value>(ARM_AEXT2_V8_1A | ARM_EXT2_V8_2A | ARM_EXT2_RAS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT2_V8_3A</name></cpp:macro> <cpp:value>(ARM_AEXT2_V8_2A | ARM_EXT2_V8_3A)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V8M_BASE</name></cpp:macro> <cpp:value>(ARM_AEXT_V6SM | ARM_EXT_DIV)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V8M_MAIN</name></cpp:macro> <cpp:value>ARM_AEXT_V7M</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT_V8M_MAIN_DSP</name></cpp:macro> <cpp:value>ARM_AEXT_V7EM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT2_V8M</name></cpp:macro> <cpp:value>(ARM_EXT2_V8M | ARM_EXT2_ATOMICS | ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT2_V8M_MAIN</name></cpp:macro> <cpp:value>(ARM_AEXT2_V8M | ARM_EXT2_V8M_MAIN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_AEXT2_V8M_MAIN_DSP</name></cpp:macro> <cpp:value>ARM_AEXT2_V8M_MAIN</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_XSCALE</name></cpp:macro> <cpp:value>ARM_FEATURE_LOW (ARM_AEXT_V5TE, ARM_CEXT_XSCALE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_IWMMXT</name></cpp:macro> <cpp:value>ARM_FEATURE_LOW (ARM_AEXT_V5TE, ARM_CEXT_XSCALE | ARM_CEXT_IWMMXT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_IWMMXT2</name></cpp:macro> <cpp:value>ARM_FEATURE_LOW (ARM_AEXT_V5TE, ARM_CEXT_XSCALE | ARM_CEXT_IWMMXT | ARM_CEXT_IWMMXT2)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V1xD</name></cpp:macro> <cpp:value>(FPU_VFP_EXT_V1xD | FPU_ENDIAN_PURE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V1</name></cpp:macro> <cpp:value>(FPU_VFP_V1xD | FPU_VFP_EXT_V1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V2</name></cpp:macro> <cpp:value>(FPU_VFP_V1 | FPU_VFP_EXT_V2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V3D16</name></cpp:macro> <cpp:value>(FPU_VFP_V2 | FPU_VFP_EXT_V3xD | FPU_VFP_EXT_V3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V3</name></cpp:macro> <cpp:value>(FPU_VFP_V3D16 | FPU_VFP_EXT_D32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V3xD</name></cpp:macro> <cpp:value>(FPU_VFP_V1xD | FPU_VFP_EXT_V2 | FPU_VFP_EXT_V3xD)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V4D16</name></cpp:macro> <cpp:value>(FPU_VFP_V3D16 | FPU_VFP_EXT_FP16 | FPU_VFP_EXT_FMA)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V4</name></cpp:macro> <cpp:value>(FPU_VFP_V3 | FPU_VFP_EXT_FP16 | FPU_VFP_EXT_FMA)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V4_SP_D16</name></cpp:macro> <cpp:value>(FPU_VFP_V3xD | FPU_VFP_EXT_FP16 | FPU_VFP_EXT_FMA)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V5D16</name></cpp:macro> <cpp:value>(FPU_VFP_V4D16 | FPU_VFP_EXT_ARMV8xD | FPU_VFP_EXT_ARMV8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_V5_SP_D16</name></cpp:macro> <cpp:value>(FPU_VFP_V4_SP_D16 | FPU_VFP_EXT_ARMV8xD)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_ARMV8</name></cpp:macro> <cpp:value>(FPU_VFP_V4 | FPU_VFP_EXT_ARMV8 | FPU_VFP_EXT_ARMV8xD)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_NEON_ARMV8</name></cpp:macro> <cpp:value>(FPU_NEON_EXT_V1 | FPU_NEON_EXT_FMA | FPU_NEON_EXT_ARMV8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_CRYPTO_ARMV8</name></cpp:macro> <cpp:value>(FPU_CRYPTO_EXT_ARMV8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_VFP_HARD</name></cpp:macro> <cpp:value>(FPU_VFP_EXT_V1xD | FPU_VFP_EXT_V1 | FPU_VFP_EXT_V2 | FPU_VFP_EXT_V3xD | FPU_VFP_EXT_FMA | FPU_NEON_EXT_FMA | FPU_VFP_EXT_V3 | FPU_NEON_EXT_V1 | FPU_VFP_EXT_D32)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_FPA</name></cpp:macro> <cpp:value>(FPU_FPA_EXT_V1 | FPU_FPA_EXT_V2)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_ENDIAN_PURE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_FPE</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_FPA_EXT_V1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_FPA</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_FPA)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V1xD</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V1xD)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V1</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V2</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V3D16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3D16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V3D16_FP16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3D16 | FPU_VFP_EXT_FP16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V3</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V3_FP16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3 | FPU_VFP_EXT_FP16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V3xD</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3xD)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V3xD_FP16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3xD | FPU_VFP_EXT_FP16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_NEON_V1</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_NEON_EXT_V1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V3_PLUS_NEON_V1</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3 | FPU_NEON_EXT_V1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_NEON_FP16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V3 | FPU_NEON_EXT_V1 | FPU_VFP_EXT_FP16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_HARD</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_HARD)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V4</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V4D16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V4D16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V4_SP_D16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V4_SP_D16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V5D16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V5D16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_V5_SP_D16</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V5_SP_D16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_NEON_VFP_V4</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_V4 | FPU_NEON_EXT_V1 | FPU_NEON_EXT_FMA)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_VFP_ARMV8</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_VFP_ARMV8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_NEON_VFP_ARMV8</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_NEON_ARMV8 | FPU_VFP_ARMV8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_CRYPTO_NEON_VFP_ARMV8</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_CRYPTO_ARMV8 | FPU_NEON_ARMV8 | FPU_VFP_ARMV8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARCH_CRC_ARMV8</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (CRC_EXT_ARMV8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_NEON_VFP_ARMV8_1</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_NEON_ARMV8 | FPU_VFP_ARMV8 | FPU_NEON_EXT_RDMA)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_CRYPTO_ARMV8 | FPU_NEON_ARMV8 | FPU_VFP_ARMV8 | FPU_NEON_EXT_RDMA)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_ENDIAN_PURE</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_ENDIAN_PURE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ARCH_MAVERICK</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_MAVERICK)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V1</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V2</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V2S</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V2S)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V3</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V3M</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V3M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V4xM</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V4xM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V4</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V4TxM</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V4TxM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V4T</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V4T)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V5xM</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V5xM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V5</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V5TxM</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V5TxM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V5T</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V5T)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V5TExP</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V5TExP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V5TE</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V5TE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V5TEJ</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V5TEJ)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6K</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V6K)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6Z</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V6Z)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6KZ</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V6KZ)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6T2</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V6T2, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6KT2</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V6KT2, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6ZT2</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V6ZT2, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6KZT2</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V6KZT2, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6M</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V6M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6SM</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V6SM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7A</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7A, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7VE</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7VE, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7R</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7R, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7M</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7M, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7EM</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7EM, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8A</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V8A, ARM_AEXT2_V8A)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8A_CRC</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8A, CRC_EXT_ARMV8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8_1A</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_1A, CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8_2A</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_2A, CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8_3A</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_3A, CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8M_BASE</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V8M_BASE, ARM_AEXT2_V8M)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8M_MAIN</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V8M_MAIN, ARM_AEXT2_V8M_MAIN)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8M_MAIN_DSP</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V8M_MAIN_DSP, ARM_AEXT2_V8M_MAIN_DSP)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_NONE</name></cpp:macro> <cpp:value>ARM_FEATURE_LOW (0, 0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_NONE</name></cpp:macro> <cpp:value>ARM_FEATURE_LOW (0, 0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ANY</name></cpp:macro> <cpp:value>ARM_FEATURE (-1, -1, 0)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_ALL</name></cpp:macro> <cpp:value>ARM_FEATURE (-1, -1, -1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FPU_ANY_HARD</name></cpp:macro> <cpp:value>ARM_FEATURE_COPROC (FPU_FPA | FPU_VFP_HARD | FPU_MAVERICK)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_THUMB2</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_EXT_V6T2 | ARM_EXT_V7 | ARM_EXT_DIV | ARM_EXT_V8, ARM_EXT2_ATOMICS | ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7A_SEC</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7A | ARM_EXT_SEC, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7A_MP_SEC</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7A | ARM_EXT_MP | ARM_EXT_SEC, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V7R_IDIV</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE (ARM_AEXT_V7R | ARM_EXT_ADIV, ARM_EXT2_V6T2_V8M)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V6M_ONLY</name></cpp:macro> <cpp:value>ARM_FEATURE_CORE_LOW (ARM_AEXT_V6M_ONLY)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8A_FP</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8A, FPU_ARCH_VFP_ARMV8)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8A_SIMD</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8A, FPU_ARCH_NEON_VFP_ARMV8)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8A_CRYPTOV1</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8A, FPU_ARCH_CRYPTO_NEON_VFP_ARMV8)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8_1A_FP</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_1A, FPU_ARCH_VFP_ARMV8)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8_1A_SIMD</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_1A, FPU_ARCH_NEON_VFP_ARMV8_1)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_ARCH_V8_1A_CRYPTOV1</name></cpp:macro> <cpp:value>ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_1A, FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1)</cpp:value></cpp:define>








<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name><name>core</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>coproc</name></decl>;</decl_stmt>
}</block></struct></type> <name>arm_feature_set</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_CPU_HAS_FEATURE</name><parameter_list>(<parameter><type><name>CPU</name></type></parameter>,<parameter><type><name>FEAT</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((CPU).core[0] &amp; (FEAT).core[0]) != 0 || ((CPU).core[1] &amp; (FEAT).core[1]) != 0 || ((CPU).coproc &amp; (FEAT).coproc) != 0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FSET_CPU_SUBSET</name><parameter_list>(<parameter><type><name>A</name></type></parameter>,<parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((A).core[0] &amp; (B).core[0]) == (A).core[0] &amp;&amp; ((A).core[1] &amp; (B).core[1]) == (A).core[1] &amp;&amp; ((A).coproc &amp; (B).coproc) == (A).coproc)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_CPU_IS_ANY</name><parameter_list>(<parameter><type><name>CPU</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((CPU).core[0] == ((arm_feature_set)ARM_ANY).core[0] &amp;&amp; (CPU).core[1] == ((arm_feature_set)ARM_ANY).core[1])</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_MERGE_FEATURE_SETS</name><parameter_list>(<parameter><type><name>TARG</name></type></parameter>,<parameter><type><name>F1</name></type></parameter>,<parameter><type><name>F2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { (TARG).core[0] = (F1).core[0] | (F2).core[0];(TARG).core[1] = (F1).core[1] | (F2).core[1];(TARG).coproc = (F1).coproc | (F2).coproc; } while (0)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_CLEAR_FEATURE</name><parameter_list>(<parameter><type><name>TARG</name></type></parameter>,<parameter><type><name>F1</name></type></parameter>,<parameter><type><name>F2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { (TARG).core[0] = (F1).core[0] &amp;~ (F2).core[0];(TARG).core[1] = (F1).core[1] &amp;~ (F2).core[1];(TARG).coproc = (F1).coproc &amp;~ (F2).coproc; } while (0)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_COPY</name><parameter_list>(<parameter><type><name>F1</name></type></parameter>, <parameter><type><name>F2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { (F1).core[0] = (F2).core[0]; (F1).core[1] = (F2).core[1]; (F1).coproc = (F2).coproc; } while (0)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_EQUAL</name><parameter_list>(<parameter><type><name>T1</name></type></parameter>,<parameter><type><name>T2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((T1).core[0] == (T2).core[0] &amp;&amp; (T1).core[1] == (T2).core[1] &amp;&amp; (T1).coproc == (T2).coproc)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_ZERO</name><parameter_list>(<parameter><type><name>T</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((T).core[0] == 0 &amp;&amp; (T).core[1] == 0 &amp;&amp; (T).coproc == 0)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_CORE_EQUAL</name><parameter_list>(<parameter><type><name>T1</name></type></parameter>, <parameter><type><name>T2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((T1).core[0] == (T2).core[0] &amp;&amp; (T1).core[1] == (T2).core[1])</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_LOW</name><parameter_list>(<parameter><type><name>core</name></type></parameter>, <parameter><type><name>coproc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{{(core), 0}, (coproc)}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_CORE</name><parameter_list>(<parameter><type><name>core1</name></type></parameter>, <parameter><type><name>core2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{{(core1), (core2)}, 0}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_CORE_LOW</name><parameter_list>(<parameter><type><name>core</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{{(core), 0}, 0}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_CORE_HIGH</name><parameter_list>(<parameter><type><name>core</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{{0, (core)}, 0}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE_COPROC</name><parameter_list>(<parameter><type><name>coproc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{{0, 0}, (coproc)}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FEATURE</name><parameter_list>(<parameter><type><name>core1</name></type></parameter>, <parameter><type><name>core2</name></type></parameter>, <parameter><type><name>coproc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{{(core1), (core2)}, (coproc)}</cpp:value></cpp:define>
</unit>
