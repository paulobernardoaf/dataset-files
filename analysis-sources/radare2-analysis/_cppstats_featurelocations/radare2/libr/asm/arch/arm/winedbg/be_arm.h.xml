<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\arm\winedbg\be_arm.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_INCLUDE_WINEDBG_BE_ARM_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_INCLUDE_WINEDBG_BE_ARM_H_</name></cpp:macro></cpp:define>

<struct>struct <name>winedbg_arm_insn</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>pc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>thumb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>str_asm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>str_hex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>jmp</name></decl>, <decl><type ref="prev"/><name>fail</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>arm_disasm_one_insn</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name> <modifier>*</modifier></type><name>arminsn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>arm_set_pc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name> <modifier>*</modifier></type><name>arminsn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>arm_set_input_buffer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name> <modifier>*</modifier></type><name>arminsn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>arm_set_thumb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name> <modifier>*</modifier></type><name>arminsn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>thumb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name><modifier>*</modifier></type> <name>winedbg_arm_insn_asm</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name> <modifier>*</modifier></type><name>arminsn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name><modifier>*</modifier></type> <name>winedbg_arm_insn_hex</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name> <modifier>*</modifier></type><name>arminsn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name><modifier>*</modifier></type> <name>arm_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name> <modifier>*</modifier></type><name>arminsn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>winedbg_arm_insn</name></name><modifier>*</modifier></type> <name>arm_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
