<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\asm\arch\or1k\or1k_disas.c">

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_anal.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"or1k_disas.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>insn_type_descr_t</name></type> <name><name>types</name><index>[]</index></name> <init>= <expr><block>{
<expr><index>[<expr><name>INSN_X</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_X</name></expr>, <expr><literal type="string">"%s"</literal></expr>,
<expr><block>{<expr><block>{
<expr><literal type="number">0</literal></expr>
}</block></expr>}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_KABK</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_KABK</name></expr>, <expr><literal type="string">"%s r%d, r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_K1</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_K1</name></expr>, <expr><name>INSN_K1_MASK</name></expr>, <expr><name>INSN_K1_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_B</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_B</name></expr>, <expr><name>INSN_B_MASK</name></expr>, <expr><name>INSN_B_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_K2</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_K2</name></expr>, <expr><name>INSN_K2_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_IABI</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_IABI</name></expr>, <expr><literal type="string">"%s r%d, r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_K1</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_K1</name></expr>, <expr><name>INSN_K1_MASK</name></expr>, <expr><name>INSN_K1_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_B</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_B</name></expr>, <expr><name>INSN_B_MASK</name></expr>, <expr><name>INSN_B_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_K2</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_K2</name></expr>, <expr><name>INSN_K2_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_N</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_N</name></expr>, <expr><literal type="string">"%s 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_N</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_N</name></expr>, <expr><name>INSN_N_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_K</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_K</name></expr>, <expr><literal type="string">"%s 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_K</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_K</name></expr>, <expr><name>INSN_K_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_DK</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_DK</name></expr>, <expr><literal type="string">"%s r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_K</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_K</name></expr>, <expr><name>INSN_K_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_DN</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_DN</name></expr>, <expr><literal type="string">"%s r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_N</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_N</name></expr>, <expr><name>INSN_N_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_B</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_B</name></expr>, <expr><literal type="string">"%s r%d"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_B</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_B</name></expr>, <expr><name>INSN_B_MASK</name></expr>, <expr><name>INSN_B_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_D</name></expr>, <expr><literal type="string">"%s r%d"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_AI</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_AI</name></expr>, <expr><literal type="string">"%s r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_I</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_I</name></expr>, <expr><name>INSN_I_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_DAI</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_DAI</name></expr>, <expr><literal type="string">"%s r%d, r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_I</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_I</name></expr>, <expr><name>INSN_I_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_DAK</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_DAK</name></expr>, <expr><literal type="string">"%s r%d, r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_I</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_I</name></expr>, <expr><name>INSN_I_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_DAL</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_DAL</name></expr>, <expr><literal type="string">"%s r%d, r%d, 0x%x"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_L</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_L</name></expr>, <expr><name>INSN_L_MASK</name></expr>, <expr><name>INSN_EMPTY_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_DA</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_DA</name></expr>, <expr><literal type="string">"%s r%d, r%d"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_DAB</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_DAB</name></expr>, <expr><literal type="string">"%s r%d, r%d, r%d"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_D</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_D</name></expr>, <expr><name>INSN_D_MASK</name></expr>, <expr><name>INSN_D_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_B</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_B</name></expr>, <expr><name>INSN_B_MASK</name></expr>, <expr><name>INSN_B_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,

<expr><index>[<expr><name>INSN_AB</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_AB</name></expr>, <expr><literal type="string">"%s r%d, r%d"</literal></expr>,
<expr><block>{
<expr><index>[<expr><name>INSN_OPER_A</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_A</name></expr>, <expr><name>INSN_A_MASK</name></expr>, <expr><name>INSN_A_SHIFT</name></expr>}</block></expr>,
<expr><index>[<expr><name>INSN_OPER_B</name></expr>]</index> <operator>=</operator> <block>{<expr><name>INSN_OPER_B</name></expr>, <expr><name>INSN_B_MASK</name></expr>, <expr><name>INSN_B_SHIFT</name></expr>}</block></expr>
}</block></expr>
}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>types_count</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>types</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>insn_type_descr_t</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x5</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x05</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01</literal><operator>&lt;&lt;</operator><literal type="number">24</literal><operator>)</operator></expr>, <expr><literal type="string">"l.nop"</literal></expr>, <expr><name>INSN_K</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11</literal> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator></expr>, <expr><name>R_ANAL_OP_TYPE_NOP</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x6</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x06</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator></expr>, <expr><literal type="string">"l.movhi"</literal></expr>, <expr><name>INSN_DK</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x06</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator></expr>, <expr><literal type="string">"l.macrc"</literal></expr>, <expr><name>INSN_D</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x8</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x08</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000000000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sys"</literal></expr>, <expr><name>INSN_K</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <literal type="number">0b1111111111</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x08</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0100000000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.trap"</literal></expr>, <expr><name>INSN_K</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <literal type="number">0b1111111111</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x08</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b10000000000000000000000000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.msync"</literal></expr>, <expr><name>INSN_X</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <literal type="number">0x3ffffff</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x08</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b10100000000000000000000000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.psync"</literal></expr>, <expr><name>INSN_X</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <literal type="number">0x3ffffff</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x08</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11000000000000000000000000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.csync"</literal></expr>, <expr><name>INSN_X</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <literal type="number">0x3ffffff</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x2e</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x2e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator></expr>, <expr><literal type="string">"l.slli"</literal></expr>, <expr><name>INSN_DAL</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator></expr>, <expr><literal type="string">"l.srli"</literal></expr>, <expr><name>INSN_DAL</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b10</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator></expr>, <expr><literal type="string">"l.srai"</literal></expr>, <expr><name>INSN_DAL</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator></expr>, <expr><literal type="string">"l.rori"</literal></expr>, <expr><name>INSN_DAL</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x2f</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfeqi"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfnei"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfgtui"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfgeui"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00100</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfltui"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfleui"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01010</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfgtsi"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>, 
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01011</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfgesi"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>, 
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01100</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfltsi"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>, 
<expr><block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01101</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sflesi"</literal></expr>, <expr><name>INSN_AI</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>, 
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x31</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x31</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0001</literal><operator>)</operator></expr>, <expr><literal type="string">"l.mac"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b1111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x31</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0011</literal><operator>)</operator></expr>, <expr><literal type="string">"l.macu"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b1111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x31</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0010</literal><operator>)</operator></expr>, <expr><literal type="string">"l.msb"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b1111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x31</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0100</literal><operator>)</operator></expr>, <expr><literal type="string">"l.msbu"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b1111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x32</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001000</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfeq.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001001</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfne.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001010</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfgt.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001011</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfge.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001100</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sflt.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001101</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfle.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011000</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfeq.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011001</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfne.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011010</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfgt.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011011</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfge.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011100</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sflt.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011101</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfle.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101000</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfueq.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101001</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfune.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101010</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfugt.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101011</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfuge.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101100</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfult.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101101</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfule.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101110</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfun.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00110100</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.stod.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00110101</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.dtos.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00111000</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfueq.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00111001</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfune.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00111010</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfugt.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00111011</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfuge.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00111100</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfult.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00111101</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfule.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00111110</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sfun.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1101</literal><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.cust1.s"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b1111</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1110</literal><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.cust1.d"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b1111</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000100</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.itof.s"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000101</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.ftoi.s"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010100</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.itof.d"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010101</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.ftoi.d"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000000</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.add.s"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000001</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sub.s"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000010</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.mul.s"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000011</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.div.s"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000111</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.madd.s"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010000</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.add.d"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010001</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.sub.d"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010010</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.mul.d"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010011</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.div.d"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010111</literal><operator>)</operator></expr>, <expr><literal type="string">"lf.madd.d"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111111</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x38</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1100</literal><operator>)</operator></expr>, <expr><literal type="string">"l.exths"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1101</literal><operator>)</operator></expr>, <expr><literal type="string">"l.extws"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0001</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1100</literal><operator>)</operator></expr>, <expr><literal type="string">"l.extbs"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0001</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1101</literal><operator>)</operator></expr>, <expr><literal type="string">"l.extwz"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0010</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1100</literal><operator>)</operator></expr>, <expr><literal type="string">"l.exthz"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0011</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1100</literal><operator>)</operator></expr>, <expr><literal type="string">"l.extbz"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.add"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0001</literal><operator>)</operator></expr>, <expr><literal type="string">"l.addc"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0010</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sub"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0011</literal><operator>)</operator></expr>, <expr><literal type="string">"l.and"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0100</literal><operator>)</operator></expr>, <expr><literal type="string">"l.or"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0101</literal><operator>)</operator></expr>, <expr><literal type="string">"l.xor"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1110</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cmov"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1111</literal><operator>)</operator></expr>, <expr><literal type="string">"l.ff1"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xc</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0000</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sll"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0001</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.srl"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0010</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sra"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0011</literal><operator>&lt;&lt;</operator><literal type="number">6</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1000</literal><operator>)</operator></expr>, <expr><literal type="string">"l.ror"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0xf</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01</literal><operator>&lt;&lt;</operator><literal type="number">8</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1111</literal><operator>)</operator></expr>, <expr><literal type="string">"l.fl1"</literal></expr>, <expr><name>INSN_DA</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0x3</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11</literal><operator>&lt;&lt;</operator><literal type="number">8</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0110</literal><operator>)</operator></expr>, <expr><literal type="string">"l.mul"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0x3</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11</literal><operator>&lt;&lt;</operator><literal type="number">8</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b0111</literal><operator>)</operator></expr>, <expr><literal type="string">"l.muld"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0x3</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11</literal><operator>&lt;&lt;</operator><literal type="number">8</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1001</literal><operator>)</operator></expr>, <expr><literal type="string">"l.div"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0x3</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11</literal><operator>&lt;&lt;</operator><literal type="number">8</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1010</literal><operator>)</operator></expr>, <expr><literal type="string">"l.divu"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0x3</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11</literal><operator>&lt;&lt;</operator><literal type="number">8</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1011</literal><operator>)</operator></expr>, <expr><literal type="string">"l.mulu"</literal></expr>, <expr><name>INSN_DAB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0x3</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b11</literal><operator>&lt;&lt;</operator><literal type="number">8</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b1100</literal><operator>)</operator></expr>, <expr><literal type="string">"l.muldu"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0x3</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <literal type="number">0xf</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_extra_t</name></type> <name><name>extra_0x39</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00000</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfeq"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00001</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfne"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00010</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfgtu"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00011</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfgeu"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00100</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfltu"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b00101</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfleu"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01010</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfgts"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01011</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfges"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01100</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sflts"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">0b01101</literal><operator>&lt;&lt;</operator><literal type="number">21</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sfles"</literal></expr>, <expr><name>INSN_AB</name></expr>, <expr><name>INSN_OPCODE_MASK</name> <operator>|</operator> <operator>(</operator><literal type="number">0b11111</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>insn_t</name></type> <name><name>or1k_insns</name><index>[]</index></name> <init>= <expr><block>{
<expr><index>[<expr><literal type="number">0x00</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x00</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.j"</literal></expr>, <expr><name>INSN_N</name></expr>, <expr><name>R_ANAL_OP_TYPE_JMP</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x01</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x01</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.jal"</literal></expr>, <expr><name>INSN_N</name></expr>, <expr><name>R_ANAL_OP_TYPE_CALL</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x02</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x02</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.adrp"</literal></expr>, <expr><name>INSN_DN</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x03</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x03</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.bnf"</literal></expr>, <expr><name>INSN_N</name></expr>, <expr><name>R_ANAL_OP_TYPE_CJMP</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x04</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x04</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.bf"</literal></expr>, <expr><name>INSN_N</name></expr>, <expr><name>R_ANAL_OP_TYPE_CJMP</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x05</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x05</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x5</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x06</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x06</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x6</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x07</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x07</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x08</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x08</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x8</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x09</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x09</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.rfe"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x0a</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x0a</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"lv.ext0a"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>, 
<expr><index>[<expr><literal type="number">0x0b</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x0b</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x0c</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x0c</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x0d</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x0d</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x0e</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x0e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x0f</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x0f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x10</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x10</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x11</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x11</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.jr"</literal></expr>, <expr><name>INSN_B</name></expr>, <expr><name>R_ANAL_OP_TYPE_JMP</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x12</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x12</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.jalr"</literal></expr>, <expr><name>INSN_B</name></expr>, <expr><name>R_ANAL_OP_TYPE_CALL</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x13</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x13</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.maci"</literal></expr>, <expr><name>INSN_AI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x14</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x14</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x15</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x15</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x16</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x16</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x17</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x17</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x18</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x18</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x19</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x19</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x1a</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x1a</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lf"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x1b</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x1b</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lwa"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x1c</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x1c</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust1"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x1d</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x1d</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust2"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x1e</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x1e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust3"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x1f</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x1f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust4"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x20</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x20</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.ld"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x21</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x21</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lwz"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x22</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x22</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lws"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x23</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x23</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lbz"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x24</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x24</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lbs"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x25</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x25</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lhz"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x26</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x26</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.lhs"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x27</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x27</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.addi"</literal></expr>, <expr><name>INSN_DAI</name></expr>, <expr><name>R_ANAL_OP_TYPE_LOAD</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x28</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x28</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.addic"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x29</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x29</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.andi"</literal></expr>, <expr><name>INSN_DAK</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x2a</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x2a</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.ori"</literal></expr>, <expr><name>INSN_DAK</name></expr>, <expr><name>R_ANAL_OP_TYPE_LOAD</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x2b</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x2b</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.xori"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x2c</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x2c</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.muli"</literal></expr>, <expr><name>INSN_DAI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x2d</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x2d</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.mfspr"</literal></expr>, <expr><name>INSN_DAK</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x2e</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x2e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x2e</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x2f</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x2f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x2f</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x30</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x30</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.mtspr"</literal></expr>, <expr><name>INSN_KABK</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x31</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x31</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x31</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x32</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x32</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x32</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x33</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x33</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.swa"</literal></expr>, <expr><name>INSN_IABI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x34</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x34</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x35</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x35</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sw"</literal></expr>, <expr><name>INSN_IABI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x36</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x36</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sb"</literal></expr>, <expr><name>INSN_IABI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x37</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x37</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.sh"</literal></expr>, <expr><name>INSN_IABI</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x38</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x38</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x38</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x39</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x39</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><name>NULL</name></expr>, <expr><name>INSN_X</name></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr>, <expr><name>extra_0x39</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x3a</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x3a</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x3b</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x3b</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x3c</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x3c</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust5"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x3d</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x3d</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust6"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x3e</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x3e</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust7"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
<expr><index>[<expr><literal type="number">0x3f</literal></expr>]</index> <operator>=</operator> <block>{<expr><operator>(</operator><literal type="number">0x3f</literal><operator>&lt;&lt;</operator><literal type="number">26</literal><operator>)</operator></expr>, <expr><literal type="string">"l.cust8"</literal></expr>, <expr><name>INSN_X</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>insns_count</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>or1k_insns</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>insn_t</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<function><type><name>insn_extra_t</name> <modifier>*</modifier></type><name>find_extra_descriptor</name><parameter_list>(<parameter><decl><type><name>insn_extra_t</name> <modifier>*</modifier></type><name>extra_descr</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>insn</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>ut32</name></type> <name>opcode</name></decl>;</decl_stmt>
<while>while <condition>(<expr><name><name>extra_descr</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>INSN_END</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>opcode</name> <operator>=</operator> <operator>(</operator><name>insn</name> <operator>&amp;</operator> <name><name>extra_descr</name><operator>-&gt;</operator><name>opcode_mask</name></name><operator>)</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>extra_descr</name><operator>-&gt;</operator><name>opcode</name></name> <operator>==</operator> <name>opcode</name></expr>)</condition> <block>{<block_content>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>extra_descr</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></while>
<if_stmt><if>if <condition>(<expr><name><name>extra_descr</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>INSN_END</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>extra_descr</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ut32</name></type> <name>sign_extend</name><parameter_list>(<parameter><decl><type><name>ut32</name></type> <name>number</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>mask</name></decl></parameter>)</parameter_list> <block>{<block_content>


<decl_stmt><decl><type><name>ut32</name></type> <name>first_bit</name> <init>= <expr><operator>(</operator><name>mask</name> <operator>^</operator> <operator>(</operator><name>mask</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <name>mask</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>number</name> <operator>&amp;</operator> <name>first_bit</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>number</name> <operator>|=</operator> <operator>~</operator><name>mask</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>number</name></expr>;</return>
</block_content>}</block></function>
</unit>
