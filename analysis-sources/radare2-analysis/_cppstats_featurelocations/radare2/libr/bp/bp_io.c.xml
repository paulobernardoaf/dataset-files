<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\bp\bp_io.c">

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bp.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>

<function><type><name>R_API</name> <name>void</name></type> <name>r_bp_restore_one</name><parameter_list>(<parameter><decl><type><name>RBreakpoint</name> <modifier>*</modifier></type><name>bp</name></decl></parameter>, <parameter><decl><type><name>RBreakpointItem</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>set</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>set</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>b</name><operator>-&gt;</operator><name>hw</name></name> <operator>||</operator> <operator>!</operator><name><name>b</name><operator>-&gt;</operator><name>bbytes</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>eprintf</name> <argument_list>(<argument><expr><literal type="string">"hw breakpoints not yet supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name><name>bp</name><operator>-&gt;</operator><name>iob</name><operator>.</operator><name>write_at</name></name> <argument_list>(<argument><expr><name><name>bp</name><operator>-&gt;</operator><name>iob</name><operator>.</operator><name>io</name></name></expr></argument>, <argument><expr><name><name>b</name><operator>-&gt;</operator><name>addr</name></name></expr></argument>, <argument><expr><name><name>b</name><operator>-&gt;</operator><name>bbytes</name></name></expr></argument>, <argument><expr><name><name>b</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>b</name><operator>-&gt;</operator><name>hw</name></name> <operator>||</operator> <operator>!</operator><name><name>b</name><operator>-&gt;</operator><name>obytes</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>eprintf</name> <argument_list>(<argument><expr><literal type="string">"hw breakpoints not yet supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name><name>bp</name><operator>-&gt;</operator><name>iob</name><operator>.</operator><name>write_at</name></name> <argument_list>(<argument><expr><name><name>bp</name><operator>-&gt;</operator><name>iob</name><operator>.</operator><name>io</name></name></expr></argument>, <argument><expr><name><name>b</name><operator>-&gt;</operator><name>addr</name></name></expr></argument>, <argument><expr><name><name>b</name><operator>-&gt;</operator><name>obytes</name></name></expr></argument>, <argument><expr><name><name>b</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>




<function><type><name>R_API</name> <name>int</name></type> <name>r_bp_restore</name><parameter_list>(<parameter><decl><type><name>RBreakpoint</name> <modifier>*</modifier></type><name>bp</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>set</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>r_bp_restore_except</name> <argument_list>(<argument><expr><name>bp</name></expr></argument>, <argument><expr><name>set</name></expr></argument>, <argument><expr><name>UT64_MAX</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><name>R_API</name> <name>bool</name></type> <name>r_bp_restore_except</name><parameter_list>(<parameter><decl><type><name>RBreakpoint</name> <modifier>*</modifier></type><name>bp</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>set</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>rc</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RListIter</name> <modifier>*</modifier></type><name>iter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBreakpointItem</name> <modifier>*</modifier></type><name>b</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>set</name> <operator>&amp;&amp;</operator> <name><name>bp</name><operator>-&gt;</operator><name>bpinmaps</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name><name>bp</name><operator>-&gt;</operator><name>corebind</name><operator>.</operator><name>syncDebugMaps</name></name> <argument_list>(<argument><expr><name><name>bp</name><operator>-&gt;</operator><name>corebind</name><operator>.</operator><name>core</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<macro><name>r_list_foreach</name> <argument_list>(<argument>bp-&gt;bps</argument>, <argument>iter</argument>, <argument>b</argument>)</argument_list></macro> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>addr</name> <operator>&amp;&amp;</operator> <name><name>b</name><operator>-&gt;</operator><name>addr</name></name> <operator>==</operator> <name>addr</name></expr>)</condition> <block>{<block_content>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>set</name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>b</name><operator>-&gt;</operator><name>enabled</name></name></expr>)</condition> <block>{<block_content>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>set</name> <operator>&amp;&amp;</operator> <name><name>bp</name><operator>-&gt;</operator><name>bpinmaps</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>r_bp_is_valid</name> <argument_list>(<argument><expr><name>bp</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>bp</name><operator>-&gt;</operator><name>breakpoint</name></name> <operator>&amp;&amp;</operator> <call><name><name>bp</name><operator>-&gt;</operator><name>breakpoint</name></name> <argument_list>(<argument><expr><name>bp</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>set</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>r_bp_restore_one</name> <argument_list>(<argument><expr><name>bp</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rc</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block>
<return>return <expr><name>rc</name></expr>;</return>
</block_content>}</block></function>
</unit>
