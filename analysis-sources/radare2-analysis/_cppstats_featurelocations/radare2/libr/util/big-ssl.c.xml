<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\util\big-ssl.c">
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>r_big_zero</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_zero</name> <argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_print</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list> <block>{<block_content>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set_str</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_set_word</name> <argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>atoi</name> <argument_list>(<argument><expr><name>str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>RNumBig</name> <modifier>*</modifier></type><name>r_big_new</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>BN_new</name> <argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_free</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_free</name> <argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_copy</name> <argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set_st</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_set_word</name> <argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set_st64</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>st64</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_set_word</name> <argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>R_API</name> <name>void</name></type> <name>r_big_add</name> <parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_add</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_sub</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_sub</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_big_cmp</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>BN_ucmp</name> <argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_big_cmp_st</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>BN_cmp</name> <argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><name>R_API</name> <name>void</name></type> <name>r_big_shift</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>d</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RNumBig</name></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>BN_copy</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>BN_lshift</name></expr><operator>,</operator> <expr><operator>(</operator><name>n</name><operator>,</operator> <name>a</name><operator>,</operator> <name>d</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_mul</name> <parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><call><name>BN_mul</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_mul_ut</name> <parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name> <init>= <expr><call><name>BN_new</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>BN_set_word</name> <argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_big_mul</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BN_free</name> <argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_div</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_div</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_div_ut</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>eprintf</name> <argument_list>(<argument><expr><name>__FUNCTION__</name><literal type="string">": TODO\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_big_divisible_ut</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>eprintf</name> <argument_list>(<argument><expr><name>__FUNCTION__</name><literal type="string">": TODO\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_mod</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>BN_div</name> <argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
