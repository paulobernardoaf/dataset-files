<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\util\big-gmp.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gmp.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>r_big_zero</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_init</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_print</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list> <block>{<block_content>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set_str</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_set_str</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>RNumBig</name> <modifier>*</modifier></type><name>r_big_new</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name> <init>= <expr><call><name>R_NEW</name> <argument_list>(<argument><expr><name>RNumBig</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>n</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>b</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>memcpy</name> <argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>RNumBig</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>mpz_init</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>n</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_free</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_set</name> <argument_list>(<argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><operator>*</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set_st</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_set_si</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_set_st64</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>st64</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_set_si</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>R_API</name> <name>void</name></type> <name>r_big_add</name> <parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_add</name> <argument_list>(<argument><expr><operator>*</operator><name>c</name></expr></argument>, <argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><operator>*</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_sub</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_sub</name> <argument_list>(<argument><expr><operator>*</operator><name>c</name></expr></argument>, <argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><operator>*</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_big_cmp</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>mpz_cmp</name> <argument_list>(<argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><operator>*</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_big_cmp_st</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>mpz_cmp_si</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><name>R_API</name> <name>void</name></type> <name>r_big_shift</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>d</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RNumBig</name></type> <name>k</name></decl>, <decl><type ref="prev"/><name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>mpz_init_set_d</name> <argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mpz_pow_ui</name> <argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>k</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mpz_mul</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>, <argument><expr><operator>*</operator><name>n</name></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_mul</name> <parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_mul</name> <argument_list>(<argument><expr><operator>*</operator><name>c</name></expr></argument>, <argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><operator>*</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_mul_ut</name> <parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_mul_ui</name> <argument_list>(<argument><expr><operator>*</operator><name>c</name></expr></argument>, <argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_div</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_tdiv_q</name> <argument_list>(<argument><expr><operator>*</operator><name>c</name></expr></argument>, <argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><operator>*</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_div_ut</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_divexact_ui</name> <argument_list>(<argument><expr><operator>*</operator><name>c</name></expr></argument>, <argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_big_divisible_ut</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>mpz_divisible_ui_p</name> <argument_list>(<argument><expr><operator>*</operator><name>n</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_big_mod</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mpz_mod</name> <argument_list>(<argument><expr><operator>*</operator><name>c</name></expr></argument>, <argument><expr><operator>*</operator><name>a</name></expr></argument>, <argument><expr><operator>*</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
