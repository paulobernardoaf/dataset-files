<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\io\desc.c">

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_io.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sdb.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>



<function><type><name>R_API</name> <name>RIODesc</name><modifier>*</modifier></type> <name>r_io_desc_new</name><parameter_list>(<parameter><decl><type><name>RIO</name><modifier>*</modifier></type> <name>io</name></decl></parameter>, <parameter><decl><type><name>RIOPlugin</name><modifier>*</modifier></type> <name>plugin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>uri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>perm</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>data</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>ut32</name></type> <name>fd32</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>io</name> <operator>||</operator> <operator>!</operator><name>plugin</name> <operator>||</operator> <operator>!</operator><name>uri</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>r_id_pool_grab_id</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name><operator>-&gt;</operator><name>pool</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fd32</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<decl_stmt><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name> <init>= <expr><call><name>R_NEW0</name> <argument_list>(<argument><expr><name>RIODesc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>desc</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>fd</name></name> <operator>=</operator> <name>fd32</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name> <operator>=</operator> <name>io</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>=</operator> <name>plugin</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>perm</name></name> <operator>=</operator> <name>perm</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>uri</name></name> <operator>=</operator> <call><name>strdup</name> <argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>desc</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_io_desc_free</name><parameter_list>(<parameter><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>desc</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>uri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>referer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_io_desc_cache_fini</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>io</name><operator>-&gt;</operator><name>files</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>r_id_storage_delete</name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name><name>desc</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_add</name><parameter_list>(<parameter><decl><type><name>RIO</name><modifier>*</modifier></type> <name>io</name></decl></parameter>, <parameter><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>io</name> <operator>&amp;&amp;</operator> <name>desc</name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>r_id_storage_set</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name><name>desc</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>eprintf</name> <argument_list>(<argument><expr><literal type="string">"You are using this API incorrectly\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>eprintf</name> <argument_list>(<argument><expr><literal type="string">"fd %d was probably not generated by this RIO-instance\n"</literal></expr></argument>, <argument><expr><name><name>desc</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_sys_backtrace</name> <argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_del</name><parameter_list>(<parameter><decl><type><name>RIO</name><modifier>*</modifier></type> <name>io</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list> <block>{<block_content> 
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>io</name> <operator>&amp;&amp;</operator> <name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name> <init>= <expr><call><name>r_id_storage_get</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>r_io_desc_free</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>desc</name> <operator>==</operator> <name><name>io</name><operator>-&gt;</operator><name>desc</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>io</name><operator>-&gt;</operator><name>desc</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>r_io_map_cleanup</name> <argument_list>(<argument><expr><name>io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>RIODesc</name><modifier>*</modifier></type> <name>r_io_desc_get</name><parameter_list>(<parameter><decl><type><name>RIO</name><modifier>*</modifier></type> <name>io</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>io</name> <operator>&amp;&amp;</operator> <name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>RIODesc</name><operator>*</operator><operator>)</operator> <call><name>r_id_storage_get</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>RIODesc</name> <modifier>*</modifier></type><name>r_io_desc_open</name><parameter_list>(<parameter><decl><type><name>RIO</name> <modifier>*</modifier></type><name>io</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>perm</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>io</name> <operator>&amp;&amp;</operator> <name>uri</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>RIOPlugin</name> <modifier>*</modifier></type><name>plugin</name> <init>= <expr><call><name>r_io_plugin_resolve</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>plugin</name> <operator>||</operator> <operator>!</operator><name><name>plugin</name><operator>-&gt;</operator><name>open</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<decl_stmt><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name> <init>= <expr><call><name><name>plugin</name><operator>-&gt;</operator><name>open</name></name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name>perm</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>name</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name> <operator>=</operator> <call><name>strdup</name> <argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>uri</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>uri</name></name> <operator>=</operator> <call><name>strdup</name> <argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>=</operator> <name>plugin</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>r_io_desc_add</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>r_io_desc_free</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>desc</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>RIODesc</name> <modifier>*</modifier></type><name>r_io_desc_open_plugin</name><parameter_list>(<parameter><decl><type><name>RIO</name> <modifier>*</modifier></type><name>io</name></decl></parameter>, <parameter><decl><type><name>RIOPlugin</name> <modifier>*</modifier></type><name>plugin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>perm</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>io</name> <operator>&amp;&amp;</operator> <name><name>io</name><operator>-&gt;</operator><name>files</name></name> <operator>&amp;&amp;</operator> <name>uri</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>plugin</name> <operator>||</operator> <operator>!</operator><name><name>plugin</name><operator>-&gt;</operator><name>open</name></name> <operator>||</operator> <operator>!</operator><name><name>plugin</name><operator>-&gt;</operator><name>check</name></name> <operator>||</operator> <operator>!</operator><call><name><name>plugin</name><operator>-&gt;</operator><name>check</name></name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<decl_stmt><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name> <init>= <expr><call><name><name>plugin</name><operator>-&gt;</operator><name>open</name></name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name>perm</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>=</operator> <name>plugin</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>uri</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>uri</name></name> <operator>=</operator> <call><name>strdup</name> <argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>name</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name> <operator>=</operator> <call><name>strdup</name> <argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>r_io_desc_add</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>r_io_desc_free</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>desc</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_close</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RIO</name> <modifier>*</modifier></type><name>io</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>io</name></name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>close</name></name> <operator>&amp;&amp;</operator> <call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>close</name></name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>io</name> <operator>=</operator> <name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>r_io_desc_del</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name><name>desc</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>r_io_map_cleanup</name> <argument_list>(<argument><expr><name>io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>R_API</name> <name>int</name></type> <name>r_io_desc_write</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name><modifier>*</modifier></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>desc</name> <operator>&amp;&amp;</operator> <name>buf</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>len</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>desc</name><operator>-&gt;</operator><name>io</name><operator>-&gt;</operator><name>p_cache</name></name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>r_io_desc_cache_write</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>,
<argument><expr><call><name>r_io_desc_seek</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><literal type="number">0LL</literal></expr></argument>, <argument><expr><name>R_IO_SEEK_CUR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name>r_io_plugin_write</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><name>R_API</name> <name>int</name></type> <name>r_io_desc_read</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>buf</name> <operator>||</operator> <operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>||</operator> <operator>!</operator><operator>(</operator><name><name>desc</name><operator>-&gt;</operator><name>perm</name></name> <operator>&amp;</operator> <name>R_PERM_R</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>seek</name> <init>= <expr><call><name>r_io_desc_seek</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><literal type="number">0LL</literal></expr></argument>, <argument><expr><name>R_IO_SEEK_CUR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>io</name><operator>-&gt;</operator><name>cachemode</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>seek</name> <operator>!=</operator> <name>UT64_MAX</name> <operator>&amp;&amp;</operator> <call><name>r_io_cache_at</name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr></argument>, <argument><expr><name>seek</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>r_io_cache_read</name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr></argument>, <argument><expr><name>seek</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>r_io_plugin_read</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>io</name><operator>-&gt;</operator><name>cachemode</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>r_io_cache_write</name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr></argument>, <argument><expr><name>seek</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>(</operator><name>ret</name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>io</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>desc</name><operator>-&gt;</operator><name>io</name><operator>-&gt;</operator><name>p_cache</name></name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>r_io_desc_cache_read</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>seek</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>ut64</name></type> <name>r_io_desc_seek</name><parameter_list>(<parameter><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>whence</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>lseek</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>(</operator><name>ut64</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>lseek</name></name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>offset</name></expr></argument>, <argument><expr><name>whence</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>ut64</name></type> <name>r_io_desc_size</name><parameter_list>(<parameter><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>lseek</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0LL</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>off</name> <init>= <expr><call><name>r_io_desc_seek</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><literal type="number">0LL</literal></expr></argument>, <argument><expr><name>R_IO_SEEK_CUR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>ret</name> <init>= <expr><call><name>r_io_desc_seek</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><literal type="number">0LL</literal></expr></argument>, <argument><expr><name>R_IO_SEEK_END</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>r_io_desc_seek</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>off</name></expr></argument>, <argument><expr><name>R_IO_SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_resize</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>newsize</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>desc</name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>resize</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>ret</name> <init>= <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>resize</name></name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>newsize</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>io</name><operator>-&gt;</operator><name>p_cache</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>r_io_desc_cache_cleanup</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_is_blockdevice</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>is_blockdevice</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>is_blockdevice</name></name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_is_chardevice</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>is_chardevice</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>is_chardevice</name></name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_exchange</name><parameter_list>(<parameter><decl><type><name>RIO</name><modifier>*</modifier></type> <name>io</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fdx</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type> <name>descx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SdbListIter</name><modifier>*</modifier></type> <name>iter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RIOMap</name><modifier>*</modifier></type> <name>map</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>desc</name> <operator>=</operator> <call><name>r_io_desc_get</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>||</operator> <operator>!</operator><operator>(</operator><name>descx</name> <operator>=</operator> <call><name>r_io_desc_get</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>fdx</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>fd</name></name> <operator>=</operator> <name>fdx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>descx</name><operator>-&gt;</operator><name>fd</name></name> <operator>=</operator> <name>fd</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_id_storage_set</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>fdx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_id_storage_set</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>descx</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>io</name><operator>-&gt;</operator><name>p_cache</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>Sdb</name><modifier>*</modifier></type> <name>cache</name> <init>= <expr><name><name>desc</name><operator>-&gt;</operator><name>cache</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>desc</name><operator>-&gt;</operator><name>cache</name></name> <operator>=</operator> <name><name>descx</name><operator>-&gt;</operator><name>cache</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>descx</name><operator>-&gt;</operator><name>cache</name></name> <operator>=</operator> <name>cache</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_io_desc_cache_cleanup</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_io_desc_cache_cleanup</name> <argument_list>(<argument><expr><name>descx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>io</name><operator>-&gt;</operator><name>maps</name></name></expr>)</condition> <block>{<block_content>
<macro><name>ls_foreach</name> <argument_list>(<argument>io-&gt;maps</argument>, <argument>iter</argument>, <argument>map</argument>)</argument_list></macro> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>map</name><operator>-&gt;</operator><name>fd</name></name> <operator>==</operator> <name>fdx</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>map</name><operator>-&gt;</operator><name>perm</name></name> <operator>&amp;=</operator> <operator>(</operator><name><name>desc</name><operator>-&gt;</operator><name>perm</name></name> <operator>|</operator> <name>R_PERM_X</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>map</name><operator>-&gt;</operator><name>fd</name></name> <operator>==</operator> <name>fd</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>map</name><operator>-&gt;</operator><name>perm</name></name> <operator>&amp;=</operator> <operator>(</operator><name><name>descx</name><operator>-&gt;</operator><name>perm</name></name> <operator>|</operator> <name>R_PERM_X</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_is_dbg</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>desc</name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>isdbg</name></name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_io_desc_get_pid</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">3</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">4</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>isdbg</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">5</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>getpid</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">6</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>getpid</name></name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_io_desc_get_tid</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">3</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">4</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>isdbg</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">5</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>gettid</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">6</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>gettid</name></name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>bool</name></type> <name>r_io_desc_get_base</name> <parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>base</name> <operator>||</operator> <operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>isdbg</name></name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>getbase</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>getbase</name></name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_io_desc_read_at</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>desc</name> <operator>&amp;&amp;</operator> <name>buf</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>r_io_desc_seek</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><name>R_IO_SEEK_SET</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>addr</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>r_io_desc_read</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_io_desc_write_at</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>desc</name> <operator>&amp;&amp;</operator> <name>buf</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>r_io_desc_seek</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><name>R_IO_SEEK_SET</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>addr</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>r_io_desc_write</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>R_API</name> <name>int</name></type> <name>r_io_desc_extend</name><parameter_list>(<parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>desc</name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>extend</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>extend</name></name> <argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>io</name></name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>




<function><type><name>R_IPI</name> <name>bool</name></type> <name>r_io_desc_init</name><parameter_list>(<parameter><decl><type><name>RIO</name><modifier>*</modifier></type> <name>io</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_io_desc_fini</name> <argument_list>(<argument><expr><name>io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name> <operator>=</operator> <call><name>r_id_storage_new</name> <argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>desc_fini_cb</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>user</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RIODesc</name><modifier>*</modifier></type> <name>desc</name> <init>= <expr><operator>(</operator><name>RIODesc</name><operator>*</operator><operator>)</operator> <name>data</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>plugin</name></name> <operator>&amp;&amp;</operator> <name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>close</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name><name>desc</name><operator>-&gt;</operator><name>plugin</name><operator>-&gt;</operator><name>close</name></name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>r_io_desc_free</name> <argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>R_IPI</name> <name>bool</name></type> <name>r_io_desc_fini</name><parameter_list>(<parameter><decl><type><name>RIO</name><modifier>*</modifier></type> <name>io</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>r_return_val_if_fail</name> <argument_list>(<argument><expr><name>io</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>r_id_storage_foreach</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>, <argument><expr><name>desc_fini_cb</name></expr></argument>, <argument><expr><name>io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_id_storage_free</name> <argument_list>(<argument><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>io</name><operator>-&gt;</operator><name>files</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>io</name><operator>-&gt;</operator><name>desc</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>
</unit>
