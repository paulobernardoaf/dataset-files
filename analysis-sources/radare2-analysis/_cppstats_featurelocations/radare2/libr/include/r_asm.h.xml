<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\r_asm.h">

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_ASM_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_ASM_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bin.h&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_parse.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bind.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>R_LIB_VERSION_HEADER</name><argument_list>(<argument><expr><name>r_asm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_NONE</name></cpp:macro> <cpp:value>R_SYS_ARCH_NONE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_X86</name></cpp:macro> <cpp:value>R_SYS_ARCH_X86</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_ARM</name></cpp:macro> <cpp:value>R_SYS_ARCH_ARM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_PPC</name></cpp:macro> <cpp:value>R_SYS_ARCH_PPC</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_M68K</name></cpp:macro> <cpp:value>R_SYS_ARCH_M68K</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_JAVA</name></cpp:macro> <cpp:value>R_SYS_ARCH_JAVA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_LM32</name></cpp:macro> <cpp:value>R_SYS_ARCH_LM32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_MIPS</name></cpp:macro> <cpp:value>R_SYS_ARCH_MIPS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_SPARC</name></cpp:macro> <cpp:value>R_SYS_ARCH_SPARC</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_XAP</name></cpp:macro> <cpp:value>R_SYS_ARCH_XAP</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_MSIL</name></cpp:macro> <cpp:value>R_SYS_ARCH_MSIL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_OBJD</name></cpp:macro> <cpp:value>R_SYS_ARCH_OBJD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_BF</name></cpp:macro> <cpp:value>R_SYS_ARCH_BF</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_SH</name></cpp:macro> <cpp:value>R_SYS_ARCH_SH</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_Z80</name></cpp:macro> <cpp:value>R_SYS_ARCH_Z80</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_I8080</name></cpp:macro> <cpp:value>R_SYS_ARCH_I8080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_ARC</name></cpp:macro> <cpp:value>R_SYS_ARCH_ARC</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_ARCH_HPPA</name></cpp:macro> <cpp:value>R_SYS_ARCH_HPPA</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_GET_OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x &amp;&amp; x-&gt;binb.bin &amp;&amp; x-&gt;binb.get_offset)? x-&gt;binb.get_offset (x-&gt;binb.bin, y, z): -1</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ASM_GET_NAME</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x &amp;&amp; x-&gt;binb.bin &amp;&amp; x-&gt;binb.get_name)? x-&gt;binb.get_name (x-&gt;binb.bin, y, z, x-&gt;pseudo): NULL</cpp:value></cpp:define>



<enum>enum <block>{
<decl><name>R_ASM_SYNTAX_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ASM_SYNTAX_INTEL</name></decl>,
<decl><name>R_ASM_SYNTAX_ATT</name></decl>,
<decl><name>R_ASM_SYNTAX_MASM</name></decl>,
<decl><name>R_ASM_SYNTAX_REGNUM</name></decl>, 
<decl><name>R_ASM_SYNTAX_JZ</name></decl>, 
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_ASM_MOD_RAWVALUE</name> <init>= <expr><literal type="char">'r'</literal></expr></init></decl>,
<decl><name>R_ASM_MOD_VALUE</name> <init>= <expr><literal type="char">'v'</literal></expr></init></decl>,
<decl><name>R_ASM_MOD_DSTREG</name> <init>= <expr><literal type="char">'d'</literal></expr></init></decl>,
<decl><name>R_ASM_MOD_SRCREG0</name> <init>= <expr><literal type="char">'0'</literal></expr></init></decl>,
<decl><name>R_ASM_MOD_SRCREG1</name> <init>= <expr><literal type="char">'1'</literal></expr></init></decl>,
<decl><name>R_ASM_MOD_SRCREG2</name> <init>= <expr><literal type="char">'2'</literal></expr></init></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>r_asm_op_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>bitsize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>payload</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>RStrBuf</name></type> <name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RStrBuf</name></type> <name>buf_asm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf_inc</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAsmOp</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_asm_code_t</name> <block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">1</literal></expr></cpp:if>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>bytes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>assembly</name></decl>;</decl_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<decl_stmt><decl><type><name>RAsmOp</name></type> <name>op</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>equs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>code_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>data_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>code_align</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAsmCode</name>;</typedef>


<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>value</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAsmEqu</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_RAsmPlugin</name></cpp:macro> <cpp:value>struct r_asm_plugin_t</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>r_asm_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>big_endian</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>syntax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>pc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>_RAsmPlugin</name> <modifier>*</modifier></type><name>cur</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>_RAsmPlugin</name> <modifier>*</modifier></type><name>acur</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>plugins</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinBind</name></type> <name>binb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RParse</name> <modifier>*</modifier></type><name>ifilter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RParse</name> <modifier>*</modifier></type><name>ofilter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>pair</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>syscall</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RNum</name> <modifier>*</modifier></type><name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>features</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>invhex</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>pcalign</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dataalign</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bitshift</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>immdisp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>HtPP</name> <modifier>*</modifier></type><name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>seggrn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>pseudo</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAsm</name>;</typedef>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAsmModifyCallback</name>)<parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_asm_plugin_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>author</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cpus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>license</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>endian</name></decl>;</decl_stmt>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>disassemble</name>)<parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>assemble</name>)<parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>RAsmModifyCallback</name></type> <name>modify</name></decl>;</decl_stmt>
<function_decl><type><name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>mnemonics</name>)<parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>json</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>features</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAsmPlugin</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_API</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>R_API</name> <name>RAsm</name> <modifier>*</modifier></type><name>r_asm_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_free</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_modify</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_asm_mnemonics</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>json</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_mnemonics_byname</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_set_user_ptr</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_add</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAsmPlugin</name> <modifier>*</modifier></type><name>foo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_setup</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>big_endian</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_is_valid</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_use</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_use_assembler</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_set_arch</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_set_bits</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_set_cpu</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cpu</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_set_big_endian</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>big_endian</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_set_syntax</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>syntax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_syntax_from_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_set_pc</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_disassemble</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_assemble</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAsmCode</name><modifier>*</modifier></type> <name>r_asm_mdisassemble</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAsmCode</name><modifier>*</modifier></type> <name>r_asm_mdisassemble_hexstr</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RParse</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hexstr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAsmCode</name><modifier>*</modifier></type> <name>r_asm_massemble</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAsmCode</name><modifier>*</modifier></type> <name>r_asm_rasm_assemble</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>use_spp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_asm_to_string</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>l</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>ut8</name> <modifier>*</modifier></type><name>r_asm_from_string</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>l</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_filter_input</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_filter_output</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_asm_describe</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name><modifier>*</modifier></type> <name>r_asm_get_plugins</name><parameter_list>(<parameter><decl><type><name>RAsm</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_list_directives</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAsmCode</name> <modifier>*</modifier></type><name>r_asm_code_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name><modifier>*</modifier></type> <name>r_asm_code_free</name><parameter_list>(<parameter><decl><type><name>RAsmCode</name> <modifier>*</modifier></type><name>acode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_equ_item_free</name><parameter_list>(<parameter><decl><type><name>RAsmEqu</name> <modifier>*</modifier></type><name>equ</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_asm_code_set_equ</name><parameter_list>(<parameter><decl><type><name>RAsmCode</name> <modifier>*</modifier></type><name>code</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_asm_code_equ_replace</name><parameter_list>(<parameter><decl><type><name>RAsmCode</name> <modifier>*</modifier></type><name>code</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name><modifier>*</modifier></type> <name>r_asm_code_get_hex</name><parameter_list>(<parameter><decl><type><name>RAsmCode</name> <modifier>*</modifier></type><name>acode</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAsmOp</name> <modifier>*</modifier></type><name>r_asm_op_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_op_init</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_op_free</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_op_fini</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_asm_op_get_hex</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_asm_op_get_asm</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_op_get_size</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_op_set_asm</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_op_set_hex</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_asm_op_set_hexbuf</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asm_op_set_buf</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut8</name> <modifier>*</modifier></type><name>r_asm_op_get_buf</name><parameter_list>(<parameter><decl><type><name>RAsmOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>


<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_6502</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_6502_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_8051</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_amd29k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_arc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_arm_as</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_arm_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_arm_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_arm_winedbg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_avr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_bf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_null</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_chip8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_cr16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_cris_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_dalvik</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_dcpu16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_ebc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_gb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_h8300</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_hexagon</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_hexagon_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_hppa_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_i4004</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_i8080</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_java</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_lanai_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_lh5801</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_lm32</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_m68k_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_m680x_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_malbolge</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_mcore</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_mcs96</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_mips_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_mips_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_msp430</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_nios2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_or1k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_pic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_ppc_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_ppc_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_propeller</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_riscv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_riscv_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_rsp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_sh</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_snes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_sparc_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_sparc_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_spc700</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_sysz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_tms320</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_tms320c64x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_tricore</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_v810</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_v850</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_vax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_wasm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_ws</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_x86_as</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_x86_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_x86_nasm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_x86_nz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_xap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_xcore_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_xtensa</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAsmPlugin</name></type> <name>r_asm_plugin_z80</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
