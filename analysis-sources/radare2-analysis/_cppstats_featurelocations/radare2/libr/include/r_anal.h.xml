<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\r_anal.h">

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_ANAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_ANAL_H</name></cpp:macro></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_VARSUBS</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_io.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_reg.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_list.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_search.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bind.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_syscall.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sdb/set.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_flag.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bin.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>esilprintf</name><parameter_list>(<parameter><type><name>op</name></type></parameter>, <parameter><type><name>fmt</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>r_strbuf_setf (&amp;op-&gt;esil, fmt, ##__VA_ARGS__)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>R_LIB_VERSION_HEADER</name><argument_list>(<argument><expr><name>r_anal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>










<typedef>typedef <type><struct>struct <name>r_anal_meta_item_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>from</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>to</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>subtype</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>RSpace</name> <modifier>*</modifier></type><name>space</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalMetaItem</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type><name>anal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rad</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SdbForeachCallback</name></type> <name>cb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_anal_function_t</name></name> <modifier>*</modifier></type><name>fcn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PJ</name> <modifier>*</modifier></type><name>pj</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalMetaUserItem</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_range_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>from</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>to</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rb_max_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBNode</name></type> <name>rb</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalRange</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_GET_OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x &amp;&amp; x-&gt;binb.bin &amp;&amp; x-&gt;binb.get_offset)? x-&gt;binb.get_offset (x-&gt;binb.bin, y, z): -1</cpp:value></cpp:define>


<enum>enum <block>{
<decl><name>R_ANAL_DATA_TYPE_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_UNKNOWN</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_STRING</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_WIDE_STRING</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_POINTER</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_NUMBER</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_INVALID</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_HEADER</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_SEQUENCE</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_TYPE_PATTERN</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,
}</block>;</enum>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_EXEC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_READ</name></cpp:macro> <cpp:value>1 &lt;&lt; 1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_WRITE</name></cpp:macro> <cpp:value>1 &lt;&lt; 2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_FLAG</name></cpp:macro> <cpp:value>1 &lt;&lt; 3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_FUNC</name></cpp:macro> <cpp:value>1 &lt;&lt; 4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_HEAP</name></cpp:macro> <cpp:value>1 &lt;&lt; 5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_STACK</name></cpp:macro> <cpp:value>1 &lt;&lt; 6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_REG</name></cpp:macro> <cpp:value>1 &lt;&lt; 7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_PROGRAM</name></cpp:macro> <cpp:value>1 &lt;&lt; 8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_LIBRARY</name></cpp:macro> <cpp:value>1 &lt;&lt; 9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_ASCII</name></cpp:macro> <cpp:value>1 &lt;&lt; 10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ADDR_TYPE_SEQUENCE</name></cpp:macro> <cpp:value>1 &lt;&lt; 11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ARCHINFO_MIN_OP_SIZE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ARCHINFO_MAX_OP_SIZE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ARCHINFO_ALIGN</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ARCHINFO_DATA_ALIGN</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_GET_OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x &amp;&amp; x-&gt;binb.bin &amp;&amp; x-&gt;binb.get_offset)? x-&gt;binb.get_offset (x-&gt;binb.bin, y, z): -1</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_GET_NAME</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x &amp;&amp; x-&gt;binb.bin &amp;&amp; x-&gt;binb.get_name)? x-&gt;binb.get_name (x-&gt;binb.bin, y, z): NULL</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <name>r_anal_type_var_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>scope</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name></type> <name>size</name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name>v8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>v16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>v32</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>v64</name></decl>;</decl_stmt>
}</block> <decl><name>value</name></decl>;</union>
}</block></struct></type> <name>RAnalTypeVar</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_type_ptr_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name></type> <name>size</name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name>v8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>v16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>v32</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>v64</name></decl>;</decl_stmt>
}</block> <decl><name>value</name></decl>;</union>
}</block></struct></type> <name>RAnalTypePtr</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_type_array_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>count</name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>v8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name> <modifier>*</modifier></type><name>v16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name> <modifier>*</modifier></type><name>v32</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name> <modifier>*</modifier></type><name>v64</name></decl>;</decl_stmt>
}</block> <decl><name>value</name></decl>;</union>
}</block></struct></type> <name>RAnalTypeArray</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>r_anal_type_struct_t</name></name></type> <name>RAnalTypeStruct</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>r_anal_type_t</name></name></type> <name>RAnalType</name>;</typedef>

<struct>struct <name>r_anal_type_struct_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalType</name> <modifier>*</modifier></type><name>items</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><struct>struct <name>r_anal_type_union_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalType</name> <modifier>*</modifier></type><name>items</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalTypeUnion</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_type_alloca_t</name> <block>{
<decl_stmt><decl><type><name>long</name></type> <name>address</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalType</name> <modifier>*</modifier></type><name>items</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalTypeAlloca</name>;</typedef>

<enum>enum <block>{
<decl><name>R_ANAL_FQUALIFIER_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_FQUALIFIER_STATIC</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_FQUALIFIER_VOLATILE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_FQUALIFIER_INLINE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_FQUALIFIER_NAKED</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_FQUALIFIER_VIRTUAL</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
}</block>;</enum>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_CC_TYPE_STDCALL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_CC_TYPE_PASCAL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_CC_TYPE_FASTCALL</name></cpp:macro> <cpp:value>'A'</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_CC_TYPE_SYSV</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_CC_MAXARG</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<enum>enum <block>{
<decl><name>R_ANAL_FCN_TYPE_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_FCN_TYPE_FCN</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_FCN_TYPE_LOC</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_FCN_TYPE_SYM</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_FCN_TYPE_IMP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_FCN_TYPE_INT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>, 
<decl><name>R_ANAL_FCN_TYPE_ROOT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr></init></decl>, 
<decl><name>R_ANAL_FCN_TYPE_ANY</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl> 
}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAnalBlock</name></cpp:macro> <cpp:value>struct r_anal_bb_t</cpp:value></cpp:define>

<enum>enum <block>{
<decl><name>R_ANAL_DIFF_TYPE_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_DIFF_TYPE_MATCH</name> <init>= <expr><literal type="char">'m'</literal></expr></init></decl>,
<decl><name>R_ANAL_DIFF_TYPE_UNMATCH</name> <init>= <expr><literal type="char">'u'</literal></expr></init></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>r_anal_diff_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>dist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalDiff</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>r_anal_attr_t</name></name></type> <name>RAnalAttr</name>;</typedef>
<struct>struct <name>r_anal_attr_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalAttr</name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block>;</struct>



<typedef>typedef <type><struct>struct <name>r_anal_fcn_meta_t</name> <block>{



<decl_stmt><decl><type><name>ut64</name></type> <name>_min</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>_max</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>numrefs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>numcallrefs</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalFcnMeta</name>;</typedef>




<typedef>typedef <type><struct>struct <name>r_anal_function_t</name> <block>{
<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>dsc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rets</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>short</name></type> <name>fmod</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>attr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>rb_max_addr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>stack</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>maxstack</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ninstr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nargs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>depth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>folded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_pure</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_changed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>bp_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_noreturn</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalType</name> <modifier>*</modifier></type><name>args</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>fingerprint</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>fingerprint_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalDiff</name> <modifier>*</modifier></type><name>diff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>bbs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalFcnMeta</name></type> <name>meta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBNode</name></type> <name>addr_rb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>imports</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type><name>anal</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalFunction</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_func_arg_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cc_source</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>orig_c_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>c_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>src</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalFuncArg</name>;</typedef>

<struct>struct <name>r_anal_type_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>content</name></decl>;</decl_stmt>
}</block>;</struct>

<enum>enum <block>{
<decl><name>R_META_WHERE_PREV</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_META_WHERE_HERE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_META_WHERE_NEXT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_META_TYPE_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_META_TYPE_ANY</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_META_TYPE_DATA</name> <init>= <expr><literal type="char">'d'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_CODE</name> <init>= <expr><literal type="char">'c'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_STRING</name> <init>= <expr><literal type="char">'s'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_FORMAT</name> <init>= <expr><literal type="char">'f'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_MAGIC</name> <init>= <expr><literal type="char">'m'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_HIDE</name> <init>= <expr><literal type="char">'h'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_COMMENT</name> <init>= <expr><literal type="char">'C'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_RUN</name> <init>= <expr><literal type="char">'r'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_HIGHLIGHT</name> <init>= <expr><literal type="char">'H'</literal></expr></init></decl>,
<decl><name>R_META_TYPE_VARTYPE</name> <init>= <expr><literal type="char">'t'</literal></expr></init></decl>,
}</block>;</enum>


<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_OP_FAMILY_UNKNOWN</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_FAMILY_CPU</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_FAMILY_FPU</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_MMX</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_SSE</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_PRIV</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_CRYPTO</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_THREAD</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_VIRT</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_PAC</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_IO</name></decl>, 
<decl><name>R_ANAL_OP_FAMILY_LAST</name></decl>
}</block></enum></type> <name>RAnalOpFamily</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
On x86 according to Wikipedia

Prefix group 1
0xF0: LOCK prefix
0xF2: REPNE/REPNZ prefix
0xF3: REP or REPE/REPZ prefix
Prefix group 2
0x2E: CS segment override
0x36: SS segment override
0x3E: DS segment override
0x26: ES segment override
0x64: FS segment override
0x65: GS segment override
0x2E: Branch not taken (hinting)
0x3E: Branch taken
Prefix group 3
0x66: Operand-size override prefix
Prefix group 4
0x67: Address-size override prefix
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_OP_PREFIX_COND</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_PREFIX_REP</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_PREFIX_REPNE</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_PREFIX_LOCK</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_PREFIX_LIKELY</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_PREFIX_UNLIKELY</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">5</literal></expr></init></decl>

}</block></enum></type> <name>RAnalOpPrefix</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_OP_TYPE_MASK</name></cpp:macro> <cpp:value>0x8000ffff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_OP_HINT_MASK</name></cpp:macro> <cpp:value>0xf0000000</cpp:value></cpp:define>
<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_OP_TYPE_COND</name> <init>= <expr><literal type="number">0x80000000</literal></expr></init></decl>, 

<decl><name>R_ANAL_OP_TYPE_REP</name> <init>= <expr><literal type="number">0x40000000</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_MEM</name> <init>= <expr><literal type="number">0x20000000</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_REG</name> <init>= <expr><literal type="number">0x10000000</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_IND</name> <init>= <expr><literal type="number">0x08000000</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_JMP</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_UJMP</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_RJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_REG</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UJMP</name></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_IJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_IND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UJMP</name></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_IRJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_IND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_REG</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UJMP</name></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_CJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_COND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_JMP</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_RCJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_REG</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_CJMP</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_MJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_MEM</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_JMP</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_MCJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_MEM</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_CJMP</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_UCJMP</name> <init>= <expr><name>R_ANAL_OP_TYPE_COND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UJMP</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_CALL</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_UCALL</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_RCALL</name> <init>= <expr><name>R_ANAL_OP_TYPE_REG</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UCALL</name></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_ICALL</name> <init>= <expr><name>R_ANAL_OP_TYPE_IND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UCALL</name></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_IRCALL</name><init>= <expr><name>R_ANAL_OP_TYPE_IND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_REG</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UCALL</name></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_CCALL</name> <init>= <expr><name>R_ANAL_OP_TYPE_COND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_CALL</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_UCCALL</name><init>= <expr><name>R_ANAL_OP_TYPE_COND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_UCALL</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_RET</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_CRET</name> <init>= <expr><name>R_ANAL_OP_TYPE_COND</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_RET</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_ILL</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_UNK</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_NOP</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_MOV</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_CMOV</name> <init>= <expr><literal type="number">9</literal> <operator>|</operator> <name>R_ANAL_OP_TYPE_COND</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_TRAP</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_SWI</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_CSWI</name> <init>= <expr><literal type="number">11</literal> <operator>|</operator> <name>R_ANAL_OP_TYPE_COND</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_UPUSH</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_RPUSH</name> <init>= <expr><name>R_ANAL_OP_TYPE_UPUSH</name> <operator>|</operator> <name>R_ANAL_OP_TYPE_REG</name></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_PUSH</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_POP</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_CMP</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_ACMP</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_ADD</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_SUB</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_IO</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_MUL</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_DIV</name> <init>= <expr><literal type="number">21</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_SHR</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_SHL</name> <init>= <expr><literal type="number">23</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_SAL</name> <init>= <expr><literal type="number">24</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_SAR</name> <init>= <expr><literal type="number">25</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_OR</name> <init>= <expr><literal type="number">26</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_AND</name> <init>= <expr><literal type="number">27</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_XOR</name> <init>= <expr><literal type="number">28</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_NOR</name> <init>= <expr><literal type="number">29</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_NOT</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_STORE</name> <init>= <expr><literal type="number">31</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_LOAD</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_LEA</name> <init>= <expr><literal type="number">33</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_LEAVE</name> <init>= <expr><literal type="number">34</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_ROR</name> <init>= <expr><literal type="number">35</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_ROL</name> <init>= <expr><literal type="number">36</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_XCHG</name> <init>= <expr><literal type="number">37</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_MOD</name> <init>= <expr><literal type="number">38</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_SWITCH</name> <init>= <expr><literal type="number">39</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_CASE</name> <init>= <expr><literal type="number">40</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_LENGTH</name> <init>= <expr><literal type="number">41</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_CAST</name> <init>= <expr><literal type="number">42</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_NEW</name> <init>= <expr><literal type="number">43</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_ABS</name> <init>= <expr><literal type="number">44</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_CPL</name> <init>= <expr><literal type="number">45</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_TYPE_CRYPTO</name> <init>= <expr><literal type="number">46</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_TYPE_SYNC</name> <init>= <expr><literal type="number">47</literal></expr></init></decl>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
R_ANAL_OP_TYPE_PRIV = 40, 
R_ANAL_OP_TYPE_FPU = 41, 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></enum></type> <name>_RAnalOpType</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_OP_MASK_BASIC</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_MASK_ESIL</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_MASK_VAL</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_MASK_HINT</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_MASK_OPEX</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_MASK_DISASM</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>, 
<decl><name>R_ANAL_OP_MASK_ALL</name> <init>= <expr><literal type="number">1</literal> <operator>|</operator> <literal type="number">2</literal> <operator>|</operator> <literal type="number">4</literal> <operator>|</operator> <literal type="number">8</literal> <operator>|</operator> <literal type="number">16</literal></expr></init></decl>
}</block></enum></type> <name>RAnalOpMask</name>;</typedef>


<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_COND_AL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>R_ANAL_COND_EQ</name></decl>, 
<decl><name>R_ANAL_COND_NE</name></decl>, 
<decl><name>R_ANAL_COND_GE</name></decl>, 
<decl><name>R_ANAL_COND_GT</name></decl>, 
<decl><name>R_ANAL_COND_LE</name></decl>, 
<decl><name>R_ANAL_COND_LT</name></decl>, 
<decl><name>R_ANAL_COND_NV</name></decl>, 
<decl><name>R_ANAL_COND_HS</name></decl>, 
<decl><name>R_ANAL_COND_LO</name></decl>, 
<decl><name>R_ANAL_COND_MI</name></decl>, 
<decl><name>R_ANAL_COND_PL</name></decl>, 
<decl><name>R_ANAL_COND_VS</name></decl>, 
<decl><name>R_ANAL_COND_VC</name></decl>, 
<decl><name>R_ANAL_COND_HI</name></decl>, 
<decl><name>R_ANAL_COND_LS</name></decl> 
}</block></enum></type> <name>_RAnalCond</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_VAR_SCOPE_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_VAR_SCOPE_GLOBAL</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>,
<decl><name>R_ANAL_VAR_SCOPE_LOCAL</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,
<decl><name>R_ANAL_VAR_SCOPE_ARG</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>,
<decl><name>R_ANAL_VAR_SCOPE_ARGREG</name> <init>= <expr><literal type="number">0x08</literal></expr></init></decl>,
<decl><name>R_ANAL_VAR_SCOPE_RET</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>,
}</block></enum></type> <name>_RAnalVarScope</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_VAR_DIR_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_VAR_DIR_IN</name> <init>= <expr><literal type="number">0x100</literal></expr></init></decl>,
<decl><name>R_ANAL_VAR_DIR_OUT</name> <init>= <expr><literal type="number">0x200</literal></expr></init></decl>
}</block></enum></type> <name>_RAnalVarDir</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_DATA_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_DATA_HEX</name></decl>, 
<decl><name>R_ANAL_DATA_STR</name></decl>, 
<decl><name>R_ANAL_DATA_CODE</name></decl>, 
<decl><name>R_ANAL_DATA_FUN</name></decl>, 
<decl><name>R_ANAL_DATA_STRUCT</name></decl>, 
<decl><name>R_ANAL_DATA_LAST</name></decl>
}</block></enum></type> <name>_RAnalData</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_STACK_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_STACK_NOP</name></decl>,
<decl><name>R_ANAL_STACK_INC</name></decl>,
<decl><name>R_ANAL_STACK_GET</name></decl>,
<decl><name>R_ANAL_STACK_SET</name></decl>,
<decl><name>R_ANAL_STACK_RESET</name></decl>,
<decl><name>R_ANAL_STACK_ALIGN</name></decl>,
}</block></enum></type> <name>RAnalStackOp</name>;</typedef>

<enum>enum <block>{
<decl><name>R_ANAL_REFLINE_TYPE_UTF8</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_REFLINE_TYPE_WIDE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 
<decl><name>R_ANAL_REFLINE_TYPE_MIDDLE_BEFORE</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 

<decl><name>R_ANAL_REFLINE_TYPE_MIDDLE_AFTER</name> <init>= <expr><literal type="number">8</literal></expr></init></decl> 
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_ANAL_RET_NOP</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_RET_ERROR</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_RET_DUP</name> <init>= <expr><operator>-</operator><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_RET_NEW</name> <init>= <expr><operator>-</operator><literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_RET_END</name> <init>= <expr><operator>-</operator><literal type="number">4</literal></expr></init></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>r_anal_case_obj_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>jump</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>value</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalCaseOp</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_switch_obj_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>min_val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>def_val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>max_val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>cases</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalSwitchOp</name>;</typedef>

<struct_decl>struct <name>r_anal_t</name>;</struct_decl>
<struct_decl>struct <name>r_anal_bb_t</name>;</struct_decl>
<typedef>typedef <type><struct>struct <name>r_anal_callbacks_t</name> <block>{
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>on_fcn_new</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>on_fcn_delete</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>on_fcn_rename</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>oldname</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>on_fcn_bb_new</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>r_anal_bb_t</name></name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RAnalCallbacks</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_ESIL_GOTO_LIMIT</name></cpp:macro> <cpp:value>4096</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>r_anal_options_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>depth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>graph_depth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>vars</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>cjmpref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>jmpref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>jmpabove</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ijmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>jmpmid</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>loads</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ignbithints</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>followdatarefs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>searchstringrefs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>followbrokenfcnsrefs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bb_max_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>trycatch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>norevisit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>afterjmp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>recont</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>noncode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nopskip</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>hpskip</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>jmptbl</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nonull</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>pushret</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>armthumb</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>endsize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>delay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>tailcall</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>retpoline</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalOptions</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_CPP_ABI_ITANIUM</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_CPP_ABI_MSVC</name></decl>
}</block></enum></type> <name>RAnalCPPABI</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_hint_cb_t</name> <block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_bits</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>set</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RHintCb</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>os</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lineswidth</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>big_endian</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>sleep</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalCPPABI</name></type> <name>cpp_abi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>gp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RBTree</name></type> <name>bb_tree</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>fcns</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HtUP</name> <modifier>*</modifier></type><name>ht_addr_fun</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>HtPP</name> <modifier>*</modifier></type><name>ht_name_fun</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>refs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>vartypes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RReg</name> <modifier>*</modifier></type><name>reg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>last_disasm_reg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>syscall</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_anal_op_t</name></name> <modifier>*</modifier></type><name>queued</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>diff_ops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>diff_thbb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>diff_thfcn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RIOBind</name></type> <name>iob</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RFlagBind</name></type> <name>flb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RFlagSet</name></type> <name>flg_class_set</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RFlagGet</name></type> <name>flg_class_get</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RFlagSet</name></type> <name>flg_fcn_set</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinBind</name></type> <name>binb</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RCoreBind</name></type> <name>coreb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>maxreflines</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>trace</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>esil_goto_limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pcalign</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bitshift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>r_anal_esil_t</name></name> <modifier>*</modifier></type><name>esil</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_anal_plugin_t</name></name> <modifier>*</modifier></type><name>cur</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalRange</name> <modifier>*</modifier></type><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>plugins</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_types</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_fmts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_meta</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_zigns</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HtUP</name> <modifier>*</modifier></type><name>dict_refs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HtUP</name> <modifier>*</modifier></type><name>dict_xrefs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>recursive_noreturn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RSpaces</name></type> <name>meta_spaces</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RSpaces</name></type> <name>zign_spaces</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>zign_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PrintfCallback</name></type> <name>cb_printf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_fcns</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_pins</name></decl>;</decl_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEPRECATE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DEPRECATE</name></expr></cpp:if>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_args</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_vars</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>HtUP</name> <modifier>*</modifier></type><name>addr_hints</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RBTree</name></type> <name>arch_hints</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBTree</name></type> <name>bits_hints</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RHintCb</name></type> <name>hint_cbs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_fcnsign</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_cc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_classes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_classes_attrs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalCallbacks</name></type> <name>cb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalOptions</name></type> <name>opt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>reflines</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RListComparator</name></type> <name>columnSort</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stackptr</name></decl>;</decl_stmt>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>log</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>read_at</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_anal_t</name></name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>bool</name></type> <name>verbose</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>seggrn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RFlagGetAtAddr</name></type> <name>flag_get</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>REvent</name> <modifier>*</modifier></type><name>ev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>imports</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>SetU</name> <modifier>*</modifier></type><name>visited</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RStrConstPool</name></type> <name>constpool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>leaddrs</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnal</name>;</typedef>

<typedef>typedef <type><enum>enum <name>r_anal_addr_hint_type_t</name> <block>{
<decl><name>R_ANAL_ADDR_HINT_TYPE_IMMBASE</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_JUMP</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_FAIL</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_STACKFRAME</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_PTR</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_NWORD</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_RET</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_NEW_BITS</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_SIZE</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_SYNTAX</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_OPTYPE</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_OPCODE</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_TYPE_OFFSET</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_ESIL</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_HIGH</name></decl>,
<decl><name>R_ANAL_ADDR_HINT_TYPE_VAL</name></decl>
}</block></enum></type> <name>RAnalAddrHintType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_addr_hint_record_t</name> <block>{
<decl_stmt><decl><type><name>RAnalAddrHintType</name></type> <name>type</name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>type_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nword</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>jump</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>fail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>newbits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>immbase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>retval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>syntax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>opcode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>esil</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>optype</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>stackframe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>val</name></decl>;</decl_stmt>
}</block>;</union>
}</block></struct></type> <name>RAnalAddrHintRecord</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_hint_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>val</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>jump</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>fail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>ret</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>opcode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>syntax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>esil</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>new_bits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>immbase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>high</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nword</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>stackframe</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalHint</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_var_access_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>set</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalVarAccess</name>;</typedef>

<typedef>typedef <function_decl><type><name>RAnalFunction</name> <modifier>*</modifier></type>(<modifier>*</modifier> <name>RAnalGetFcnIn</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>RAnalHint</name> <modifier>*</modifier></type>(<modifier>*</modifier> <name>RAnalGetHint</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_anal_bind_t</name> <block>{
<decl_stmt><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalGetFcnIn</name></type> <name>get_fcn_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalGetHint</name></type> <name>get_hint</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalBind</name>;</typedef>

<typedef>typedef <function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>RAnalLabelAt</name>) <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_VAR_KIND_ANY</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_VAR_KIND_ARG</name></cpp:macro> <cpp:value>'a'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_VAR_KIND_REG</name></cpp:macro> <cpp:value>'r'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_VAR_KIND_BPV</name></cpp:macro> <cpp:value>'b'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_VAR_KIND_SPV</name></cpp:macro> <cpp:value>'s'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VARPREFIX</name></cpp:macro> <cpp:value>"var"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARGPREFIX</name></cpp:macro> <cpp:value>"arg"</cpp:value></cpp:define>


<typedef>typedef <type><struct>struct <name>r_anal_var_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>regname</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name>kind</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>eaddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>isarg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>argnum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>delta</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>scope</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>accesses</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>stores</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalVar</name>;</typedef>


<typedef>typedef <type><struct>struct <name>r_anal_value_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>absolute</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>memref</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>base</name></decl> ;</decl_stmt> 
<decl_stmt><decl><type><name>st64</name></type> <name>delta</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st64</name></type> <name>imm</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>mul</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut16</name></type> <name>sel</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RRegItem</name> <modifier>*</modifier></type><name>reg</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RRegItem</name> <modifier>*</modifier></type><name>regdelta</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalValue</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_OP_DIR_READ</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_DIR_WRITE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_DIR_EXEC</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_OP_DIR_REF</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
}</block></enum></type> <name>RAnalOpDirection</name>;</typedef>

<typedef>typedef <type><enum>enum <name>r_anal_data_type_t</name> <block>{
<decl><name>R_ANAL_DATATYPE_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_DATATYPE_ARRAY</name></decl>,
<decl><name>R_ANAL_DATATYPE_OBJECT</name></decl>, 
<decl><name>R_ANAL_DATATYPE_STRING</name></decl>,
<decl><name>R_ANAL_DATATYPE_CLASS</name></decl>,
<decl><name>R_ANAL_DATATYPE_BOOLEAN</name></decl>,
<decl><name>R_ANAL_DATATYPE_INT16</name></decl>,
<decl><name>R_ANAL_DATATYPE_INT32</name></decl>,
<decl><name>R_ANAL_DATATYPE_INT64</name></decl>,
<decl><name>R_ANAL_DATATYPE_FLOAT</name></decl>,
}</block></enum></type> <name>RAnalDataType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_op_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>mnemonic</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalOpPrefix</name></type> <name>prefix</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>type2</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalStackOp</name></type> <name>stackop</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>_RAnalCond</name></type> <name>cond</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nopcode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>cycles</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>failcycles</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalOpFamily</name></type> <name>family</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>eob</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>sign</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>delay</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>jump</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>fail</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalOpDirection</name></type> <name>direction</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st64</name></type> <name>ptr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>val</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ptrsize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>st64</name></type> <name>stackptr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>refptr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalVar</name> <modifier>*</modifier></type><name>var</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name><name>src</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name>dst</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RStrBuf</name></type> <name>esil</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RStrBuf</name></type> <name>opex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>reg</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ireg</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>scale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>disp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalSwitchOp</name> <modifier>*</modifier></type><name>switch_op</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalHint</name></type> <name>hint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalDataType</name></type> <name>datatype</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalOp</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_COND_SINGLE</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(!x-&gt;arg[1] || x-&gt;arg[0]==x-&gt;arg[1])</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>r_anal_cond_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name><name>arg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalCond</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_bb_t</name> <block>{
<decl_stmt><decl><type><name>RBNode</name></type> <name>_rb</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>_max_end</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>jump</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>fail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>traced</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>folded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>colorize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>fingerprint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalDiff</name> <modifier>*</modifier></type><name>diff</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalCond</name> <modifier>*</modifier></type><name>cond</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalSwitchOp</name> <modifier>*</modifier></type><name>switch_op</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name> <modifier>*</modifier></type><name>op_pos</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>op_bytes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>parent_reg_arena</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>op_pos_size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ninstr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stackptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>parent_stackptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>cmpval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmpreg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>fcns</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ref</name></decl>;</decl_stmt>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>RAnalBlock</name></cpp:undef>
}</block></struct></type> <name>RAnalBlock</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_REF_TYPE_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_REF_TYPE_CODE</name> <init>= <expr><literal type="char">'c'</literal></expr></init></decl>, 
<decl><name>R_ANAL_REF_TYPE_CALL</name> <init>= <expr><literal type="char">'C'</literal></expr></init></decl>, 
<decl><name>R_ANAL_REF_TYPE_DATA</name> <init>= <expr><literal type="char">'d'</literal></expr></init></decl>, 
<decl><name>R_ANAL_REF_TYPE_STRING</name><init>=<expr><literal type="char">'s'</literal></expr></init></decl> 
}</block></enum></type> <name>RAnalRefType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_ref_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>at</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalRefType</name></type> <name>type</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalRef</name>;</typedef>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_ref_type_tostring</name><parameter_list>(<parameter><decl><type><name>RAnalRefType</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl>


<typedef>typedef <type><struct>struct <name>r_anal_refline_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>from</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>to</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>direction</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalRefline</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_cycle_frame_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>naddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>hooks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_anal_cycle_frame_t</name></name> <modifier>*</modifier></type><name>prev</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalCycleFrame</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_cycle_hook_t</name> <block>{ 
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cycles</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalCycleHook</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_word_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilWord</name>;</typedef>


<enum>enum <block>{
<decl><name>R_ANAL_ESIL_FLAG_ZERO</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_FLAG_CARRY</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_FLAG_OVERFLOW</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_FLAG_PARITY</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_FLAG_SIGN</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

}</block>;</enum>

<enum>enum <block>{
<decl><name>R_ANAL_TRAP_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_UNHANDLED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_BREAKPOINT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_DIVBYZERO</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_WRITE_ERR</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_READ_ERR</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_EXEC_ERR</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_INVALID</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_UNALIGNED</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_TODO</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,
<decl><name>R_ANAL_TRAP_HALT</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_ANAL_ESIL_PARM_INVALID</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_PARM_REG</name></decl>,
<decl><name>R_ANAL_ESIL_PARM_NUM</name></decl>,
}</block>;</enum>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOREACHOP</name><parameter_list>(<parameter><type><name>GENERATE</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERATE(NOP) GENERATE(UNK) GENERATE(JCC) GENERATE(STR) GENERATE(STM) GENERATE(LDM) GENERATE(ADD) GENERATE(SUB) GENERATE(NEG) GENERATE(MUL) GENERATE(DIV) GENERATE(MOD) GENERATE(SMUL) GENERATE(SDIV) GENERATE(SMOD) GENERATE(SHL) GENERATE(SHR) GENERATE(AND) GENERATE(OR) GENERATE(XOR) GENERATE(NOT) GENERATE(EQ) GENERATE(LT)</cpp:value></cpp:define>
























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAKE_ENUM</name><parameter_list>(<parameter><type><name>OP</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>REIL_##OP,</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REIL_OP_STRING</name><parameter_list>(<parameter><type><name>STRING</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>#STRING,</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <block>{
<macro><name>FOREACHOP</name><argument_list>(<argument>MAKE_ENUM</argument>)</argument_list></macro>
}</block></enum></type> <name>RAnalReilOpcode</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>ARG_REG</name></decl>, 
<decl><name>ARG_TEMP</name></decl>, 
<decl><name>ARG_CONST</name></decl>, 
<decl><name>ARG_ESIL_INTERNAL</name></decl>, 
<decl><name>ARG_NONE</name></decl> 
}</block></enum></type> <name>RAnalReilArgType</name>;</typedef>


<typedef>typedef <type><struct>struct <name>r_anal_reil_arg</name> <block>{
<decl_stmt><decl><type><name>RAnalReilArgType</name></type> <name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name></type> <name>size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalReilArg</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_ref_char</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cols</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalRefStr</name>;</typedef>


<typedef>typedef <type><struct>struct <name>r_anal_reil_inst</name> <block>{
<decl_stmt><decl><type><name>RAnalReilOpcode</name></type> <name>opcode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalReilArg</name> <modifier>*</modifier></type><name><name>arg</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalReilInst</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_reil</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>old</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name><name>cur</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>lastsz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>reilNextTemp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name></type> <name>seq_num</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>skip</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cmd_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>if_buf</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>pc</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalReil</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ESIL_INTERNAL_PREFIX</name></cpp:macro> <cpp:value>'$'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ESIL_STACK_NAME</name></cpp:macro> <cpp:value>"esil.ram"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ESIL</name></cpp:macro> <cpp:value>struct r_anal_esil_t</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>r_anal_esil_source_t</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>claimed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>content</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilSource</name>;</typedef>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_sources_init</name><parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut32</name></type> <name>r_anal_esil_load_source</name><parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_anal_esil_get_source</name><parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>src_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_claim_source</name><parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>src_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_release_source</name><parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>src_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_sources_fini</name><parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAnalEsilInterruptCB</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>interrupt</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_interrupt_handler_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>ut32</name></type> <name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl>;</decl_stmt>
<function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>RAnalEsilInterruptCB</name></type> <name>cb</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RAnalEsilInterruptHandler</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_interrupt_t</name> <block>{
<decl_stmt><decl><type><name>RAnalEsilInterruptHandler</name> <modifier>*</modifier></type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>src_id</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilInterrupt</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_session_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RListIter</name> <modifier>*</modifier></type><name><name>reg</name><index>[<expr><name>R_REG_TYPE_LAST</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilSession</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalEsilHookRegWriteCB</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_callbacks_t</name> <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hook_flag_read</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>flag</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hook_command</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hook_mem_read</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mem_read</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hook_mem_write</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mem_write</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hook_reg_read</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>reg_read</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>RAnalEsilHookRegWriteCB</name></type> <name>hook_reg_write</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>reg_write</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RAnalEsilCallbacks</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_t</name> <block>{
<decl_stmt><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>stack</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>addrmask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stacksize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stackptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>skip</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nowrite</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>iotrap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>exectrap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>repeat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>parse_stop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>parse_goto</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>parse_goto_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>verbose</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>address</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>stack_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>stack_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>delay</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>jump_target</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>jump_target_set</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>trap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>trap_code</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut64</name></type> <name>old</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>cur</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut8</name></type> <name>lastsz</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>ops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>current_opstr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>sources</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SdbMini</name> <modifier>*</modifier></type><name>interrupts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RAnalEsilInterrupt</name> <modifier>*</modifier></type><name>intr0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>stats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>db_trace</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>trace_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalEsilCallbacks</name></type> <name>cb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalReil</name> <modifier>*</modifier></type><name>Reil</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd_step</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd_step_out</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd_intr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd_trap</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd_mdev</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd_todo</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd_ioer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>mdev_range</name></decl>;</decl_stmt> 
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>cmd</name>)<parameter_list>(<parameter><decl><type><name>ESIL</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>a0</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>a1</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stack_fd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>sessions</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalEsil</name>;</typedef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ESIL</name></cpp:undef>


<enum>enum <block>{
<decl><name>R_ANAL_ESIL_OP_TYPE_UNKNOWN</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_OP_TYPE_CONTROL_FLOW</name></decl>,
<decl><name>R_ANAL_ESIL_OP_TYPE_MEM_READ</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_OP_TYPE_MEM_WRITE</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_OP_TYPE_REG_WRITE</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_OP_TYPE_MATH</name> <init>= <expr><literal type="number">0x20</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_OP_TYPE_CUSTOM</name> <init>= <expr><literal type="number">0x40</literal></expr></init></decl>
}</block>;</enum>


<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAnalEsilOpCb</name>)<parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_operation_t</name> <block>{
<decl_stmt><decl><type><name>RAnalEsilOpCb</name></type> <name>code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>push</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>pop</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>type</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilOp</name>;</typedef>



<typedef>typedef <type><struct>struct <name>r_anal_esil_expr_offset_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>off</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut16</name></type> <name>idx</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilEOffset</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_ESIL_BLOCK_ENTER_NORMAL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_BLOCK_ENTER_TRUE</name></decl>,
<decl><name>R_ANAL_ESIL_BLOCK_ENTER_FALSE</name></decl>,
<decl><name>R_ANAL_ESIL_BLOCK_ENTER_GLUE</name></decl>,
}</block></enum></type> <name>RAnalEsilBlockEnterType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_basic_block_t</name> <block>{
<decl_stmt><decl><type><name>RAnalEsilEOffset</name></type> <name>first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalEsilEOffset</name></type> <name>last</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>expr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalEsilBlockEnterType</name></type> <name>enter</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalEsilBB</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_cfg_t</name> <block>{
<decl_stmt><decl><type><name>RGraphNode</name> <modifier>*</modifier></type><name>start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RGraphNode</name> <modifier>*</modifier></type><name>end</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RGraph</name> <modifier>*</modifier></type><name>g</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilCFG</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_ESIL_DFG_BLOCK_CONST</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_DFG_BLOCK_VAR</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_DFG_BLOCK_PTR</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_DFG_BLOCK_RESULT</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>R_ANAL_ESIL_DFG_BLOCK_GENERATIVE</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
}</block></enum></type> <name>RAnalEsilDFGBlockType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_dfg_t</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>regs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RContRBTree</name> <modifier>*</modifier></type><name>reg_vars</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RQueue</name> <modifier>*</modifier></type><name>todo</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>insert</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RGraph</name> <modifier>*</modifier></type><name>flow</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RGraphNode</name> <modifier>*</modifier></type><name>cur</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RGraphNode</name> <modifier>*</modifier></type><name>old</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>malloc_failed</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilDFG</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_esil_dfg_node_t</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RStrBuf</name> <modifier>*</modifier></type><name>content</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalEsilDFGBlockType</name></type> <name>type</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalEsilDFGNode</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalCmdExt</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>input</name></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalOpCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>RAnalOpMask</name></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalRegProfCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>char</name><modifier>*</modifier></type>(<modifier>*</modifier><name>RAnalRegProfGetCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalFPBBCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalFPFcnCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalDiffBBCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn2</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalDiffFcnCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>fcns</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>fcns2</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalDiffEvalCallback</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalEsilCB</name>)<parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalEsilLoopCB</name>)<parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RAnalEsilTrapCB</name>)<parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>trap_type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>trap_code</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_anal_plugin_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>license</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>author</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>esil</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>fileformat_type</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>archinfo</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ut8</name><modifier>*</modifier></type> (<modifier>*</modifier><name>anal_mask</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>at</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>preludes</name>)<parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>


<decl_stmt><decl><type><name>RAnalOpCallback</name></type> <name>op</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>RAnalCmdExt</name></type> <name>cmd_ext</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RAnalRegProfCallback</name></type> <name>set_reg_profile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalRegProfGetCallback</name></type> <name>get_reg_profile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalFPBBCallback</name></type> <name>fingerprint_bb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalFPFcnCallback</name></type> <name>fingerprint_fcn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalDiffBBCallback</name></type> <name>diff_bb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalDiffFcnCallback</name></type> <name>diff_fcn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalDiffEvalCallback</name></type> <name>diff_eval</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RAnalEsilCB</name></type> <name>esil_init</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalEsilLoopCB</name></type> <name>esil_post_loop</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalEsilTrapCB</name></type> <name>esil_trap</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RAnalEsilCB</name></type> <name>esil_fini</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalPlugin</name>;</typedef>


<function_decl><type><name>int</name> <modifier>*</modifier></type> (<name>r_anal_compare</name>) <parameter_list>(<parameter><decl><type><name>RAnalFunction</name></type></decl></parameter> , <parameter><decl><type><name>RAnalFunction</name></type></decl></parameter> )</parameter_list>;</function_decl>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_API</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>R_API</name> <name>RListRange</name><modifier>*</modifier></type> <name>r_listrange_new</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_listrange_free</name><parameter_list>(<parameter><decl><type><name>RListRange</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_listrange_add</name><parameter_list>(<parameter><decl><type><name>RListRange</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_listrange_del</name><parameter_list>(<parameter><decl><type><name>RListRange</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_listrange_resize</name><parameter_list>(<parameter><decl><type><name>RListRange</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>newsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_listrange_find_in_range</name><parameter_list>(<parameter><decl><type><name>RListRange</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_listrange_find_root</name><parameter_list>(<parameter><decl><type><name>RListRange</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAnalType</name> <modifier>*</modifier></type><name>r_anal_type_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_type_add</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>l</name></decl></parameter>, <parameter><decl><type><name>RAnalType</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalType</name> <modifier>*</modifier></type><name>r_anal_type_find</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_type_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>category</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_datatype_to_string</name><parameter_list>(<parameter><decl><type><name>RAnalDataType</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalType</name> <modifier>*</modifier></type><name>r_anal_str_to_type</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_op_nonlinear</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_op_ismemref</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_optype_to_string</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_optype_from_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_op_family_to_string</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_op_family_from_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_op_hint</name><parameter_list>(<parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>RAnalHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalType</name> <modifier>*</modifier></type><name>r_anal_type_free</name><parameter_list>(<parameter><decl><type><name>RAnalType</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalType</name> <modifier>*</modifier></type><name>r_anal_type_loadfile</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>


<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAnalBlockCb</name>)<parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAnalAddrCb</name>)<parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_block_ref</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_block_unref</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>RAnalBlock</name> <modifier>*</modifier></type><name>r_anal_create_block</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>r_anal_block_contains</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name>addr</name> <operator>&gt;=</operator> <name><name>bb</name><operator>-&gt;</operator><name>addr</name></name> <operator>&amp;&amp;</operator> <name>addr</name> <operator>&lt;</operator> <name><name>bb</name><operator>-&gt;</operator><name>addr</name></name> <operator>+</operator> <name><name>bb</name><operator>-&gt;</operator><name>size</name></name></expr>;</return>
</block_content>}</block></function>




<function_decl><type><name>R_API</name> <name>RAnalBlock</name> <modifier>*</modifier></type><name>r_anal_block_split</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_block_merge</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_delete_block</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_block_set_size</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_block_relocate</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RAnalBlock</name> <modifier>*</modifier></type><name>r_anal_get_block_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_blocks_foreach_in</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>RAnalBlockCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_get_blocks_in</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_blocks_foreach_intersect</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>RAnalBlockCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_get_blocks_intersect</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl> 



<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_block_successor_addrs_foreach</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>RAnalAddrCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_block_recurse</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>RAnalBlockCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_block_recurse_list</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>R_NULLABLE</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_block_shortest_path</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>dst</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_block_add_switch_case</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>switch_addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>case_addr</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_anal_function_new</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_function_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_add_function</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_anal_create_function</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>RAnalDiff</name> <modifier>*</modifier></type><name>diff</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_get_functions_in</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_anal_get_function_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_function_delete</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_function_relocate</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_function_rename</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_function_add_block</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_function_remove_block</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_function_linear_size</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_function_min_addr</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_function_max_addr</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_function_size_from_entry</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_function_realsize</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_function_contains</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAnal</name> <modifier>*</modifier></type><name>r_anal_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_purge</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnal</name> <modifier>*</modifier></type><name>r_anal_free</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_set_user_ptr</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_plugin_free</name> <parameter_list>(<parameter><decl><type><name>RAnalPlugin</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_add</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalPlugin</name> <modifier>*</modifier></type><name>foo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_archinfo</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_use</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_set_reg_profile</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_get_reg_profile</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_get_bbaddr</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_set_bits</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_set_os</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>os</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_set_cpu</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cpu</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_set_big_endian</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>boolean</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut8</name> <modifier>*</modifier></type><name>r_anal_mask</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>at</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_trace_bb</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_fcntype_tostring</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_bb</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>depth</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_bind</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>RAnalBind</name> <modifier>*</modifier></type><name>bnd</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_set_triplet</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>os</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_set_fcnsign</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_get_fcnsign</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sym</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAnalBlock</name> <modifier>*</modifier></type><name>r_anal_bb_from_offset</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>off</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_bb_set_offset</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><name>ut16</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut16</name></type> <name>r_anal_bb_offset_inst</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_bb_opaddr_i</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_bb_opaddr_at</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_bb_op_starts_at</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_bb_size_i</name><parameter_list>(<parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_stackop_tostring</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalOp</name> <modifier>*</modifier></type><name>r_anal_op_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_op_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_op_init</name><parameter_list>(<parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_op_fini</name><parameter_list>(<parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalVar</name> <modifier>*</modifier></type><name>get_link_var</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>faddr</name></decl></parameter>, <parameter><decl><type><name>RAnalVar</name> <modifier>*</modifier></type><name>var</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_op_reg_delta</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_op_is_eob</name><parameter_list>(<parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_op_list_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_op</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>RAnalOpMask</name></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalOp</name> <modifier>*</modifier></type><name>r_anal_op_hexstr</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hexstr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_op_to_string</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RAnalEsil</name> <modifier>*</modifier></type><name>r_anal_esil_new</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>stacksize</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>iotrap</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>addrsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_trace</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_trace_list</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_trace_show</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_set_pc</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_setup</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>romem</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stats</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nonull</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_free</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_runword</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>word</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_parse</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_dumpstack</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_mem_read</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_mem_write</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_reg_read</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>regname</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>num</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_reg_write</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_pushnum</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_push</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_esil_pop</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_set_op</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>RAnalEsilOpCb</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>push</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>pop</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_stack_free</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_get_parm_type</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_get_parm</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_condition</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_interrupts_init</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalEsilInterrupt</name> <modifier>*</modifier></type><name>r_anal_esil_interrupt_new</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>src_id</name></decl></parameter>, <parameter><decl><type><name>RAnalEsilInterruptHandler</name> <modifier>*</modifier></type><name>ih</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_interrupt_free</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnalEsilInterrupt</name> <modifier>*</modifier></type><name>intr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_set_interrupt</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnalEsilInterrupt</name> <modifier>*</modifier></type><name>intr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_fire_interrupt</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>intr_num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_load_interrupts</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnalEsilInterruptHandler</name> <modifier>*</modifier><modifier>*</modifier></type><name>handlers</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>src_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_esil_load_interrupts_from_lib</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_interrupts_fini</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_mem_ro</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mem_readonly</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_stats</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_session_list</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalEsilSession</name> <modifier>*</modifier></type><name>r_anal_esil_session_add</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_session_set</name><parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnalEsilSession</name> <modifier>*</modifier></type><name>session</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_session_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_pin_init</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_pin_fini</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_pin</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_pin_unset</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_pin_call</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_pin_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>ut32</name></type> <name>r_anal_function_cost</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_function_count_edges</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <name>int</name> <modifier>*</modifier></type><name>ebbs</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_DEPRECATE</name> <name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_anal_get_fcn_in</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_DEPRECATE</name> <name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_anal_get_fcn_in_bounds</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_anal_get_function_byname</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>reftype</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_del_locs</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_fcn_add_bb</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>,
<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>,
<parameter><decl><type><name>ut64</name></type> <name>jump</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>fail</name></decl></parameter>, <parameter><decl><type><name>R_BORROW</name> <name>RAnalDiff</name> <modifier>*</modifier></type><name>diff</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_check_fcn</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ut16</name></type> <name>bufsz</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>low</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>high</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_fcn_invalidate_read_ahead_cache</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_function_check_bp_use</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_FCN_VARKIND_LOCAL</name></cpp:macro> <cpp:value>'v'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_FCN_VARKIND_ARG</name></cpp:macro> <cpp:value>'a'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_FCN_VARKIND_FASTARG</name></cpp:macro> <cpp:value>'A'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r_anal_fcn_local_del_index</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>r_anal_fcn_var_del_byindex(x, y,R_ANAL_FCN_VARKIND_LOCAL, z)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r_anal_fcn_local_del_name</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>error</cpp:value></cpp:define>


<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_var_del_bydelta</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>fna</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>delta</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_var_del_byindex</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>fna</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_count</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_var_display</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_function_complexity</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_function_loops</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalVar</name> <modifier>*</modifier></type><name>r_anal_fcn_get_var</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_trim_jmprefs</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_del_jmprefs</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_function_get_json</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>function</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>r_anal_fcn_next</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_function_get_signature</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>function</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_str_to_fcn</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>_str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_count</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalBlock</name> <modifier>*</modifier></type><name>r_anal_fcn_bbget_in</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalBlock</name> <modifier>*</modifier></type><name>r_anal_fcn_bbget_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_fcn_bbadd</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_function_resize</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>newsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_function_purity</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier> <name>RAnalRefCmp</name>)<parameter_list>(<parameter><decl><type><name>RAnalRef</name> <modifier>*</modifier></type><name>ref</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_ref_list_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_xrefs_count</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_xrefs_type_tostring</name><parameter_list>(<parameter><decl><type><name>RAnalRefType</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalRefType</name></type> <name>r_anal_xrefs_type</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>ch</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_xrefs_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_refs_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_xrefs_get_from</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_xrefs_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_function_get_refs</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_function_get_xrefs</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_xrefs_from</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>list</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>kind</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RAnalRefType</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_xrefs_set</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RAnalRefType</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_xrefs_deln</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RAnalRefType</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_xref_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>at</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RList</name><modifier>*</modifier></type> <name>r_anal_fcn_get_vars</name><parameter_list>(<parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name><modifier>*</modifier></type> <name>r_anal_get_fcns</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_remove_parsed_type</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_save_parsed_type</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>parsed</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_var_access_clear</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>var_addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_access</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>var_addr</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ptr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>xs_type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>xs_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalVar</name> <modifier>*</modifier></type><name>r_anal_var_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_rename</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>var_addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>kind</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>old_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>new_name</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>verbose</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_var_rebase</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>diff</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_retype</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>kind</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>isarg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalVarAccess</name> <modifier>*</modifier></type><name>r_anal_var_access_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_var_list_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_var_access_list_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_var_free</name><parameter_list>(<parameter><decl><type><name>RAnalVar</name> <modifier>*</modifier></type><name>var</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_var_access_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>access</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_delete_all</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name></type> <name>kind</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_delete</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>var_addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_var_delete_byname</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_var_add</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>kind</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>isarg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_var_addr</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalVar</name> <modifier>*</modifier></type><name>r_anal_var_get</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_var_scope_to_str</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scope</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_access_add</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalVar</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>set</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_var_access_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalVar</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalVarAccess</name> <modifier>*</modifier></type><name>r_anal_var_access_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalVar</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalVar</name> <modifier>*</modifier></type><name>r_anal_var_get_byname</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_extract_vars</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_extract_rarg</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>reg_set</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>count</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>r_anal_fcn_vars_cache</name> <block>{
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>bvars</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>rvars</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>svars</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalFcnVarsCache</name>;</typedef>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_fcn_vars_cache_init</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFcnVarsCache</name> <modifier>*</modifier></type><name>cache</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_fcn_vars_cache_fini</name><parameter_list>(<parameter><decl><type><name>RAnalFcnVarsCache</name> <modifier>*</modifier></type><name>cache</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_fcn_format_sig</name><parameter_list>(<parameter><decl><type><name>R_NONNULL</name> <name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>R_NONNULL</name> <name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <name>char</name> <modifier>*</modifier></type><name>fcn_name</name></decl></parameter>,
<parameter><decl><type><name>R_NULLABLE</name> <name>RAnalFcnVarsCache</name> <modifier>*</modifier></type><name>reuse_cache</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fcn_name_pre</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fcn_name_post</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_xrefs_init</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_THRESHOLDFCN</name></cpp:macro> <cpp:value>0.7F</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ANAL_THRESHOLDBB</name></cpp:macro> <cpp:value>0.7F</cpp:value></cpp:define>


<function_decl><type><name>R_API</name> <name>RAnalDiff</name> <modifier>*</modifier></type><name>r_anal_diff_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_diff_setup</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doops</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>thbb</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>thfcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_diff_setup_i</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doops</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>thbb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>thfcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name><modifier>*</modifier></type> <name>r_anal_diff_free</name><parameter_list>(<parameter><decl><type><name>RAnalDiff</name> <modifier>*</modifier></type><name>diff</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_diff_fingerprint_bb</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>bb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>size_t</name></type> <name>r_anal_diff_fingerprint_fcn</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_diff_bb</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_diff_fcn</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>fcns</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>fcns2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_diff_eval</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAnalValue</name> <modifier>*</modifier></type><name>r_anal_value_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalValue</name> <modifier>*</modifier></type><name>r_anal_value_copy</name> <parameter_list>(<parameter><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name>ov</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalValue</name> <modifier>*</modifier></type><name>r_anal_value_new_from_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>st64</name></type> <name>r_anal_value_eval</name><parameter_list>(<parameter><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_value_to_string</name> <parameter_list>(<parameter><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_value_to_ut64</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_value_set_ut64</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name>val</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_value_free</name><parameter_list>(<parameter><decl><type><name>RAnalValue</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RAnalCond</name> <modifier>*</modifier></type><name>r_anal_cond_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalCond</name> <modifier>*</modifier></type><name>r_anal_cond_new_from_op</name><parameter_list>(<parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_cond_fini</name><parameter_list>(<parameter><decl><type><name>RAnalCond</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_cond_free</name><parameter_list>(<parameter><decl><type><name>RAnalCond</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_cond_to_string</name><parameter_list>(<parameter><decl><type><name>RAnalCond</name> <modifier>*</modifier></type><name>cond</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_cond_eval</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalCond</name> <modifier>*</modifier></type><name>cond</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalCond</name> <modifier>*</modifier></type><name>r_anal_cond_new_from_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_cond_tostring</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>cc</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_jmptbl</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jmpaddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>tablesize</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>default_addr</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>bool</name></type> <name>try_get_delta_jmptbl_info</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jmp_addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>lea_addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>table_size</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>default_case</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>try_walkthrough_jmptbl</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>depth</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>ip</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jmptbl_loc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jmptbl_off</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>sz</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>jmptbl_size</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>default_case</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>ret0</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>try_get_jmptbl_info</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>my_bb</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>table_size</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>default_case</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>walkthrough_arm_jmptbl_style</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>RAnalBlock</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>depth</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>ip</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jmptbl_loc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>sz</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jmptbl_size</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>default_case</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ret0</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RList</name><modifier>*</modifier></type> <name>r_anal_reflines_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>,
<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nlines</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>linesout</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>linescall</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_reflines_middle</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>list</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalRefStr</name> <modifier>*</modifier></type><name>r_anal_reflines_str</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>core</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>opts</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_reflines_str_free</name><parameter_list>(<parameter><decl><type><name>RAnalRefStr</name> <modifier>*</modifier></type><name>refstr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_var_list_show</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>kind</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>PJ</name><modifier>*</modifier></type> <name>pj</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_var_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>kind</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_var_all_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_var_list_dynamic</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>kind</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_cc_exist</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>convention</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_cc_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_cc_set</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>expr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_cc_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_cc_arg</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>convention</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_cc_self</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>convention</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_cc_error</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>convention</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_cc_max_arg</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_cc_ret</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>convention</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_cc_default</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_cc_func</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>func_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_noreturn_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>r_anal_data_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name><name>sbuf</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalData</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RAnalData</name> <modifier>*</modifier></type><name>r_anal_data</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>wordsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_data_kind</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalData</name> <modifier>*</modifier></type><name>r_anal_data_new_string</name> <parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>wide</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalData</name> <modifier>*</modifier></type><name>r_anal_data_new</name> <parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_data_free</name> <parameter_list>(<parameter><decl><type><name>RAnalData</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_cons.h&gt;</cpp:file></cpp:include>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_data_to_string</name><parameter_list>(<parameter><decl><type><name>RAnalData</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>RConsPrintablePalette</name> <modifier>*</modifier></type><name>pal</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_meta_free</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_meta_find_list_in</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>at</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>where</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_meta_space_unset_for</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RSpace</name> <modifier>*</modifier></type><name>space</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_space_count_for</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RSpace</name> <modifier>*</modifier></type><name>space_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_meta_enumerate</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_count</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_meta_get_string</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_meta_get_var_comment</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_meta_set_string</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_meta_set_var_comment</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_get_size</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_var_comment_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_add</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_add_with_subtype</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>subtype</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalMetaItem</name> <modifier>*</modifier></type><name>r_meta_find</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>off</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>where</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalMetaItem</name> <modifier>*</modifier></type><name>r_meta_find_any_except</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>at</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>where</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalMetaItem</name> <modifier>*</modifier></type><name>r_meta_find_in</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>off</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>where</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_cleanup</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_meta_type_to_string</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_meta_enumerate</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_list_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_meta_list_cb</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>, <parameter><decl><type><name>SdbForeachCallback</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_meta_list_offset</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>input</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_meta_item_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>_item</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalMetaItem</name> <modifier>*</modifier></type><name>r_meta_item_new</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_meta_deserialize_val</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalMetaItem</name> <modifier>*</modifier></type><name>it</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>v</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_meta_print</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RAnalMetaItem</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>, <parameter><decl><type><name>PJ</name> <modifier>*</modifier></type><name>pj</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>show_full</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_meta_set_data_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>wordsz</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_del</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_clear</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_free</name> <parameter_list>(<parameter><decl><type><name>RAnalHint</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_syntax</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>syn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_type</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_jump</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jump</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_fail</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>fail</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_newbits</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_nword</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nword</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_offset</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>typeoff</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_immbase</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>base</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_size</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_opcode</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_esil</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_pointer</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_ret</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_high</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_stackframe</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_val</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_arch</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_set_bits</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_val</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_high</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_immbase</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_nword</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_size</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_type</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_esil</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_opcode</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_syntax</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_pointer</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_ret</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_offset</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_jump</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_fail</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_newbits</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_stackframe</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_arch</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_hint_unset_bits</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>R_NULLABLE</name> <specifier>const</specifier> <name>RVector</name> <modifier>*</modifier></type><name>r_anal_addr_hints_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAnalAddrHintRecordsCb</name>)<parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RVector</name> <modifier>*</modifier></type><name>records</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_addr_hints_foreach</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalAddrHintRecordsCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAnalArchHintCb</name>)<parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_arch_hints_foreach</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalArchHintCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RAnalBitsHintCb</name>)<parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_bits_hints_foreach</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalBitsHintCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>R_API</name> <name>R_NULLABLE</name> <name>R_BORROW</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_hint_arch_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <name>ut64</name> <modifier>*</modifier></type><name>hint_addr</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_hint_bits_at</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>R_NULLABLE</name> <name>ut64</name> <modifier>*</modifier></type><name>hint_addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RAnalHint</name> <modifier>*</modifier></type><name>r_anal_hint_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl> 


<function_decl><type><name>R_API</name> <name>RAnalSwitchOp</name> <modifier>*</modifier></type><name>r_anal_switch_op_new</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>min_val</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>max_val</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>def_val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_switch_op_free</name><parameter_list>(<parameter><decl><type><name>RAnalSwitchOp</name> <modifier>*</modifier></type> <name>swop</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalCaseOp</name><modifier>*</modifier></type> <name>r_anal_switch_op_add_case</name><parameter_list>(<parameter><decl><type><name>RAnalSwitchOp</name> <modifier>*</modifier></type> <name>swop</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>jump</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RAnalCycleFrame</name><modifier>*</modifier></type> <name>r_anal_cycle_frame_new</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_cycle_frame_free</name> <parameter_list>(<parameter><decl><type><name>RAnalCycleFrame</name> <modifier>*</modifier></type><name>cf</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_fcn_label_get</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_anal_fcn_label_at</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_label_set</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_label_del</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_fcn_labels</name> <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_set_limits</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_unset_limits</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_anal_esil_to_reil_setup</name> <parameter_list>(<parameter><decl><type><name>RAnalEsil</name> <modifier>*</modifier></type><name>esil</name></decl></parameter>, <parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>romem</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stats</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_noreturn_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_noreturn_add</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_noreturn_drop</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>expr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_noreturn_at_addr</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_sign_space_count_for</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RSpace</name> <modifier>*</modifier></type><name>space</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_sign_space_unset_for</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RSpace</name> <modifier>*</modifier></type><name>space</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_sign_space_rename_for</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RSpace</name> <modifier>*</modifier></type><name>space</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>oname</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>nname</name></decl></parameter>)</parameter_list>;</function_decl>


<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RAnalCPPABI</name></type> <name>abi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>word_size</name></decl>;</decl_stmt>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>read_addr</name>) <parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut64</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RVTableContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>vtable_info_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>saddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RVector</name></type> <name>methods</name></decl>;</decl_stmt>
}</block></struct></type> <name>RVTableInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>vtable_method_info_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>vtable_offset</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RVTableMethodInfo</name>;</typedef>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_vtable_info_free</name><parameter_list>(<parameter><decl><type><name>RVTableInfo</name> <modifier>*</modifier></type><name>vtable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_anal_vtable_info_get_size</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>RVTableInfo</name> <modifier>*</modifier></type><name>vtable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_vtable_begin</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RVTableInfo</name> <modifier>*</modifier></type><name>r_anal_vtable_parse_at</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_vtable_search</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_list_vtables</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_rtti_msvc_demangle_class_name</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_msvc_print_complete_object_locator</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_msvc_print_type_descriptor</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_msvc_print_class_hierarchy_descriptor</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_msvc_print_base_class_descriptor</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_rtti_msvc_print_at_vtable</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>strict</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_msvc_recover_all</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>vt_context</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>vtables</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_itanium_print_class_type_info</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_itanium_print_si_class_type_info</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_itanium_print_vmi_class_type_info</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_itanium_print_at_vtable</name><parameter_list>(<parameter><decl><type><name>RVTableContext</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_anal_rtti_demangle_class_name</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_print_at_vtable</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_print_all</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_rtti_recover_all</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_colorize_bb</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_preludes</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_is_prelude</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>


<typedef>typedef <type><struct>struct <name>r_anal_method_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st64</name></type> <name>vtable_offset</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalMethod</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_base_class_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>class_name</name></decl>;</decl_stmt>
}</block></struct></type> <name>RAnalBaseClass</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_anal_vtable_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RAnalVTable</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>R_ANAL_CLASS_ERR_SUCCESS</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_CLASS_ERR_CLASH</name></decl>,
<decl><name>R_ANAL_CLASS_ERR_NONEXISTENT_ATTR</name></decl>,
<decl><name>R_ANAL_CLASS_ERR_NONEXISTENT_CLASS</name></decl>,
<decl><name>R_ANAL_CLASS_ERR_OTHER</name></decl>
}</block></enum></type> <name>RAnalClassErr</name>;</typedef>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_create</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_delete</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_anal_class_exists</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>SdbList</name> <modifier>*</modifier></type><name>r_anal_class_get_all</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>sorted</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_foreach</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>SdbForeachCallback</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_rename</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>old_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>new_name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_method_fini</name><parameter_list>(<parameter><decl><type><name>RAnalMethod</name> <modifier>*</modifier></type><name>meth</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_method_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>meth_name</name></decl></parameter>, <parameter><decl><type><name>RAnalMethod</name> <modifier>*</modifier></type><name>meth</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RVector</name> <modifier>*</modifier></type><name>r_anal_class_method_get_all</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_method_set</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><name>RAnalMethod</name> <modifier>*</modifier></type><name>meth</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_method_rename</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>old_meth_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>new_meth_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_method_delete</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>meth_name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_base_fini</name><parameter_list>(<parameter><decl><type><name>RAnalBaseClass</name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_base_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>base_id</name></decl></parameter>, <parameter><decl><type><name>RAnalBaseClass</name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RVector</name> <modifier>*</modifier></type><name>r_anal_class_base_get_all</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_base_set</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><name>RAnalBaseClass</name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_base_delete</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>base_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_vtable_fini</name><parameter_list>(<parameter><decl><type><name>RAnalVTable</name> <modifier>*</modifier></type><name>vtable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_vtable_get</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vtable_id</name></decl></parameter>, <parameter><decl><type><name>RAnalVTable</name> <modifier>*</modifier></type><name>vtable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RVector</name> <modifier>*</modifier></type><name>r_anal_class_vtable_get_all</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_vtable_set</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><name>RAnalVTable</name> <modifier>*</modifier></type><name>vtable</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalClassErr</name></type> <name>r_anal_class_vtable_delete</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vtable_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_list</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_list_bases</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_list_vtables</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_class_list_vtable_offset_functions</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>class_name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>offset</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RAnalEsilCFG</name> <modifier>*</modifier></type><name>r_anal_esil_cfg_expr</name><parameter_list>(<parameter><decl><type><name>RAnalEsilCFG</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>, <parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut64</name></type> <name>off</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>expr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalEsilCFG</name> <modifier>*</modifier></type><name>r_anal_esil_cfg_op</name><parameter_list>(<parameter><decl><type><name>RAnalEsilCFG</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>, <parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_cfg_merge_blocks</name><parameter_list>(<parameter><decl><type><name>RAnalEsilCFG</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_cfg_free</name><parameter_list>(<parameter><decl><type><name>RAnalEsilCFG</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RAnalEsilDFGNode</name> <modifier>*</modifier></type><name>r_anal_esil_dfg_node_new</name> <parameter_list>(<parameter><decl><type><name>RAnalEsilDFG</name> <modifier>*</modifier></type><name>edf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalEsilDFG</name> <modifier>*</modifier></type><name>r_anal_esil_dfg_new</name><parameter_list>(<parameter><decl><type><name>RReg</name> <modifier>*</modifier></type><name>regs</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_anal_esil_dfg_free</name><parameter_list>(<parameter><decl><type><name>RAnalEsilDFG</name> <modifier>*</modifier></type><name>dfg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RAnalEsilDFG</name> <modifier>*</modifier></type><name>r_anal_esil_dfg_expr</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalEsilDFG</name> <modifier>*</modifier></type><name>dfg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>expr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RStrBuf</name> <modifier>*</modifier></type><name>r_anal_esil_dfg_filter</name> <parameter_list>(<parameter><decl><type><name>RAnalEsilDFG</name> <modifier>*</modifier></type><name>dfg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RStrBuf</name> <modifier>*</modifier></type><name>r_anal_esil_dfg_filter_expr</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>expr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_anal_types_from_fcn</name><parameter_list>(<parameter><decl><type><name>RAnal</name> <modifier>*</modifier></type><name>anal</name></decl></parameter>, <parameter><decl><type><name>RAnalFunction</name> <modifier>*</modifier></type><name>fcn</name></decl></parameter>)</parameter_list>;</function_decl>


<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_null</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_6502</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_6502_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_8051</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_amd29k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_arc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_arm_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_arm_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_avr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_bf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_chip8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_cr16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_cris</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_dalvik</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_ebc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_gb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_h8300</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_hexagon</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_i4004</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_i8080</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_java</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_m68k_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_m680x_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_malbolge</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_mcore</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_mips_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_mips_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_msp430</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_nios2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_or1k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_pic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_ppc_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_ppc_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_propeller</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_riscv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_riscv_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_rsp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_sh</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_snes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_sparc_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_sparc_gnu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_sysz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_tms320</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_tms320c64x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_v810</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_v850</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_vax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_wasm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_ws</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_x86</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_x86_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_x86_im</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_x86_simple</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_x86_udis</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_xap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_xcore_cs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_xtensa</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RAnalPlugin</name></type> <name>r_anal_plugin_z80</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
