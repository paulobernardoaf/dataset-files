<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\r_util\r_x509.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R_X509_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_X509_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<typedef>typedef <type><struct>struct <name>r_x509_validity_t</name> <block>{
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>notBefore</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>notAfter</name></decl>;</decl_stmt>
}</block></struct></type> <name>RX509Validity</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_name_t</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier><modifier>*</modifier></type><name>oids</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier><modifier>*</modifier></type><name>names</name></decl>;</decl_stmt>
}</block></struct></type> <name>RX509Name</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_algorithmidentifier_t</name> <block>{
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>algorithm</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>parameters</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RX509AlgorithmIdentifier</name>;</typedef>

















<typedef>typedef <type><struct>struct <name>r_x509_authoritykeyidentifier_t</name> <block>{
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>keyIdentifier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509Name</name></type> <name>authorityCertIssuer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>authorityCertSerialNumber</name></decl>;</decl_stmt>
}</block></struct></type> <name>RX509AuthorityKeyIdentifier</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_subjectpublickeyinfo_t</name> <block>{
<decl_stmt><decl><type><name>RX509AlgorithmIdentifier</name></type> <name>algorithm</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>subjectPublicKey</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>subjectPublicKeyExponent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>subjectPublicKeyModule</name></decl>;</decl_stmt>
}</block></struct></type> <name>RX509SubjectPublicKeyInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_extension_t</name> <block>{
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>extnID</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>critical</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>extnValue</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RX509Extension</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_extensions_t</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509Extension</name> <modifier>*</modifier><modifier>*</modifier></type><name>extensions</name></decl>;</decl_stmt>
}</block></struct></type> <name>RX509Extensions</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_tbscertificate_t</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>version</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>serialNumber</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RX509AlgorithmIdentifier</name></type> <name>signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509Name</name></type> <name>issuer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509Validity</name></type> <name>validity</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509Name</name></type> <name>subject</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509SubjectPublicKeyInfo</name></type> <name>subjectPublicKeyInfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>issuerUniqueID</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>subjectUniqueID</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RX509Extensions</name></type> <name>extensions</name></decl>;</decl_stmt>
}</block></struct></type> <name>RX509TBSCertificate</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_certificate_t</name> <block>{
<decl_stmt><decl><type><name>RX509TBSCertificate</name></type> <name>tbsCertificate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509AlgorithmIdentifier</name></type> <name>algorithmIdentifier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>signature</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RX509Certificate</name>;</typedef>




<typedef>typedef <type><struct>struct <name>r_x509_crlentry</name> <block>{
<decl_stmt><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>userCertificate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>revocationDate</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RX509CRLEntry</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_x509_certificaterevocationlist</name> <block>{
<decl_stmt><decl><type><name>RX509AlgorithmIdentifier</name></type> <name>signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509Name</name></type> <name>issuer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>lastUpdate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>nextUpdate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RX509CRLEntry</name> <modifier>*</modifier><modifier>*</modifier></type><name>revokedCertificates</name></decl>;</decl_stmt>
}</block></struct></type> <name>RX509CertificateRevocationList</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RX509CertificateRevocationList</name><modifier>*</modifier></type> <name>r_x509_parse_crl</name><parameter_list>(<parameter><decl><type><name>RASN1Object</name> <modifier>*</modifier></type><name>object</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_x509_crl_to_string</name><parameter_list>(<parameter><decl><type><name>RX509CertificateRevocationList</name> <modifier>*</modifier></type><name>crl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>pad</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_x509_crl_json</name><parameter_list>(<parameter><decl><type><name>PJ</name><modifier>*</modifier></type> <name>pj</name></decl></parameter>, <parameter><decl><type><name>RX509CertificateRevocationList</name> <modifier>*</modifier></type><name>crl</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RX509Certificate</name> <modifier>*</modifier></type><name>r_x509_parse_certificate</name><parameter_list>(<parameter><decl><type><name>RASN1Object</name> <modifier>*</modifier></type><name>object</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RX509Certificate</name> <modifier>*</modifier></type><name>r_x509_parse_certificate2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_x509_free_certificate</name><parameter_list>(<parameter><decl><type><name>RX509Certificate</name><modifier>*</modifier></type> <name>certificate</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_x509_certificate_to_string</name><parameter_list>(<parameter><decl><type><name>RX509Certificate</name><modifier>*</modifier></type> <name>certificate</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>pad</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_x509_certificate_json</name><parameter_list>(<parameter><decl><type><name>PJ</name><modifier>*</modifier></type> <name>pj</name></decl></parameter>, <parameter><decl><type><name>RX509Certificate</name> <modifier>*</modifier></type><name>certificate</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_x509_certificate_dump</name><parameter_list>(<parameter><decl><type><name>RX509Certificate</name><modifier>*</modifier></type> <name>cert</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>pad</name></decl></parameter>, <parameter><decl><type><name>RStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
