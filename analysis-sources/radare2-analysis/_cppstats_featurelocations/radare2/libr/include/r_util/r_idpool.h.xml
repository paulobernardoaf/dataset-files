<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\r_util\r_idpool.h">

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R_ID_STORAGE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_ID_STORAGE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util/r_pool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util/r_queue.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <name>r_id_pool_t</name> <block>{
<decl_stmt><decl><type><name>ut32</name></type> <name>start_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>last_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>next_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RQueue</name> <modifier>*</modifier></type><name>freed_ids</name></decl>;</decl_stmt>
}</block></struct></type> <name>RIDPool</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RIDPool</name> <modifier>*</modifier></type><name>r_id_pool_new</name><parameter_list>(<parameter><decl><type><name>ut32</name></type> <name>start_id</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>last_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_id_pool_grab_id</name><parameter_list>(<parameter><decl><type><name>RIDPool</name> <modifier>*</modifier></type><name>pool</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>grabber</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_id_pool_kick_id</name><parameter_list>(<parameter><decl><type><name>RIDPool</name> <modifier>*</modifier></type><name>pool</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>kick</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_id_pool_free</name><parameter_list>(<parameter><decl><type><name>RIDPool</name> <modifier>*</modifier></type><name>pool</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>r_id_storage_t</name> <block>{
<decl_stmt><decl><type><name>RIDPool</name> <modifier>*</modifier></type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>top_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
}</block></struct></type> <name>RIDStorage</name>;</typedef>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>RIDStorageForeachCb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>ROIDStorageCompareCb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>incoming</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>cmp_res</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>R_API</name> <name>RIDStorage</name> <modifier>*</modifier></type><name>r_id_storage_new</name><parameter_list>(<parameter><decl><type><name>ut32</name></type> <name>start_id</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>last_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_id_storage_set</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_id_storage_add</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_id_storage_get</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_id_storage_delete</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_id_storage_take</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_id_storage_foreach</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>RIDStorageForeachCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_id_storage_free</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_id_storage_list</name><parameter_list>(<parameter><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>r_ordered_id_storage_t</name> <block>{
<decl_stmt><decl><type><name>ut32</name> <modifier>*</modifier></type><name>permutation</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>psize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ptop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ROIDStorageCompareCb</name></type> <name>cmp</name></decl>;</decl_stmt>
}</block></struct></type> <name>ROIDStorage</name>;</typedef>

<function_decl><type><name>R_API</name> <name>ROIDStorage</name> <modifier>*</modifier></type><name>r_oids_new</name><parameter_list>(<parameter><decl><type><name>ut32</name></type> <name>start_id</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>last_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_oids_get</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_oids_oget</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>od</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_get_id</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>od</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_get_od</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>od</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_to_front</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_to_rear</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_oids_delete</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_oids_odelete</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>od</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_oids_free</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_add</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>od</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_oids_take</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_oids_otake</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>od</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_foreach</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name><modifier>*</modifier></type> <name>storage</name></decl></parameter>, <parameter><decl><type><name>RIDStorageForeachCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_foreach_prev</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name><modifier>*</modifier></type> <name>storage</name></decl></parameter>, <parameter><decl><type><name>RIDStorageForeachCb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_insert</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>od</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_oids_sort</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut32</name></type> <name>r_oids_find</name> <parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>incoming</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_oids_last</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name> <modifier>*</modifier></type><name>r_oids_first</name><parameter_list>(<parameter><decl><type><name>ROIDStorage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
