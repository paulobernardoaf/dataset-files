<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\r_crypto.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_CRYPTO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_CRYPTO_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"r_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"r_list.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"r_crypto/r_des.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>R_LIB_VERSION_HEADER</name><argument_list>(<argument><expr><name>r_crypto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<enum>enum <block>{
<decl><name>R_CRYPTO_MODE_ECB</name></decl>,
<decl><name>R_CRYPTO_MODE_CBC</name></decl>,
<decl><name>R_CRYPTO_MODE_OFB</name></decl>,
<decl><name>R_CRYPTO_MODE_CFB</name></decl>,
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_CRYPTO_DIR_CIPHER</name></decl>,
<decl><name>R_CRYPTO_DIR_DECIPHER</name></decl>,
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>r_crypto_t</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>r_crypto_plugin_t</name></name><modifier>*</modifier></type> <name>h</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>iv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>key_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>output</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>output_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>output_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>plugins</name></decl>;</decl_stmt>
}</block></struct></type> <name>RCrypto</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_crypto_plugin_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>license</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_key_size</name>)<parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_iv</name>)<parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ivlen</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_key</name>)<parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>keylen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>direction</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>update</name>)<parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>final</name>)<parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>use</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>algo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RCryptoPlugin</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_API</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>R_API</name> <name>RCrypto</name> <modifier>*</modifier></type><name>r_crypto_init</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hard</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RCrypto</name> <modifier>*</modifier></type><name>r_crypto_as_new</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_crypto_add</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><name>RCryptoPlugin</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RCrypto</name> <modifier>*</modifier></type><name>r_crypto_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RCrypto</name> <modifier>*</modifier></type><name>r_crypto_free</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_crypto_use</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>algo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_crypto_set_key</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name><modifier>*</modifier></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>keylen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>direction</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_crypto_set_iv</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ivlen</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_crypto_update</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_crypto_final</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_crypto_append</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut8</name> <modifier>*</modifier></type><name>r_crypto_get_output</name><parameter_list>(<parameter><decl><type><name>RCrypto</name> <modifier>*</modifier></type><name>cry</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_crypto_name</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>bit</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_aes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_des</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_rc4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_xor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_blowfish</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_rc2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_rot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_rol</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_ror</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_base64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_base91</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_aes_cbc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_punycode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_rc6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_cps2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RCryptoPlugin</name></type> <name>r_crypto_plugin_serpent</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_RC2</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_RC4</name></cpp:macro> <cpp:value>1&lt;&lt;1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_RC6</name></cpp:macro> <cpp:value>1&lt;&lt;2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_AES_ECB</name></cpp:macro> <cpp:value>1&lt;&lt;3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_AES_CBC</name></cpp:macro> <cpp:value>1&lt;&lt;4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_ROR</name></cpp:macro> <cpp:value>1&lt;&lt;5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_ROL</name></cpp:macro> <cpp:value>1&lt;&lt;6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_ROT</name></cpp:macro> <cpp:value>1&lt;&lt;7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_BLOWFISH</name></cpp:macro> <cpp:value>1&lt;&lt;8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_CPS2</name></cpp:macro> <cpp:value>1&lt;&lt;9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_DES_ECB</name></cpp:macro> <cpp:value>1&lt;&lt;10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_XOR</name></cpp:macro> <cpp:value>1&lt;&lt;11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_SERPENT</name></cpp:macro> <cpp:value>1&lt;&lt;12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_CRYPTO_ALL</name></cpp:macro> <cpp:value>0xFFFF</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
