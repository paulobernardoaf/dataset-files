<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\r_fs.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_FS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_FS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_list.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bind.h&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_io.h&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_cons.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>R_LIB_VERSION_HEADER</name> <argument_list>(<argument><expr><name>r_fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<struct_decl>struct <name>r_fs_plugin_t</name>;</struct_decl>
<struct_decl>struct <name>r_fs_root_t</name>;</struct_decl>
<struct_decl>struct <name>r_fs_t</name>;</struct_decl>

<typedef>typedef <type><struct>struct <name>r_fs_t</name> <block>{
<decl_stmt><decl><type><name>RIOBind</name></type> <name>iob</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RCoreBind</name></type> <name>cob</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RConsBind</name></type> <name>csb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>plugins</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>roots</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>view</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
}</block></struct></type> <name>RFS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_fs_partition_plugin_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
}</block></struct></type> <name>RFSPartitionPlugin</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_fs_file_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>off</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_fs_plugin_t</name></name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_fs_root_t</name></name> <modifier>*</modifier></type><name>root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RFSFile</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_fs_root_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>delta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_fs_plugin_t</name></name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RIOBind</name></type> <name>iob</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RCoreBind</name></type> <name>cob</name></decl>;</decl_stmt>
}</block></struct></type> <name>RFSRoot</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_fs_plugin_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>license</name></decl>;</decl_stmt>
<function_decl><type><name>RFSFile</name><modifier>*</modifier></type> (<modifier>*</modifier><name>slurp</name>)<parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RFSFile</name><modifier>*</modifier></type> (<modifier>*</modifier><name>open</name>)<parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>create</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>unlink</name>)<parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>write</name>)<parameter_list>(<parameter><decl><type><name>RFSFile</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>read</name>)<parameter_list>(<parameter><decl><type><name>RFSFile</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>close</name>)<parameter_list>(<parameter><decl><type><name>RFSFile</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>dir</name>)<parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>view</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mount</name>)<parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>umount</name>)<parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RFSPlugin</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_fs_partition_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>number</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
}</block></struct></type> <name>RFSPartition</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_fs_shell_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>cwd</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>set_prompt</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prompt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> (<modifier>*</modifier><name>readline</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hist_add</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>line</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RFSShell</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FS_FILE_TYPE_MOUNTPOINT</name></cpp:macro> <cpp:value>'m'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FS_FILE_TYPE_DIRECTORY</name></cpp:macro> <cpp:value>'d'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FS_FILE_TYPE_REGULAR</name></cpp:macro> <cpp:value>'r'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FS_FILE_TYPE_DELETED</name></cpp:macro> <cpp:value>'x'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FS_FILE_TYPE_SPECIAL</name></cpp:macro> <cpp:value>'s'</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FS_FILE_TYPE_MOUNT</name></cpp:macro> <cpp:value>'m'</cpp:value></cpp:define>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RFSPartitionIterator</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>disk</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <type><struct>struct <name>r_fs_partition_type_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RFSPartitionIterator</name></type> <name>iterate</name></decl>;</decl_stmt>

}</block></struct></type> <name>RFSPartitionType</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FS_PARTITIONS_LENGTH</name></cpp:macro> <cpp:value>(int)(sizeof (partitions)/sizeof(RFSPartitionType)-1)</cpp:value></cpp:define>

<enum>enum <block>{
<decl><name>R_FS_VIEW_NORMAL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_FS_VIEW_DELETED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_FS_VIEW_SPECIAL</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_FS_VIEW_ALL</name> <init>= <expr><literal type="number">0xff</literal></expr></init></decl>,
}</block>;</enum>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_API</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>R_API</name> <name>RFS</name> <modifier>*</modifier></type><name>r_fs_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_view</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>view</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_free</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_add</name><parameter_list>(<parameter><decl><type><name>RFS</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>RFSPlugin</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_del</name><parameter_list>(<parameter><decl><type><name>RFS</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>RFSPlugin</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RFSRoot</name> <modifier>*</modifier></type><name>r_fs_mount</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fstype</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>delta</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_fs_umount</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_fs_root</name><parameter_list>(<parameter><decl><type><name>RFS</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RFSFile</name> <modifier>*</modifier></type><name>r_fs_open</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>create</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_close</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><name>RFSFile</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_fs_read</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><name>RFSFile</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_fs_write</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><name>RFSFile</name><modifier>*</modifier></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RFSFile</name> <modifier>*</modifier></type><name>r_fs_slurp</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_fs_dir</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_fs_dir_dump</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_fs_find_name</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>glob</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_fs_find_off</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>off</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_fs_partitions</name><parameter_list>(<parameter><decl><type><name>RFS</name><modifier>*</modifier></type> <name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ptype</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>delta</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_fs_name</name><parameter_list>(<parameter><decl><type><name>RFS</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>offset</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_fs_prompt</name><parameter_list>(<parameter><decl><type><name>RFS</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>root</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_fs_check</name><parameter_list>(<parameter><decl><type><name>RFS</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_fs_shell_prompt</name><parameter_list>(<parameter><decl><type><name>RFSShell</name> <modifier>*</modifier></type><name>shell</name></decl></parameter>, <parameter><decl><type><name>RFS</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>root</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RFSFile</name> <modifier>*</modifier></type><name>r_fs_file_new</name><parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_file_free</name><parameter_list>(<parameter><decl><type><name>RFSFile</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name><modifier>*</modifier></type> <name>r_fs_file_copy_abs_path</name><parameter_list>(<parameter><decl><type><name>RFSFile</name><modifier>*</modifier></type> <name>file</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RFSRoot</name> <modifier>*</modifier></type><name>r_fs_root_new</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>delta</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_root_free</name><parameter_list>(<parameter><decl><type><name>RFSRoot</name> <modifier>*</modifier></type><name>root</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RFSPartition</name> <modifier>*</modifier></type><name>r_fs_partition_new</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_fs_partition_free</name><parameter_list>(<parameter><decl><type><name>RFSPartition</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_fs_partition_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>part</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_fs_partition_type_get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_fs_partition_get_size</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl> 


<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_io</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_r2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_ext2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_fat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_ntfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_hfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_hfsplus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_reiserfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_tar</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_iso9660</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_udf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_ufs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_ufs2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_sfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_tar</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_btrfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_jfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_afs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_affs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_cpio</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_xfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_fb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_minix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RFSPlugin</name></type> <name>r_fs_plugin_posix</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
