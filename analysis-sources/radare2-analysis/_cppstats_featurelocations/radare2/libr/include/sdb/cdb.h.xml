<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\sdb\cdb.h">

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CDB_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDB_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"types.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KVLSZ</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDB_MAX_KEY</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDB_MAX_VALUE</name></cpp:macro> <cpp:value>0xffffff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDB_HASHSTART</name></cpp:macro> <cpp:value>5381</cpp:value></cpp:define>

<struct>struct <name>cdb</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>map</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>loop</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>khash</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>kpos</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>hpos</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>hslots</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>dpos</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>dlen</name></decl>;</decl_stmt> 
}</block>;</struct>


<function_decl><type><name>bool</name></type> <name>cdb_getkvlen</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb</name></name> <modifier>*</modifier></type><name>db</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>klen</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>vlen</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>pos</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>cdb_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>cdb_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>cdb_findstart</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>cdb_read</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>cdb_findnext</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>u</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>ut32</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>cdb_datapos</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((c)-&gt;dpos)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>cdb_datalen</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((c)-&gt;dlen)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
