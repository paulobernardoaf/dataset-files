<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\libr\include\r_bin.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_BIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_BIN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_io.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_cons.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_list.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_bin_dwarf.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_pdb.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>R_LIB_VERSION_HEADER</name> <argument_list>(<argument><expr><name>r_bin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_DBG_STRIPPED</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_DBG_STATIC</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_DBG_LINENUMS</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_DBG_SYMS</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_DBG_RELOCS</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_ENTRY_TYPE_PROGRAM</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_ENTRY_TYPE_MAIN</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_ENTRY_TYPE_INIT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_ENTRY_TYPE_FINI</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_ENTRY_TYPE_TLS</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_ENTRY_TYPE_PREINIT</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_SIZEOF_STRINGS</name></cpp:macro> <cpp:value>512</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_MAX_ARCH</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_ALL</name></cpp:macro> <cpp:value>UT64_MAX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_UNK</name></cpp:macro> <cpp:value>0x000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_ENTRIES</name></cpp:macro> <cpp:value>0x000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_IMPORTS</name></cpp:macro> <cpp:value>0x000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_SYMBOLS</name></cpp:macro> <cpp:value>0x000004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_SECTIONS</name></cpp:macro> <cpp:value>0x000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_INFO</name></cpp:macro> <cpp:value>0x000010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_OPERATION</name></cpp:macro> <cpp:value>0x000020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_HELP</name></cpp:macro> <cpp:value>0x000040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_STRINGS</name></cpp:macro> <cpp:value>0x000080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_FIELDS</name></cpp:macro> <cpp:value>0x000100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_LIBS</name></cpp:macro> <cpp:value>0x000200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_SRCLINE</name></cpp:macro> <cpp:value>0x000400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_MAIN</name></cpp:macro> <cpp:value>0x000800</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_EXTRACT</name></cpp:macro> <cpp:value>0x001000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_RELOCS</name></cpp:macro> <cpp:value>0x002000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_LISTARCHS</name></cpp:macro> <cpp:value>0x004000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_CREATE</name></cpp:macro> <cpp:value>0x008000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_CLASSES</name></cpp:macro> <cpp:value>0x010000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_DWARF</name></cpp:macro> <cpp:value>0x020000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_SIZE</name></cpp:macro> <cpp:value>0x040000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_PDB</name></cpp:macro> <cpp:value>0x080000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_PDB_DWNLD</name></cpp:macro> <cpp:value>0x100000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_DLOPEN</name></cpp:macro> <cpp:value>0x200000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_EXPORTS</name></cpp:macro> <cpp:value>0x400000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_VERSIONINFO</name></cpp:macro> <cpp:value>0x800000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_PACKAGE</name></cpp:macro> <cpp:value>0x1000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_HEADER</name></cpp:macro> <cpp:value>0x2000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_LISTPLUGINS</name></cpp:macro> <cpp:value>0x4000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_RESOURCES</name></cpp:macro> <cpp:value>0x8000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_INITFINI</name></cpp:macro> <cpp:value>0x10000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_SEGMENTS</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_HASHES</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_SIGNATURE</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_TRYCATCH</name></cpp:macro> <cpp:value>0x100000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_REQ_SECTIONS_MAPPING</name></cpp:macro> <cpp:value>0x200000000</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_CLASS</name></cpp:macro> <cpp:value>0x0000000000000001L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_STATIC</name></cpp:macro> <cpp:value>0x0000000000000002L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_PUBLIC</name></cpp:macro> <cpp:value>0x0000000000000004L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_PRIVATE</name></cpp:macro> <cpp:value>0x0000000000000008L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_PROTECTED</name></cpp:macro> <cpp:value>0x0000000000000010L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_INTERNAL</name></cpp:macro> <cpp:value>0x0000000000000020L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_OPEN</name></cpp:macro> <cpp:value>0x0000000000000040L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_FILEPRIVATE</name></cpp:macro> <cpp:value>0x0000000000000080L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_FINAL</name></cpp:macro> <cpp:value>0x0000000000000100L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_VIRTUAL</name></cpp:macro> <cpp:value>0x0000000000000200L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_CONST</name></cpp:macro> <cpp:value>0x0000000000000400L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_MUTATING</name></cpp:macro> <cpp:value>0x0000000000000800L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_ABSTRACT</name></cpp:macro> <cpp:value>0x0000000000001000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_SYNCHRONIZED</name></cpp:macro> <cpp:value>0x0000000000002000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_NATIVE</name></cpp:macro> <cpp:value>0x0000000000004000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_BRIDGE</name></cpp:macro> <cpp:value>0x0000000000008000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_VARARGS</name></cpp:macro> <cpp:value>0x0000000000010000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_SYNTHETIC</name></cpp:macro> <cpp:value>0x0000000000020000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_STRICT</name></cpp:macro> <cpp:value>0x0000000000040000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_MIRANDA</name></cpp:macro> <cpp:value>0x0000000000080000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_CONSTRUCTOR</name></cpp:macro> <cpp:value>0x0000000000100000L</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_METH_DECLARED_SYNCHRONIZED</name></cpp:macro> <cpp:value>0x0000000000200000L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_LOCAL_STR</name></cpp:macro> <cpp:value>"LOCAL"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_GLOBAL_STR</name></cpp:macro> <cpp:value>"GLOBAL"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_WEAK_STR</name></cpp:macro> <cpp:value>"WEAK"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_NUM_STR</name></cpp:macro> <cpp:value>"NUM"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_LOOS_STR</name></cpp:macro> <cpp:value>"LOOS"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_HIOS_STR</name></cpp:macro> <cpp:value>"HIOS"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_LOPROC_STR</name></cpp:macro> <cpp:value>"LOPROC"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_HIPROC_STR</name></cpp:macro> <cpp:value>"HIPROC"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_BIND_UNKNOWN_STR</name></cpp:macro> <cpp:value>"UNKNOWN"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_NOTYPE_STR</name></cpp:macro> <cpp:value>"NOTYPE"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_OBJECT_STR</name></cpp:macro> <cpp:value>"OBJ"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_FUNC_STR</name></cpp:macro> <cpp:value>"FUNC"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_METH_STR</name></cpp:macro> <cpp:value>"METH"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_STATIC_STR</name></cpp:macro> <cpp:value>"STATIC"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_SECTION_STR</name></cpp:macro> <cpp:value>"SECT"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_FILE_STR</name></cpp:macro> <cpp:value>"FILE"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_COMMON_STR</name></cpp:macro> <cpp:value>"COMMON"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_TLS_STR</name></cpp:macro> <cpp:value>"TLS"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_NUM_STR</name></cpp:macro> <cpp:value>"NUM"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_LOOS_STR</name></cpp:macro> <cpp:value>"LOOS"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_HIOS_STR</name></cpp:macro> <cpp:value>"HIOS"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_LOPROC_STR</name></cpp:macro> <cpp:value>"LOPROC"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_HIPROC_STR</name></cpp:macro> <cpp:value>"HIPROC"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_SPECIAL_SYM_STR</name></cpp:macro> <cpp:value>"SPCL"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_TYPE_UNKNOWN_STR</name></cpp:macro> <cpp:value>"UNK"</cpp:value></cpp:define>

<enum>enum <block>{
<decl><name>R_BIN_SYM_ENTRY</name></decl>,
<decl><name>R_BIN_SYM_INIT</name></decl>,
<decl><name>R_BIN_SYM_MAIN</name></decl>,
<decl><name>R_BIN_SYM_FINI</name></decl>,
<decl><name>R_BIN_SYM_LAST</name></decl>
}</block>;</enum>



<enum>enum <block>{
<decl><name>R_BIN_NM_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_BIN_NM_JAVA</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_BIN_NM_C</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>R_BIN_NM_GO</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">2</literal></expr></init></decl>,
<decl><name>R_BIN_NM_CXX</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">3</literal></expr></init></decl>,
<decl><name>R_BIN_NM_OBJC</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">4</literal></expr></init></decl>,
<decl><name>R_BIN_NM_SWIFT</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">5</literal></expr></init></decl>,
<decl><name>R_BIN_NM_DLANG</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">6</literal></expr></init></decl>,
<decl><name>R_BIN_NM_MSVC</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">7</literal></expr></init></decl>,
<decl><name>R_BIN_NM_RUST</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">8</literal></expr></init></decl>,
<decl><name>R_BIN_NM_KOTLIN</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">9</literal></expr></init></decl>,
<decl><name>R_BIN_NM_BLOCKS</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">31</literal></expr></init></decl>,
<decl><name>R_BIN_NM_ANY</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_STRING_TYPE_DETECT</name> <init>= <expr><literal type="char">'?'</literal></expr></init></decl>,
<decl><name>R_STRING_TYPE_ASCII</name> <init>= <expr><literal type="char">'a'</literal></expr></init></decl>,
<decl><name>R_STRING_TYPE_UTF8</name> <init>= <expr><literal type="char">'u'</literal></expr></init></decl>,
<decl><name>R_STRING_TYPE_WIDE</name> <init>= <expr><literal type="char">'w'</literal></expr></init></decl>, 
<decl><name>R_STRING_TYPE_WIDE32</name> <init>= <expr><literal type="char">'W'</literal></expr></init></decl>, 
<decl><name>R_STRING_TYPE_BASE64</name> <init>= <expr><literal type="char">'b'</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_BIN_CLASS_PRIVATE</name></decl>,
<decl><name>R_BIN_CLASS_PUBLIC</name></decl>,
<decl><name>R_BIN_CLASS_FRIENDLY</name></decl>,
<decl><name>R_BIN_CLASS_PROTECTED</name></decl>,
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_BIN_RELOC_8</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>R_BIN_RELOC_16</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
<decl><name>R_BIN_RELOC_32</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>,
<decl><name>R_BIN_RELOC_64</name> <init>= <expr><literal type="number">64</literal></expr></init></decl>
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_BIN_TYPE_DEFAULT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_BIN_TYPE_CORE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>r_bin_addr_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>vaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>paddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>hvaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>hpaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinAddr</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_hash_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>from</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>to</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name><name>buf</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinHash</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_file_hash_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hex</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinFileHash</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_info_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>bclass</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rclass</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>machine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>os</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>subsystem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rpath</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>guid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>debug_file_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>lang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>file_hashes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>has_va</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>has_pi</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>has_canary</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>has_retguard</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>has_sanitizers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>has_crypto</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>has_nx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>big_endian</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_lit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>actual_checksum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>claimed_checksum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pe_overlay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>dbg_info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinHash</name></type> <name><name>sum</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>baddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>intrp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>compiler</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_object_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>baddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st64</name></type> <name>baddr_shift</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>loadaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>boffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>obj_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>sections</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>imports</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>symbols</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>entries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>fields</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>libs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBNode</name> <modifier>*</modifier></type><name>relocs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>strings</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>classes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HtPP</name> <modifier>*</modifier></type><name>classes_ht</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HtPP</name> <modifier>*</modifier></type><name>methods_ht</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>lines</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HtUP</name> <modifier>*</modifier></type><name>strings_db</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>mem</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>maps</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>regstate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinInfo</name> <modifier>*</modifier></type><name>info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinAddr</name> <modifier>*</modifier></type><name><name>binsym</name><index>[<expr><name>R_BIN_SYM_LAST</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_bin_plugin_t</name></name> <modifier>*</modifier></type><name>plugin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lang</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>kv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>addr2klassmethod</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>bin_obj</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RBinObject</name>;</typedef>



<typedef>typedef <type><struct>struct <name>r_bin_file_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rawstr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>strmode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinObject</name> <modifier>*</modifier></type><name>o</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>xtr_obj</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>loadaddr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>minstrlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>maxstrlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>narch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_bin_xtr_plugin_t</name></name> <modifier>*</modifier></type><name>curxtr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>xtr_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb_addrinfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_bin_t</name></name> <modifier>*</modifier></type><name>rbin</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinFile</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_file_options_t</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>rawstr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>baddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>laddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>paddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>plugname</name></decl>;</decl_stmt> 

}</block></struct></type> <name>RBinFileOptions</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>cur</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>narch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>debase64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>minstrlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>maxstrlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>maxstrbuf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rawstr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RIDStorage</name> <modifier>*</modifier></type><name>ids</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>plugins</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>binxtrs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>binldrs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>binfiles</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PrintfCallback</name></type> <name>cb_printf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>loadany</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RIOBind</name></type> <name>iob</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RConsBind</name></type> <name>consb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>force</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>is_debugger</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>want_dbginfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>filter</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name>strfilter</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>strpurge</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>srcdir</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>prefix</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>filter_rules</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>demanglercmd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>verbose</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>use_xtr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>use_ldr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RStrConstPool</name></type> <name>constpool</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBin</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_xtr_metadata_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>libname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>machine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>xtr_type</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinXtrMetadata</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>FREE_XTR</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>xtr_obj</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <type><struct>struct <name>r_bin_xtr_extract_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>baddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>laddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>file_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>loaded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinXtrMetadata</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinXtrData</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RBinXtrData</name> <modifier>*</modifier></type><name>r_bin_xtrdata_new</name><parameter_list>(<parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>file_count</name></decl></parameter>, <parameter><decl><type><name>RBinXtrMetadata</name> <modifier>*</modifier></type><name>metadata</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_xtrdata_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>r_bin_xtr_plugin_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>license</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>check_buffer</name>)<parameter_list>(<parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>RBinXtrData</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>extract_from_bytes</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RBinXtrData</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>extract_from_buffer</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>extractall_from_bytes</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>extractall_from_buffer</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RBinXtrData</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>extract</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>extractall</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>load</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>size</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>destroy</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>free_xtr</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>xtr_obj</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RBinXtrPlugin</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_ldr_plugin_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>license</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>load</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RBinLdrPlugin</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_arch_options_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinArchOptions</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_trycatch_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>source</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>from</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>to</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>filter</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinTrycatch</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RBinTrycatch</name> <modifier>*</modifier></type><name>r_bin_trycatch_new</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>source</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>to</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>handler</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_trycatch_free</name><parameter_list>(<parameter><decl><type><name>RBinTrycatch</name> <modifier>*</modifier></type><name>tc</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>r_bin_plugin_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>author</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>license</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>fini</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Sdb</name> <modifier>*</modifier></type> (<modifier>*</modifier><name>get_sdb</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>load_buffer</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>bin_obj</name></decl></parameter>, <parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>loadaddr</name></decl></parameter>, <parameter><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>sdb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ut64</name></type> (<modifier>*</modifier><name>size</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>destroy</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>check_bytes</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>check_buffer</name>)<parameter_list>(<parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ut64</name></type> (<modifier>*</modifier><name>baddr</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ut64</name></type> (<modifier>*</modifier><name>boffset</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RBinAddr</name><modifier>*</modifier></type> (<modifier>*</modifier><name>binsym</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>entries</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>sections</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_BORROW</name> <name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>lines</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>symbols</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>imports</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>strings</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RBinInfo</name><modifier>*</modifier></type> (<modifier>*</modifier><name>info</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>fields</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>libs</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>relocs</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>trycatch</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>classes</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>mem</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>patch_relocs</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>maps</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RList</name><modifier>*</modifier></type> (<modifier>*</modifier><name>hashes</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>header</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name><modifier>*</modifier></type> (<modifier>*</modifier><name>signature</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>json</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>demangle_type</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name><name>struct</name> <name>r_bin_dbginfo_t</name></name> <modifier>*</modifier></type><name>dbginfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>r_bin_write_t</name></name> <modifier>*</modifier></type><name>write</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_offset</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name><modifier>*</modifier></type> (<modifier>*</modifier><name>get_name</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>simplified</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ut64</name></type> (<modifier>*</modifier><name>get_vaddr</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>baddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>paddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>RBuffer</name><modifier>*</modifier></type> (<modifier>*</modifier><name>create</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>code</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>codelen</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>datalen</name></decl></parameter>, <parameter><decl><type><name>RBinArchOptions</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name><modifier>*</modifier></type> (<modifier>*</modifier><name>demangle</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name><modifier>*</modifier></type> (<modifier>*</modifier><name>regstate</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>file_type</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>int</name></type> <name>minstrlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name>strfilter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinPlugin</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>RBinSymbollCallback</name>)<parameter_list>(<parameter><decl><type><name>RBinObject</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>symbol</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_bin_section_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>vsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>vaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>paddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>perm</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_strings</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>add</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>is_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_segment</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinSection</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_class_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>super</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>visibility_str</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>methods</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>fields</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>visibility</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinClass</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RBinSectionName</name></cpp:macro> <cpp:value>r_offsetof(RBinSection, name)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RBinSectionOffset</name></cpp:macro> <cpp:value>r_offsetof(RBinSection, offset)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBASE_PADDR</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>l</name></type></parameter>, <parameter><type><name>type_t</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>do { RListIter *_it;type_t *_el;r_list_foreach ((l), _it, _el) { _el-&gt;paddr += (o)-&gt;loadaddr;}} while (0)</cpp:value></cpp:define>









<typedef>typedef <type><struct>struct <name>r_bin_symbol_t</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>dname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>libname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>classname</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>forwarder</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>bind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rtype</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_imported</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>visibility_str</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>ut64</name></type> <name>vaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>paddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ordinal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>visibility</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>method_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dup_count</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinSymbol</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_import_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>libname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>bind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>classname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>descriptor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ordinal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>visibility</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinImport</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_reloc_t</name> <block>{
<decl_stmt><decl><type><name>ut8</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut8</name></type> <name>additive</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinSymbol</name> <modifier>*</modifier></type><name>symbol</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinImport</name> <modifier>*</modifier></type><name>import</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>st64</name></type> <name>addend</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>vaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>paddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>visibility</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>bool</name></type> <name>is_ifunc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBNode</name></type> <name>vrb</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinReloc</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_string_t</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>string</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>vaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>paddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>ordinal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name>type</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RBinString</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_field_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>vaddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>paddr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>visibility</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>comment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>format_named</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>flags</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinField</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RBinField</name> <modifier>*</modifier></type><name>r_bin_field_new</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>paddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>comment</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>format_named</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_field_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>r_bin_mem_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>perms</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>mirrors</name></decl>;</decl_stmt> 
}</block></struct></type> <name>RBinMem</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_map_t</name> <block>{
<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>perms</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinMap</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_dbginfo_t</name> <block>{
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_line</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RBinDbgInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_bin_write_t</name> <block>{
<function_decl><type><name>ut64</name></type> (<modifier>*</modifier><name>scn_resize</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>scn_perms</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>perms</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>rpath_del</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>entry</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>addlib</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>lib</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>RBinWrite</name>;</typedef>




<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RBinGetOffset</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>RBinGetName</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>sd</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>RList</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>RBinGetSections</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>RBinSection</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>RBinGetSectionAt</name>)<parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>RBinDemangle</name>)<parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>def</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>libs</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>r_bin_bind_t</name> <block>{
<decl_stmt><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinGetOffset</name></type> <name>get_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinGetName</name></type> <name>get_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinGetSections</name></type> <name>get_sections</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinGetSectionAt</name></type> <name>get_vsect_at</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RBinDemangle</name></type> <name>demangle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>visibility</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinBind</name>;</typedef>

<function_decl><type><name>R_IPI</name> <name>RBinSection</name> <modifier>*</modifier></type><name>r_bin_section_new</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_IPI</name> <name>void</name></type> <name>r_bin_section_free</name><parameter_list>(<parameter><decl><type><name>RBinSection</name> <modifier>*</modifier></type><name>bs</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_info_free</name><parameter_list>(<parameter><decl><type><name>RBinInfo</name> <modifier>*</modifier></type><name>rb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_import_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>_imp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_symbol_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>_sym</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinSymbol</name> <modifier>*</modifier></type><name>r_bin_symbol_new</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>paddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_string_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>_str</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_API</name></expr></argument>)</argument_list></call></expr></cpp:if>

<typedef>typedef <type><struct>struct <name>r_bin_options_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pluginname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut64</name></type> <name>baseaddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>loadaddr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ut64</name></type> <name>sz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>xtr_idx</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>rawstr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl>;</decl_stmt>
}</block></struct></type> <name>RBinOptions</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RBinImport</name> <modifier>*</modifier></type><name>r_bin_import_clone</name><parameter_list>(<parameter><decl><type><name>RBinImport</name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_bin_symbol_name</name><parameter_list>(<parameter><decl><type><name>RBinSymbol</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>RBinSymbolCallback</name>)<parameter_list>(<parameter><decl><type><name>RBinObject</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>RBinSymbol</name> <modifier>*</modifier></type><name>symbol</name></decl></parameter>)</parameter_list>;</function_decl></typedef>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_options_init</name><parameter_list>(<parameter><decl><type><name>RBinOptions</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>baseaddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>loadaddr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rawstr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_arch_options_init</name><parameter_list>(<parameter><decl><type><name>RBinArchOptions</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RBin</name> <modifier>*</modifier></type><name>r_bin_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_free</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_open</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>RBinOptions</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_open_io</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBinOptions</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_open_buf</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>RBinOptions</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_reload</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>bf_id</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>baseaddr</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_bind</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>RBinBind</name> <modifier>*</modifier></type><name>bnd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_add</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBinPlugin</name> <modifier>*</modifier></type><name>foo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_xtr_add</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBinXtrPlugin</name> <modifier>*</modifier></type><name>foo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_ldr_add</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBinLdrPlugin</name> <modifier>*</modifier></type><name>foo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_list</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_list_plugin</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>json</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinPlugin</name> <modifier>*</modifier></type><name>r_bin_get_binplugin_by_bytes</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>bytes</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>sz</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinPlugin</name> <modifier>*</modifier></type><name>r_bin_get_binplugin_by_buffer</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_force_plugin</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pname</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_get_baddr</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_file_get_baddr</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_set_user_ptr</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinInfo</name> <modifier>*</modifier></type><name>r_bin_get_info</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_set_baddr</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>baddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_get_laddr</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_get_size</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinAddr</name> <modifier>*</modifier></type><name>r_bin_get_sym</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sym</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_raw_strings</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>min</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_dump_strings</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>min</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>raw</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_entries</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_fields</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_imports</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_libs</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBNode</name> <modifier>*</modifier></type><name>r_bin_patch_relocs</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_patch_relocs_list</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBNode</name> <modifier>*</modifier></type><name>r_bin_get_relocs</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_relocs_list</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_sections</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_classes</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_strings</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_file_get_trycatch</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_symbols</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_reset_strings</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_is_string</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>va</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_is_big_endian</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_is_static</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_get_vaddr</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>paddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_file_get_vaddr</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>paddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_a2b</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_load_languages</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinFile</name> <modifier>*</modifier></type><name>r_bin_cur</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinObject</name> <modifier>*</modifier></type><name>r_bin_cur_object</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_select</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_select_bfid</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>bf_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_use_arch</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_list_archs</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBuffer</name> <modifier>*</modifier></type><name>r_bin_create</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>plugin_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>code</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>codelen</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>datalen</name></decl></parameter>, <parameter><decl><type><name>RBinArchOptions</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBuffer</name> <modifier>*</modifier></type><name>r_bin_package</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>files</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_bin_string_type</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_bin_entry_type_string</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>etype</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_object_new_from_xtr_data</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>baseaddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>loadaddr</name></decl></parameter>, <parameter><decl><type><name>RBinXtrData</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_close</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_file_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>bf_</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RBinFile</name> <modifier>*</modifier></type><name>r_bin_file_at</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinFile</name> <modifier>*</modifier></type><name>r_bin_file_find_by_object_id</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>binobj_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_file_get_symbols</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_file_get_vaddr</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>paddr</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RBinClass</name> <modifier>*</modifier></type><name>r_bin_file_add_class</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>super</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>view</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinSymbol</name> <modifier>*</modifier></type><name>r_bin_file_add_method</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>classname</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nargs</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinField</name> <modifier>*</modifier></type><name>r_bin_file_add_field</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>classname</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RBinFile</name> <modifier>*</modifier></type><name>r_bin_file_find_by_arch_bits</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinFile</name> <modifier>*</modifier></type><name>r_bin_file_find_by_id</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>bin_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinFile</name> <modifier>*</modifier></type><name>r_bin_file_find_by_fd</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>bin_fd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinFile</name> <modifier>*</modifier></type><name>r_bin_file_find_by_name</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_set_cur_binfile</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_set_cur_by_name</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_deref</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_set_cur_by_fd</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>bin_fd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_set_cur_by_id</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>bin_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_set_cur_by_name</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_file_delete_all</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_file_delete</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>bin_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_file_compute_hashes</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>limit</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_file_set_hashes</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>new_hashes</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinPlugin</name> <modifier>*</modifier></type><name>r_bin_file_cur_plugin</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_file_hash_free</name><parameter_list>(<parameter><decl><type><name>RBinFileHash</name> <modifier>*</modifier></type><name>fhash</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_object_set_items</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>, <parameter><decl><type><name>RBinObject</name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_object_delete</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>binfile_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_mem_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>lang</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>libs</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle_java</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle_cxx</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle_msvc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle_swift</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>syscmd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle_objc</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sym</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle_rust</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>binfile</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_demangle_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_demangle_list</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_demangle_plugin</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_bin_get_meth_flag_string</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>compact</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RBinSection</name> <modifier>*</modifier></type><name>r_bin_get_section_at</name><parameter_list>(<parameter><decl><type><name>RBinObject</name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>off</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>va</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_addr2line</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_addr2text</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>origin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_addr2fileline</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_wr_addlib</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>lib</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>ut64</name></type> <name>r_bin_wr_scn_resize</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_wr_scn_perms</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>perms</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_wr_rpath_del</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_wr_entry</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_wr_output</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_dwarf_parse_info</name><parameter_list>(<parameter><decl><type><name>RBinDwarfDebugAbbrev</name> <modifier>*</modifier></type><name>da</name></decl></parameter>, <parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_dwarf_parse_line</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_dwarf_parse_aranges</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>RBinDwarfDebugAbbrev</name> <modifier>*</modifier></type><name>r_bin_dwarf_parse_abbrev</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_bin_get_mem</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_load_filter</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>rules</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_filter_symbols</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_filter_sections</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>RList</name> <modifier>*</modifier></type><name>list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_bin_filter_name</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>db</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_filter_sym</name><parameter_list>(<parameter><decl><type><name>RBinFile</name> <modifier>*</modifier></type><name>bf</name></decl></parameter>, <parameter><decl><type><name>HtPP</name> <modifier>*</modifier></type><name>ht</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>vaddr</name></decl></parameter>, <parameter><decl><type><name>RBinSymbol</name> <modifier>*</modifier></type><name>sym</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_strpurge</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_bin_string_filter</name><parameter_list>(<parameter><decl><type><name>RBin</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>


<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_any</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_cgc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_elf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_elf64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_p9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_ne</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_le</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_pe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_mz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_pe64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_pebble</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_bios</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_bf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_te</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_symbols</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_mach0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_mach064</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_mdmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_java</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_dex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_coff</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_ningb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_ningba</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_ninds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_nin3ds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_xbe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_bflt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinXtrPlugin</name></type> <name>r_bin_xtr_plugin_xtr_fatmach0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinXtrPlugin</name></type> <name>r_bin_xtr_plugin_xtr_dyldcache</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinXtrPlugin</name></type> <name>r_bin_xtr_plugin_xtr_pemixed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinXtrPlugin</name></type> <name>r_bin_xtr_plugin_xtr_sep64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinLdrPlugin</name></type> <name>r_bin_ldr_plugin_ldr_linux</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_zimg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_omf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_art</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_bootimg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_dol</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_nes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_qnx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_mbn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_smd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_sms</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_psxexe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_spc700</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_vsf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_dyldcache</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_xnu_kernelcache</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_avr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_menuet</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_wasm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_nro</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_nso</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_sfc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_z64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_prg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>RBinPlugin</name></type> <name>r_bin_plugin_dmp64</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
