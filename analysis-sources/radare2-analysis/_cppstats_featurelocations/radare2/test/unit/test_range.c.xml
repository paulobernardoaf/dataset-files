<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\test\unit\test_range.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"minunit.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BUF_LENGTH</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>

<function><type><name>bool</name></type> <name>test_r_tinyrange_in</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RRangeTiny</name> <modifier>*</modifier></type><name>bbr</name> <init>= <expr><call><name>r_tinyrange_new</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><literal type="number">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>, <argument><expr><literal type="number">800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">750</literal></expr></argument>, <argument><expr><literal type="number">900</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed first"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">250</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed second"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">450</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed thirst"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">750</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed fourth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">880</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed fifth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed sixth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_fini</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mu_end</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name>test_r_tinyrange_in_two</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RRangeTiny</name> <modifier>*</modifier></type><name>bbr</name> <init>= <expr><call><name>r_tinyrange_new</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4199920</literal></expr></argument>, <argument><expr><literal type="number">4200121</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4200128</literal></expr></argument>, <argument><expr><literal type="number">4200215</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4200262</literal></expr></argument>, <argument><expr><literal type="number">4200298</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4200304</literal></expr></argument>, <argument><expr><literal type="number">4200575</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4200576</literal></expr></argument>, <argument><expr><literal type="number">4200654</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4200656</literal></expr></argument>, <argument><expr><literal type="number">4200812</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4200288</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed two"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_fini</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mu_end</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>test_r_tinyrange_in_r2</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RRangeTiny</name> <modifier>*</modifier></type><name>bbr</name> <init>= <expr><call><name>r_tinyrange_new</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50e0</literal></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5110</literal></expr></argument>, <argument><expr><literal type="number">0x5112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50e0</literal></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5110</literal></expr></argument>, <argument><expr><literal type="number">0x5112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50e0</literal></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>, <argument><expr><literal type="number">0x510a</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5110</literal></expr></argument>, <argument><expr><literal type="number">0x5112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50e0</literal></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>, <argument><expr><literal type="number">0x510a</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5110</literal></expr></argument>, <argument><expr><literal type="number">0x5112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50e0</literal></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>, <argument><expr><literal type="number">0x510a</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5110</literal></expr></argument>, <argument><expr><literal type="number">0x5112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50e0</literal></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x50fb</literal></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5107</literal></expr></argument>, <argument><expr><literal type="number">0x510a</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5110</literal></expr></argument>, <argument><expr><literal type="number">0x5112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">0x5110</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed inr2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_fini</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mu_end</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>test_r_tinyrange_in_three</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RRangeTiny</name> <modifier>*</modifier></type><name>bbr</name> <init>= <expr><call><name>r_tinyrange_new</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4294981054</literal></expr></argument>, <argument><expr><literal type="number">4294981108</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4294982988</literal></expr></argument>, <argument><expr><literal type="number">4294983738</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4294984100</literal></expr></argument>, <argument><expr><literal type="number">4294984477</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4294984485</literal></expr></argument>, <argument><expr><literal type="number">4294984703</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">4294983738</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed three"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_fini</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mu_end</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>test_r_tinyrange_in_four</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>RRangeTiny</name> <modifier>*</modifier></type><name>bbr</name> <init>= <expr><call><name>r_tinyrange_new</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">20704</literal></expr></argument>, <argument><expr><literal type="number">20746</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_add</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">20752</literal></expr></argument>, <argument><expr><literal type="number">20754</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>mu_assert_eq</name> <argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>r_tinyrange_in</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>, <argument><expr><literal type="number">20752</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Failed four"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>r_tinyrange_fini</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>bbr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mu_end</name></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><name>int</name></type> <name>all_tests</name><parameter_list>()</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>mu_run_test</name> <argument_list>(<argument><expr><name>test_r_tinyrange_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_run_test</name> <argument_list>(<argument><expr><name>test_r_tinyrange_in_r2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_run_test</name> <argument_list>(<argument><expr><name>test_r_tinyrange_in_two</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_run_test</name> <argument_list>(<argument><expr><name>test_r_tinyrange_in_three</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mu_run_test</name> <argument_list>(<argument><expr><name>test_r_tinyrange_in_four</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>tests_passed</name> <operator>!=</operator> <name>tests_run</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>all_tests</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
