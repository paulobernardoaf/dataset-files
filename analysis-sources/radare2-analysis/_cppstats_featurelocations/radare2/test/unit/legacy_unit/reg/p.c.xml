<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\test\unit\legacy_unit\reg\p.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/syscall.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/ptrace.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/user.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>offsetof</name><parameter_list>(<parameter><type><name>TYPE</name></type></parameter>, <parameter><type><name>MEMBER</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((unsigned long) &amp;((TYPE *)0)-&gt;MEMBER)</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>user_regs_struct</name></name></type> <name>regs</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\teip .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>eip</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\toeax .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>orig_eax</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\teax .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>eax</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\tebx .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>ebx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\tecx .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>ecx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\tedx .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>edx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\tesp .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>esp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\tebp .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>ebp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\tesi .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>esi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\tedi .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>edi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\txfs .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>xfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\txgs .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>xgs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\txcs .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>xcs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\txss .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>xcs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"gpr\teflags .32 %d 0\n"</literal></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>user_regs_struct</name></expr></argument>, <argument><expr><name>eflags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
