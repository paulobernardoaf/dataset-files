<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\sdb\src\cdb_make.h">

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CDB_MAKE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDB_MAKE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"buffer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"types.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDB_HPLIST</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define>

<struct>struct <name>cdb_hp</name> <block>{ <decl_stmt><decl><type><name>ut32</name></type> <name>h</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>ut32</name></type> <name>p</name></decl>;</decl_stmt> }</block> ;</struct>

<struct>struct <name>cdb_hplist</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>cdb_hp</name></name></type> <name><name>hp</name><index>[<expr><name>CDB_HPLIST</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>cdb_hplist</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>cdb_make</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>bspace</name><index>[<expr><literal type="number">8192</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>final</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name><name>count</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name><name>start</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>cdb_hplist</name></name> <modifier>*</modifier></type><name>head</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>cdb_hp</name></name> <modifier>*</modifier></type><name>split</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>cdb_hp</name></name> <modifier>*</modifier></type><name>hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>numentries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>memsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>buffer</name></type> <name>b</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ut32</name></type> <name>pos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>cdb_make_start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb_make</name></name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>cdb_make_addbegin</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb_make</name></name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>,<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>cdb_make_addend</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb_make</name></name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>,<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>,<parameter><decl><type><name>ut32</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>cdb_make_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb_make</name></name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>cdb_make_finish</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>cdb_make</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
