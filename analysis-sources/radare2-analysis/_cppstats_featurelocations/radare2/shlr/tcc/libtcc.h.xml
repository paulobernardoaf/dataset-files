<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\tcc\libtcc.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBTCC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBTCC_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBTCCAPI</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBTCCAPI</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct_decl>struct <name>TCCState</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>TCCState</name></name></type> <name>TCCState</name>;</typedef>


<function_decl><type><name>LIBTCCAPI</name> <name>TCCState</name> <modifier>*</modifier></type><name>tcc_new</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>os</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>void</name></type> <name>tcc_delete</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>void</name></type> <name>tcc_set_lib_path</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>void</name></type> <name>tcc_set_error_func</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>error_opaque</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>error_func</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_set_options</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_add_include_path</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pathname</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_add_sysinclude_path</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pathname</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>void</name></type> <name>tcc_define_symbol</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sym</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>void</name></type> <name>tcc_undefine_symbol</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sym</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_add_file</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dir</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_compile_string</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_set_output_type</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>output_type</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TCC_OUTPUT_MEMORY</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TCC_OUTPUT_EXE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TCC_OUTPUT_DLL</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TCC_OUTPUT_OBJ</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TCC_OUTPUT_PREPROCESS</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 


<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_add_library_path</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pathname</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_add_library</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>libraryname</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_add_symbol</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_output_file</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_run</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>LIBTCCAPI</name> <name>int</name></type> <name>tcc_relocate</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s1</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TCC_RELOCATE_AUTO</name></cpp:macro> <cpp:value>(void*)1</cpp:value></cpp:define>


<function_decl><type><name>LIBTCCAPI</name> <name>void</name> <modifier>*</modifier></type><name>tcc_get_symbol</name><parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>tcc_cb_ptr</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>tcc_set_callback</name> <parameter_list>(<parameter><decl><type><name>TCCState</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>char</name><modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
