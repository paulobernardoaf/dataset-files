<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\w32dbg_wrap\include\w32dbg_wrap.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>W32DBG_WRAP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W32DBG_WRAP</name></cpp:macro></cpp:define>

<typedef>typedef <type><enum>enum <block>{
<decl><name>W32_NONE</name></decl>,
<decl><name>W32_CONTINUE</name></decl>,
<decl><name>W32_ATTACH</name></decl>,
<decl><name>W32_DETTACH</name></decl>,
<decl><name>W32_WAIT</name></decl>,
<decl><name>W32_STOP</name></decl>,
<decl><name>W32_CALL_FUNC</name></decl>
}</block></enum></type> <name>w32dbg_wrap_req</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>w32dbg_wrap_req</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>pid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>tid</name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>DWORD</name></type> <name>continue_status</name></decl>;</decl_stmt>
<struct>struct <block>{
<decl_stmt><decl><type><name>DEBUG_EVENT</name> <modifier>*</modifier></type><name>de</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>wait_time</name></decl>;</decl_stmt>
}</block> <decl><name>wait</name></decl>;</struct>
<struct>struct <block>{
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>
}</block> <decl><name>func</name></decl>;</struct>
}</block>;</union>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>err</name></decl>;</decl_stmt>
}</block></struct></type> <name>w32dbg_wrap_params</name>;</typedef>

<typedef>typedef <type><struct>struct <name>w32dbg_wrap_instance_t</name> <block>{
<decl_stmt><decl><type><name>HANDLE</name></type> <name>debugThread</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>w32dbg_wrap_params</name> <modifier>*</modifier></type><name>params</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HANDLE</name></type> <name>request_sem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HANDLE</name></type> <name>result_sem</name></decl>;</decl_stmt>
}</block></struct></type> <name>w32dbg_wrap_instance</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ULONG_PTR</name></type> <name>winbase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PROCESS_INFORMATION</name></type> <name>pi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>w32dbg_wrap_instance</name> <modifier>*</modifier></type><name>inst</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWORD</name></type> <name>break_tid</name></decl>;</decl_stmt>
}</block></struct></type> <name>RIOW32Dbg</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>w32dbgw_ret</name><parameter_list>(<parameter><type><name>inst</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>inst-&gt;params-&gt;ret</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>w32dbgw_err</name><parameter_list>(<parameter><type><name>inst</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(SetLastError (inst-&gt;params-&gt;err), inst-&gt;params-&gt;err)</cpp:value></cpp:define>

<function_decl><type><name>w32dbg_wrap_instance</name> <modifier>*</modifier></type><name>w32dbg_wrap_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>w32dbg_wrap_wait_ret</name><parameter_list>(<parameter><decl><type><name>w32dbg_wrap_instance</name> <modifier>*</modifier></type><name>inst</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>w32dbg_wrap_fini</name><parameter_list>(<parameter><decl><type><name>w32dbg_wrap_instance</name> <modifier>*</modifier></type><name>inst</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
