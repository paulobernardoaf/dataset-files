<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\heap\include\r_jemalloc\internal\ticker.h">
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_TYPES</name></expr></argument>)</argument_list></call></expr></cpp:if>

<typedef>typedef <type><name><name>struct</name> <name>ticker_s</name></name></type> <name>ticker_t</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_STRUCTS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<struct>struct <name>ticker_s</name> <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>tick</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>nticks</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_EXTERNS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_INLINES</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_ENABLE_INLINE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>void</name></type> <name>ticker_init</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>nticks</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ticker_copy</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ticker_t</name> <modifier>*</modifier></type><name>other</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int32_t</name></type> <name>ticker_read</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ticker_ticks</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>nticks</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>ticker_tick</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_ENABLE_INLINE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_TICKER_C_</name></expr></argument>)</argument_list></call><operator>)</operator></expr></cpp:if>
<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>ticker_init</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>nticks</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>ticker</name><operator>-&gt;</operator><name>tick</name></name> <operator>=</operator> <name>nticks</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ticker</name><operator>-&gt;</operator><name>nticks</name></name> <operator>=</operator> <name>nticks</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>ticker_copy</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ticker_t</name> <modifier>*</modifier></type><name>other</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>ticker</name> <operator>=</operator> <operator>*</operator><name>other</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>int32_t</name></type>
<name>ticker_read</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>ticker</name><operator>-&gt;</operator><name>tick</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>bool</name></type>
<name>ticker_ticks</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>nticks</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>ticker</name><operator>-&gt;</operator><name>tick</name></name> <operator>&lt;</operator> <name>nticks</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ticker</name><operator>-&gt;</operator><name>tick</name></name> <operator>=</operator> <name><name>ticker</name><operator>-&gt;</operator><name>nticks</name></name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>true</name><operator>)</operator></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>ticker</name><operator>-&gt;</operator><name>tick</name></name> <operator>-=</operator> <name>nticks</name></expr>;</expr_stmt>
<return>return<expr><operator>(</operator><name>false</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>bool</name></type>
<name>ticker_tick</name><parameter_list>(<parameter><decl><type><name>ticker_t</name> <modifier>*</modifier></type><name>ticker</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><call><name>ticker_ticks</name><argument_list>(<argument><expr><name>ticker</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
