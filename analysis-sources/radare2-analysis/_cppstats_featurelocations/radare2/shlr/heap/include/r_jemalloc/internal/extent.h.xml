<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\heap\include\r_jemalloc\internal\extent.h">
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_TYPES</name></expr></argument>)</argument_list></call></expr></cpp:if>

<typedef>typedef <type><name><name>struct</name> <name>extent_node_s</name></name></type> <name>extent_node_t</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_STRUCTS</name></expr></argument>)</argument_list></call></expr></cpp:if>


<struct>struct <name>extent_node_s</name> <block>{

<decl_stmt><decl><type><name>arena_t</name> <modifier>*</modifier></type><name>en_arena</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>en_addr</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>size_t</name></type> <name>en_size</name></decl>;</decl_stmt>













<decl_stmt><decl><type><name>size_t</name></type> <name>en_sn</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>bool</name></type> <name>en_zeroed</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>bool</name></type> <name>en_committed</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>bool</name></type> <name>en_achunk</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>prof_tctx_t</name> <modifier>*</modifier></type><name>en_prof_tctx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>arena_runs_dirty_link_t</name></type> <name>rd</name></decl>;</decl_stmt>
<macro><name>qr</name><argument_list>(<argument>extent_node_t</argument>)</argument_list></macro> <expr_stmt><expr><name>cc_link</name></expr>;</expr_stmt>

<union>union <block>{

<macro><name>rb_node</name><argument_list>(<argument>extent_node_t</argument>)</argument_list></macro> <expr_stmt><expr><name>szsnad_link</name></expr>;</expr_stmt>


<macro><name>ql_elm</name><argument_list>(<argument>extent_node_t</argument>)</argument_list></macro> <expr_stmt><expr><name>ql_link</name></expr>;</expr_stmt>
}</block>;</union>


<macro><name>rb_node</name><argument_list>(<argument>extent_node_t</argument>)</argument_list></macro> <expr_stmt><expr><name>ad_link</name></expr>;</expr_stmt>
}</block>;</struct>
<typedef>typedef <macro><name>rb_tree</name><argument_list>(<argument>extent_node_t</argument>)</argument_list></macro> <expr_stmt><expr><name>extent_tree_t</name></expr>;</expr_stmt></typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_EXTERNS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_JET</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>size_t</name></type> <name>extent_size_quantize_floor</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>size_t</name></type> <name>extent_size_quantize_ceil</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>rb_proto</name><argument_list>(<argument/>, <argument>extent_tree_szsnad_</argument>, <argument>extent_tree_t</argument>, <argument>extent_node_t</argument>)</argument_list></macro>

<macro><name>rb_proto</name><argument_list>(<argument/>, <argument>extent_tree_ad_</argument>, <argument>extent_tree_t</argument>, <argument>extent_node_t</argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_H_INLINES</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_ENABLE_INLINE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>arena_t</name> <modifier>*</modifier></type><name>extent_node_arena_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type><name>extent_node_addr_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>extent_node_size_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>extent_node_sn_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>extent_node_zeroed_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>extent_node_committed_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>extent_node_achunk_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>prof_tctx_t</name> <modifier>*</modifier></type><name>extent_node_prof_tctx_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_arena_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>arena_t</name> <modifier>*</modifier></type><name>arena</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_addr_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_size_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_sn_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>sn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_zeroed_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>zeroed</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_committed_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>committed</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_achunk_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>achunk</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_prof_tctx_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>prof_tctx_t</name> <modifier>*</modifier></type><name>tctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_init</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>arena_t</name> <modifier>*</modifier></type><name>arena</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>sn</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>zeroed</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>committed</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_dirty_linkage_init</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_dirty_insert</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>,
<parameter><decl><type><name>arena_runs_dirty_link_t</name> <modifier>*</modifier></type><name>runs_dirty</name></decl></parameter>, <parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>chunks_dirty</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>extent_node_dirty_remove</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_ENABLE_INLINE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_EXTENT_C_</name></expr></argument>)</argument_list></call><operator>)</operator></expr></cpp:if>
<function><type><name>JEMALLOC_INLINE</name> <name>arena_t</name> <modifier>*</modifier></type>
<name>extent_node_arena_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_arena</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name> <modifier>*</modifier></type>
<name>extent_node_addr_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_addr</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>size_t</name></type>
<name>extent_node_size_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_size</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>size_t</name></type>
<name>extent_node_sn_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_sn</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>bool</name></type>
<name>extent_node_zeroed_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_zeroed</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>bool</name></type>
<name>extent_node_committed_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>node</name><operator>-&gt;</operator><name>en_achunk</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_committed</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>bool</name></type>
<name>extent_node_achunk_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_achunk</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>prof_tctx_t</name> <modifier>*</modifier></type>
<name>extent_node_prof_tctx_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>node</name><operator>-&gt;</operator><name>en_prof_tctx</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_arena_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>arena_t</name> <modifier>*</modifier></type><name>arena</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_arena</name></name> <operator>=</operator> <name>arena</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_addr_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_addr</name></name> <operator>=</operator> <name>addr</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_size_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_size</name></name> <operator>=</operator> <name>size</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_sn_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>sn</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_sn</name></name> <operator>=</operator> <name>sn</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_zeroed_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>zeroed</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_zeroed</name></name> <operator>=</operator> <name>zeroed</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_committed_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>committed</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_committed</name></name> <operator>=</operator> <name>committed</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_achunk_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>achunk</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_achunk</name></name> <operator>=</operator> <name>achunk</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_prof_tctx_set</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>prof_tctx_t</name> <modifier>*</modifier></type><name>tctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name><name>node</name><operator>-&gt;</operator><name>en_prof_tctx</name></name> <operator>=</operator> <name>tctx</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_init</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>arena_t</name> <modifier>*</modifier></type><name>arena</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>sn</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>zeroed</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>committed</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><call><name>extent_node_arena_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>arena</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>extent_node_addr_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>extent_node_size_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>extent_node_sn_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>sn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>extent_node_zeroed_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>zeroed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>extent_node_committed_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>committed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>extent_node_achunk_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>config_prof</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>extent_node_prof_tctx_set</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_dirty_linkage_init</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><call><name>qr_new</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>node</name><operator>-&gt;</operator><name>rd</name></name></expr></argument>, <argument><expr><name>rd_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>qr_new</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>cc_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_dirty_insert</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>,
<parameter><decl><type><name>arena_runs_dirty_link_t</name> <modifier>*</modifier></type><name>runs_dirty</name></decl></parameter>, <parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>chunks_dirty</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><call><name>qr_meld</name><argument_list>(<argument><expr><name>runs_dirty</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>node</name><operator>-&gt;</operator><name>rd</name></name></expr></argument>, <argument><expr><name>rd_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>qr_meld</name><argument_list>(<argument><expr><name>chunks_dirty</name></expr></argument>, <argument><expr><name>node</name></expr></argument>, <argument><expr><name>cc_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>JEMALLOC_INLINE</name> <name>void</name></type>
<name>extent_node_dirty_remove</name><parameter_list>(<parameter><decl><type><name>extent_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><call><name>qr_remove</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>node</name><operator>-&gt;</operator><name>rd</name></name></expr></argument>, <argument><expr><name>rd_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>qr_remove</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>cc_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 


</unit>
