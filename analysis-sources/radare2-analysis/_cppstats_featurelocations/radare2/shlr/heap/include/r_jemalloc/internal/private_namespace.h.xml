<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\heap\include\r_jemalloc\internal\private_namespace.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>a0dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(a0dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>a0get</name></cpp:macro> <cpp:value>JEMALLOC_N(a0get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>a0malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(a0malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_aalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_aalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_alloc_junk_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_alloc_junk_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_basic_stats_merge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_basic_stats_merge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_bin_index</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_bin_index)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_bin_info</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_bin_info)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_bitselm_get_const</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_bitselm_get_const)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_bitselm_get_mutable</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_bitselm_get_mutable)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_choose</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_choose)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_choose_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_choose_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_choose_impl</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_choose_impl)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_chunk_alloc_huge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_chunk_alloc_huge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_chunk_cache_maybe_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_chunk_cache_maybe_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_chunk_cache_maybe_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_chunk_cache_maybe_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_chunk_dalloc_huge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_chunk_dalloc_huge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_chunk_ralloc_huge_expand</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_chunk_ralloc_huge_expand)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_chunk_ralloc_huge_shrink</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_chunk_ralloc_huge_shrink)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_chunk_ralloc_huge_similar</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_chunk_ralloc_huge_similar)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_bin</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_bin)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_bin_junked_locked</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_bin_junked_locked)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_junk_large</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_junk_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_junk_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_junk_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_large</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_large_junked_locked</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_large_junked_locked)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_decay_tick</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_decay_tick)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_decay_ticks</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_decay_ticks)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_decay_time_default_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_decay_time_default_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_decay_time_default_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_decay_time_default_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_decay_time_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_decay_time_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_decay_time_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_decay_time_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dss_prec_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dss_prec_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dss_prec_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dss_prec_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_extent_sn_next</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_extent_sn_next)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_ichoose</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_ichoose)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_init</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_lg_dirty_mult_default_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_lg_dirty_mult_default_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_lg_dirty_mult_default_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_lg_dirty_mult_default_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_lg_dirty_mult_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_lg_dirty_mult_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_lg_dirty_mult_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_lg_dirty_mult_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_malloc_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_malloc_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_malloc_large</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_malloc_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_allocated_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_allocated_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_binind_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_binind_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_decommitted_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_decommitted_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_dirty_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_dirty_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_internal_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_internal_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_large_binind_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_large_binind_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_large_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_large_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_large_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_large_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_large_size_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_large_size_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_size_decode</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_size_decode)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_size_encode</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_size_encode)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_small_runind_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_small_runind_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_small_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_small_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_unallocated_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_unallocated_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_unallocated_size_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_unallocated_size_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_unallocated_size_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_unallocated_size_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbits_unzeroed_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbits_unzeroed_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbitsp_get_const</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbitsp_get_const)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbitsp_get_mutable</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbitsp_get_mutable)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbitsp_read</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbitsp_read)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mapbitsp_write</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mapbitsp_write)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_maxrun</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_maxrun)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_maybe_purge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_maybe_purge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_metadata_allocated_add</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_metadata_allocated_add)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_metadata_allocated_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_metadata_allocated_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_metadata_allocated_sub</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_metadata_allocated_sub)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_migrate</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_migrate)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_miscelm_get_const</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_miscelm_get_const)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_miscelm_get_mutable</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_miscelm_get_mutable)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_miscelm_to_pageind</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_miscelm_to_pageind)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_miscelm_to_rpages</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_miscelm_to_rpages)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_new</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_node_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_node_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_node_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_node_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_nthreads_dec</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_nthreads_dec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_nthreads_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_nthreads_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_nthreads_inc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_nthreads_inc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_palloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_palloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork0</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork1</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork2</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork3</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_accum</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_accum)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_accum_impl</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_accum_impl)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_accum_locked</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_accum_locked)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_promoted</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_promoted)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_tctx_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_tctx_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_tctx_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_tctx_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_tctx_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_tctx_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_ptr_small_binind_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_ptr_small_binind_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_purge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_purge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_quarantine_junk_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_quarantine_junk_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_ralloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_ralloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_ralloc_junk_large</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_ralloc_junk_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_ralloc_no_move</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_ralloc_no_move)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_rd_to_miscelm</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_rd_to_miscelm)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_redzone_corruption</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_redzone_corruption)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_run_regind</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_run_regind)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_run_to_miscelm</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_run_to_miscelm)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_salloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_salloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_sdalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_sdalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_stats_merge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_stats_merge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_tcache_fill_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_tcache_fill_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_tdata_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_tdata_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_tdata_get_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_tdata_get_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arenas</name></cpp:macro> <cpp:value>JEMALLOC_N(arenas)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arenas_tdata_bypass_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(arenas_tdata_bypass_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arenas_tdata_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(arenas_tdata_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_add_p</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_add_p)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_add_u</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_add_u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_add_uint32</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_add_uint32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_add_uint64</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_add_uint64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_add_z</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_add_z)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_cas_p</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_cas_p)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_cas_u</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_cas_u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_cas_uint32</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_cas_uint32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_cas_uint64</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_cas_uint64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_cas_z</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_cas_z)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_sub_p</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_sub_p)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_sub_u</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_sub_u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_sub_uint32</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_sub_uint32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_sub_uint64</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_sub_uint64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_sub_z</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_sub_z)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_write_p</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_write_p)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_write_u</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_write_u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_write_uint32</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_write_uint32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_write_uint64</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_write_uint64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>atomic_write_z</name></cpp:macro> <cpp:value>JEMALLOC_N(atomic_write_z)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(base_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(base_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(base_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(base_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(base_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_stats_get</name></cpp:macro> <cpp:value>JEMALLOC_N(base_stats_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_full</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_full)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_get</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_info_init</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_info_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_init</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_set</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_sfu</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_sfu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_size</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_size)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_unset</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_unset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bootstrap_calloc</name></cpp:macro> <cpp:value>JEMALLOC_N(bootstrap_calloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bootstrap_free</name></cpp:macro> <cpp:value>JEMALLOC_N(bootstrap_free)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bootstrap_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(bootstrap_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bt_init</name></cpp:macro> <cpp:value>JEMALLOC_N(bt_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>buferror</name></cpp:macro> <cpp:value>JEMALLOC_N(buferror)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_alloc_base</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_alloc_base)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_alloc_cache</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_alloc_cache)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_alloc_dss</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_alloc_dss)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_alloc_mmap</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_alloc_mmap)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_alloc_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_alloc_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_dalloc_cache</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_dalloc_cache)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_dalloc_mmap</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_dalloc_mmap)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_dalloc_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_dalloc_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_deregister</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_deregister)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_dss_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_dss_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_dss_mergeable</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_dss_mergeable)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_dss_prec_get</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_dss_prec_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_dss_prec_set</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_dss_prec_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_hooks_default</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_hooks_default)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_hooks_get</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_hooks_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_hooks_set</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_hooks_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_in_dss</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_in_dss)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_lookup</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_lookup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_npages</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_npages)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_purge_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_purge_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunk_register</name></cpp:macro> <cpp:value>JEMALLOC_N(chunk_register)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunks_rtree</name></cpp:macro> <cpp:value>JEMALLOC_N(chunks_rtree)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunksize</name></cpp:macro> <cpp:value>JEMALLOC_N(chunksize)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>chunksize_mask</name></cpp:macro> <cpp:value>JEMALLOC_N(chunksize_mask)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_count</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_count)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_delete</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_delete)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_iter</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_iter)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_new</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_pointer_hash</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_pointer_hash)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_pointer_keycomp</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_pointer_keycomp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_search</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_search)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_string_hash</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_string_hash)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_string_keycomp</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_string_keycomp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_bymib</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_bymib)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_byname</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_byname)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_nametomib</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_nametomib)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decay_ticker_get</name></cpp:macro> <cpp:value>JEMALLOC_N(decay_ticker_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dss_prec_names</name></cpp:macro> <cpp:value>JEMALLOC_N(dss_prec_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_achunk_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_achunk_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_achunk_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_achunk_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_addr_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_addr_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_addr_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_addr_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_arena_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_arena_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_arena_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_arena_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_committed_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_committed_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_committed_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_committed_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_dirty_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_dirty_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_dirty_linkage_init</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_dirty_linkage_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_dirty_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_dirty_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_init</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_prof_tctx_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_prof_tctx_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_prof_tctx_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_prof_tctx_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_size_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_size_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_size_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_size_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_sn_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_sn_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_sn_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_sn_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_zeroed_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_zeroed_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_node_zeroed_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_node_zeroed_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_size_quantize_ceil</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_size_quantize_ceil)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_size_quantize_floor</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_size_quantize_floor)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_destroy</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_destroy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_destroy_recurse</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_destroy_recurse)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_empty</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_empty)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_first</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_first)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_iter</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_iter)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_iter_recurse</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_iter_recurse)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_iter_start</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_iter_start)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_last</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_last)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_new</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_next</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_next)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_nsearch</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_nsearch)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_prev</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_prev)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_psearch</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_psearch)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_reverse_iter</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_reverse_iter)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_reverse_iter_recurse</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_reverse_iter_recurse)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_reverse_iter_start</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_reverse_iter_start)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_ad_search</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_ad_search)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_destroy</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_destroy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_destroy_recurse</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_destroy_recurse)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_empty</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_empty)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_first</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_first)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_iter</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_iter)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_iter_recurse</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_iter_recurse)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_iter_start</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_iter_start)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_last</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_last)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_new</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_next</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_next)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_nsearch</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_nsearch)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_prev</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_prev)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_psearch</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_psearch)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_reverse_iter</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_reverse_iter)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_reverse_iter_recurse</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_reverse_iter_recurse)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_reverse_iter_start</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_reverse_iter_start)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_tree_szsnad_search</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_tree_szsnad_search)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ffs_llu</name></cpp:macro> <cpp:value>JEMALLOC_N(ffs_llu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ffs_lu</name></cpp:macro> <cpp:value>JEMALLOC_N(ffs_lu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ffs_u</name></cpp:macro> <cpp:value>JEMALLOC_N(ffs_u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ffs_u32</name></cpp:macro> <cpp:value>JEMALLOC_N(ffs_u32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ffs_u64</name></cpp:macro> <cpp:value>JEMALLOC_N(ffs_u64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ffs_zu</name></cpp:macro> <cpp:value>JEMALLOC_N(ffs_zu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>get_errno</name></cpp:macro> <cpp:value>JEMALLOC_N(get_errno)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash</name></cpp:macro> <cpp:value>JEMALLOC_N(hash)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_fmix_32</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_fmix_32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_fmix_64</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_fmix_64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_get_block_32</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_get_block_32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_get_block_64</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_get_block_64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_rotl_32</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_rotl_32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_rotl_64</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_rotl_64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_x64_128</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_x64_128)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_x86_128</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_x86_128)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hash_x86_32</name></cpp:macro> <cpp:value>JEMALLOC_N(hash_x86_32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_aalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_aalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_dalloc_junk</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_dalloc_junk)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_palloc</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_palloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_prof_tctx_get</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_prof_tctx_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_prof_tctx_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_prof_tctx_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_prof_tctx_set</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_prof_tctx_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_ralloc</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_ralloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_ralloc_no_move</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_ralloc_no_move)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>huge_salloc</name></cpp:macro> <cpp:value>JEMALLOC_N(huge_salloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iaalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(iaalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ialloc</name></cpp:macro> <cpp:value>JEMALLOC_N(ialloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iallocztm</name></cpp:macro> <cpp:value>JEMALLOC_N(iallocztm)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iarena_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(iarena_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>idalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(idalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>idalloctm</name></cpp:macro> <cpp:value>JEMALLOC_N(idalloctm)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>in_valgrind</name></cpp:macro> <cpp:value>JEMALLOC_N(in_valgrind)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>index2size</name></cpp:macro> <cpp:value>JEMALLOC_N(index2size)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>index2size_compute</name></cpp:macro> <cpp:value>JEMALLOC_N(index2size_compute)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>index2size_lookup</name></cpp:macro> <cpp:value>JEMALLOC_N(index2size_lookup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>index2size_tab</name></cpp:macro> <cpp:value>JEMALLOC_N(index2size_tab)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ipalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(ipalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ipalloct</name></cpp:macro> <cpp:value>JEMALLOC_N(ipalloct)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ipallocztm</name></cpp:macro> <cpp:value>JEMALLOC_N(ipallocztm)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iqalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(iqalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iralloc</name></cpp:macro> <cpp:value>JEMALLOC_N(iralloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iralloct</name></cpp:macro> <cpp:value>JEMALLOC_N(iralloct)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iralloct_realign</name></cpp:macro> <cpp:value>JEMALLOC_N(iralloct_realign)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>isalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(isalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>isdalloct</name></cpp:macro> <cpp:value>JEMALLOC_N(isdalloct)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>isqalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(isqalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>isthreaded</name></cpp:macro> <cpp:value>JEMALLOC_N(isthreaded)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ivsalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(ivsalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ixalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(ixalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>jemalloc_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(jemalloc_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>jemalloc_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(jemalloc_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>jemalloc_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(jemalloc_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_maxclass</name></cpp:macro> <cpp:value>JEMALLOC_N(large_maxclass)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lg_floor</name></cpp:macro> <cpp:value>JEMALLOC_N(lg_floor)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lg_prof_sample</name></cpp:macro> <cpp:value>JEMALLOC_N(lg_prof_sample)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_cprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_cprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_assert_not_owner</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_assert_not_owner)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_assert_owner</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_assert_owner)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_init</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_lock</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_lock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_unlock</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_unlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_printf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_printf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_snprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_snprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_strtoumax</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_strtoumax)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_boot0</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_boot0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_boot1</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_boot1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_cleanup_register</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_cleanup_register)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_no_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_no_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_vcprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_vcprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_vsnprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_vsnprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_write</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_write)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>map_bias</name></cpp:macro> <cpp:value>JEMALLOC_N(map_bias)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>map_misc_offset</name></cpp:macro> <cpp:value>JEMALLOC_N(map_misc_offset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mb_write</name></cpp:macro> <cpp:value>JEMALLOC_N(mb_write)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>narenas_auto</name></cpp:macro> <cpp:value>JEMALLOC_N(narenas_auto)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>narenas_tdata_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(narenas_tdata_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>narenas_total_get</name></cpp:macro> <cpp:value>JEMALLOC_N(narenas_total_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ncpus</name></cpp:macro> <cpp:value>JEMALLOC_N(ncpus)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nhbins</name></cpp:macro> <cpp:value>JEMALLOC_N(nhbins)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nhclasses</name></cpp:macro> <cpp:value>JEMALLOC_N(nhclasses)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nlclasses</name></cpp:macro> <cpp:value>JEMALLOC_N(nlclasses)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_add</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_add)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_compare</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_compare)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_copy</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_copy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_divide</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_divide)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_idivide</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_idivide)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_imultiply</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_imultiply)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_init</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_init2</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_init2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_monotonic</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_monotonic)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_ns</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_ns)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_nsec</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_nsec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_sec</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_sec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_subtract</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_subtract)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_update</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_update)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_abort</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_abort)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_decay_time</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_decay_time)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_dss</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_dss)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_junk</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_junk)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_junk_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_junk_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_junk_free</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_junk_free)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_chunk</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_chunk)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_dirty_mult</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_dirty_mult)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_prof_interval</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_prof_interval)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_prof_sample</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_prof_sample)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_tcache_max</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_tcache_max)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_narenas</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_narenas)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_accum</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_accum)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_active</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_active)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_final</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_final)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_gdump</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_gdump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_leak</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_leak)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_prefix</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_prefix)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_thread_active_init</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_thread_active_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_purge</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_purge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_quarantine</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_quarantine)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_redzone</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_redzone)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_stats_print</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_stats_print)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_tcache</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_tcache)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_thp</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_thp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_utrace</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_utrace)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_xmalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_xmalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_zero</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_zero)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>p2rz</name></cpp:macro> <cpp:value>JEMALLOC_N(p2rz)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_commit</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_commit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_decommit</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_decommit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_huge</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_huge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_map</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_map)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_nohuge</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_nohuge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_purge</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_purge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_trim</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_trim)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_unmap</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_unmap)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pind2sz</name></cpp:macro> <cpp:value>JEMALLOC_N(pind2sz)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pind2sz_compute</name></cpp:macro> <cpp:value>JEMALLOC_N(pind2sz_compute)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pind2sz_lookup</name></cpp:macro> <cpp:value>JEMALLOC_N(pind2sz_lookup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pind2sz_tab</name></cpp:macro> <cpp:value>JEMALLOC_N(pind2sz_tab)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pow2_ceil_u32</name></cpp:macro> <cpp:value>JEMALLOC_N(pow2_ceil_u32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pow2_ceil_u64</name></cpp:macro> <cpp:value>JEMALLOC_N(pow2_ceil_u64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pow2_ceil_zu</name></cpp:macro> <cpp:value>JEMALLOC_N(pow2_ceil_zu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_lg_range_u32</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_lg_range_u32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_lg_range_u64</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_lg_range_u64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_lg_range_zu</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_lg_range_zu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_range_u32</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_range_u32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_range_u64</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_range_u64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_range_zu</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_range_zu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_state_next_u32</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_state_next_u32)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_state_next_u64</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_state_next_u64)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prng_state_next_zu</name></cpp:macro> <cpp:value>JEMALLOC_N(prng_state_next_zu)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_active</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_active)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_active_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_active_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_active_get_unlocked</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_active_get_unlocked)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_active_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_active_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_alloc_prep</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_alloc_prep)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_alloc_rollback</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_alloc_rollback)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_backtrace</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_backtrace)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_boot0</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_boot0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_boot1</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_boot1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_boot2</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_boot2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_bt_count</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_bt_count)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_dump_header</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_dump_header)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_dump_open</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_dump_open)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_free</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_free)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_free_sampled_object</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_free_sampled_object)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump_get_unlocked</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump_get_unlocked)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump_val</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump_val)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_idump</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_idump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_interval</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_interval)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_lookup</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_lookup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_malloc_sample_object</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_malloc_sample_object)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_mdump</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_mdump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_prefork0</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_prefork0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_prefork1</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_prefork1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_realloc</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_realloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_sample_accum_update</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_sample_accum_update)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_sample_threshold_update</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_sample_threshold_update)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tctx_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tctx_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tctx_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tctx_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tctx_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tctx_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_count</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_count)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_init</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_reinit</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_reinit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_init_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_init_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_init_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_init_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_name_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_name_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_name_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_name_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psz2ind</name></cpp:macro> <cpp:value>JEMALLOC_N(psz2ind)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psz2u</name></cpp:macro> <cpp:value>JEMALLOC_N(psz2u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>purge_mode_names</name></cpp:macro> <cpp:value>JEMALLOC_N(purge_mode_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>quarantine</name></cpp:macro> <cpp:value>JEMALLOC_N(quarantine)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>quarantine_alloc_hook</name></cpp:macro> <cpp:value>JEMALLOC_N(quarantine_alloc_hook)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>quarantine_alloc_hook_work</name></cpp:macro> <cpp:value>JEMALLOC_N(quarantine_alloc_hook_work)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>quarantine_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(quarantine_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_child_read</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_child_read)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_child_read_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_child_read_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_child_tryread</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_child_tryread)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_delete</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_delete)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_get</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_new</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_node_valid</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_node_valid)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_set</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_start_level</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_start_level)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_subkey</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_subkey)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_subtree_read</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_subtree_read)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_subtree_read_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_subtree_read_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_subtree_tryread</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_subtree_tryread)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_val_read</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_val_read)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_val_write</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_val_write)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>run_quantize_ceil</name></cpp:macro> <cpp:value>JEMALLOC_N(run_quantize_ceil)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>run_quantize_floor</name></cpp:macro> <cpp:value>JEMALLOC_N(run_quantize_floor)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>s2u</name></cpp:macro> <cpp:value>JEMALLOC_N(s2u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>s2u_compute</name></cpp:macro> <cpp:value>JEMALLOC_N(s2u_compute)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>s2u_lookup</name></cpp:macro> <cpp:value>JEMALLOC_N(s2u_lookup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sa2u</name></cpp:macro> <cpp:value>JEMALLOC_N(sa2u)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>set_errno</name></cpp:macro> <cpp:value>JEMALLOC_N(set_errno)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>size2index</name></cpp:macro> <cpp:value>JEMALLOC_N(size2index)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>size2index_compute</name></cpp:macro> <cpp:value>JEMALLOC_N(size2index_compute)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>size2index_lookup</name></cpp:macro> <cpp:value>JEMALLOC_N(size2index_lookup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>size2index_tab</name></cpp:macro> <cpp:value>JEMALLOC_N(size2index_tab)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>spin_adaptive</name></cpp:macro> <cpp:value>JEMALLOC_N(spin_adaptive)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>spin_init</name></cpp:macro> <cpp:value>JEMALLOC_N(spin_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>stats_cactive</name></cpp:macro> <cpp:value>JEMALLOC_N(stats_cactive)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>stats_cactive_add</name></cpp:macro> <cpp:value>JEMALLOC_N(stats_cactive_add)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>stats_cactive_get</name></cpp:macro> <cpp:value>JEMALLOC_N(stats_cactive_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>stats_cactive_sub</name></cpp:macro> <cpp:value>JEMALLOC_N(stats_cactive_sub)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>stats_print</name></cpp:macro> <cpp:value>JEMALLOC_N(stats_print)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_alloc_easy</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_alloc_easy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_alloc_large</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_alloc_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_alloc_small</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_alloc_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_alloc_small_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_alloc_small_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_arena_reassociate</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_arena_reassociate)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_bin_flush_large</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_bin_flush_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_bin_flush_small</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_bin_flush_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_bin_info</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_bin_info)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_create</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_create)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_dalloc_large</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_dalloc_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_dalloc_small</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_dalloc_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_enabled_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_enabled_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_enabled_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_enabled_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_enabled_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_enabled_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_event</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_event)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_event_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_event_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_flush</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_flush)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_get_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_get_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_maxclass</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_maxclass)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_salloc</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_salloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_stats_merge</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_stats_merge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches_create</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches_create)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches_destroy</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches_destroy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches_flush</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches_flush)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>thread_allocated_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(thread_allocated_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>thread_deallocated_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(thread_deallocated_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ticker_copy</name></cpp:macro> <cpp:value>JEMALLOC_N(ticker_copy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ticker_init</name></cpp:macro> <cpp:value>JEMALLOC_N(ticker_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ticker_read</name></cpp:macro> <cpp:value>JEMALLOC_N(ticker_read)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ticker_tick</name></cpp:macro> <cpp:value>JEMALLOC_N(ticker_tick)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ticker_ticks</name></cpp:macro> <cpp:value>JEMALLOC_N(ticker_ticks)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arena_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arena_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arena_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arena_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arenap_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arenap_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arenas_tdata_bypass_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arenas_tdata_bypass_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arenas_tdata_bypass_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arenas_tdata_bypass_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arenas_tdata_bypassp_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arenas_tdata_bypassp_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arenas_tdata_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arenas_tdata_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arenas_tdata_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arenas_tdata_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_arenas_tdatap_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_arenas_tdatap_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_boot0</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_boot0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_boot1</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_boot1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_booted</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_booted)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_booted_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_booted_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_cleanup_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_cleanup_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_fetch</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_fetch)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_fetch_impl</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_fetch_impl)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_get_allocates</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_get_allocates)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_iarena_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_iarena_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_iarena_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_iarena_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_iarenap_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_iarenap_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_initialized</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_initialized)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_init_check_recursion</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_init_check_recursion)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_init_finish</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_init_finish)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_init_head</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_init_head)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_narenas_tdata_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_narenas_tdata_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_narenas_tdata_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_narenas_tdata_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_narenas_tdatap_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_narenas_tdatap_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_wrapper_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_wrapper_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_wrapper_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_wrapper_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_nominal</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_nominal)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_prof_tdata_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_prof_tdata_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_prof_tdata_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_prof_tdata_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_prof_tdatap_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_prof_tdatap_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_quarantine_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_quarantine_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_quarantine_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_quarantine_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_quarantinep_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_quarantinep_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcache_enabled_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcache_enabled_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcache_enabled_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcache_enabled_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcache_enabledp_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcache_enabledp_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcache_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcache_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcache_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcache_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcachep_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcachep_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_thread_allocated_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_thread_allocated_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_thread_allocated_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_thread_allocated_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_thread_allocatedp_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_thread_allocatedp_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_thread_deallocated_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_thread_deallocated_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_thread_deallocated_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_thread_deallocated_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_thread_deallocatedp_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_thread_deallocatedp_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tls</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tls)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tsd</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tsd)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tsdn</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tsdn)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_witness_fork_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_witness_fork_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_witness_fork_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_witness_fork_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_witness_forkp_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_witness_forkp_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_witnesses_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_witnesses_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_witnesses_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_witnesses_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_witnessesp_get</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_witnessesp_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsdn_fetch</name></cpp:macro> <cpp:value>JEMALLOC_N(tsdn_fetch)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsdn_null</name></cpp:macro> <cpp:value>JEMALLOC_N(tsdn_null)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsdn_tsd</name></cpp:macro> <cpp:value>JEMALLOC_N(tsdn_tsd)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>u2rz</name></cpp:macro> <cpp:value>JEMALLOC_N(u2rz)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>valgrind_freelike_block</name></cpp:macro> <cpp:value>JEMALLOC_N(valgrind_freelike_block)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>valgrind_make_mem_defined</name></cpp:macro> <cpp:value>JEMALLOC_N(valgrind_make_mem_defined)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>valgrind_make_mem_noaccess</name></cpp:macro> <cpp:value>JEMALLOC_N(valgrind_make_mem_noaccess)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>valgrind_make_mem_undefined</name></cpp:macro> <cpp:value>JEMALLOC_N(valgrind_make_mem_undefined)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_assert_depth</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_assert_depth)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_assert_depth_to_rank</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_assert_depth_to_rank)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_assert_lockless</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_assert_lockless)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_assert_not_owner</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_assert_not_owner)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_assert_owner</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_assert_owner)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_depth_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_depth_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_fork_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_fork_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_init</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_lock</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_lock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_lock_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_lock_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_not_owner_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_not_owner_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_owner</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_owner)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_owner_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_owner_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_unlock</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_unlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witnesses_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(witnesses_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>zone_register</name></cpp:macro> <cpp:value>JEMALLOC_N(zone_register)</cpp:value></cpp:define>
</unit>
