<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\java\ops.h">
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_anal.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>R2_JAVA_OPS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_JAVA_OPS_H</name></cpp:macro></cpp:define>

<enum>enum <block>{
<decl><name>R_ANAL_JAVA_ILL_OP</name> <init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_NULL_OP</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_NOP</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_STORE_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">20</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_LOAD_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_REG_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">22</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_OBJ_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">23</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_STACK_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">25</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_BIN_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">26</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_CODE_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">27</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_DATA_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">28</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_UNK_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">29</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_REP_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">30</literal></expr></init></decl>, 
<decl><name>R_ANAL_JAVA_COND_OP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">31</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{
<decl><name>R_ANAL_JAVA_TYPE_REF_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_REF_UNK</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_REF</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_SIGNED</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_PRIM</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_CONST</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_STATIC</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_VOLATILE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_PUBLIC</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr></init></decl>,

<decl><name>R_ANAL_JAVA_TYPE_BOOL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_BYTE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_SHORT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_INT32</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">13</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_INTEGER</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">13</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_INT64</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_LONG</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_FLOAT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">15</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_DOUBLE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_STRING</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">17</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_CHAR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">18</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_TYPE_VOID</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">19</literal></expr></init></decl>,
}</block>;</enum>


<enum>enum <block>{
<decl><name>R_ANAL_JAVA_CODEOP_JMP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_CALL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_RET</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_TRAP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_SWI</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_IO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_LEAVE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_SWITCH</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_CJMP</name> <init>= <expr><name>R_ANAL_JAVA_COND_OP</name> <operator>|</operator> <name>R_ANAL_JAVA_CODE_OP</name> <operator>|</operator> <name>R_ANAL_JAVA_CODEOP_JMP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_CODEOP_EOB</name> <init>= <expr><name>R_ANAL_JAVA_CODEOP_JMP</name> <operator>|</operator> <name>R_ANAL_JAVA_CODEOP_RET</name> <operator>|</operator> <name>R_ANAL_JAVA_CODEOP_LEAVE</name> <operator>|</operator> <name>R_ANAL_JAVA_CODEOP_SWITCH</name></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{

<decl><name>R_ANAL_JAVA_RET_TYPE_REF_NULL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_RET_TYPE_REF</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr></init></decl> ,
<decl><name>R_ANAL_JAVA_RET_TYPE_PRIM</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal></expr></init></decl> ,
<decl><name>R_ANAL_JAVA_RET_TYPE_CONST</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">13</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_RET_TYPE_STATIC</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></init></decl>,
}</block>;</enum>


<enum>enum <block>{


<decl><name>R_ANAL_JAVA_COND_EQ</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_NE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_GE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">13</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_GT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_LE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">15</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_LT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_AL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">17</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_NV</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">18</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_COND_NULL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">19</literal></expr></init></decl>,
}</block>;</enum>


<enum>enum <block>{
<decl><name>R_ANAL_JAVA_BINOP_NEG</name> <init>= <expr><literal type="number">0</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_XCHG</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_CMP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_ADD</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_SUB</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_MUL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_DIV</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_SHR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_SHL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">9</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_SAL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_SAR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_OR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_AND</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_XOR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">15</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_NOT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_MOD</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">17</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_ROR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">18</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_BINOP_ROL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">19</literal> <operator>|</operator> <name>R_ANAL_JAVA_BIN_OP</name></expr></init></decl>,
}</block>;</enum>


<enum>enum <block>{
<decl><name>R_ANAL_JAVA_OBJOP_CAST</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal> <operator>|</operator> <name>R_ANAL_JAVA_OBJ_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_OBJOP_CHECK</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>|</operator> <name>R_ANAL_JAVA_OBJ_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_OBJOP_NEW</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>|</operator> <name>R_ANAL_JAVA_OBJ_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_OBJOP_DEL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>|</operator> <name>R_ANAL_JAVA_OBJ_OP</name></expr></init></decl>,
<decl><name>R_ANAL_JAVA_OBJOP_SIZE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal> <operator>|</operator> <name>R_ANAL_JAVA_OBJ_OP</name></expr></init></decl>,
}</block>;</enum>




<enum>enum <block>{
<decl><name>R_ANAL_JAVA_LDST_FROM_REF</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_FROM_MEM</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_FROM_REG</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_FROM_STACK</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_FROM_CONST</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_FROM_VAR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr></init></decl>,


<decl><name>R_ANAL_JAVA_LDST_INDIRECT_REF</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_INDIRECT_MEM</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_INDIRECT_REG</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_INDIRECT_STACK</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">9</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_INDIRECT_VAR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>,


<decl><name>R_ANAL_JAVA_LDST_TO_REF</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_TO_MEM</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_TO_REG</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_TO_STACK</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">13</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_TO_VAR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></init></decl>,


<decl><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">15</literal></expr></init></decl> ,
<decl><name>R_ANAL_JAVA_LDST_OP_POP</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
<decl><name>R_ANAL_JAVA_LDST_OP_MOV</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">17</literal></expr></init></decl> ,
<decl><name>R_ANAL_JAVA_LDST_OP_EFF_ADDR</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">18</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <block>{

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_CONST_REF_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_CONST</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_TYPE_REF</name></expr></init></decl>,



<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_CONST_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_CONST</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_CONST_INDIRECT_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_CONST</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_VAR_INDIRECT_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_VAR</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_VAR_INDIRECT_TO_STACK_REF</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_VAR</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_VAR_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_VAR</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_VAR_TO_STACK_REF</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_VAR</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_REF_INDIRECT_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_REF_INDIRECT_TO_STACK_REF</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_FROM_STACK_INDIRECT_TO_VAR</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_VAR</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_FROM_STACK_INDIRECT_TO_VAR_REF</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_INDIRECT_IDX</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_VAR</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_FROM_STACK_TO_VAR</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_VAR</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_FROM_STACK_TO_VAR_REF</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_VAR</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_FROM_STACK_INDIRECT_TO_REF</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_REF</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_FROM_STACK_INDIRECT_TO_REF_REF</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_REF</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_REF_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_TYPE_PRIM</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_FROM_PRIM_VAR_TO_STACK</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_VAR</name> <operator>|</operator>\
<name>R_ANAL_JAVA_TYPE_PRIM</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_GET_STATIC</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_TYPE_REF</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_PUT_STATIC</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_POP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_TYPE_REF</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_LOAD_GET_FIELD</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_PUSH</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LOAD_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_TYPE_REF</name></expr></init></decl>,

<decl><name>R_ANAL_JAVA_LDST_STORE_PUT_FIELD</name> <init>= <expr><name>R_ANAL_JAVA_LDST_OP_POP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_STORE_OP</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_FROM_STACK</name> <operator>|</operator>\
<name>R_ANAL_JAVA_LDST_TO_REF</name> <operator>|</operator>\
<name>R_ANAL_JAVA_TYPE_REF</name></expr></init></decl>,
}</block>;</enum>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
