<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\grub\include\grubfs.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_INCLUDE_GRUBFS_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_INCLUDE_GRUBFS_H_</name></cpp:macro></cpp:define>
<decl_stmt><decl><type><specifier>extern</specifier> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>grub_hack_lastoff</name></decl>;</decl_stmt>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_io.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/file.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/disk.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/partition.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>grubfs</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>grub_file</name></name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>
}</block></struct></type> <name>GrubFS</name>;</typedef>

<function_decl><type><name>GrubFS</name> <modifier>*</modifier></type><name>grubfs_new</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_fs</name></name> <modifier>*</modifier></type><name>myfs</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>grubfs_free</name> <parameter_list>(<parameter><decl><type><name>GrubFS</name> <modifier>*</modifier></type><name>gf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>grubfs_bind_io</name> <parameter_list>(<parameter><decl><type><name>RIOBind</name> <modifier>*</modifier></type><name>iob</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>_delta</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>grub_disk_t</name></type> <name>grubfs_disk</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>grubfs_disk_free</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_disk</name></name> <modifier>*</modifier></type><name>gd</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_ext2_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_fat_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_ntfs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_ntfscomp_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_reiserfs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_hfs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_hfsplus_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_ufs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_ufs2_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_udf_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_iso9660_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_jfs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_sfs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_btrfs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_xfs_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_tar_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_cpio_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_udf_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_minix_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_fs</name></name></type> <name>grub_fb_fs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_msdos_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_apple_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_sun_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_sun_pc_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_bsdlabel_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_netbsdlabel_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_openbsdlabel_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_amiga_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_acorn_partition_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>grub_partition_map</name></name></type> <name>grub_gpt_partition_map</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
