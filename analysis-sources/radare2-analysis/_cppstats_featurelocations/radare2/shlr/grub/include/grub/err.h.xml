<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\grub\include\grub\err.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GRUB_ERR_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_ERR_HEADER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/symbol.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum
<block>{
<decl><name>GRUB_ERR_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>GRUB_ERR_TEST_FAILURE</name></decl>,
<decl><name>GRUB_ERR_BAD_MODULE</name></decl>,
<decl><name>GRUB_ERR_OUT_OF_MEMORY</name></decl>,
<decl><name>GRUB_ERR_BAD_FILE_TYPE</name></decl>,
<decl><name>GRUB_ERR_FILE_NOT_FOUND</name></decl>,
<decl><name>GRUB_ERR_FILE_READ_ERROR</name></decl>,
<decl><name>GRUB_ERR_BAD_FILENAME</name></decl>,
<decl><name>GRUB_ERR_UNKNOWN_FS</name></decl>,
<decl><name>GRUB_ERR_BAD_FS</name></decl>,
<decl><name>GRUB_ERR_BAD_NUMBER</name></decl>,
<decl><name>GRUB_ERR_OUT_OF_RANGE</name></decl>,
<decl><name>GRUB_ERR_UNKNOWN_DEVICE</name></decl>,
<decl><name>GRUB_ERR_BAD_DEVICE</name></decl>,
<decl><name>GRUB_ERR_READ_ERROR</name></decl>,
<decl><name>GRUB_ERR_WRITE_ERROR</name></decl>,
<decl><name>GRUB_ERR_UNKNOWN_COMMAND</name></decl>,
<decl><name>GRUB_ERR_INVALID_COMMAND</name></decl>,
<decl><name>GRUB_ERR_BAD_ARGUMENT</name></decl>,
<decl><name>GRUB_ERR_BAD_PART_TABLE</name></decl>,
<decl><name>GRUB_ERR_UNKNOWN_OS</name></decl>,
<decl><name>GRUB_ERR_BAD_OS</name></decl>,
<decl><name>GRUB_ERR_NO_KERNEL</name></decl>,
<decl><name>GRUB_ERR_BAD_FONT</name></decl>,
<decl><name>GRUB_ERR_NOT_IMPLEMENTED_YET</name></decl>,
<decl><name>GRUB_ERR_SYMLINK_LOOP</name></decl>,
<decl><name>GRUB_ERR_BAD_GZIP_DATA</name></decl>,
<decl><name>GRUB_ERR_MENU</name></decl>,
<decl><name>GRUB_ERR_TIMEOUT</name></decl>,
<decl><name>GRUB_ERR_IO</name></decl>,
<decl><name>GRUB_ERR_ACCESS_DENIED</name></decl>,
<decl><name>GRUB_ERR_MENU_ESCAPE</name></decl>
}</block></enum></type>
<name>grub_err_t</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <name>grub_err_t</name></type> <name>grub_errno</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name></type> <name><name>grub_errmsg</name><index>[]</index></name></decl>;</decl_stmt>

<function_decl><type><name>grub_err_t</name></type> <name>grub_error</name> <parameter_list>(<parameter><decl><type><name>grub_err_t</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>grub_fatal</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>grub_error_push</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>grub_error_pop</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>grub_print_error</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>int</name></type> <name>grub_err_printf</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<function_decl><type><name>int</name></type> <name>grub_err_printf</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list> __attribute__ <parameter_list>(<parameter/></parameter_list>(format <parameter_list>(<parameter><decl><type><name>printf</name></type></decl></parameter>, <parameter/></parameter_list>1<operator>,</operator> 2</function_decl>)))<empty_stmt>;</empty_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
