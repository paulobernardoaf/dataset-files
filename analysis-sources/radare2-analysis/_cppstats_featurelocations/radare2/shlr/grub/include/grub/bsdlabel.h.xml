<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\grub\include\grub\bsdlabel.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GRUB_BSDLABEL_PARTITION_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_BSDLABEL_PARTITION_HEADER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_LABEL_SECTOR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_LABEL_MAGIC</name></cpp:macro> <cpp:value>0x82564557</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_UNUSED</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_SWAP</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_V6</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_V7</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_SYSV</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_V71K</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_V8</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_BSDFFS</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_MSDOS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_BSDLFS</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_OTHER</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_HPFS</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_ISO9660</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_BSD_TYPE_BOOT</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_FREEBSD_TYPE_VINUM</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_FREEBSD_TYPE_RAID</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_FREEBSD_TYPE_JFS2</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_ADOS</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_HFS</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_FILECORE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_EXT2FS</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_NTFS</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_RAID</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_CCD</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_JFS2</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_NETBSD_TYPE_APPLEUFS</name></cpp:macro> <cpp:value>22</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_OPENBSD_TYPE_ADOS</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_OPENBSD_TYPE_HFS</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_OPENBSD_TYPE_FILECORE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_OPENBSD_TYPE_EXT2FS</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_OPENBSD_TYPE_NTFS</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_PC_PARTITION_OPENBSD_TYPE_RAID</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<macro><name>R_PACKED</name><argument_list>(
<argument>struct grub_partition_bsd_entry
{
grub_uint32_t size;
grub_uint32_t offset;
grub_uint32_t fragment_size;
grub_uint8_t fs_type;
grub_uint8_t fs_fragments;
grub_uint16_t fs_cylinders;
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>


<macro><name>R_PACKED</name><argument_list>(
<argument>struct grub_partition_bsd_disk_label
{
grub_uint32_t magic;
grub_uint8_t padding[<literal type="number">128</literal>];
grub_uint32_t magic2;
grub_uint16_t checksum;
grub_uint16_t num_partitions;
grub_uint32_t boot_size;
grub_uint32_t superblock_size;
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
