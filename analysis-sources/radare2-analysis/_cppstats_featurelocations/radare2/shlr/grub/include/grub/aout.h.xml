<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\grub\include\grub\aout.h">

















































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GRUB_AOUT_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_AOUT_HEADER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/types.h&gt;</cpp:file></cpp:include>

<struct>struct <name>grub_aout32_header</name>
<block>{
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_midmag</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_text</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_data</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_bss</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_syms</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_entry</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_trsize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_drsize</name></decl>;</decl_stmt> 
}</block>;</struct>

<struct>struct <name>grub_aout64_header</name>
<block>{
<decl_stmt><decl><type><name>grub_uint32_t</name></type> <name>a_midmag</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint64_t</name></type> <name>a_text</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint64_t</name></type> <name>a_data</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint64_t</name></type> <name>a_bss</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint64_t</name></type> <name>a_syms</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint64_t</name></type> <name>a_entry</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint64_t</name></type> <name>a_trsize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>grub_uint64_t</name></type> <name>a_drsize</name></decl>;</decl_stmt> 
}</block>;</struct>

<union>union <name>grub_aout_header</name>
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>grub_aout32_header</name></name></type> <name>aout32</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>grub_aout64_header</name></name></type> <name>aout64</name></decl>;</decl_stmt>
}</block>;</union>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_TYPE_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_TYPE_AOUT32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_TYPE_AOUT64</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT32_OMAGIC</name></cpp:macro> <cpp:value>0x107</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT32_NMAGIC</name></cpp:macro> <cpp:value>0x108</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT32_ZMAGIC</name></cpp:macro> <cpp:value>0x10b</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT32_QMAGIC</name></cpp:macro> <cpp:value>0xcc</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT64_OMAGIC</name></cpp:macro> <cpp:value>0x1001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT64_ZMAGIC</name></cpp:macro> <cpp:value>0x1002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT64_NMAGIC</name></cpp:macro> <cpp:value>0x1003</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_ZERO</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_SUN010</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_SUN020</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_I386</name></cpp:macro> <cpp:value>134</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_SPARC</name></cpp:macro> <cpp:value>138</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_HP200</name></cpp:macro> <cpp:value>200</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_SUN</name></cpp:macro> <cpp:value>0x103</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_HP300</name></cpp:macro> <cpp:value>300</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_HPUX</name></cpp:macro> <cpp:value>0x20C</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MID_HPUX800</name></cpp:macro> <cpp:value>0x20B</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_FLAG_PIC</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_FLAG_DYNAMIC</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_FLAG_DPMASK</name></cpp:macro> <cpp:value>0x30</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_GETMAGIC</name><parameter_list>(<parameter><type><name>header</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((header).a_midmag &amp; 0xffff)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_GETMID</name><parameter_list>(<parameter><type><name>header</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((header).a_midmag &gt;&gt; 16) &amp; 0x03ff)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_GETFLAG</name><parameter_list>(<parameter><type><name>header</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((header).a_midmag &gt;&gt; 26) &amp; 0x3f)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GRUB_UTIL</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>int</name></type> <name>grub_aout_get_type</name> <parameter_list>(<parameter><decl><type><name><name>union</name> <name>grub_aout_header</name></name> <modifier>*</modifier></type><name>header</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>grub_err_t</name></type> <name>grub_aout_load</name> <parameter_list>(<parameter><decl><type><name>grub_file_t</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>offset</name></decl></parameter>,
<parameter><decl><type><name>grub_addr_t</name></type> <name>load_addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>load_size</name></decl></parameter>,
<parameter><decl><type><name>grub_addr_t</name></type> <name>bss_end_addr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
