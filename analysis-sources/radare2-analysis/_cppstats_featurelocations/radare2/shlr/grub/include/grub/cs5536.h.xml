<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\grub\include\grub\cs5536.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GRUB_CS5536_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_HEADER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ASM_FILE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/pci.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/err.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/smbus.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_PCIID</name></cpp:macro> <cpp:value>0x208f1022</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_MAILBOX_ADDR</name></cpp:macro> <cpp:value>0xf4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_MAILBOX_DATA0</name></cpp:macro> <cpp:value>0xf8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_MAILBOX_DATA1</name></cpp:macro> <cpp:value>0xfc</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IRQ_MAP_BAR</name></cpp:macro> <cpp:value>0x80000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_SMB_BAR</name></cpp:macro> <cpp:value>0x8000000b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMBUS_REGS_SIZE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_GPIO_REGS_SIZE</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MFGPT_REGS_SIZE</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_IRQ_MAP_REGS_SIZE</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_PM_REGS_SIZE</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_ACPI_REGS_SIZE</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_USB_OPTION_REGS_SIZE</name></cpp:macro> <cpp:value>0x1c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_USB_OPTION_REG_UOCMUX</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_USB_OPTION_REG_UOCMUX_PMUX_MASK</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_USB_OPTION_REG_UOCMUX_PMUX_HC</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DESTINATION_GLIU</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DESTINATION_GLPCI_SB</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DESTINATION_USB</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DESTINATION_IDE</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DESTINATION_DD</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DESTINATION_ACC</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DESTINATION_GLCP</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_P2D_DEST_SHIFT</name></cpp:macro> <cpp:value>61</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_P2D_LOG_ALIGN</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_P2D_ALIGN</name></cpp:macro> <cpp:value>(1 &lt;&lt; GRUB_CS5536_P2D_LOG_ALIGN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_P2D_BASE_SHIFT</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_P2D_MASK_SHIFT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_IOD_START</name></cpp:macro> <cpp:value>0x000100e0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_IOD_DEST_SHIFT</name></cpp:macro> <cpp:value>61</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_IOD_BASE_SHIFT</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_IOD_MASK_SHIFT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_IOD_ADDR_MASK</name></cpp:macro> <cpp:value>0xfffff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GPIO_BAR</name></cpp:macro> <cpp:value>0x8000000c</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_MFGPT_BAR</name></cpp:macro> <cpp:value>0x8000000d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_ACPI_BAR</name></cpp:macro> <cpp:value>0x8000000e</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_PM_BAR</name></cpp:macro> <cpp:value>0x8000000f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_LEG_IO</name></cpp:macro> <cpp:value>0x80000014</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_LEG_IO_RTC_ENABLE0</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_LEG_IO_RTC_ENABLE1</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_LEG_IO_MODE_X86</name></cpp:macro> <cpp:value>0x10000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_LEG_IO_F_REMAP</name></cpp:macro> <cpp:value>0x04000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_IRQ_MAPPER_PRIMARY_MASK</name></cpp:macro> <cpp:value>0x80000024</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_IRQ_MAPPER_LPC_MASK</name></cpp:macro> <cpp:value>0x80000025</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_DIVIL_LPC_INTERRUPTS</name></cpp:macro> <cpp:value>0x1002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_LPC_SERIAL_IRQ_CONTROL</name></cpp:macro> <cpp:value>0x8000004e</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_DIVIL_LPC_SERIAL_IRQ_CONTROL_ENABLE</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_OHCI_BASE</name></cpp:macro> <cpp:value>0x40000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_EHCI_BASE</name></cpp:macro> <cpp:value>0x40000009</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_CONTROLLER_BASE</name></cpp:macro> <cpp:value>0x4000000a</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_OPTION_CONTROLLER_BASE</name></cpp:macro> <cpp:value>0x4000000b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_BASE_ADDR_MASK</name></cpp:macro> <cpp:value>0x00ffffff00ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_BASE_BUS_MASTER</name></cpp:macro> <cpp:value>0x0400000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_BASE_MEMORY_ENABLE</name></cpp:macro> <cpp:value>0x0200000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_BASE_PME_ENABLED</name></cpp:macro> <cpp:value>0x0800000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_BASE_PME_STATUS</name></cpp:macro> <cpp:value>0x1000000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_USB_EHCI_BASE_FLDJ_SHIFT</name></cpp:macro> <cpp:value>40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_IO_BAR</name></cpp:macro> <cpp:value>0x60000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_IO_BAR_UNITS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_IO_BAR_ADDR_MASK</name></cpp:macro> <cpp:value>0xfffffff0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CFG</name></cpp:macro> <cpp:value>0x60000010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CFG_CHANNEL_ENABLE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_TIMING</name></cpp:macro> <cpp:value>0x60000012</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_TIMING_PIO0</name></cpp:macro> <cpp:value>0x98</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_TIMING_DRIVE0_SHIFT</name></cpp:macro> <cpp:value>24</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_TIMING_DRIVE1_SHIFT</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CAS_TIMING</name></cpp:macro> <cpp:value>0x60000013</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CAS_TIMING_CMD_PIO0</name></cpp:macro> <cpp:value>0x99</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CAS_TIMING_CMD_SHIFT</name></cpp:macro> <cpp:value>24</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CAS_TIMING_DRIVE0_SHIFT</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CAS_TIMING_DRIVE1_SHIFT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_IDE_CAS_TIMING_PIO0</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_PCI_CTRL</name></cpp:macro> <cpp:value>0x00000010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_PCI_CTRL_MEMORY_ENABLE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_PCI_CTRL_IO_ENABLE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_PCI_CTRL_LATENCY_SHIFT</name></cpp:macro> <cpp:value>35</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_PCI_CTRL_OUT_THR_SHIFT</name></cpp:macro> <cpp:value>60</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_PCI_CTRL_IN_THR_SHIFT</name></cpp:macro> <cpp:value>56</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGIONS_START</name></cpp:macro> <cpp:value>0x00000020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGIONS_NUM</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGION_ENABLE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGION_IO</name></cpp:macro> <cpp:value>0x100000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGION_BASE_MASK</name></cpp:macro> <cpp:value>0xfffff000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGION_IO_BASE_SHIFT</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGION_TOP_MASK</name></cpp:macro> <cpp:value>0xfffff00000000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_REGION_IO_TOP_SHIFT</name></cpp:macro> <cpp:value>44</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_MSR_GL_P2D_START</name></cpp:macro> <cpp:value>0x00010020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_DATA</name></cpp:macro> <cpp:value>0x0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_STATUS</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_STATUS_SDAST</name></cpp:macro> <cpp:value>(1 &lt;&lt; 6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_STATUS_BER</name></cpp:macro> <cpp:value>(1 &lt;&lt; 5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_STATUS_NACK</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_CTRL1</name></cpp:macro> <cpp:value>0x3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_CTRL1_START</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_CTRL1_STOP</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_CTRL1_ACK</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_ADDR</name></cpp:macro> <cpp:value>0x4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_ADDR_MASTER</name></cpp:macro> <cpp:value>0x0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_CTRL2</name></cpp:macro> <cpp:value>0x5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_CTRL2_ENABLE</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_SMB_REG_CTRL3</name></cpp:macro> <cpp:value>0x6</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ASM_FILE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_ULL</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>x</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_ULL</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>x ##ULL</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_ADDR_MASK</name></cpp:macro> <cpp:value>GRUB_ULL (0x000000000000fff8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_ENABLE</name></cpp:macro> <cpp:value>GRUB_ULL (0x0000000100000000)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_MASK_MASK</name></cpp:macro> <cpp:value>GRUB_ULL (0x0000f00000000000)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_TURN_ON</name></cpp:macro> <cpp:value>(GRUB_CS5536_LBAR_ENABLE | GRUB_CS5536_LBAR_MASK_MASK)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_GPIO</name></cpp:macro> <cpp:value>0xb000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_ACC</name></cpp:macro> <cpp:value>0xb200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_PM</name></cpp:macro> <cpp:value>0xb280</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_MFGPT</name></cpp:macro> <cpp:value>0xb300</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_ACPI</name></cpp:macro> <cpp:value>0xb340</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_IRQ_MAP</name></cpp:macro> <cpp:value>0xb360</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_IDE</name></cpp:macro> <cpp:value>0xb380</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_CS5536_LBAR_SMBUS</name></cpp:macro> <cpp:value>0xb390</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_GPIO_SMBUS_PINS</name></cpp:macro> <cpp:value>((1 &lt;&lt; 14) | (1 &lt;&lt; 15))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_GPIO_REG_OUT_EN</name></cpp:macro> <cpp:value>0x4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_GPIO_REG_OUT_AUX1</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_GPIO_REG_IN_EN</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_GPIO_REG_IN_AUX1</name></cpp:macro> <cpp:value>0x34</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ASM_FILE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>int</name> <name>EXPORT_FUNC</name></type> (<name>grub_cs5536_find</name>) <parameter_list>(<parameter><decl><type><name>grub_pci_device_t</name> <modifier>*</modifier></type><name>devp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>grub_uint64_t</name> <name>EXPORT_FUNC</name></type> (<name>grub_cs5536_read_msr</name>) <parameter_list>(<parameter><decl><type><name>grub_pci_device_t</name></type> <name>dev</name></decl></parameter>,
<parameter><decl><type><name>grub_uint32_t</name></type> <name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <name>EXPORT_FUNC</name></type> (<name>grub_cs5536_write_msr</name>) <parameter_list>(<parameter><decl><type><name>grub_pci_device_t</name></type> <name>dev</name></decl></parameter>,
<parameter><decl><type><name>grub_uint32_t</name></type> <name>addr</name></decl></parameter>,
<parameter><decl><type><name>grub_uint64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>grub_err_t</name></type> <name>grub_cs5536_read_spd_byte</name> <parameter_list>(<parameter><decl><type><name>grub_port_t</name></type> <name>smbbase</name></decl></parameter>, <parameter><decl><type><name>grub_uint8_t</name></type> <name>dev</name></decl></parameter>,
<parameter><decl><type><name>grub_uint8_t</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>grub_uint8_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>grub_err_t</name> <name>EXPORT_FUNC</name></type> (<name>grub_cs5536_read_spd</name>) <parameter_list>(<parameter><decl><type><name>grub_port_t</name></type> <name>smbbase</name></decl></parameter>,
<parameter><decl><type><name>grub_uint8_t</name></type> <name>dev</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>grub_smbus_spd</name></name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>grub_err_t</name></type> <name>grub_cs5536_smbus_wait</name> <parameter_list>(<parameter><decl><type><name>grub_port_t</name></type> <name>smbbase</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>grub_err_t</name> <name>EXPORT_FUNC</name></type> (<name>grub_cs5536_init_smbus</name>) <parameter_list>(<parameter><decl><type><name>grub_pci_device_t</name></type> <name>dev</name></decl></parameter>,
<parameter><decl><type><name>grub_uint16_t</name></type> <name>divisor</name></decl></parameter>,
<parameter><decl><type><name>grub_port_t</name> <modifier>*</modifier></type><name>smbbase</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>grub_cs5536_init_geode</name> <parameter_list>(<parameter><decl><type><name>grub_pci_device_t</name></type> <name>dev</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
