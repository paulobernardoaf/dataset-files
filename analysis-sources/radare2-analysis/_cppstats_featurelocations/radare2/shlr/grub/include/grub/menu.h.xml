<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\grub\include\grub\menu.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GRUB_MENU_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_MENU_HEADER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<struct>struct <name>grub_menu_entry_class</name>
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>grub_menu_entry_class</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block>;</struct>


<struct>struct <name>grub_menu_entry</name>
<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>restricted</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>users</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name><name>struct</name> <name>grub_menu_entry_class</name></name> <modifier>*</modifier></type><name>classes</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sourcecode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>hotkey</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>group</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>grub_menu_entry</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>grub_menu_entry</name></name> <modifier>*</modifier></type><name>grub_menu_entry_t</name>;</typedef>


<struct>struct <name>grub_menu</name>
<block>{

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>grub_menu_entry_t</name></type> <name>entry_list</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>grub_menu</name></name> <modifier>*</modifier></type><name>grub_menu_t</name>;</typedef>

<function_decl><type><name>grub_err_t</name></type> <name>grub_menu_entry_add</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>args</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sourcecode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>grub_menu_execute</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>config</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nested</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>batch</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>grub_menu_key2name</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>grub_menu_name2key</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
