<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats_featurelocations\radare2\shlr\grub\include\grub\hfs.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GRUB_HFS_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_HFS_HEADER</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRUB_HFS_MAGIC</name></cpp:macro> <cpp:value>0x4244</cpp:value></cpp:define>


<struct>struct <name>grub_hfs_extent</name>
<block>{

<decl_stmt><decl><type><name>grub_uint16_t</name></type> <name>first_block</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>grub_uint16_t</name></type> <name>count</name></decl>;</decl_stmt>
}</block>;</struct>


<typedef>typedef <type><name><name>struct</name> <name>grub_hfs_extent</name></name> <name><name>grub_hfs_datarecord_t</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></type>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<name>__attribute__</name>((<name>aligned</name>(1)))
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
;</typedef>



<macro><name>R_PACKED</name> <argument_list>(
<argument>struct grub_hfs_sblock
{
grub_uint16_t magic;
grub_uint8_t unused[<literal type="number">18</literal>];
grub_uint32_t blksz;
grub_uint8_t unused2[<literal type="number">4</literal>];
grub_uint16_t first_block;
grub_uint8_t unused4[<literal type="number">6</literal>];


grub_uint8_t volname[<literal type="number">28</literal>];

grub_uint8_t unused5[<literal type="number">52</literal>];
grub_uint64_t num_serial;
grub_uint16_t embed_sig;
struct grub_hfs_extent embed_extent;
grub_uint8_t unused6[<literal type="number">4</literal>];
grub_hfs_datarecord_t extent_recs;
grub_uint32_t catalog_size;
grub_hfs_datarecord_t catalog_recs;
}</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
