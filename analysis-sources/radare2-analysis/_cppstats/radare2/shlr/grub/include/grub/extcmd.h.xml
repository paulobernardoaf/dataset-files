<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\shlr\grub\include\grub\extcmd.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/lib/arg.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/command.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>grub_extcmd</name>;</struct_decl>

<typedef>typedef <function_decl><type><name>grub_err_t</name></type> (<modifier>*</modifier><name>grub_extcmd_func_t</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_extcmd</name></name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>args</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>grub_extcmd</name>

<block>{

<decl_stmt><decl><type><name>grub_command_t</name></type> <name>cmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>grub_extcmd_func_t</name></type> <name>func</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>grub_arg_option</name></name> <modifier>*</modifier></type><name>options</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>grub_arg_list</name></name> <modifier>*</modifier></type><name>state</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>grub_extcmd</name></name> <modifier>*</modifier></type><name>grub_extcmd_t</name>;</typedef>

<function_decl><type><name>grub_extcmd_t</name></type> <name>grub_reg_ecmd</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>grub_extcmd_func_t</name></type> <name>func</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>summary</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>description</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>grub_arg_option</name></name> <modifier>*</modifier></type><name>parser</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>grub_register_extcmd</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>func</name></type></parameter>, <parameter><type><name>flags</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>d</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>grub_reg_ecmd (name, func, flags, s, d, p); GRUB_MODATTR ("command", "*" name);</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>grub_unregister_extcmd</name> <parameter_list>(<parameter><decl><type><name>grub_extcmd_t</name></type> <name>cmd</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
