<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\shlr\grub\include\grub\net.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/symbol.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/err.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;grub/types.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>grub_net</name>;</struct_decl>

<struct>struct <name>grub_net_dev</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>probe</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_net</name></name> <modifier>*</modifier></type><name>net</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>reset</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_net</name></name> <modifier>*</modifier></type><name>net</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>poll</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_net</name></name> <modifier>*</modifier></type><name>net</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>transmit</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_net</name></name> <modifier>*</modifier></type><name>net</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>destip</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>srcsock</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>destsock</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>packet</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>disable</name>) <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>grub_net</name></name> <modifier>*</modifier></type><name>net</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name><name>struct</name> <name>grub_net_dev</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>grub_net_dev</name></name> <modifier>*</modifier></type><name>grub_net_dev_t</name>;</typedef>

<struct_decl>struct <name>grub_fs</name>;</struct_decl>

<struct>struct <name>grub_net</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>grub_net_dev_t</name></type> <name>dev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>grub_fs</name></name> <modifier>*</modifier></type><name>fs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>grub_net</name></name> <modifier>*</modifier></type><name>grub_net_t</name>;</typedef>

</unit>
