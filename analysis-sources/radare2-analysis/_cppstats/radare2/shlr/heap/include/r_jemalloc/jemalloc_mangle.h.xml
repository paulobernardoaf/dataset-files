<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\shlr\heap\include\r_jemalloc\jemalloc_mangle.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_MANGLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_NO_DEMANGLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_NO_DEMANGLE</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_conf</name></cpp:macro> <cpp:value>je_malloc_conf</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_message</name></cpp:macro> <cpp:value>je_malloc_message</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc</name></cpp:macro> <cpp:value>je_malloc</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>calloc</name></cpp:macro> <cpp:value>je_calloc</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>posix_memalign</name></cpp:macro> <cpp:value>je_posix_memalign</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>aligned_alloc</name></cpp:macro> <cpp:value>je_aligned_alloc</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>realloc</name></cpp:macro> <cpp:value>je_realloc</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>free</name></cpp:macro> <cpp:value>je_free</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mallocx</name></cpp:macro> <cpp:value>je_mallocx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rallocx</name></cpp:macro> <cpp:value>je_rallocx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>xallocx</name></cpp:macro> <cpp:value>je_xallocx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sallocx</name></cpp:macro> <cpp:value>je_sallocx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dallocx</name></cpp:macro> <cpp:value>je_dallocx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sdallocx</name></cpp:macro> <cpp:value>je_sdallocx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nallocx</name></cpp:macro> <cpp:value>je_nallocx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mallctl</name></cpp:macro> <cpp:value>je_mallctl</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mallctlnametomib</name></cpp:macro> <cpp:value>je_mallctlnametomib</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mallctlbymib</name></cpp:macro> <cpp:value>je_mallctlbymib</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_stats_print</name></cpp:macro> <cpp:value>je_malloc_stats_print</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_usable_size</name></cpp:macro> <cpp:value>je_malloc_usable_size</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>memalign</name></cpp:macro> <cpp:value>je_memalign</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>valloc</name></cpp:macro> <cpp:value>je_valloc</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_NO_DEMANGLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_malloc_conf</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_malloc_message</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_malloc</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_calloc</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_posix_memalign</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_aligned_alloc</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_realloc</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_free</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_mallocx</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_rallocx</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_xallocx</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_sallocx</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_dallocx</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_sdallocx</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_nallocx</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_mallctl</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_mallctlnametomib</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_mallctlbymib</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_malloc_stats_print</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_malloc_usable_size</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_memalign</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>je_valloc</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
