<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\shlr\heap\include\r_jemalloc\internal\qr.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr</name><parameter_list>(<parameter><type><name>a_type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>struct { a_type *qre_next; a_type *qre_prev; }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_new</name><parameter_list>(<parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { (a_qr)-&gt;a_field.qre_next = (a_qr); (a_qr)-&gt;a_field.qre_prev = (a_qr); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_next</name><parameter_list>(<parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((a_qr)-&gt;a_field.qre_next)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_prev</name><parameter_list>(<parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((a_qr)-&gt;a_field.qre_prev)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_before_insert</name><parameter_list>(<parameter><type><name>a_qrelm</name></type></parameter>, <parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { (a_qr)-&gt;a_field.qre_prev = (a_qrelm)-&gt;a_field.qre_prev; (a_qr)-&gt;a_field.qre_next = (a_qrelm); (a_qr)-&gt;a_field.qre_prev-&gt;a_field.qre_next = (a_qr); (a_qrelm)-&gt;a_field.qre_prev = (a_qr); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_after_insert</name><parameter_list>(<parameter><type><name>a_qrelm</name></type></parameter>, <parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { (a_qr)-&gt;a_field.qre_next = (a_qrelm)-&gt;a_field.qre_next; (a_qr)-&gt;a_field.qre_prev = (a_qrelm); (a_qr)-&gt;a_field.qre_next-&gt;a_field.qre_prev = (a_qr); (a_qrelm)-&gt;a_field.qre_next = (a_qr); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_meld</name><parameter_list>(<parameter><type><name>a_qr_a</name></type></parameter>, <parameter><type><name>a_qr_b</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { void *t; (a_qr_a)-&gt;a_field.qre_prev-&gt;a_field.qre_next = (a_qr_b); (a_qr_b)-&gt;a_field.qre_prev-&gt;a_field.qre_next = (a_qr_a); t = (a_qr_a)-&gt;a_field.qre_prev; (a_qr_a)-&gt;a_field.qre_prev = (a_qr_b)-&gt;a_field.qre_prev; (a_qr_b)-&gt;a_field.qre_prev = t; } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_split</name><parameter_list>(<parameter><type><name>a_qr_a</name></type></parameter>, <parameter><type><name>a_qr_b</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>qr_meld((a_qr_a), (a_qr_b), a_field)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_remove</name><parameter_list>(<parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { (a_qr)-&gt;a_field.qre_prev-&gt;a_field.qre_next = (a_qr)-&gt;a_field.qre_next; (a_qr)-&gt;a_field.qre_next-&gt;a_field.qre_prev = (a_qr)-&gt;a_field.qre_prev; (a_qr)-&gt;a_field.qre_next = (a_qr); (a_qr)-&gt;a_field.qre_prev = (a_qr); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_foreach</name><parameter_list>(<parameter><type><name>var</name></type></parameter>, <parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for ((var) = (a_qr); (var) != NULL; (var) = (((var)-&gt;a_field.qre_next != (a_qr)) ? (var)-&gt;a_field.qre_next : NULL))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>qr_reverse_foreach</name><parameter_list>(<parameter><type><name>var</name></type></parameter>, <parameter><type><name>a_qr</name></type></parameter>, <parameter><type><name>a_field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for ((var) = ((a_qr) != NULL) ? qr_prev(a_qr, a_field) : NULL; (var) != NULL; (var) = (((var) != (a_qr)) ? (var)-&gt;a_field.qre_prev : NULL))</cpp:value></cpp:define>

</unit>
