<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\shlr\spp\r_api.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_FREE</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ free(x); x = NULL; }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_NEW0</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x*)calloc(1,sizeof(x))</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>void</name></type> <name>out_printf</name><parameter_list>(<parameter><decl><type><name>Output</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<function_decl><type><name>void</name></type> <name>out_printf</name><parameter_list>(<parameter><decl><type><name>Output</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list> __attribute__ <parameter_list>(<parameter/></parameter_list>(format <parameter_list>(<parameter><decl><type><name>printf</name></type></decl></parameter>, <parameter/></parameter_list>2<operator>,</operator> 3</function_decl>)))<empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>USE_R2</name></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<function_decl><type><name>SStrBuf</name> <modifier>*</modifier></type><name>r_strbuf_new</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>r_strbuf_set</name><parameter_list>(<parameter><decl><type><name>SStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>r_strbuf_append</name><parameter_list>(<parameter><decl><type><name>SStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>r_strbuf_get</name><parameter_list>(<parameter><decl><type><name>SStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>r_strbuf_free</name><parameter_list>(<parameter><decl><type><name>SStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>r_strbuf_fini</name><parameter_list>(<parameter><decl><type><name>SStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>r_strbuf_init</name><parameter_list>(<parameter><decl><type><name>SStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>r_sys_setenv</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>r_sys_getenv</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>unsigned</name> <name>int</name></type> <name>r_sys_getpid</name><parameter_list>()</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
