<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\shlr\zip\zlib\gzclose.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gzguts.h"</cpp:file></cpp:include>

<function><type><name>int</name> <name>ZEXPORT</name></type> <name>gzclose</name><parameter_list>(<parameter><decl><type><name>file</name></type></decl></parameter>)</parameter_list>

<decl_stmt><decl><type><name>gzFile</name></type> <name>file</name></decl>;</decl_stmt>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NO_GZCOMPRESS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>gz_statep</name></type> <name>state</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>file</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>Z_STREAM_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>state</name> <operator>=</operator> <operator>(</operator><name>gz_statep</name><operator>)</operator><name>file</name></expr>;</expr_stmt>

<return>return <expr><ternary><condition><expr><name><name>state</name><operator>-&gt;</operator><name>mode</name></name> <operator>==</operator> <name>GZ_READ</name></expr> ?</condition><then> <expr><call><name>gzclose_r</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>gzclose_w</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<return>return <expr><call><name>gzclose_r</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

</unit>
