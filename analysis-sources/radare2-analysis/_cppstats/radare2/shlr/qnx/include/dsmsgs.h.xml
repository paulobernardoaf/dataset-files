<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\shlr\qnx\include\dsmsgs.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_PROTOVER_MAJOR</name></cpp:macro> <cpp:value>0x00000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_PROTOVER_MINOR</name></cpp:macro> <cpp:value>0x00000003</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_ENOERR</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_ENOPTY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_ETHREAD</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_ECONINV</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_ESPAWN</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_EPROCFS</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_EPROCSTOP</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_EQPSINFO</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_EQMEMMODEL</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_EQPROXY</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PDEBUG_EQDBG</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_CHANNEL_RESET</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_CHANNEL_DEBUG</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_CHANNEL_TEXT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_CHANNEL_NAK</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DS_DATA_MAX_SIZE</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DS_DATA_RCV_SIZE</name><parameter_list>(<parameter><type><name>msg</name></type></parameter>, <parameter><type><name>total</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((total) - (sizeof(*(msg)) - DS_DATA_MAX_SIZE))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DS_MSG_OKSTATUS_FLAG</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DS_MSG_OKDATA_FLAG</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DS_MSG_NO_RESPONSE</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QNXNTO_NSIG</name></cpp:macro> <cpp:value>57</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSHDR_MSG_BIG_ENDIAN</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<struct>struct <name>DShdr</name> <block>{

<decl_stmt><decl><type><name>ut8</name></type> <name>cmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>subcmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>mid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>channel</name></decl>;</decl_stmt>

}</block>;</struct>

<enum>enum <block>{

<decl><name>DStMsg_connect</name></decl>, 

<decl><name>DStMsg_disconnect</name></decl>, 

<decl><name>DStMsg_select</name></decl>, 

<decl><name>DStMsg_mapinfo</name></decl>, 

<decl><name>DStMsg_load</name></decl>, 

<decl><name>DStMsg_attach</name></decl>, 

<decl><name>DStMsg_detach</name></decl>, 

<decl><name>DStMsg_kill</name></decl>, 

<decl><name>DStMsg_stop</name></decl>, 

<decl><name>DStMsg_memrd</name></decl>, 

<decl><name>DStMsg_memwr</name></decl>, 

<decl><name>DStMsg_regrd</name></decl>, 

<decl><name>DStMsg_regwr</name></decl>, 

<decl><name>DStMsg_run</name></decl>, 

<decl><name>DStMsg_brk</name></decl>, 

<decl><name>DStMsg_fileopen</name></decl>, 

<decl><name>DStMsg_filerd</name></decl>, 

<decl><name>DStMsg_filewr</name></decl>, 

<decl><name>DStMsg_fileclose</name></decl>, 

<decl><name>DStMsg_pidlist</name></decl>, 

<decl><name>DStMsg_cwd</name></decl>, 

<decl><name>DStMsg_env</name></decl>, 

<decl><name>DStMsg_base_address</name></decl>, 

<decl><name>DStMsg_protover</name></decl>, 

<decl><name>DStMsg_handlesig</name></decl>, 

<decl><name>DStMsg_cpuinfo</name></decl>, 

<decl><name>DStMsg_tidnames</name></decl>, 

<decl><name>DStMsg_procfsinfo</name></decl>, 

<decl><name>DSrMsg_err</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>, 

<decl><name>DSrMsg_ok</name></decl>, 

<decl><name>DSrMsg_okstatus</name></decl>, 

<decl><name>DSrMsg_okdata</name></decl>, 

<decl><name>DShMsg_notify</name> <init>= <expr><literal type="number">64</literal></expr></init></decl> 

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_LOAD_DEBUG</name></decl>,

<decl><name>DSMSG_LOAD_RUN</name></decl>,

<decl><name>DSMSG_LOAD_RUN_PERSIST</name></decl>,

<decl><name>DSMSG_LOAD_INHERIT_ENV</name> <init>= <expr><literal type="number">0x80</literal></expr></init></decl>

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_ENV_CLEARARGV</name></decl>,

<decl><name>DSMSG_ENV_ADDARG</name></decl>,

<decl><name>DSMSG_ENV_CLEARENV</name></decl>,

<decl><name>DSMSG_ENV_SETENV</name></decl>,

<decl><name>DSMSG_ENV_SETENV_MORE</name></decl>

}</block>;</enum>

<enum>enum <block>{ <decl><name>DSMSG_STOP_PID</name></decl>,

<decl><name>DSMSG_STOP_PIDS</name></decl> }</block>;</enum>

<enum>enum <block>{ <decl><name>DSMSG_SELECT_SET</name></decl>,

<decl><name>DSMSG_SELECT_QUERY</name></decl> }</block>;</enum>

<enum>enum <block>{ <decl><name>DSMSG_KILL_PIDTID</name></decl>,

<decl><name>DSMSG_KILL_PID</name></decl>,

<decl><name>DSMSG_KILL_PIDS</name></decl> }</block>;</enum>

<enum>enum <block>{ <decl><name>DSMSG_MEM_VIRTUAL</name></decl>,

<decl><name>DSMSG_MEM_PHYSICAL</name></decl>,

<decl><name>DSMSG_MEM_IO</name></decl>,

<decl><name>DSMSG_MEM_BASEREL</name></decl> }</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_REG_GENERAL</name></decl>,

<decl><name>DSMSG_REG_FLOAT</name></decl>,

<decl><name>DSMSG_REG_SYSTEM</name></decl>,

<decl><name>DSMSG_REG_ALT</name></decl>,

<decl><name>DSMSG_REG_END</name></decl>

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_RUN</name></decl>,

<decl><name>DSMSG_RUN_COUNT</name></decl>,

<decl><name>DSMSG_RUN_RANGE</name></decl>,

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_PIDLIST_BEGIN</name></decl>,

<decl><name>DSMSG_PIDLIST_NEXT</name></decl>,

<decl><name>DSMSG_PIDLIST_SPECIFIC</name></decl>,

<decl><name>DSMSG_PIDLIST_SPECIFIC_TID</name></decl>, 

}</block>;</enum> 

<enum>enum <block>{

<decl><name>DSMSG_CWD_QUERY</name></decl>,

<decl><name>DSMSG_CWD_SET</name></decl>,

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_MAPINFO_BEGIN</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,

<decl><name>DSMSG_MAPINFO_NEXT</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,

<decl><name>DSMSG_MAPINFO_SPECIFIC</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>,

<decl><name>DSMSG_MAPINFO_ELF</name> <init>= <expr><literal type="number">0x80</literal></expr></init></decl>,

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_PROTOVER_MINOR</name> <init>=

<expr><literal type="number">0x000000FF</literal></expr></init></decl>, 

<decl><name>DSMSG_PROTOVER_MAJOR</name> <init>=

<expr><literal type="number">0x0000FF00</literal></expr></init></decl>, 

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_BRK_EXEC</name> <init>= <expr><literal type="number">0x0001</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_RD</name> <init>= <expr><literal type="number">0x0002</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_WR</name> <init>= <expr><literal type="number">0x0004</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_RW</name> <init>= <expr><literal type="number">0x0006</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_MODIFY</name> <init>= <expr><literal type="number">0x0008</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_RDM</name> <init>= <expr><literal type="number">0x000a</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_WRM</name> <init>= <expr><literal type="number">0x000c</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_RWM</name> <init>=

<expr><literal type="number">0x000e</literal></expr></init></decl>, 

<decl><name>DSMSG_BRK_HW</name> <init>= <expr><literal type="number">0x0010</literal></expr></init></decl>, 

}</block>;</enum>

<enum>enum <block>{

<decl><name>DSMSG_NOTIFY_PIDLOAD</name></decl>, 

<decl><name>DSMSG_NOTIFY_TIDLOAD</name></decl>, 

<decl><name>DSMSG_NOTIFY_DLLLOAD</name></decl>, 

<decl><name>DSMSG_NOTIFY_PIDUNLOAD</name></decl>, 

<decl><name>DSMSG_NOTIFY_TIDUNLOAD</name></decl>, 

<decl><name>DSMSG_NOTIFY_DLLUNLOAD</name></decl>, 

<decl><name>DSMSG_NOTIFY_BRK</name></decl>, 

<decl><name>DSMSG_NOTIFY_STEP</name></decl>, 

<decl><name>DSMSG_NOTIFY_SIGEV</name></decl>, 

<decl><name>DSMSG_NOTIFY_STOPPED</name></decl> 

}</block>;</enum>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>major</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>minor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>spare</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_connect_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt> }</block></struct></type> <name>DStMsg_disconnect_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>tid</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_select_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>addr</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_mapinfo_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>argc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>envc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>cmdline</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_load_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>pid</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_attach_t</name>;</typedef>

<typedef>typedef <type><name>DStMsg_attach_t</name></type> <name>DStMsg_procfsinfo_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>pid</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_detach_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>signo</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_kill_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt> }</block></struct></type> <name>DStMsg_stop_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>size</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_memrd_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>data</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_memwr_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>size</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_regrd_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>data</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_regwr_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name><name>addr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name>step</name></decl>;</union>

}</block></struct></type> <name>DStMsg_run_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_brk_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>perms</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>pathname</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_fileopen_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>size</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_filerd_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>data</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_filewr_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>mtime</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_fileclose_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>pid</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>st32</name></type> <name>tid</name></decl>;</decl_stmt> 

}</block></struct></type> <name>DStMsg_pidlist_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>path</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_cwd_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>data</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_env_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt> }</block></struct></type> <name>DStMsg_baseaddr_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>major</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>minor</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_protover_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>signals</name><index>[<expr><name>QNXNTO_NSIG</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>sig_to_pass</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_handlesig_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_cpuinfo_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare</name></decl>;</decl_stmt>

}</block></struct></type> <name>DStMsg_tidnames_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOTIFY_HDR_SIZE</name></cpp:macro> <cpp:value>offsetof (DShMsg_notify_t, un)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOTIFY_MEMBER_SIZE</name><parameter_list>(<parameter><type><name>member</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>sizeof(member)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>tid</name></decl>;</decl_stmt>

<union>union <block>{

<struct>struct <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>codeoff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>dataoff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>ostype</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>cputype</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>cpuid</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name>pidload</name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name>st32</name></type> <name>status</name></decl>;</decl_stmt>

}</block> <decl><name>pidunload</name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name>st32</name></type> <name>status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>faulted</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>reserved</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name>pidunload_v3</name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>ip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>dp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>flags</name></decl>;</decl_stmt> 

}</block> <decl><name>brk</name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>ip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>lastip</name></decl>;</decl_stmt>

}</block> <decl><name>step</name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name>st32</name></type> <name>signo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>value</name></decl>;</decl_stmt>

}</block> <decl><name>sigev</name></decl>;</struct>

}</block> <decl><name>un</name></decl>;</union>

}</block></struct></type> <name>DShMsg_notify_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>err</name></decl>;</decl_stmt>

}</block></struct></type> <name>DSrMsg_err_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt> }</block></struct></type> <name>DSrMsg_ok_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>status</name></decl>;</decl_stmt>

}</block></struct></type> <name>DSrMsg_okstatus_t</name>;</typedef>

<struct>struct <name>dslinkmap</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>debug_vaddr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>dsmapinfo</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>dsmapinfo</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>ino</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>dev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dslinkmap</name></name></type> <name>text</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dslinkmap</name></name></type> <name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>dspidlist</name> <block>{

<decl_stmt><decl><type><name>st32</name></type> <name>pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>num_tids</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>st32</name></type> <name><name>spare</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<struct>struct <name>tidinfo</name> <block>{

<decl_stmt><decl><type><name>st16</name></type> <name>tid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>state</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>flags</name></decl>;</decl_stmt>

}</block> <decl><name><name>tids</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</struct> 

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block>;</struct>

<struct>struct <name>dscpuinfo</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>cpuflags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare3</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>dstidnames</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>numtids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>numleft</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>spare2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block>;</struct>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name><name>data</name><index>[<expr><name>DS_DATA_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DSrMsg_okdata_t</name>;</typedef>

<typedef>typedef <type><union>union <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>DShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_connect_t</name></type> <name>connect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_disconnect_t</name></type> <name>disconnect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_select_t</name></type> <name>select</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_load_t</name></type> <name>load</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_attach_t</name></type> <name>attach</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_procfsinfo_t</name></type> <name>procfsinfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_detach_t</name></type> <name>detach</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_kill_t</name></type> <name>kill</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_stop_t</name></type> <name>stop</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_memrd_t</name></type> <name>memrd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_memwr_t</name></type> <name>memwr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_regrd_t</name></type> <name>regrd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_regwr_t</name></type> <name>regwr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_run_t</name></type> <name>run</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_brk_t</name></type> <name>brk</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_fileopen_t</name></type> <name>fileopen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_filerd_t</name></type> <name>filerd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_filewr_t</name></type> <name>filewr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_fileclose_t</name></type> <name>fileclose</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_pidlist_t</name></type> <name>pidlist</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_mapinfo_t</name></type> <name>mapinfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_cwd_t</name></type> <name>cwd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_env_t</name></type> <name>env</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_baseaddr_t</name></type> <name>baseaddr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_protover_t</name></type> <name>protover</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_handlesig_t</name></type> <name>handlesig</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_cpuinfo_t</name></type> <name>cpuinfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DStMsg_tidnames_t</name></type> <name>tidnames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DShMsg_notify_t</name></type> <name>notify</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DSrMsg_err_t</name></type> <name>err</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DSrMsg_ok_t</name></type> <name>ok</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DSrMsg_okstatus_t</name></type> <name>okstatus</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DSrMsg_okdata_t</name></type> <name>okdata</name></decl>;</decl_stmt>

}</block></union></type> <name>DSMsg_union_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TS_TEXT_MAX_SIZE</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>

<enum>enum <block>{

<decl><name>TSMsg_text</name></decl>, 

<decl><name>TSMsg_done</name></decl>, 

<decl><name>TSMsg_start</name></decl>, 

<decl><name>TSMsg_stop</name></decl>, 

<decl><name>TSMsg_ack</name></decl>, 

}</block>;</enum>

<struct>struct <name>TShdr</name> <block>{

<decl_stmt><decl><type><name>ut8</name></type> <name>cmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>console</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>spare1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>channel</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>TShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>text</name><index>[<expr><name>TS_TEXT_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>TSMsg_text_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name><name>struct</name> <name>TShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt> }</block></struct></type> <name>TSMsg_done_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name><name>struct</name> <name>TShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt> }</block></struct></type> <name>TSMsg_flowctl_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name><name>struct</name> <name>TShdr</name></name></type> <name>hdr</name></decl>;</decl_stmt> }</block></struct></type> <name>TSMsg_ack_t</name>;</typedef>

</unit>
