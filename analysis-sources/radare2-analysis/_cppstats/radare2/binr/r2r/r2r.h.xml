<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\binr\r2r\r2r.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name> <argument_list>(<argument><expr><name>__FreeBSD__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name> <argument_list>(<argument><expr><name>__FreeBSD_kernel__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_OS</name></cpp:macro> <cpp:value>"freebsd"</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__linux__</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_OS</name></cpp:macro> <cpp:value>"linux"</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_OS</name></cpp:macro> <cpp:value>"darwin"</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_OS</name></cpp:macro> <cpp:value>"unknown"</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__i386__</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_ARCH</name></cpp:macro> <cpp:value>"x86"</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>__x86_64__</name></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_ARCH</name></cpp:macro> <cpp:value>"x64"</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_ARCH</name></cpp:macro> <cpp:value>"unknown"</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_ARCH_OS</name></cpp:macro> <cpp:value>R2R_OS"-"R2R_ARCH</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>r2r_cmd_test_string_record</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>line_begin</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut64</name></type> <name>line_end</name></decl>;</decl_stmt> 

}</block></struct></type> <name>R2RCmdTestStringRecord</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_cmd_test_bool_record</name> <block>{

<decl_stmt><decl><type><name>bool</name></type> <name>value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>line</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>set</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RCmdTestBoolRecord</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_cmd_test_t</name> <block>{

<decl_stmt><decl><type><name>R2RCmdTestStringRecord</name></type> <name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RCmdTestStringRecord</name></type> <name>file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RCmdTestStringRecord</name></type> <name>args</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RCmdTestStringRecord</name></type> <name>source</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RCmdTestStringRecord</name></type> <name>cmds</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RCmdTestStringRecord</name></type> <name>expect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RCmdTestStringRecord</name></type> <name>expect_err</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RCmdTestBoolRecord</name></type> <name>broken</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>load_plugins</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RCmdTest</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_CMD_TEST_FOREACH_RECORD_NOP</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>field</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2R_CMD_TEST_FOREACH_RECORD</name><parameter_list>(<parameter><type><name>macro_str</name></type></parameter>, <parameter><type><name>macro_bool</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>macro_str ("NAME", name) macro_str ("FILE", file) macro_str ("ARGS", args) macro_str ("SOURCE", source) macro_str ("CMDS", cmds) macro_str ("EXPECT", expect) macro_str ("EXPECT_ERR", expect_err) macro_bool ("BROKEN", broken)</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <name>r2r_asm_test_mode_t</name> <block>{

<decl><name>R2R_ASM_TEST_MODE_ASSEMBLE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>R2R_ASM_TEST_MODE_DISASSEMBLE</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>,

<decl><name>R2R_ASM_TEST_MODE_BIG_ENDIAN</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>,

<decl><name>R2R_ASM_TEST_MODE_BROKEN</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>

}</block></enum></type> <name>R2RAsmTestMode</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_asm_test_t</name> <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cpu</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>disasm</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>bytes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>bytes_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RAsmTest</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_json_test_t</name> <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>broken</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>load_plugins</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RJsonTest</name>;</typedef>

<typedef>typedef <type><enum>enum <name>r2r_test_type_t</name> <block>{

<decl><name>R2R_TEST_TYPE_CMD</name></decl>,

<decl><name>R2R_TEST_TYPE_ASM</name></decl>,

<decl><name>R2R_TEST_TYPE_JSON</name></decl>

}</block></enum></type> <name>R2RTestType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_test_t</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RTestType</name></type> <name>type</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>R2RCmdTest</name> <modifier>*</modifier></type><name>cmd_test</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RAsmTest</name> <modifier>*</modifier></type><name>asm_test</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RJsonTest</name> <modifier>*</modifier></type><name>json_test</name></decl>;</decl_stmt>

}</block>;</union>

}</block></struct></type> <name>R2RTest</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_test_database_t</name> <block>{

<decl_stmt><decl><type><name>RPVector</name></type> <name>tests</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RStrConstPool</name></type> <name>strpool</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RTestDatabase</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_run_config_t</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r2_cmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rasm2_cmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>json_test_file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>timeout_ms</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RRunConfig</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_process_output_t</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>out</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>err</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>timeout</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RProcessOutput</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_asm_test_output_t</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>disasm</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>bytes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>bytes_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>as_timeout</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>disas_timeout</name></decl>;</decl_stmt>

}</block></struct></type> <name>R2RAsmTestOutput</name>;</typedef>

<typedef>typedef <type><enum>enum <name>r2r_test_result_t</name> <block>{

<decl><name>R2R_TEST_RESULT_OK</name></decl>,

<decl><name>R2R_TEST_RESULT_FAILED</name></decl>,

<decl><name>R2R_TEST_RESULT_BROKEN</name></decl>,

<decl><name>R2R_TEST_RESULT_FIXED</name></decl>

}</block></enum></type> <name>R2RTestResult</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r2r_test_result_info_t</name> <block>{

<decl_stmt><decl><type><name>R2RTest</name> <modifier>*</modifier></type><name>test</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R2RTestResult</name></type> <name>result</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>timeout</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>R2RProcessOutput</name> <modifier>*</modifier></type><name>proc_out</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>R2RAsmTestOutput</name> <modifier>*</modifier></type><name>asm_out</name></decl>;</decl_stmt> 

}</block>;</union>

}</block></struct></type> <name>R2RTestResultInfo</name>;</typedef>

<function_decl><type><name>R_API</name> <name>R2RCmdTest</name> <modifier>*</modifier></type><name>r2r_cmd_test_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_cmd_test_free</name><parameter_list>(<parameter><decl><type><name>R2RCmdTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RPVector</name> <modifier>*</modifier></type><name>r2r_load_cmd_test_file</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RAsmTest</name> <modifier>*</modifier></type><name>r2r_asm_test_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_asm_test_free</name><parameter_list>(<parameter><decl><type><name>R2RAsmTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RPVector</name> <modifier>*</modifier></type><name>r2r_load_asm_test_file</name><parameter_list>(<parameter><decl><type><name>RStrConstPool</name> <modifier>*</modifier></type><name>strpool</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RJsonTest</name> <modifier>*</modifier></type><name>r2r_json_test_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_json_test_free</name><parameter_list>(<parameter><decl><type><name>R2RJsonTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RPVector</name> <modifier>*</modifier></type><name>r2r_load_json_test_file</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RTestDatabase</name> <modifier>*</modifier></type><name>r2r_test_database_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_test_database_free</name><parameter_list>(<parameter><decl><type><name>R2RTestDatabase</name> <modifier>*</modifier></type><name>db</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_test_database_load</name><parameter_list>(<parameter><decl><type><name>R2RTestDatabase</name> <modifier>*</modifier></type><name>db</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>r2r_subprocess_t</name></name></type> <name>R2RSubprocess</name>;</typedef>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_subprocess_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_subprocess_fini</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RSubprocess</name> <modifier>*</modifier></type><name>r2r_subprocess_start</name><parameter_list>(

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>args</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>args_size</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>envvars</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>envvals</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>env_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_subprocess_wait</name><parameter_list>(<parameter><decl><type><name>R2RSubprocess</name> <modifier>*</modifier></type><name>proc</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>timeout_ms</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_subprocess_free</name><parameter_list>(<parameter><decl><type><name>R2RSubprocess</name> <modifier>*</modifier></type><name>proc</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>R2RProcessOutput</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>R2RCmdRunner</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>args</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>args_size</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>envvars</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>envvals</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>env_size</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_process_output_free</name><parameter_list>(<parameter><decl><type><name>R2RProcessOutput</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RProcessOutput</name> <modifier>*</modifier></type><name>r2r_run_cmd_test</name><parameter_list>(<parameter><decl><type><name>R2RRunConfig</name> <modifier>*</modifier></type><name>config</name></decl></parameter>, <parameter><decl><type><name>R2RCmdTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>, <parameter><decl><type><name>R2RCmdRunner</name></type> <name>runner</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_check_cmd_test</name><parameter_list>(<parameter><decl><type><name>R2RProcessOutput</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>R2RCmdTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_check_jq_available</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RProcessOutput</name> <modifier>*</modifier></type><name>r2r_run_json_test</name><parameter_list>(<parameter><decl><type><name>R2RRunConfig</name> <modifier>*</modifier></type><name>config</name></decl></parameter>, <parameter><decl><type><name>R2RJsonTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>, <parameter><decl><type><name>R2RCmdRunner</name></type> <name>runner</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_check_json_test</name><parameter_list>(<parameter><decl><type><name>R2RProcessOutput</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>R2RJsonTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RAsmTestOutput</name> <modifier>*</modifier></type><name>r2r_run_asm_test</name><parameter_list>(<parameter><decl><type><name>R2RRunConfig</name> <modifier>*</modifier></type><name>config</name></decl></parameter>, <parameter><decl><type><name>R2RAsmTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_check_asm_test</name><parameter_list>(<parameter><decl><type><name>R2RAsmTestOutput</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>R2RAsmTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_asm_test_output_free</name><parameter_list>(<parameter><decl><type><name>R2RAsmTestOutput</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_test_free</name><parameter_list>(<parameter><decl><type><name>R2RTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r2r_test_name</name><parameter_list>(<parameter><decl><type><name>R2RTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r2r_test_broken</name><parameter_list>(<parameter><decl><type><name>R2RTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>R2RTestResultInfo</name> <modifier>*</modifier></type><name>r2r_run_test</name><parameter_list>(<parameter><decl><type><name>R2RRunConfig</name> <modifier>*</modifier></type><name>config</name></decl></parameter>, <parameter><decl><type><name>R2RTest</name> <modifier>*</modifier></type><name>test</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r2r_test_result_info_free</name><parameter_list>(<parameter><decl><type><name>R2RTestResultInfo</name> <modifier>*</modifier></type><name>result</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
