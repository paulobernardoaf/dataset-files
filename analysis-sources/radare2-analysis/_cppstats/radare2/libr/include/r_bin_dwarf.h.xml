<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\include\r_bin_dwarf.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_EXTENDED_OPCODE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOP_EXTENDED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOP_DISCARD</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOP_STANDARD</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOP_SPECIAL</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_copy</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_advance_pc</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_advance_line</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_set_file</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_set_column</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_negate_stmt</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_set_basic_block</name></cpp:macro> <cpp:value>0x07</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_const_add_pc</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_fixed_advance_pc</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_set_prologue_end</name></cpp:macro> <cpp:value>0x0a</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_set_epilogue_begin</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNS_set_isa</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_end_sequence</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_set_address</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_define_file</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_set_discriminator</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_lo_user</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_hi_user</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_negate_is_UV_update</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_push_context</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_pop_context</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_set_file_line_column</name></cpp:macro> <cpp:value>0x14</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_set_routine_name</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_set_sequence</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_negate_post_semantics</name></cpp:macro> <cpp:value>0x17</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_negate_function_exit</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_negate_front_end_logical</name></cpp:macro> <cpp:value>0x19</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_HP_define_proc</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_lo_user</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LNE_hi_user</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_array_type</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_class_type</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_entry_point</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_enumeration_type</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_formal_parameter</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_imported_declaration</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_label</name></cpp:macro> <cpp:value>0x0a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_lexical_block</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_member</name></cpp:macro> <cpp:value>0x0d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_pointer_type</name></cpp:macro> <cpp:value>0x0f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_reference_type</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_compile_unit</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_string_type</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_structure_type</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_subroutine_type</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_typedef</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_union_type</name></cpp:macro> <cpp:value>0x17</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_unspecified_parameters</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_variant</name></cpp:macro> <cpp:value>0x19</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_common_block</name></cpp:macro> <cpp:value>0x1a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_common_inclusion</name></cpp:macro> <cpp:value>0x1b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_inheritance</name></cpp:macro> <cpp:value>0x1c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_inlined_subroutine</name></cpp:macro> <cpp:value>0x1d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_module</name></cpp:macro> <cpp:value>0x1e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_ptr_to_member_type</name></cpp:macro> <cpp:value>0x1f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_set_type</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_subrange_type</name></cpp:macro> <cpp:value>0x21</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_with_stmt</name></cpp:macro> <cpp:value>0x22</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_access_declaration</name></cpp:macro> <cpp:value>0x23</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_base_type</name></cpp:macro> <cpp:value>0x24</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_catch_block</name></cpp:macro> <cpp:value>0x25</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_const_type</name></cpp:macro> <cpp:value>0x26</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_constant</name></cpp:macro> <cpp:value>0x27</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_enumerator</name></cpp:macro> <cpp:value>0x28</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_file_type</name></cpp:macro> <cpp:value>0x29</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_friend</name></cpp:macro> <cpp:value>0x2a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_namelist</name></cpp:macro> <cpp:value>0x2b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_namelist_item</name></cpp:macro> <cpp:value>0x2c</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_namelist_items</name></cpp:macro> <cpp:value>0x2c</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_packed_type</name></cpp:macro> <cpp:value>0x2d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_subprogram</name></cpp:macro> <cpp:value>0x2e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_template_type_parameter</name></cpp:macro> <cpp:value>0x2f</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_template_type_param</name></cpp:macro> <cpp:value>0x2f</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_template_value_parameter</name></cpp:macro> <cpp:value>0x30</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_template_value_param</name></cpp:macro> <cpp:value>0x30</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_thrown_type</name></cpp:macro> <cpp:value>0x31</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_try_block</name></cpp:macro> <cpp:value>0x32</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_variant_part</name></cpp:macro> <cpp:value>0x33</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_variable</name></cpp:macro> <cpp:value>0x34</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_volatile_type</name></cpp:macro> <cpp:value>0x35</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_dwarf_procedure</name></cpp:macro> <cpp:value>0x36</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_restrict_type</name></cpp:macro> <cpp:value>0x37</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_interface_type</name></cpp:macro> <cpp:value>0x38</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_namespace</name></cpp:macro> <cpp:value>0x39</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_imported_module</name></cpp:macro> <cpp:value>0x3a</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_unspecified_type</name></cpp:macro> <cpp:value>0x3b</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_partial_unit</name></cpp:macro> <cpp:value>0x3c</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_imported_unit</name></cpp:macro> <cpp:value>0x3d</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_mutable_type</name></cpp:macro> <cpp:value>0x3e</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_condition</name></cpp:macro> <cpp:value>0x3f</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_shared_type</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_type_unit</name></cpp:macro> <cpp:value>0x41</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_rvalue_reference_type</name></cpp:macro> <cpp:value>0x42</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_template_alias</name></cpp:macro> <cpp:value>0x43</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_LAST</name></cpp:macro> <cpp:value>0x44</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_lo_user</name></cpp:macro> <cpp:value>0x4080</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_TAG_hi_user</name></cpp:macro> <cpp:value>0xffff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CHILDREN_no</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CHILDREN_yes</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_sibling</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_location</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_name</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_ordering</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_byte_size</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_bit_offset</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_bit_size</name></cpp:macro> <cpp:value>0x0d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_stmt_list</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_low_pc</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_high_pc</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_language</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_discr</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_discr_value</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_visibility</name></cpp:macro> <cpp:value>0x17</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_import</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_string_length</name></cpp:macro> <cpp:value>0x19</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_common_reference</name></cpp:macro> <cpp:value>0x1a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_comp_dir</name></cpp:macro> <cpp:value>0x1b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_const_value</name></cpp:macro> <cpp:value>0x1c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_containing_type</name></cpp:macro> <cpp:value>0x1d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_default_value</name></cpp:macro> <cpp:value>0x1e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_inline</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_is_optional</name></cpp:macro> <cpp:value>0x21</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_lower_bound</name></cpp:macro> <cpp:value>0x22</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_producer</name></cpp:macro> <cpp:value>0x25</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_prototyped</name></cpp:macro> <cpp:value>0x27</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_return_addr</name></cpp:macro> <cpp:value>0x2a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_start_scope</name></cpp:macro> <cpp:value>0x2c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_stride_size</name></cpp:macro> <cpp:value>0x2e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_upper_bound</name></cpp:macro> <cpp:value>0x2f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_abstract_origin</name></cpp:macro> <cpp:value>0x31</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_accessibility</name></cpp:macro> <cpp:value>0x32</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_address_class</name></cpp:macro> <cpp:value>0x33</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_artificial</name></cpp:macro> <cpp:value>0x34</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_base_types</name></cpp:macro> <cpp:value>0x35</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_calling_convention</name></cpp:macro> <cpp:value>0x36</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_count</name></cpp:macro> <cpp:value>0x37</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_data_member_location</name></cpp:macro> <cpp:value>0x38</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_decl_column</name></cpp:macro> <cpp:value>0x39</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_decl_file</name></cpp:macro> <cpp:value>0x3a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_decl_line</name></cpp:macro> <cpp:value>0x3b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_declaration</name></cpp:macro> <cpp:value>0x3c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_discr_list</name></cpp:macro> <cpp:value>0x3d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_encoding</name></cpp:macro> <cpp:value>0x3e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_external</name></cpp:macro> <cpp:value>0x3f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_frame_base</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_friend</name></cpp:macro> <cpp:value>0x41</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_identifier_case</name></cpp:macro> <cpp:value>0x42</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_macro_info</name></cpp:macro> <cpp:value>0x43</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_namelist_item</name></cpp:macro> <cpp:value>0x44</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_priority</name></cpp:macro> <cpp:value>0x45</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_segment</name></cpp:macro> <cpp:value>0x46</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_specification</name></cpp:macro> <cpp:value>0x47</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_static_link</name></cpp:macro> <cpp:value>0x48</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_type</name></cpp:macro> <cpp:value>0x49</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_use_location</name></cpp:macro> <cpp:value>0x4a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_variable_parameter</name></cpp:macro> <cpp:value>0x4b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_virtuality</name></cpp:macro> <cpp:value>0x4c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_vtable_elem_location</name></cpp:macro> <cpp:value>0x4d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_allocated</name></cpp:macro> <cpp:value>0x4e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_associated</name></cpp:macro> <cpp:value>0x4f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_data_location</name></cpp:macro> <cpp:value>0x50</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_byte_stride</name></cpp:macro> <cpp:value>0x51</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_entry_pc</name></cpp:macro> <cpp:value>0x52</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_use_UTF8</name></cpp:macro> <cpp:value>0x53</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_extension</name></cpp:macro> <cpp:value>0x54</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_ranges</name></cpp:macro> <cpp:value>0x55</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_trampoline</name></cpp:macro> <cpp:value>0x56</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_call_column</name></cpp:macro> <cpp:value>0x57</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_call_file</name></cpp:macro> <cpp:value>0x58</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_call_line</name></cpp:macro> <cpp:value>0x59</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_description</name></cpp:macro> <cpp:value>0x5a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_binary_scale</name></cpp:macro> <cpp:value>0x5b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_decimal_scale</name></cpp:macro> <cpp:value>0x5c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_small</name></cpp:macro> <cpp:value>0x5d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_decimal_sign</name></cpp:macro> <cpp:value>0x5e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_digit_count</name></cpp:macro> <cpp:value>0x5f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_picture_string</name></cpp:macro> <cpp:value>0x60</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_mutable</name></cpp:macro> <cpp:value>0x61</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_threads_scaled</name></cpp:macro> <cpp:value>0x62</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_explicit</name></cpp:macro> <cpp:value>0x63</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_object_pointer</name></cpp:macro> <cpp:value>0x64</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_endianity</name></cpp:macro> <cpp:value>0x65</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_elemental</name></cpp:macro> <cpp:value>0x66</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_pure</name></cpp:macro> <cpp:value>0x67</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_recursive</name></cpp:macro> <cpp:value>0x68</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_signature</name></cpp:macro> <cpp:value>0x69</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_main_subprogram</name></cpp:macro> <cpp:value>0x6a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_data_big_offset</name></cpp:macro> <cpp:value>0x6b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_const_expr</name></cpp:macro> <cpp:value>0x6c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_enum_class</name></cpp:macro> <cpp:value>0x6d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_linkage_name</name></cpp:macro> <cpp:value>0x6e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_lo_user</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_AT_hi_user</name></cpp:macro> <cpp:value>0x3fff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_addr</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_block2</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_block4</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_data2</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_data4</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_data8</name></cpp:macro> <cpp:value>0x07</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_string</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_block</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_block1</name></cpp:macro> <cpp:value>0x0a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_data1</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_flag</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_sdata</name></cpp:macro> <cpp:value>0x0d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_strp</name></cpp:macro> <cpp:value>0x0e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_udata</name></cpp:macro> <cpp:value>0x0f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_ref_addr</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_ref1</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_ref2</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_ref4</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_ref8</name></cpp:macro> <cpp:value>0x14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_ref_udata</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_indirect</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_sec_offset</name></cpp:macro> <cpp:value>0x17</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_exprloc</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_flag_present</name></cpp:macro> <cpp:value>0x19</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_FORM_ref_sig8</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_addr</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_deref</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const1u</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const1s</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const2u</name></cpp:macro> <cpp:value>0x0a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const2s</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const4u</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const4s</name></cpp:macro> <cpp:value>0x0d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const8u</name></cpp:macro> <cpp:value>0x0e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_const8s</name></cpp:macro> <cpp:value>0x0f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_constu</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_consts</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_dup</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_drop</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_over</name></cpp:macro> <cpp:value>0x14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_pick</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_swap</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_rot</name></cpp:macro> <cpp:value>0x17</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_xderef</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_abs</name></cpp:macro> <cpp:value>0x19</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_and</name></cpp:macro> <cpp:value>0x1a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_div</name></cpp:macro> <cpp:value>0x1b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_minus</name></cpp:macro> <cpp:value>0x1c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_mod</name></cpp:macro> <cpp:value>0x1d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_mul</name></cpp:macro> <cpp:value>0x1e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_neg</name></cpp:macro> <cpp:value>0x1f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_not</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_or</name></cpp:macro> <cpp:value>0x21</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_plus</name></cpp:macro> <cpp:value>0x22</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_plus_uconst</name></cpp:macro> <cpp:value>0x23</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_shl</name></cpp:macro> <cpp:value>0x24</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_shr</name></cpp:macro> <cpp:value>0x25</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_shra</name></cpp:macro> <cpp:value>0x26</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_xor</name></cpp:macro> <cpp:value>0x27</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_skip</name></cpp:macro> <cpp:value>0x2f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_bra</name></cpp:macro> <cpp:value>0x28</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_eq</name></cpp:macro> <cpp:value>0x29</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_ge</name></cpp:macro> <cpp:value>0x2a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_gt</name></cpp:macro> <cpp:value>0x2b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_le</name></cpp:macro> <cpp:value>0x2c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lt</name></cpp:macro> <cpp:value>0x2d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_ne</name></cpp:macro> <cpp:value>0x2e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit0</name></cpp:macro> <cpp:value>0x30</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit1</name></cpp:macro> <cpp:value>0x31</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit2</name></cpp:macro> <cpp:value>0x32</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit3</name></cpp:macro> <cpp:value>0x33</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit4</name></cpp:macro> <cpp:value>0x34</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit5</name></cpp:macro> <cpp:value>0x35</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit6</name></cpp:macro> <cpp:value>0x36</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit7</name></cpp:macro> <cpp:value>0x37</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit8</name></cpp:macro> <cpp:value>0x38</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit9</name></cpp:macro> <cpp:value>0x39</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit10</name></cpp:macro> <cpp:value>0x3a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit11</name></cpp:macro> <cpp:value>0x3b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit12</name></cpp:macro> <cpp:value>0x3c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit13</name></cpp:macro> <cpp:value>0x3d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit14</name></cpp:macro> <cpp:value>0x3e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit15</name></cpp:macro> <cpp:value>0x3f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit16</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit17</name></cpp:macro> <cpp:value>0x41</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit18</name></cpp:macro> <cpp:value>0x42</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit19</name></cpp:macro> <cpp:value>0x43</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit20</name></cpp:macro> <cpp:value>0x44</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit21</name></cpp:macro> <cpp:value>0x45</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit22</name></cpp:macro> <cpp:value>0x46</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit23</name></cpp:macro> <cpp:value>0x47</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit24</name></cpp:macro> <cpp:value>0x48</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit25</name></cpp:macro> <cpp:value>0x49</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit26</name></cpp:macro> <cpp:value>0x4a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit27</name></cpp:macro> <cpp:value>0x4b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit28</name></cpp:macro> <cpp:value>0x4c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit29</name></cpp:macro> <cpp:value>0x4d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit30</name></cpp:macro> <cpp:value>0x4e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lit31</name></cpp:macro> <cpp:value>0x4f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg0</name></cpp:macro> <cpp:value>0x50</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg1</name></cpp:macro> <cpp:value>0x51</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg2</name></cpp:macro> <cpp:value>0x52</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg3</name></cpp:macro> <cpp:value>0x53</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg4</name></cpp:macro> <cpp:value>0x54</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg5</name></cpp:macro> <cpp:value>0x55</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg6</name></cpp:macro> <cpp:value>0x56</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg7</name></cpp:macro> <cpp:value>0x57</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg8</name></cpp:macro> <cpp:value>0x58</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg9</name></cpp:macro> <cpp:value>0x59</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg10</name></cpp:macro> <cpp:value>0x5a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg11</name></cpp:macro> <cpp:value>0x5b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg12</name></cpp:macro> <cpp:value>0x5c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg13</name></cpp:macro> <cpp:value>0x5d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg14</name></cpp:macro> <cpp:value>0x5e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg15</name></cpp:macro> <cpp:value>0x5f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg16</name></cpp:macro> <cpp:value>0x60</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg17</name></cpp:macro> <cpp:value>0x61</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg18</name></cpp:macro> <cpp:value>0x62</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg19</name></cpp:macro> <cpp:value>0x63</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg20</name></cpp:macro> <cpp:value>0x64</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg21</name></cpp:macro> <cpp:value>0x65</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg22</name></cpp:macro> <cpp:value>0x66</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg23</name></cpp:macro> <cpp:value>0x67</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg24</name></cpp:macro> <cpp:value>0x68</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg25</name></cpp:macro> <cpp:value>0x69</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg26</name></cpp:macro> <cpp:value>0x6a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg27</name></cpp:macro> <cpp:value>0x6b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg28</name></cpp:macro> <cpp:value>0x6c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg29</name></cpp:macro> <cpp:value>0x6d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg30</name></cpp:macro> <cpp:value>0x6e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_reg31</name></cpp:macro> <cpp:value>0x6f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg0</name></cpp:macro> <cpp:value>0x70</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg1</name></cpp:macro> <cpp:value>0x71</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg2</name></cpp:macro> <cpp:value>0x72</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg3</name></cpp:macro> <cpp:value>0x73</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg4</name></cpp:macro> <cpp:value>0x74</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg5</name></cpp:macro> <cpp:value>0x75</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg6</name></cpp:macro> <cpp:value>0x76</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg7</name></cpp:macro> <cpp:value>0x77</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg8</name></cpp:macro> <cpp:value>0x78</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg9</name></cpp:macro> <cpp:value>0x79</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg10</name></cpp:macro> <cpp:value>0x7a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg11</name></cpp:macro> <cpp:value>0x7b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg12</name></cpp:macro> <cpp:value>0x7c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg13</name></cpp:macro> <cpp:value>0x7d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg14</name></cpp:macro> <cpp:value>0x7e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg15</name></cpp:macro> <cpp:value>0x7f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg16</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg17</name></cpp:macro> <cpp:value>0x81</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg18</name></cpp:macro> <cpp:value>0x82</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg19</name></cpp:macro> <cpp:value>0x83</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg20</name></cpp:macro> <cpp:value>0x84</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg21</name></cpp:macro> <cpp:value>0x85</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg22</name></cpp:macro> <cpp:value>0x86</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg23</name></cpp:macro> <cpp:value>0x87</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg24</name></cpp:macro> <cpp:value>0x88</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg25</name></cpp:macro> <cpp:value>0x89</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg26</name></cpp:macro> <cpp:value>0x8a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg27</name></cpp:macro> <cpp:value>0x8b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg28</name></cpp:macro> <cpp:value>0x8c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg29</name></cpp:macro> <cpp:value>0x8d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg30</name></cpp:macro> <cpp:value>0x8e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_breg31</name></cpp:macro> <cpp:value>0x8f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_regx</name></cpp:macro> <cpp:value>0x90</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_fbreg</name></cpp:macro> <cpp:value>0x91</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_bregx</name></cpp:macro> <cpp:value>0x92</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_piece</name></cpp:macro> <cpp:value>0x93</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_deref_size</name></cpp:macro> <cpp:value>0x94</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_xderef_size</name></cpp:macro> <cpp:value>0x95</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_nop</name></cpp:macro> <cpp:value>0x96</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_push_object_address</name></cpp:macro> <cpp:value>0x97</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_call2</name></cpp:macro> <cpp:value>0x98</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_call4</name></cpp:macro> <cpp:value>0x99</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_call_ref</name></cpp:macro> <cpp:value>0x9a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_form_tls_address</name></cpp:macro> <cpp:value>0x9b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_call_frame_cfa</name></cpp:macro> <cpp:value>0x9c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_bit_piece</name></cpp:macro> <cpp:value>0x9d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_implicit_value</name></cpp:macro> <cpp:value>0x9e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_stack_value</name></cpp:macro> <cpp:value>0x9f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_lo_user</name></cpp:macro> <cpp:value>0xe0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_OP_hi_user</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_address</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_boolean</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_complex_float</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_float</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_signed</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_signed_char</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_unsigned</name></cpp:macro> <cpp:value>0x07</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_unsigned_char</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_imaginary_float</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_packed_decimal</name></cpp:macro> <cpp:value>0x0a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_numeric_string</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_edited</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_signed_fixed</name></cpp:macro> <cpp:value>0x0d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_unsigned_fixed</name></cpp:macro> <cpp:value>0x0e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_decimal_float</name></cpp:macro> <cpp:value>0x0f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_UTF</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_lo_user</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ATE_hi_user</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_DS_unsigned</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_DS_leading_overpunch</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_DS_trailing_overpunch</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_DS_leading_separate</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_DS_trailing_separate</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_END_default</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_END_big</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_END_little</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_END_lo_user</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_END_hi_user</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ACCESS_public</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ACCESS_protected</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ACCESS_private</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_VIS_local</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_VIS_exported</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_VIS_qualified</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_VIRTUALITY_none</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_VIRTUALITY_virtual</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_VIRTUALITY_pure_virtual</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_C89</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_C</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Ada83</name></cpp:macro> <cpp:value>0x0003</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_C_plus_plus</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Cobol74</name></cpp:macro> <cpp:value>0x0005</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Cobol85</name></cpp:macro> <cpp:value>0x0006</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Fortran77</name></cpp:macro> <cpp:value>0x0007</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Fortran90</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Pascal83</name></cpp:macro> <cpp:value>0x0009</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Modula2</name></cpp:macro> <cpp:value>0x000a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Java</name></cpp:macro> <cpp:value>0x000b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_C99</name></cpp:macro> <cpp:value>0x000c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Ada95</name></cpp:macro> <cpp:value>0x000d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Fortran95</name></cpp:macro> <cpp:value>0x000e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_PLI</name></cpp:macro> <cpp:value>0x000f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_ObjC</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_ObjC_plus_plus</name></cpp:macro> <cpp:value>0x0011</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_UPC</name></cpp:macro> <cpp:value>0x0012</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_D</name></cpp:macro> <cpp:value>0x0013</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Python</name></cpp:macro> <cpp:value>0x0014</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Rust</name></cpp:macro> <cpp:value>0x001c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_C11</name></cpp:macro> <cpp:value>0x001d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Swift</name></cpp:macro> <cpp:value>0x001e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Julia</name></cpp:macro> <cpp:value>0x001f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Dylan</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_C_plus_plus_14</name></cpp:macro> <cpp:value>0x0021</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Fortran03</name></cpp:macro> <cpp:value>0x0022</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_Fortran08</name></cpp:macro> <cpp:value>0x0023</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_lo_user</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_LANG_hi_user</name></cpp:macro> <cpp:value>0xffff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ID_case_sensitive</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ID_up_case</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ID_down_case</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ID_case_insensitive</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CC_normal</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CC_program</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CC_nocall</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CC_lo_user</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CC_hi_user</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_INL_not_inlined</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_INL_inlined</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_INL_declared_not_inlined</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_INL_declared_inlined</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ORD_row_major</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_ORD_col_major</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_DSC_label</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_DSC_range</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_MACINFO_define</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_MACINFO_undef</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_MACINFO_start_file</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_MACINFO_end_file</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_MACINFO_vendor_ext</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_advance_loc</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_offset</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_restore</name></cpp:macro> <cpp:value>0xc0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_nop</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_set_loc</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_advance_loc1</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_advance_loc2</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_advance_loc4</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_offse_extended</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_restore_extended</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_undefined</name></cpp:macro> <cpp:value>0x07</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_same_value</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_register</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_remember_state</name></cpp:macro> <cpp:value>0x0a</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_restore_state</name></cpp:macro> <cpp:value>0x0b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_def_cfa</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_def_cfa_register</name></cpp:macro> <cpp:value>0x0d</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_def_cfa_offset</name></cpp:macro> <cpp:value>0x0e</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_def_cfa_expression</name></cpp:macro> <cpp:value>0x0f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_expression</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_offset_extended_sf</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_def_cfa_sf</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_def_cfa_offset_sf</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_val_offset</name></cpp:macro> <cpp:value>0x14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_val_offset_sf</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_val_expression</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_lo_user</name></cpp:macro> <cpp:value>0x1c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DW_CFA_hi_user</name></cpp:macro> <cpp:value>0x3f</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>total_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>plen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>mininstlen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>is_stmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name>line_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>line_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>opcode_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name><name>oplentable</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>incdirs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>file</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfInfoHeader</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIN_DWARF_INFO_HEADER_FILE_LENGTH</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(sizeof (x-&gt;file)/sizeof(*(x-&gt;file)))</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>column</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>is_stmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>basic_block</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>end_sequence</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfState</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>column</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfRow</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>part1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>part2</name></decl>;</decl_stmt>

}</block></struct></type> <name>initial_length</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DWARF_INIT_LEN_64</name></cpp:macro> <cpp:value>0xffffffff</cpp:value></cpp:define>

<typedef>typedef <type><union>union <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>offset32</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>offset64</name></decl>;</decl_stmt>

}</block></union></type> <name>section_offset</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>initial_length</name></type> <name>unit_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>section_offset</name></type> <name>debug_abbrev_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>address_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfCompilationUnitHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>initial_length</name></type> <name>unit_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>section_offset</name></type> <name>debug_abbrev_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>address_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>type_signature</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>section_offset</name></type> <name>type_offset</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfTypeUnitHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>initial_length</name></type> <name>unit_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>section_offset</name></type> <name>debug_info_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>address_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>segment_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfAddressRangeTable</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>attr_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>attr_form</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfAttrSpec</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfBlock</name>;</typedef>

<typedef>typedef <type><union>union <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBinDwarfBlock</name></type> <name>block</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>constant</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st64</name></type> <name>sdata</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>reference</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>string</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>

}</block> <decl><name>str_struct</name></decl>;</struct>

}</block></union></type> <name>RBinDwarfAttrEnc</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>form</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBinDwarfAttrEnc</name></type> <name>encoding</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfAttrValue</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>abbrev_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>pointer_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfCompUnitHdr</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>tag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>abbrev_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>capacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBinDwarfAttrValue</name> <modifier>*</modifier></type><name>attr_values</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfDIE</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>RBinDwarfCompUnitHdr</name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>capacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBinDwarfDIE</name> <modifier>*</modifier></type><name>dies</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfCompUnit</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMP_UNIT_CAPACITY</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEBUG_INFO_CAPACITY</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>capacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBinDwarfCompUnit</name> <modifier>*</modifier></type><name>comp_units</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfDebugInfo</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ABBREV_DECL_CAP</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>tag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>has_children</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>capacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBinDwarfAttrSpec</name> <modifier>*</modifier></type><name>specs</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfAbbrevDecl</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEBUG_ABBREV_CAP</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>capacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBinDwarfAbbrevDecl</name> <modifier>*</modifier></type><name>decls</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfDebugAbbrev</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DWARF_FALSE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DWARF_TRUE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>op_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>column</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>is_stmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>basic_block</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>end_sequence</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>prologue_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>epilogue_begin</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>isa</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>discriminator</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfSMRegisters</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>id_idx</name></decl>, <name>mod_time</name>, <name>file_len</name>;</decl_stmt>

}</block></struct></type> <name>file_entry</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>initial_length</name></type> <name>unit_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>header_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>min_inst_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>max_ops_per_inst</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>default_is_stmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name>line_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>line_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>opcode_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>std_opcode_lengths</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>include_directories</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>file_entry</name> <modifier>*</modifier></type><name>file_names</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>file_names_count</name></decl>;</decl_stmt>

}</block></struct></type> <name>RBinDwarfLNPHeader</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r_bin_dwarf_line_new</name><parameter_list>(<parameter><type><name>o</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>f</name></type></parameter>,<parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>o-&gt;address=a, o-&gt;file = strdup (f?f:""), o-&gt;line = l, o-&gt;column =0,o</cpp:value></cpp:define>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_bin_dwarf_parse_info_raw</name><parameter_list>(<parameter><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RBinDwarfDebugAbbrev</name> <modifier>*</modifier></type><name>da</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>obuf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>debug_str</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>debug_str_len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_bin_dwarf_free_debug_abbrev</name><parameter_list>(<parameter><decl><type><name>RBinDwarfDebugAbbrev</name> <modifier>*</modifier></type><name>da</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
