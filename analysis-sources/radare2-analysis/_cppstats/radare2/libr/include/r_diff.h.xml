<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\include\r_diff.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>R_LIB_VERSION_HEADER</name><argument_list>(<argument><expr><name>r_diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<typedef>typedef <type><struct>struct <name>r_diff_op_t</name> <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>a_off</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>a_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>b_off</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>b_len</name></decl>;</decl_stmt>

}</block></struct></type> <name>RDiffOp</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_diff_t</name> <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>off_a</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>off_b</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>delta</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>verbose</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_diff_t</name></name> <modifier>*</modifier></type><name>diff</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>RDiffOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>RDiff</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>RDiffCallback</name>)<parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>diff</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>RDiffOp</name> <modifier>*</modifier></type><name>op</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_API</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>R_API</name> <name>RDiff</name> <modifier>*</modifier></type><name>r_diff_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RDiff</name> <modifier>*</modifier></type><name>r_diff_new_from</name><parameter_list>(<parameter><decl><type><name>ut64</name></type> <name>off_a</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>off_b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RDiff</name> <modifier>*</modifier></type><name>r_diff_free</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_buffers</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_buffers_static</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_buffers_radiff</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_buffers_delta</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>diff</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>sa</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_buffers</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_diff_buffers_to_string</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_set_callback</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>RDiffCallback</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_diff_buffers_distance</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>lb</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>distance</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>similarity</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_diff_buffers_distance_myers</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>diff</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>lb</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>distance</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>similarity</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_diff_buffers_distance_levenstein</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>lb</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>distance</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>similarity</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_diff_buffers_unified</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_lines</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sa</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>la</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file2</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_set_delta</name><parameter_list>(<parameter><decl><type><name>RDiff</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_diff_gdiff</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rad</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>va</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
