<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\include\r_util\r_asn1.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_JSON_NULL</name></cpp:macro> <cpp:value>"null"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_JSON_EMPTY</name></cpp:macro> <cpp:value>"{}"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_OID_LEN</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_CLASS</name></cpp:macro> <cpp:value>0xC0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_FORM</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_TAG</name></cpp:macro> <cpp:value>0x1F</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_LENLONG</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN1_LENSHORT</name></cpp:macro> <cpp:value>0x7F</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLASS_UNIVERSAL</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLASS_APPLICATION</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLASS_CONTEXT</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLASS_PRIVATE</name></cpp:macro> <cpp:value>0xC0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FORM_PRIMITIVE</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FORM_CONSTRUCTED</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_EOC</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_BOOLEAN</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_INTEGER</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_BITSTRING</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_OCTETSTRING</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_NULL</name></cpp:macro> <cpp:value>0x05</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_OID</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_OBJDESCRIPTOR</name></cpp:macro> <cpp:value>0x07</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_EXTERNAL</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_REAL</name></cpp:macro> <cpp:value>0x09</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_ENUMERATED</name></cpp:macro> <cpp:value>0x0A</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_EMBEDDED_PDV</name></cpp:macro> <cpp:value>0x0B</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_UTF8STRING</name></cpp:macro> <cpp:value>0x0C</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_SEQUENCE</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_SET</name></cpp:macro> <cpp:value>0x11</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_NUMERICSTRING</name></cpp:macro> <cpp:value>0x12</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_PRINTABLESTRING</name></cpp:macro> <cpp:value>0x13</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_T61STRING</name></cpp:macro> <cpp:value>0x14</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_VIDEOTEXSTRING</name></cpp:macro> <cpp:value>0x15</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_IA5STRING</name></cpp:macro> <cpp:value>0x16</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_UTCTIME</name></cpp:macro> <cpp:value>0x17</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_GENERALIZEDTIME</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_GRAPHICSTRING</name></cpp:macro> <cpp:value>0x19</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_VISIBLESTRING</name></cpp:macro> <cpp:value>0x1A</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_GENERALSTRING</name></cpp:macro> <cpp:value>0x1B</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_UNIVERSALSTRING</name></cpp:macro> <cpp:value>0x1C</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAG_BMPSTRING</name></cpp:macro> <cpp:value>0x1E</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>r_asn1_string_t</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>string</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>allocated</name></decl>;</decl_stmt>

}</block></struct></type> <name>RASN1String</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_asn1_list_t</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>r_asn1_object_t</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>objects</name></decl>;</decl_stmt>

}</block></struct></type> <name>ASN1List</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_asn1_bin_t</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>binary</name></decl>;</decl_stmt>

}</block></struct></type> <name>RASN1Binary</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_asn1_object_t</name> <block>{

<decl_stmt><decl><type><name>ut8</name></type> <name>klass</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut8</name></type> <name>form</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut8</name></type> <name>tag</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>sector</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut32</name></type> <name>length</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ASN1List</name></type> <name>list</name></decl>;</decl_stmt> 

}</block></struct></type> <name>RASN1Object</name>;</typedef>

<function_decl><type><name>R_API</name> <name>RASN1Object</name> <modifier>*</modifier></type><name>r_asn1_create_object</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>start_pointer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1Binary</name> <modifier>*</modifier></type><name>r_asn1_create_binary</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_create_string</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>string</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>allocated</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_bits</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_utctime</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_time</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_integer</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_string</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_bytes</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_boolean</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RASN1String</name> <modifier>*</modifier></type><name>r_asn1_stringify_oid</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name><modifier>*</modifier></type> <name>buffer</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asn1_free_object</name> <parameter_list>(<parameter><decl><type><name>RASN1Object</name> <modifier>*</modifier></type><name>object</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>char</name> <modifier>*</modifier></type><name>r_asn1_to_string</name> <parameter_list>(<parameter><decl><type><name>RASN1Object</name> <modifier>*</modifier></type><name>object</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>depth</name></decl></parameter>, <parameter><decl><type><name>RStrBuf</name> <modifier>*</modifier></type><name>sb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asn1_free_string</name> <parameter_list>(<parameter><decl><type><name>RASN1String</name> <modifier>*</modifier></type><name>string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_asn1_free_binary</name> <parameter_list>(<parameter><decl><type><name>RASN1Binary</name> <modifier>*</modifier></type><name>string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>asn1_setformat</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>fmt</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
