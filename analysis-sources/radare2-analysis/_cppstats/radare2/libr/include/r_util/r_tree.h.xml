<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\include\r_util\r_tree.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_list.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util/r_queue.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>r_tree_t</name>;</struct_decl>

<typedef>typedef <type><struct>struct <name>r_tree_node_t</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>r_tree_node_t</name></name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>r_tree_t</name></name> <modifier>*</modifier></type><name>tree</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RList</name> <modifier>*</modifier></type><name>children</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>n_children</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RListFree</name></type> <name>free</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

}</block></struct></type> <name>RTreeNode</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_tree_t</name> <block>{

<decl_stmt><decl><type><name>RTreeNode</name> <modifier>*</modifier></type><name>root</name></decl>;</decl_stmt>

}</block></struct></type> <name>RTree</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_tree_visitor_t</name> <block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>pre_visit</name>)<parameter_list>(<parameter><decl><type><name>RTreeNode</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>r_tree_visitor_t</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>post_visit</name>)<parameter_list>(<parameter><decl><type><name>RTreeNode</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>r_tree_visitor_t</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>discover_child</name>)<parameter_list>(<parameter><decl><type><name>RTreeNode</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>r_tree_visitor_t</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

}</block></struct></type> <name>RTreeVisitor</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>RTreeNodeVisitCb</name>)<parameter_list>(<parameter><decl><type><name>RTreeNode</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>RTreeVisitor</name> <modifier>*</modifier></type><name>vis</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>R_API</name> <name>RTree</name> <modifier>*</modifier></type><name>r_tree_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RTreeNode</name> <modifier>*</modifier></type><name>r_tree_add_node</name><parameter_list>(<parameter><decl><type><name>RTree</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>RTreeNode</name> <modifier>*</modifier></type><name>node</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>child_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_tree_reset</name><parameter_list>(<parameter><decl><type><name>RTree</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_tree_free</name><parameter_list>(<parameter><decl><type><name>RTree</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_tree_dfs</name><parameter_list>(<parameter><decl><type><name>RTree</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>RTreeVisitor</name> <modifier>*</modifier></type><name>vis</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_tree_bfs</name><parameter_list>(<parameter><decl><type><name>RTree</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>RTreeVisitor</name> <modifier>*</modifier></type><name>vis</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
