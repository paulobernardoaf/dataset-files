<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\include\r_util\r_big.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_LIB_GMP</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RNumBig</name></cpp:macro> <cpp:value>mpz_t</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>HAVE_LIB_SSL</name></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RNumBig</name></cpp:macro> <cpp:value>BIGNUM</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_BIG_SIZE</name></cpp:macro> <cpp:value>10000</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>r_num_big_t</name> <block>{

<decl_stmt><decl><type><name>char</name></type> <name><name>dgts</name><index>[<expr><name>R_BIG_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sign</name></decl>, <name>last</name>;</decl_stmt>

}</block></struct></type> <name>RNumBig</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>R_API</name> <name>RNumBig</name> <modifier>*</modifier></type><name>r_big_new</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_free</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_sub</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_print</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_set</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_set_st</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_set_st64</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>st64</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_set_str</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_add</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_sub</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_big_cmp</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_big_cmp_st</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_shift</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>d</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_mul</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_mul_ut</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_div</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_div_ut</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_big_divisible_ut</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_big_mod</name><parameter_list>(<parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>RNumBig</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
