<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\include\r_syscall.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sdb.h&gt;</cpp:file></cpp:include>

<expr_stmt><expr><call><name>R_LIB_VERSION_HEADER</name> <argument_list>(<argument><expr><name>r_syscall</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R_SYSCALL_ARGS</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>r_syscall_item_t</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>swi</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>args</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>sargs</name></decl>;</decl_stmt>

}</block></struct></type> <name>RSyscallItem</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_syscall_port_t</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>port</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

}</block></struct></type> <name>RSyscallPort</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_syscall_t</name> <block>{

<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>os</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cpu</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RSyscallItem</name> <modifier>*</modifier></type><name>sysptr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RSyscallPort</name> <modifier>*</modifier></type><name>sysport</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>db</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Sdb</name> <modifier>*</modifier></type><name>srdb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>refs</name></decl>;</decl_stmt>

}</block></struct></type> <name>RSyscall</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

typedef struct r_sysregs_item_t {

ut64 address;

ut64 size;

int type;

const char *name;

const char *description;

} RSysregsItem;

typedef struct r_sysregs_t {

FILE *fd;

char *arch;

char *cpu;

RSysregsItem *sysregs;

Sdb *db;

} RSysregs;

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <name>r_syscall_plugin_t</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>os</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nargs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>r_syscall_args_t</name></name> <modifier>*</modifier></type><name>args</name></decl>;</decl_stmt>

}</block></struct></type> <name>RSyscallPlugin</name>;</typedef>

<typedef>typedef <type><struct>struct <name>r_syscall_arch_plugin_t</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nargs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>r_syscall_args_t</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>args</name></decl>;</decl_stmt>

}</block></struct></type> <name>RSyscallArchPlugin</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>R_API</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>R_API</name> <name>RSyscallItem</name> <modifier>*</modifier></type><name>r_syscall_item_new_from_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_syscall_item_free</name><parameter_list>(<parameter><decl><type><name>RSyscallItem</name> <modifier>*</modifier></type><name>si</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RSyscall</name> <modifier>*</modifier></type><name>r_syscall_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>void</name></type> <name>r_syscall_free</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RSyscall</name><modifier>*</modifier></type> <name>r_syscall_ref</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>sc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>bool</name></type> <name>r_syscall_setup</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cpu</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>os</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RSyscallItem</name> <modifier>*</modifier></type><name>r_syscall_get</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>swi</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_syscall_get_num</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_syscall_get_i</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>swi</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>r_syscall_sysreg</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>num</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>RList</name> <modifier>*</modifier></type><name>r_syscall_list</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <name>int</name></type> <name>r_syscall_get_swi</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>R_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>r_syscall_get_io</name><parameter_list>(<parameter><decl><type><name>RSyscall</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ioport</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
