<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\hash\crca.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_hash.h&gt;</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>crc_init</name> <parameter_list>(<parameter><decl><type><name>R_CRC_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>utcrc</name></type> <name>crc</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>reflect</name></decl></parameter>, <parameter><decl><type><name>utcrc</name></type> <name>poly</name></decl></parameter>, <parameter><decl><type><name>utcrc</name></type> <name>xout</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>crc</name></name> <operator>=</operator> <name>crc</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <name>size</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>reflect</name></name> <operator>=</operator> <name>reflect</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>poly</name></name> <operator>=</operator> <name>poly</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>xout</name></name> <operator>=</operator> <name>xout</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>crc_update</name> <parameter_list>(<parameter><decl><type><name>R_CRC_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>sz</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>utcrc</name></type> <name>crc</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<expr_stmt><expr><name>crc</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>crc</name></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>sz</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>d</name> <operator>=</operator> <name><name>data</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>ctx</name><operator>-&gt;</operator><name>reflect</name></name></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <name>j</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <operator>(</operator><literal type="number">7</literal> <operator>-</operator> <name>j</name><operator>)</operator><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>d</name> <operator>^=</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>j</name><operator>)</operator> <operator>^</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">7</literal> <operator>-</operator> <name>j</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>crc</name> <operator>^=</operator> <name>d</name> <operator>&lt;&lt;</operator> <operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>-</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>crc</name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>crc</name> <operator>&gt;&gt;</operator> <operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>?</condition><then> <expr><name><name>ctx</name><operator>-&gt;</operator><name>poly</name></name></expr></then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator> <operator>^</operator> <operator>(</operator><name>crc</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>crc</name></name> <operator>=</operator> <name>crc</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>crc_final</name> <parameter_list>(<parameter><decl><type><name>R_CRC_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>utcrc</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>utcrc</name></type> <name>crc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>crc</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>crc</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>crc</name> <operator>&amp;=</operator> <operator>(</operator><operator>(</operator><operator>(</operator><call><name>UTCRC_C</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>ctx</name><operator>-&gt;</operator><name>reflect</name></name></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>crc</name> <operator>&gt;&gt;</operator> <name>i</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>crc</name> <operator>&gt;&gt;</operator> <operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>-</operator> <literal type="number">1</literal> <operator>-</operator> <name>i</name><operator>)</operator><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>crc</name> <operator>^=</operator> <operator>(</operator><call><name>UTCRC_C</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <name>i</name><operator>)</operator> <operator>^</operator> <operator>(</operator><call><name>UTCRC_C</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>-</operator> <literal type="number">1</literal> <operator>-</operator> <name>i</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>r</name> <operator>=</operator> <name>crc</name> <operator>^</operator> <name><name>ctx</name><operator>-&gt;</operator><name>xout</name></name></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CRC_PRESET</name><parameter_list>(<parameter><type><name>crc</name></type></parameter>, <parameter><type><name>size</name></type></parameter>, <parameter><type><name>reflect</name></type></parameter>, <parameter><type><name>poly</name></type></parameter>, <parameter><type><name>xout</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ UTCRC_C(crc), (size), (reflect), UTCRC_C(poly), UTCRC_C(xout) }</cpp:value></cpp:define>

<decl_stmt><decl><type><name>R_CRC_CTX</name></type> <name><name>crc_presets</name><index>[]</index></name> <init>= <expr><block>{

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x07</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_HAVE_CRC8_EXTRA</name></expr></cpp:if>

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFF</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x9B</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x39</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0xD5</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFF</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1D</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFD</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x1D</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x07</literal></expr></argument> , <argument><expr><literal type="number">0x55</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x31</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFF</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x07</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00</literal></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x9B</literal></expr></argument> , <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_HAVE_CRC15_EXTRA</name></expr></cpp:if>

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x4599</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x8005</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x8005</literal></expr></argument> , <argument><expr><literal type="number">0xFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0xFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_HAVE_CRC16_EXTRA</name></expr></cpp:if>

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x1D0F</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x8005</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0xC867</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x800D</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x8005</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x0589</literal></expr></argument> , <argument><expr><literal type="number">0x0001</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x0589</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x3D65</literal></expr></argument> , <argument><expr><literal type="number">0xFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x3D65</literal></expr></argument> , <argument><expr><literal type="number">0xFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0xFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x8005</literal></expr></argument> , <argument><expr><literal type="number">0xFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xB2AA</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x8BB7</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0xA097</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x89EC</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xC6C6</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x8005</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFF</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0xFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000</literal></expr></argument> , <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x1021</literal></expr></argument> , <argument><expr><literal type="number">0x0000</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_HAVE_CRC24</name></expr></cpp:if>

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xB704CE</literal></expr></argument> , <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x864CFB</literal></expr></argument> , <argument><expr><literal type="number">0x000000</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x04C11DB7</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00000000</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x80000011</literal></expr></argument>, <argument><expr><literal type="number">0x00000000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x1EDC6F41</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_HAVE_CRC32_EXTRA</name></expr></cpp:if>

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x04C11DB7</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0xA833982B</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x04C11DB7</literal></expr></argument>, <argument><expr><literal type="number">0x00000000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00000000</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x04C11DB7</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00000000</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x814141AB</literal></expr></argument>, <argument><expr><literal type="number">0x00000000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x04C11DB7</literal></expr></argument>, <argument><expr><literal type="number">0x00000000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x00000000</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x000000AF</literal></expr></argument>, <argument><expr><literal type="number">0x00000000</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_HAVE_CRC64</name></expr></cpp:if>

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000000000000000</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x42F0E1EBA9EA3693</literal></expr></argument>, <argument><expr><literal type="number">0x0000000000000000</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>R_HAVE_CRC64_EXTRA</name></expr></cpp:if>

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0x0000000000000000</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x42F0E1EBA9EA3693</literal></expr></argument>, <argument><expr><literal type="number">0x0000000000000000</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFFFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0x42F0E1EBA9EA3693</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFFFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x42F0E1EBA9EA3693</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<expr><call><name>CRC_PRESET</name> <argument_list>(<argument><expr><literal type="number">0xFFFFFFFFFFFFFFFF</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0x000000000000001b</literal></expr></argument>, <argument><expr><literal type="number">0xFFFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>, 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>crc_init_preset</name> <parameter_list>(<parameter><decl><type><name>R_CRC_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>CRC_PRESETS</name></name></type> <name>preset</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>crc</name></name> <operator>=</operator> <name><name>crc_presets</name><index>[<expr><name>preset</name></expr>]</index></name><operator>.</operator><name>crc</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <name><name>crc_presets</name><index>[<expr><name>preset</name></expr>]</index></name><operator>.</operator><name>size</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>reflect</name></name> <operator>=</operator> <name><name>crc_presets</name><index>[<expr><name>preset</name></expr>]</index></name><operator>.</operator><name>reflect</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>poly</name></name> <operator>=</operator> <name><name>crc_presets</name><index>[<expr><name>preset</name></expr>]</index></name><operator>.</operator><name>poly</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>xout</name></name> <operator>=</operator> <name><name>crc_presets</name><index>[<expr><name>preset</name></expr>]</index></name><operator>.</operator><name>xout</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>utcrc</name></type> <name>r_hash_crc_preset</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>CRC_PRESETS</name></name></type> <name>preset</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>data</name> <operator>||</operator> <operator>!</operator><name>size</name> <operator>||</operator> <name>preset</name> <operator>&gt;=</operator> <name>CRC_PRESET_SIZE</name></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>utcrc</name></type> <name>r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>R_CRC_CTX</name></type> <name>crcctx</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>crc_init_preset</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>crcctx</name></expr></argument>, <argument><expr><name>preset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>crc_update</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>crcctx</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>crc_final</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>crcctx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>r</name></expr>;</return>

</block_content>}</block></function>

</unit>
