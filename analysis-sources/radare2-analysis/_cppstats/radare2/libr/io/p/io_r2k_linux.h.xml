<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\io\p\io_r2k_linux.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_io.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_lib.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util/r_print.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/ioctl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/mman.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_PHYS_ADDR</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>

<struct>struct <name>io_r2k_linux</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>beid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>wp</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>r2k_data</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut8</name></type> <name>wp</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>r2k_kernel_map_info</name> <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>start_addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>end_addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name><name>phys_addr</name><index>[<expr><name>MAX_PHYS_ADDR</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n_pages</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n_phys_addr</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>r2k_kernel_maps</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>n_entries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>r2k_control_reg</name> <block>{

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__x86_64__</name> <operator>||</operator> <name>__i386__</name></expr></cpp:if>

<decl_stmt><decl><type><name>size_t</name></type> <name>cr0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>cr1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>cr2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>cr3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>cr4</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__x86_64__</name></expr></cpp:if>

<decl_stmt><decl><type><name>size_t</name></type> <name>cr8</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>__arm__</name></expr></cpp:elif>

<decl_stmt><decl><type><name>size_t</name></type> <name>ttbr0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>ttbr1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>ttbcr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>c1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>c3</name></decl>;</decl_stmt>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>__arm64__</name> <operator>||</operator> <name>__aarch64__</name></expr></cpp:elif>

<decl_stmt><decl><type><name>size_t</name></type> <name>sctlr_el1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>ttbr0_el1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>ttbr1_el1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>tcr_el1</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

}</block>;</struct>

<struct>struct <name>r2k_proc_info</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>comm</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name><name>vmareastruct</name><index>[<expr><literal type="number">4096</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>stack</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>task</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R2_TYPE</name></cpp:macro> <cpp:value>0x69</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>READ_KERNEL_MEMORY</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_KERNEL_MEMORY</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>READ_PROCESS_ADDR</name></cpp:macro> <cpp:value>0x3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_PROCESS_ADDR</name></cpp:macro> <cpp:value>0X4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>READ_PHYSICAL_ADDR</name></cpp:macro> <cpp:value>0x5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_PHYSICAL_ADDR</name></cpp:macro> <cpp:value>0x6</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GET_KERNEL_MAP</name></cpp:macro> <cpp:value>0x7</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>READ_CONTROL_REG</name></cpp:macro> <cpp:value>0x8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRINT_PROC_INFO</name></cpp:macro> <cpp:value>0x9</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_IOC_TYPECHECK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_data_size</name></cpp:macro> <cpp:value>struct r2k_data</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_kernel_maps_size</name></cpp:macro> <cpp:value>struct r2k_kernel_maps</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_control_reg_size</name></cpp:macro> <cpp:value>struct r2k_control_reg</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_proc_info_size</name></cpp:macro> <cpp:value>struct r2k_proc_info</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_data_size</name></cpp:macro> <cpp:value>sizeof (struct r2k_data)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_kernel_maps_size</name></cpp:macro> <cpp:value>sizeof (struct r2k_kernel_maps)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_control_reg_size</name></cpp:macro> <cpp:value>sizeof (struct r2k_control_reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>r2k_proc_info_size</name></cpp:macro> <cpp:value>sizeof (struct r2k_proc_info)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_READ_KERNEL_MEMORY</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, READ_KERNEL_MEMORY, r2k_data_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_WRITE_KERNEL_MEMORY</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, WRITE_KERNEL_MEMORY, r2k_data_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_READ_PROCESS_ADDR</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, READ_PROCESS_ADDR, r2k_data_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_WRITE_PROCESS_ADDR</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, WRITE_PROCESS_ADDR, r2k_data_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_READ_PHYSICAL_ADDR</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, READ_PHYSICAL_ADDR, r2k_data_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_WRITE_PHYSICAL_ADDR</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, WRITE_PHYSICAL_ADDR, r2k_data_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_GET_KERNEL_MAP</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, GET_KERNEL_MAP, r2k_kernel_maps_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_READ_CONTROL_REG</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, READ_CONTROL_REG, r2k_control_reg_size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IOCTL_PRINT_PROC_INFO</name></cpp:macro> <cpp:value>_IOR (R2_TYPE, PRINT_PROC_INFO, r2k_data_size)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VM_READ</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VM_WRITE</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VM_EXEC</name></cpp:macro> <cpp:value>0x4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VM_MAYSHARE</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>io_r2k_linux</name></name></type> <name>r2k_struct</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> <name>ReadMemory</name> <parameter_list>(<parameter><decl><type><name>RIO</name> <modifier>*</modifier></type><name>io</name></decl></parameter>, <parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>iodesc</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ioctl_n</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>WriteMemory</name> <parameter_list>(<parameter><decl><type><name>RIO</name> <modifier>*</modifier></type><name>io</name></decl></parameter>, <parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>iodesc</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ioctl_n</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>run_ioctl_command</name><parameter_list>(<parameter><decl><type><name>RIO</name> <modifier>*</modifier></type><name>io</name></decl></parameter>, <parameter><decl><type><name>RIODesc</name> <modifier>*</modifier></type><name>iodesc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
