<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\crypto\des.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_util.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROTL28</name><parameter_list>(<parameter><type><name>rs</name></type></parameter>, <parameter><type><name>sh</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((((rs) &lt;&lt; (sh)) | ((rs) &gt;&gt; (28 - (sh)))) &amp; 0x0FFFFFFF)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROTL</name><parameter_list>(<parameter><type><name>rs</name></type></parameter>, <parameter><type><name>sh</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((rs) &lt;&lt; (sh)) | ((rs) &gt;&gt; (32 - (sh))))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROTR</name><parameter_list>(<parameter><type><name>rs</name></type></parameter>, <parameter><type><name>sh</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((rs) &gt;&gt; (sh)) | ((rs) &lt;&lt; (32 - (sh))))</cpp:value></cpp:define> 

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox1</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x01010400</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00010000</literal></expr>, <expr><literal type="number">0x01010404</literal></expr>, <expr><literal type="number">0x01010004</literal></expr>, <expr><literal type="number">0x00010404</literal></expr>, <expr><literal type="number">0x00000004</literal></expr>, <expr><literal type="number">0x00010000</literal></expr>,

<expr><literal type="number">0x00000400</literal></expr>, <expr><literal type="number">0x01010400</literal></expr>, <expr><literal type="number">0x01010404</literal></expr>, <expr><literal type="number">0x00000400</literal></expr>, <expr><literal type="number">0x01000404</literal></expr>, <expr><literal type="number">0x01010004</literal></expr>, <expr><literal type="number">0x01000000</literal></expr>, <expr><literal type="number">0x00000004</literal></expr>,

<expr><literal type="number">0x00000404</literal></expr>, <expr><literal type="number">0x01000400</literal></expr>, <expr><literal type="number">0x01000400</literal></expr>, <expr><literal type="number">0x00010400</literal></expr>, <expr><literal type="number">0x00010400</literal></expr>, <expr><literal type="number">0x01010000</literal></expr>, <expr><literal type="number">0x01010000</literal></expr>, <expr><literal type="number">0x01000404</literal></expr>,

<expr><literal type="number">0x00010004</literal></expr>, <expr><literal type="number">0x01000004</literal></expr>, <expr><literal type="number">0x01000004</literal></expr>, <expr><literal type="number">0x00010004</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00000404</literal></expr>, <expr><literal type="number">0x00010404</literal></expr>, <expr><literal type="number">0x01000000</literal></expr>,

<expr><literal type="number">0x00010000</literal></expr>, <expr><literal type="number">0x01010404</literal></expr>, <expr><literal type="number">0x00000004</literal></expr>, <expr><literal type="number">0x01010000</literal></expr>, <expr><literal type="number">0x01010400</literal></expr>, <expr><literal type="number">0x01000000</literal></expr>, <expr><literal type="number">0x01000000</literal></expr>, <expr><literal type="number">0x00000400</literal></expr>,

<expr><literal type="number">0x01010004</literal></expr>, <expr><literal type="number">0x00010000</literal></expr>, <expr><literal type="number">0x00010400</literal></expr>, <expr><literal type="number">0x01000004</literal></expr>, <expr><literal type="number">0x00000400</literal></expr>, <expr><literal type="number">0x00000004</literal></expr>, <expr><literal type="number">0x01000404</literal></expr>, <expr><literal type="number">0x00010404</literal></expr>,

<expr><literal type="number">0x01010404</literal></expr>, <expr><literal type="number">0x00010004</literal></expr>, <expr><literal type="number">0x01010000</literal></expr>, <expr><literal type="number">0x01000404</literal></expr>, <expr><literal type="number">0x01000004</literal></expr>, <expr><literal type="number">0x00000404</literal></expr>, <expr><literal type="number">0x00010404</literal></expr>, <expr><literal type="number">0x01010400</literal></expr>,

<expr><literal type="number">0x00000404</literal></expr>, <expr><literal type="number">0x01000400</literal></expr>, <expr><literal type="number">0x01000400</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00010004</literal></expr>, <expr><literal type="number">0x00010400</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x01010004</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox2</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x80108020</literal></expr>, <expr><literal type="number">0x80008000</literal></expr>, <expr><literal type="number">0x00008000</literal></expr>, <expr><literal type="number">0x00108020</literal></expr>, <expr><literal type="number">0x00100000</literal></expr>, <expr><literal type="number">0x00000020</literal></expr>, <expr><literal type="number">0x80100020</literal></expr>, <expr><literal type="number">0x80008020</literal></expr>,

<expr><literal type="number">0x80000020</literal></expr>, <expr><literal type="number">0x80108020</literal></expr>, <expr><literal type="number">0x80108000</literal></expr>, <expr><literal type="number">0x80000000</literal></expr>, <expr><literal type="number">0x80008000</literal></expr>, <expr><literal type="number">0x00100000</literal></expr>, <expr><literal type="number">0x00000020</literal></expr>, <expr><literal type="number">0x80100020</literal></expr>,

<expr><literal type="number">0x00108000</literal></expr>, <expr><literal type="number">0x00100020</literal></expr>, <expr><literal type="number">0x80008020</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x80000000</literal></expr>, <expr><literal type="number">0x00008000</literal></expr>, <expr><literal type="number">0x00108020</literal></expr>, <expr><literal type="number">0x80100000</literal></expr>,

<expr><literal type="number">0x00100020</literal></expr>, <expr><literal type="number">0x80000020</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00108000</literal></expr>, <expr><literal type="number">0x00008020</literal></expr>, <expr><literal type="number">0x80108000</literal></expr>, <expr><literal type="number">0x80100000</literal></expr>, <expr><literal type="number">0x00008020</literal></expr>,

<expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00108020</literal></expr>, <expr><literal type="number">0x80100020</literal></expr>, <expr><literal type="number">0x00100000</literal></expr>, <expr><literal type="number">0x80008020</literal></expr>, <expr><literal type="number">0x80100000</literal></expr>, <expr><literal type="number">0x80108000</literal></expr>, <expr><literal type="number">0x00008000</literal></expr>,

<expr><literal type="number">0x80100000</literal></expr>, <expr><literal type="number">0x80008000</literal></expr>, <expr><literal type="number">0x00000020</literal></expr>, <expr><literal type="number">0x80108020</literal></expr>, <expr><literal type="number">0x00108020</literal></expr>, <expr><literal type="number">0x00000020</literal></expr>, <expr><literal type="number">0x00008000</literal></expr>, <expr><literal type="number">0x80000000</literal></expr>,

<expr><literal type="number">0x00008020</literal></expr>, <expr><literal type="number">0x80108000</literal></expr>, <expr><literal type="number">0x00100000</literal></expr>, <expr><literal type="number">0x80000020</literal></expr>, <expr><literal type="number">0x00100020</literal></expr>, <expr><literal type="number">0x80008020</literal></expr>, <expr><literal type="number">0x80000020</literal></expr>, <expr><literal type="number">0x00100020</literal></expr>,

<expr><literal type="number">0x00108000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x80008000</literal></expr>, <expr><literal type="number">0x00008020</literal></expr>, <expr><literal type="number">0x80000000</literal></expr>, <expr><literal type="number">0x80100020</literal></expr>, <expr><literal type="number">0x80108020</literal></expr>, <expr><literal type="number">0x00108000</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox3</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00000208</literal></expr>, <expr><literal type="number">0x08020200</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x08020008</literal></expr>, <expr><literal type="number">0x08000200</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00020208</literal></expr>, <expr><literal type="number">0x08000200</literal></expr>,

<expr><literal type="number">0x00020008</literal></expr>, <expr><literal type="number">0x08000008</literal></expr>, <expr><literal type="number">0x08000008</literal></expr>, <expr><literal type="number">0x00020000</literal></expr>, <expr><literal type="number">0x08020208</literal></expr>, <expr><literal type="number">0x00020008</literal></expr>, <expr><literal type="number">0x08020000</literal></expr>, <expr><literal type="number">0x00000208</literal></expr>,

<expr><literal type="number">0x08000000</literal></expr>, <expr><literal type="number">0x00000008</literal></expr>, <expr><literal type="number">0x08020200</literal></expr>, <expr><literal type="number">0x00000200</literal></expr>, <expr><literal type="number">0x00020200</literal></expr>, <expr><literal type="number">0x08020000</literal></expr>, <expr><literal type="number">0x08020008</literal></expr>, <expr><literal type="number">0x00020208</literal></expr>,

<expr><literal type="number">0x08000208</literal></expr>, <expr><literal type="number">0x00020200</literal></expr>, <expr><literal type="number">0x00020000</literal></expr>, <expr><literal type="number">0x08000208</literal></expr>, <expr><literal type="number">0x00000008</literal></expr>, <expr><literal type="number">0x08020208</literal></expr>, <expr><literal type="number">0x00000200</literal></expr>, <expr><literal type="number">0x08000000</literal></expr>,

<expr><literal type="number">0x08020200</literal></expr>, <expr><literal type="number">0x08000000</literal></expr>, <expr><literal type="number">0x00020008</literal></expr>, <expr><literal type="number">0x00000208</literal></expr>, <expr><literal type="number">0x00020000</literal></expr>, <expr><literal type="number">0x08020200</literal></expr>, <expr><literal type="number">0x08000200</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>,

<expr><literal type="number">0x00000200</literal></expr>, <expr><literal type="number">0x00020008</literal></expr>, <expr><literal type="number">0x08020208</literal></expr>, <expr><literal type="number">0x08000200</literal></expr>, <expr><literal type="number">0x08000008</literal></expr>, <expr><literal type="number">0x00000200</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x08020008</literal></expr>,

<expr><literal type="number">0x08000208</literal></expr>, <expr><literal type="number">0x00020000</literal></expr>, <expr><literal type="number">0x08000000</literal></expr>, <expr><literal type="number">0x08020208</literal></expr>, <expr><literal type="number">0x00000008</literal></expr>, <expr><literal type="number">0x00020208</literal></expr>, <expr><literal type="number">0x00020200</literal></expr>, <expr><literal type="number">0x08000008</literal></expr>,

<expr><literal type="number">0x08020000</literal></expr>, <expr><literal type="number">0x08000208</literal></expr>, <expr><literal type="number">0x00000208</literal></expr>, <expr><literal type="number">0x08020000</literal></expr>, <expr><literal type="number">0x00020208</literal></expr>, <expr><literal type="number">0x00000008</literal></expr>, <expr><literal type="number">0x08020008</literal></expr>, <expr><literal type="number">0x00020200</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox4</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00802001</literal></expr>, <expr><literal type="number">0x00002081</literal></expr>, <expr><literal type="number">0x00002081</literal></expr>, <expr><literal type="number">0x00000080</literal></expr>, <expr><literal type="number">0x00802080</literal></expr>, <expr><literal type="number">0x00800081</literal></expr>, <expr><literal type="number">0x00800001</literal></expr>, <expr><literal type="number">0x00002001</literal></expr>,

<expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00802000</literal></expr>, <expr><literal type="number">0x00802000</literal></expr>, <expr><literal type="number">0x00802081</literal></expr>, <expr><literal type="number">0x00000081</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00800080</literal></expr>, <expr><literal type="number">0x00800001</literal></expr>,

<expr><literal type="number">0x00000001</literal></expr>, <expr><literal type="number">0x00002000</literal></expr>, <expr><literal type="number">0x00800000</literal></expr>, <expr><literal type="number">0x00802001</literal></expr>, <expr><literal type="number">0x00000080</literal></expr>, <expr><literal type="number">0x00800000</literal></expr>, <expr><literal type="number">0x00002001</literal></expr>, <expr><literal type="number">0x00002080</literal></expr>,

<expr><literal type="number">0x00800081</literal></expr>, <expr><literal type="number">0x00000001</literal></expr>, <expr><literal type="number">0x00002080</literal></expr>, <expr><literal type="number">0x00800080</literal></expr>, <expr><literal type="number">0x00002000</literal></expr>, <expr><literal type="number">0x00802080</literal></expr>, <expr><literal type="number">0x00802081</literal></expr>, <expr><literal type="number">0x00000081</literal></expr>,

<expr><literal type="number">0x00800080</literal></expr>, <expr><literal type="number">0x00800001</literal></expr>, <expr><literal type="number">0x00802000</literal></expr>, <expr><literal type="number">0x00802081</literal></expr>, <expr><literal type="number">0x00000081</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00802000</literal></expr>,

<expr><literal type="number">0x00002080</literal></expr>, <expr><literal type="number">0x00800080</literal></expr>, <expr><literal type="number">0x00800081</literal></expr>, <expr><literal type="number">0x00000001</literal></expr>, <expr><literal type="number">0x00802001</literal></expr>, <expr><literal type="number">0x00002081</literal></expr>, <expr><literal type="number">0x00002081</literal></expr>, <expr><literal type="number">0x00000080</literal></expr>,

<expr><literal type="number">0x00802081</literal></expr>, <expr><literal type="number">0x00000081</literal></expr>, <expr><literal type="number">0x00000001</literal></expr>, <expr><literal type="number">0x00002000</literal></expr>, <expr><literal type="number">0x00800001</literal></expr>, <expr><literal type="number">0x00002001</literal></expr>, <expr><literal type="number">0x00802080</literal></expr>, <expr><literal type="number">0x00800081</literal></expr>,

<expr><literal type="number">0x00002001</literal></expr>, <expr><literal type="number">0x00002080</literal></expr>, <expr><literal type="number">0x00800000</literal></expr>, <expr><literal type="number">0x00802001</literal></expr>, <expr><literal type="number">0x00000080</literal></expr>, <expr><literal type="number">0x00800000</literal></expr>, <expr><literal type="number">0x00002000</literal></expr>, <expr><literal type="number">0x00802080</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox5</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00000100</literal></expr>, <expr><literal type="number">0x02080100</literal></expr>, <expr><literal type="number">0x02080000</literal></expr>, <expr><literal type="number">0x42000100</literal></expr>, <expr><literal type="number">0x00080000</literal></expr>, <expr><literal type="number">0x00000100</literal></expr>, <expr><literal type="number">0x40000000</literal></expr>, <expr><literal type="number">0x02080000</literal></expr>,

<expr><literal type="number">0x40080100</literal></expr>, <expr><literal type="number">0x00080000</literal></expr>, <expr><literal type="number">0x02000100</literal></expr>, <expr><literal type="number">0x40080100</literal></expr>, <expr><literal type="number">0x42000100</literal></expr>, <expr><literal type="number">0x42080000</literal></expr>, <expr><literal type="number">0x00080100</literal></expr>, <expr><literal type="number">0x40000000</literal></expr>,

<expr><literal type="number">0x02000000</literal></expr>, <expr><literal type="number">0x40080000</literal></expr>, <expr><literal type="number">0x40080000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x40000100</literal></expr>, <expr><literal type="number">0x42080100</literal></expr>, <expr><literal type="number">0x42080100</literal></expr>, <expr><literal type="number">0x02000100</literal></expr>,

<expr><literal type="number">0x42080000</literal></expr>, <expr><literal type="number">0x40000100</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x42000000</literal></expr>, <expr><literal type="number">0x02080100</literal></expr>, <expr><literal type="number">0x02000000</literal></expr>, <expr><literal type="number">0x42000000</literal></expr>, <expr><literal type="number">0x00080100</literal></expr>,

<expr><literal type="number">0x00080000</literal></expr>, <expr><literal type="number">0x42000100</literal></expr>, <expr><literal type="number">0x00000100</literal></expr>, <expr><literal type="number">0x02000000</literal></expr>, <expr><literal type="number">0x40000000</literal></expr>, <expr><literal type="number">0x02080000</literal></expr>, <expr><literal type="number">0x42000100</literal></expr>, <expr><literal type="number">0x40080100</literal></expr>,

<expr><literal type="number">0x02000100</literal></expr>, <expr><literal type="number">0x40000000</literal></expr>, <expr><literal type="number">0x42080000</literal></expr>, <expr><literal type="number">0x02080100</literal></expr>, <expr><literal type="number">0x40080100</literal></expr>, <expr><literal type="number">0x00000100</literal></expr>, <expr><literal type="number">0x02000000</literal></expr>, <expr><literal type="number">0x42080000</literal></expr>,

<expr><literal type="number">0x42080100</literal></expr>, <expr><literal type="number">0x00080100</literal></expr>, <expr><literal type="number">0x42000000</literal></expr>, <expr><literal type="number">0x42080100</literal></expr>, <expr><literal type="number">0x02080000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x40080000</literal></expr>, <expr><literal type="number">0x42000000</literal></expr>,

<expr><literal type="number">0x00080100</literal></expr>, <expr><literal type="number">0x02000100</literal></expr>, <expr><literal type="number">0x40000100</literal></expr>, <expr><literal type="number">0x00080000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x40080000</literal></expr>, <expr><literal type="number">0x02080100</literal></expr>, <expr><literal type="number">0x40000100</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox6</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x20000010</literal></expr>, <expr><literal type="number">0x20400000</literal></expr>, <expr><literal type="number">0x00004000</literal></expr>, <expr><literal type="number">0x20404010</literal></expr>, <expr><literal type="number">0x20400000</literal></expr>, <expr><literal type="number">0x00000010</literal></expr>, <expr><literal type="number">0x20404010</literal></expr>, <expr><literal type="number">0x00400000</literal></expr>,

<expr><literal type="number">0x20004000</literal></expr>, <expr><literal type="number">0x00404010</literal></expr>, <expr><literal type="number">0x00400000</literal></expr>, <expr><literal type="number">0x20000010</literal></expr>, <expr><literal type="number">0x00400010</literal></expr>, <expr><literal type="number">0x20004000</literal></expr>, <expr><literal type="number">0x20000000</literal></expr>, <expr><literal type="number">0x00004010</literal></expr>,

<expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00400010</literal></expr>, <expr><literal type="number">0x20004010</literal></expr>, <expr><literal type="number">0x00004000</literal></expr>, <expr><literal type="number">0x00404000</literal></expr>, <expr><literal type="number">0x20004010</literal></expr>, <expr><literal type="number">0x00000010</literal></expr>, <expr><literal type="number">0x20400010</literal></expr>,

<expr><literal type="number">0x20400010</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00404010</literal></expr>, <expr><literal type="number">0x20404000</literal></expr>, <expr><literal type="number">0x00004010</literal></expr>, <expr><literal type="number">0x00404000</literal></expr>, <expr><literal type="number">0x20404000</literal></expr>, <expr><literal type="number">0x20000000</literal></expr>,

<expr><literal type="number">0x20004000</literal></expr>, <expr><literal type="number">0x00000010</literal></expr>, <expr><literal type="number">0x20400010</literal></expr>, <expr><literal type="number">0x00404000</literal></expr>, <expr><literal type="number">0x20404010</literal></expr>, <expr><literal type="number">0x00400000</literal></expr>, <expr><literal type="number">0x00004010</literal></expr>, <expr><literal type="number">0x20000010</literal></expr>,

<expr><literal type="number">0x00400000</literal></expr>, <expr><literal type="number">0x20004000</literal></expr>, <expr><literal type="number">0x20000000</literal></expr>, <expr><literal type="number">0x00004010</literal></expr>, <expr><literal type="number">0x20000010</literal></expr>, <expr><literal type="number">0x20404010</literal></expr>, <expr><literal type="number">0x00404000</literal></expr>, <expr><literal type="number">0x20400000</literal></expr>,

<expr><literal type="number">0x00404010</literal></expr>, <expr><literal type="number">0x20404000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x20400010</literal></expr>, <expr><literal type="number">0x00000010</literal></expr>, <expr><literal type="number">0x00004000</literal></expr>, <expr><literal type="number">0x20400000</literal></expr>, <expr><literal type="number">0x00404010</literal></expr>,

<expr><literal type="number">0x00004000</literal></expr>, <expr><literal type="number">0x00400010</literal></expr>, <expr><literal type="number">0x20004010</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x20404000</literal></expr>, <expr><literal type="number">0x20000000</literal></expr>, <expr><literal type="number">0x00400010</literal></expr>, <expr><literal type="number">0x20004010</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox7</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00200000</literal></expr>, <expr><literal type="number">0x04200002</literal></expr>, <expr><literal type="number">0x04000802</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00000800</literal></expr>, <expr><literal type="number">0x04000802</literal></expr>, <expr><literal type="number">0x00200802</literal></expr>, <expr><literal type="number">0x04200800</literal></expr>,

<expr><literal type="number">0x04200802</literal></expr>, <expr><literal type="number">0x00200000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x04000002</literal></expr>, <expr><literal type="number">0x00000002</literal></expr>, <expr><literal type="number">0x04000000</literal></expr>, <expr><literal type="number">0x04200002</literal></expr>, <expr><literal type="number">0x00000802</literal></expr>,

<expr><literal type="number">0x04000800</literal></expr>, <expr><literal type="number">0x00200802</literal></expr>, <expr><literal type="number">0x00200002</literal></expr>, <expr><literal type="number">0x04000800</literal></expr>, <expr><literal type="number">0x04000002</literal></expr>, <expr><literal type="number">0x04200000</literal></expr>, <expr><literal type="number">0x04200800</literal></expr>, <expr><literal type="number">0x00200002</literal></expr>,

<expr><literal type="number">0x04200000</literal></expr>, <expr><literal type="number">0x00000800</literal></expr>, <expr><literal type="number">0x00000802</literal></expr>, <expr><literal type="number">0x04200802</literal></expr>, <expr><literal type="number">0x00200800</literal></expr>, <expr><literal type="number">0x00000002</literal></expr>, <expr><literal type="number">0x04000000</literal></expr>, <expr><literal type="number">0x00200800</literal></expr>,

<expr><literal type="number">0x04000000</literal></expr>, <expr><literal type="number">0x00200800</literal></expr>, <expr><literal type="number">0x00200000</literal></expr>, <expr><literal type="number">0x04000802</literal></expr>, <expr><literal type="number">0x04000802</literal></expr>, <expr><literal type="number">0x04200002</literal></expr>, <expr><literal type="number">0x04200002</literal></expr>, <expr><literal type="number">0x00000002</literal></expr>,

<expr><literal type="number">0x00200002</literal></expr>, <expr><literal type="number">0x04000000</literal></expr>, <expr><literal type="number">0x04000800</literal></expr>, <expr><literal type="number">0x00200000</literal></expr>, <expr><literal type="number">0x04200800</literal></expr>, <expr><literal type="number">0x00000802</literal></expr>, <expr><literal type="number">0x00200802</literal></expr>, <expr><literal type="number">0x04200800</literal></expr>,

<expr><literal type="number">0x00000802</literal></expr>, <expr><literal type="number">0x04000002</literal></expr>, <expr><literal type="number">0x04200802</literal></expr>, <expr><literal type="number">0x04200000</literal></expr>, <expr><literal type="number">0x00200800</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00000002</literal></expr>, <expr><literal type="number">0x04200802</literal></expr>,

<expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00200802</literal></expr>, <expr><literal type="number">0x04200000</literal></expr>, <expr><literal type="number">0x00000800</literal></expr>, <expr><literal type="number">0x04000002</literal></expr>, <expr><literal type="number">0x04000800</literal></expr>, <expr><literal type="number">0x00000800</literal></expr>, <expr><literal type="number">0x00200002</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut32</name></type> <name><name>sbox8</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x10001040</literal></expr>, <expr><literal type="number">0x00001000</literal></expr>, <expr><literal type="number">0x00040000</literal></expr>, <expr><literal type="number">0x10041040</literal></expr>, <expr><literal type="number">0x10000000</literal></expr>, <expr><literal type="number">0x10001040</literal></expr>, <expr><literal type="number">0x00000040</literal></expr>, <expr><literal type="number">0x10000000</literal></expr>,

<expr><literal type="number">0x00040040</literal></expr>, <expr><literal type="number">0x10040000</literal></expr>, <expr><literal type="number">0x10041040</literal></expr>, <expr><literal type="number">0x00041000</literal></expr>, <expr><literal type="number">0x10041000</literal></expr>, <expr><literal type="number">0x00041040</literal></expr>, <expr><literal type="number">0x00001000</literal></expr>, <expr><literal type="number">0x00000040</literal></expr>,

<expr><literal type="number">0x10040000</literal></expr>, <expr><literal type="number">0x10000040</literal></expr>, <expr><literal type="number">0x10001000</literal></expr>, <expr><literal type="number">0x00001040</literal></expr>, <expr><literal type="number">0x00041000</literal></expr>, <expr><literal type="number">0x00040040</literal></expr>, <expr><literal type="number">0x10040040</literal></expr>, <expr><literal type="number">0x10041000</literal></expr>,

<expr><literal type="number">0x00001040</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x10040040</literal></expr>, <expr><literal type="number">0x10000040</literal></expr>, <expr><literal type="number">0x10001000</literal></expr>, <expr><literal type="number">0x00041040</literal></expr>, <expr><literal type="number">0x00040000</literal></expr>,

<expr><literal type="number">0x00041040</literal></expr>, <expr><literal type="number">0x00040000</literal></expr>, <expr><literal type="number">0x10041000</literal></expr>, <expr><literal type="number">0x00001000</literal></expr>, <expr><literal type="number">0x00000040</literal></expr>, <expr><literal type="number">0x10040040</literal></expr>, <expr><literal type="number">0x00001000</literal></expr>, <expr><literal type="number">0x00041040</literal></expr>,

<expr><literal type="number">0x10001000</literal></expr>, <expr><literal type="number">0x00000040</literal></expr>, <expr><literal type="number">0x10000040</literal></expr>, <expr><literal type="number">0x10040000</literal></expr>, <expr><literal type="number">0x10040040</literal></expr>, <expr><literal type="number">0x10000000</literal></expr>, <expr><literal type="number">0x00040000</literal></expr>, <expr><literal type="number">0x10001040</literal></expr>,

<expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x10041040</literal></expr>, <expr><literal type="number">0x00040040</literal></expr>, <expr><literal type="number">0x10000040</literal></expr>, <expr><literal type="number">0x10040000</literal></expr>, <expr><literal type="number">0x10001000</literal></expr>, <expr><literal type="number">0x10001040</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>,

<expr><literal type="number">0x10041040</literal></expr>, <expr><literal type="number">0x00041000</literal></expr>, <expr><literal type="number">0x00041000</literal></expr>, <expr><literal type="number">0x00001040</literal></expr>, <expr><literal type="number">0x00001040</literal></expr>, <expr><literal type="number">0x00040040</literal></expr>, <expr><literal type="number">0x10000000</literal></expr>, <expr><literal type="number">0x10041000</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>R_API</name> <name>void</name></type> <name>r_des_permute_key</name> <parameter_list>(<parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>keylo</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>keyhi</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>keylo</name> <operator>||</operator> <operator>!</operator><name>keyhi</name></expr>)</condition> <block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>perm</name> <init>= <expr><operator>(</operator><operator>(</operator><operator>*</operator><name>keylo</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>^</operator> <operator>*</operator><name>keyhi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0F0F0F0F</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>^=</operator> <operator>(</operator><name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>*</operator><name>keylo</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0000FFFF</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>^=</operator> <operator>(</operator><name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keylo</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>*</operator><name>keyhi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x33333333</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>^=</operator> <operator>(</operator><name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>*</operator><name>keylo</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0000FFFF</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>^=</operator> <operator>(</operator><name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keylo</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>*</operator><name>keyhi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x55555555</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>^=</operator> <operator>(</operator><name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <operator>*</operator><name>keylo</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00FF00FF</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>^=</operator> <operator>(</operator><name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keylo</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>*</operator><name>keyhi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x55555555</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>^=</operator> <operator>(</operator><name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>*</operator><name>keylo</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&gt;&gt;</operator> <literal type="number">20</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x000000F0</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&lt;&lt;</operator> <literal type="number">20</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0FF00000</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>|=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x000FF000</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>|=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&gt;&gt;</operator> <literal type="number">12</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000FF0</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>|=</operator> <operator>(</operator><operator>(</operator><operator>*</operator><name>keyhi</name> <operator>&gt;&gt;</operator> <literal type="number">28</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0000000F</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>=</operator> <name>perm</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_des_permute_block0</name> <parameter_list>(<parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>blocklo</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>blockhi</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>blocklo</name> <operator>||</operator> <operator>!</operator><name>blockhi</name></expr>)</condition> <block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>lo</name> <init>= <expr><operator>*</operator><name>blocklo</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>hi</name> <init>= <expr><operator>*</operator><name>blockhi</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>perm</name> <init>= <expr><operator>(</operator><operator>(</operator><name>lo</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>^</operator> <name>hi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0F0F0F0F</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>lo</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <name>hi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0000FFFF</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>hi</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <name>lo</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x33333333</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>hi</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <name>lo</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00FF00FF</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>lo</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <name>hi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x55555555</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>blocklo</name> <operator>=</operator> <call><name>ROTL</name> <argument_list>(<argument><expr><name>lo</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>blockhi</name> <operator>=</operator> <call><name>ROTL</name> <argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_des_permute_block1</name> <parameter_list>(<parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>blocklo</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>blockhi</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>blocklo</name> <operator>||</operator> <operator>!</operator><name>blockhi</name></expr>)</condition> <block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>lo</name> <init>= <expr><operator>*</operator><name>blocklo</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>hi</name> <init>= <expr><operator>*</operator><name>blockhi</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>lo</name> <operator>=</operator> <call><name>ROTR</name> <argument_list>(<argument><expr><name>lo</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hi</name> <operator>=</operator> <call><name>ROTR</name> <argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>perm</name> <init>= <expr><operator>(</operator><operator>(</operator><name>lo</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <name>hi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x55555555</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>hi</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <name>lo</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00FF00FF</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>hi</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <name>lo</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x33333333</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>lo</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <name>hi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0000FFFF</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>lo</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>^</operator> <name>hi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0F0F0F0F</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>hi</name> <operator>^=</operator> <name>perm</name></expr>;</expr_stmt> <expr_stmt><expr><name>lo</name> <operator>^=</operator> <name>perm</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>blocklo</name> <operator>=</operator> <name>lo</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>blockhi</name> <operator>=</operator> <name>hi</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_des_round_key</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>keylo</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>keyhi</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>deskeylo</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>deskeyhi</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>keylo</name> <operator>||</operator> <operator>!</operator><name>keyhi</name> <operator>||</operator> <operator>!</operator><name>deskeylo</name> <operator>||</operator> <operator>!</operator><name>deskeyhi</name></expr>)</condition> <block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>i</name> <operator>==</operator> <literal type="number">1</literal> <operator>||</operator> <name>i</name> <operator>==</operator> <literal type="number">8</literal> <operator>||</operator> <name>i</name> <operator>==</operator> <literal type="number">15</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>deskeylo</name> <operator>=</operator> <call><name>ROTL28</name> <argument_list>(<argument><expr><operator>*</operator><name>deskeylo</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>deskeyhi</name> <operator>=</operator> <call><name>ROTL28</name> <argument_list>(<argument><expr><operator>*</operator><name>deskeyhi</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>deskeylo</name> <operator>=</operator> <call><name>ROTL28</name> <argument_list>(<argument><expr><operator>*</operator><name>deskeylo</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>deskeyhi</name> <operator>=</operator> <call><name>ROTL28</name> <argument_list>(<argument><expr><operator>*</operator><name>deskeyhi</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>deslo</name> <init>= <expr><operator>*</operator><name>deskeylo</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>deshi</name> <init>= <expr><operator>*</operator><name>deskeyhi</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>keylo</name> <operator>=</operator><operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x24000000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">28</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x10000000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x08000000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">18</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x02080000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x01000000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">9</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00200000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00100000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00040000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00020000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&gt;&gt;</operator> <literal type="number">10</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00010000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">13</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00002000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00001000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000800</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000400</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000200</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000100</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">5</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000020</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">10</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000010</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000008</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">18</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000004</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">26</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000002</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000001</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>keyhi</name> <operator>=</operator><operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">15</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x20000000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">17</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x10000000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x08000000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">22</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x04000000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x02000000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x01000000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00200000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">11</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00100000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00080000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&gt;&gt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00040000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deslo</name> <operator>&lt;&lt;</operator> <literal type="number">15</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00020000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deslo</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00010000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00002000</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00001000</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000808</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">9</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000400</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000200</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000100</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000020</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000011</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>(</operator><name>deshi</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000004</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>deshi</name> <operator>&gt;&gt;</operator> <literal type="number">21</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00000002</literal><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>R_API</name> <name>void</name></type> <name>r_des_round</name> <parameter_list>(<parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>buflo</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>bufhi</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>roundkeylo</name></decl></parameter>, <parameter><decl><type><name>ut32</name> <modifier>*</modifier></type><name>roundkeyhi</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>buflo</name> <operator>||</operator> <operator>!</operator><name>bufhi</name> <operator>||</operator> <operator>!</operator><name>roundkeylo</name> <operator>||</operator> <operator>!</operator><name>roundkeyhi</name></expr>)</condition> <block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>lo</name> <init>= <expr><operator>*</operator><name>buflo</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>hi</name> <init>= <expr><operator>*</operator><name>bufhi</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>perm</name> <init>= <expr><name>hi</name> <operator>^</operator> <operator>(</operator><operator>*</operator><name>roundkeylo</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox2</name><index>[<expr><operator>(</operator><name>perm</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox4</name><index>[<expr><operator>(</operator><name>perm</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox6</name><index>[<expr><operator>(</operator><name>perm</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox8</name><index>[<expr><name>perm</name> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <call><name>ROTR</name> <argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>^</operator> <operator>(</operator><operator>*</operator><name>roundkeyhi</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox1</name><index>[<expr><operator>(</operator><name>perm</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox3</name><index>[<expr><operator>(</operator><name>perm</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox5</name><index>[<expr><operator>(</operator><name>perm</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lo</name> <operator>^=</operator> <name><name>sbox7</name><index>[<expr><name>perm</name> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>perm</name> <operator>=</operator> <name>hi</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>bufhi</name> <operator>=</operator> <name>lo</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>buflo</name> <operator>=</operator> <name>perm</name></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
