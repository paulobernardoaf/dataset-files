<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\crypto\p\crypto_aes_algo.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"crypto_aes_algo.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Nb</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ut8</name></type> <name><name>Rcon</name><index>[<expr><literal type="number">30</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x80</literal></expr>,

<expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0x2f</literal></expr>,

<expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0xbc</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0xd4</literal></expr>,

<expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x91</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name> <argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<decl_stmt><decl><type><name>void</name></type> <name>aes_expkey</name> <argument_list>(<argument><expr><specifier>const</specifier> struct <name>aes_state</name> <operator>*</operator><name>st</name></expr></argument>, <argument><expr><name>ut32</name> <name><name>expkey</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name> <operator>+</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><name>Nb</name></expr>]</index></name></expr></argument>)</argument_list>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>message</name> <name>(</name><cpp:literal>"AES broken for non-gcc compilers"</cpp:literal><name>)</name></cpp:pragma>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:warning>#<cpp:directive>warning</cpp:directive> AES broken for non-gcc compilers</cpp:warning>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Nr_AES256</name></cpp:macro> <cpp:value>(6 + ((256 / 8) / 4))</cpp:value></cpp:define>

<name>void</name> <name>aes_expkey</name> <argument_list>(<argument><expr><specifier>const</specifier> struct <name>aes_state</name> <operator>*</operator><name>st</name></expr></argument>, <argument><expr><name>ut32</name> <name><name>expkey</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>Nr_AES256</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><name>Nb</name></expr>]</index></name></expr></argument>)</argument_list>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>ROUND_KEY_COUNT</name> <init>= <expr><literal type="number">4</literal> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>st</name><operator>-&gt;</operator><name>rounds</name></name><operator>)</operator></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>ut32</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><operator>(</operator><name>ut32</name><operator>*</operator><operator>)</operator><call><name>malloc</name> <argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>ut32</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<decl_stmt><decl><type><name>ut32</name></type> <name><name>tk</name><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>columns</name></name></expr>]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>ut32</name></type> <name>tt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>t</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>key</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>key</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>st32</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>, <decl><type ref="prev"/><name>r</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>Nb</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>Nb</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>*</operator><name>key</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name>i</name></expr>]</index></name> <operator>|=</operator> <operator>*</operator><name>key</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name>i</name></expr>]</index></name> <operator>|=</operator> <operator>*</operator><name>key</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name>i</name></expr>]</index></name> <operator>|=</operator> <operator>*</operator><name>key</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>&amp;&amp;</operator> <name>t</name> <operator>&lt;</operator> <name>ROUND_KEY_COUNT</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr><operator>,</operator> <expr><name>t</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>t</name> <operator>/</operator> <name>Nb</name></expr>]</index><index>[<expr><name>t</name> <operator>%</operator> <name>Nb</name></expr>]</index></name> <operator>=</operator> <name><name>tk</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name> <operator>-</operator> <operator>(</operator><name>t</name> <operator>/</operator> <name>Nb</name><operator>)</operator></expr>]</index><index>[<expr><name>t</name> <operator>%</operator> <name>Nb</name></expr>]</index></name> <operator>=</operator> <name><name>tk</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<while>while <condition>(<expr><name>t</name> <operator>&lt;</operator> <name>ROUND_KEY_COUNT</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>tk</name><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal> <operator>^</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>^</operator>

<name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal> <operator>^</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>Rcon</name><index>[<expr><name>idx</name><operator>++</operator></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>!=</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name> <operator>^=</operator> <name><name>tk</name><index>[<expr><name>j</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if> <else>else <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>/</operator> <literal type="number">2</literal></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name> <operator>^=</operator> <name><name>tk</name><index>[<expr><name>j</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>tk</name><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>/</operator> <literal type="number">2</literal> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>/</operator> <literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>]</index></name> <operator>^</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal> <operator>^</operator>

<name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal> <operator>^</operator>

<name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>/</operator> <literal type="number">2</literal></expr><operator>,</operator> <expr><name>i</name> <operator>=</operator> <name>j</name> <operator>+</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>tk</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name> <operator>^=</operator> <name><name>tk</name><index>[<expr><name>j</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></else></if_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>columns</name></name> <operator>&amp;&amp;</operator> <name>t</name> <operator>&lt;</operator> <name>ROUND_KEY_COUNT</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr><operator>,</operator> <expr><name>t</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>t</name> <operator>/</operator> <name>Nb</name></expr>]</index><index>[<expr><name>t</name> <operator>%</operator> <name>Nb</name></expr>]</index></name> <operator>=</operator> <name><name>tk</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name> <operator>-</operator> <operator>(</operator><name>t</name> <operator>/</operator> <name>Nb</name><operator>)</operator></expr>]</index><index>[<expr><name>t</name> <operator>%</operator> <name>Nb</name></expr>]</index></name> <operator>=</operator> <name><name>tk</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></while>

<for>for <control>(<init><expr><name>r</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>r</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>;</condition> <incr><expr><name>r</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>Nb</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name><name>U0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>U1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator>

<name><name>U2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>U3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>tk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></decl></decl_stmt>

<function><type><name>void</name></type> <name>aes_encrypt</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>aes_state</name></name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>result</name></decl></parameter>)</parameter_list> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>ut32</name></type> <name><name>expkey</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>Nr_AES256</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><name>Nb</name></expr>]</index></name></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<decl_stmt><decl><type><name>ut32</name></type> <name><name>expkey</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name> <operator>+</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><name>Nb</name></expr>]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>aes_expkey</name><argument_list>(<argument><expr><name>st</name></expr></argument>, <argument><expr><name>expkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>, <decl><type ref="prev"/><name>t2</name></decl>, <decl><type ref="prev"/><name>t3</name></decl>, <decl><type ref="prev"/><name>tt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>a0</name></decl>, <decl><type ref="prev"/><name>a1</name></decl>, <decl><type ref="prev"/><name>a2</name></decl>, <decl><type ref="prev"/><name>a3</name></decl>, <decl><type ref="prev"/><name>r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>r</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>r</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>;</condition> <incr><expr><name>r</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>a0</name> <operator>=</operator> <operator>(</operator><name><name>FT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator>

<name><name>FT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t3</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>a1</name> <operator>=</operator> <operator>(</operator><name><name>FT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator>

<name><name>FT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t0</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>a2</name> <operator>=</operator> <operator>(</operator><name><name>FT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator>

<name><name>FT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t1</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>a3</name> <operator>=</operator> <operator>(</operator><name><name>FT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>FT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator>

<name><name>FT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t2</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <name>a0</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>a1</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>a2</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>a3</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t3</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t0</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t1</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>Sbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t2</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>aes_decrypt</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>aes_state</name></name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>ut8</name> <modifier>*</modifier></type><name>result</name></decl></parameter>)</parameter_list> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>ut32</name></type> <name><name>expkey</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>Nr_AES256</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><name>Nb</name></expr>]</index></name></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<decl_stmt><decl><type><name>ut32</name></type> <name><name>expkey</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name> <operator>+</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><name>Nb</name></expr>]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>aes_expkey</name><argument_list>(<argument><expr><name>st</name></expr></argument>, <argument><expr><name>expkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>, <decl><type ref="prev"/><name>t2</name></decl>, <decl><type ref="prev"/><name>t3</name></decl>, <decl><type ref="prev"/><name>tt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>a0</name></decl>, <decl><type ref="prev"/><name>a1</name></decl>, <decl><type ref="prev"/><name>a2</name></decl>, <decl><type ref="prev"/><name>a3</name></decl>, <decl><type ref="prev"/><name>r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>|=</operator> <operator>*</operator><name>in</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>^=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>r</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>r</name> <operator>&lt;</operator> <name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>;</condition> <incr><expr><name>r</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>a0</name> <operator>=</operator> <operator>(</operator><name><name>RT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t1</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>a1</name> <operator>=</operator> <operator>(</operator><name><name>RT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t2</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>a2</name> <operator>=</operator> <operator>(</operator><name><name>RT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t3</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>a3</name> <operator>=</operator> <operator>(</operator><name><name>RT0</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT1</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT2</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <name><name>RT3</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t0</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <name>a0</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>a1</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>a2</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>a3</name> <operator>^</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>r</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t1</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t2</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t0</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t3</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tt</name> <operator>=</operator> <name><name>expkey</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>st</name><operator>-&gt;</operator><name>rounds</name></name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t3</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t2</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>t1</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><operator>(</operator><name>tt</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>result</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>InvSbox</name><index>[<expr><operator>(</operator><name>ut8</name><operator>)</operator><name>t0</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>ut8</name><operator>)</operator><name>tt</name></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
