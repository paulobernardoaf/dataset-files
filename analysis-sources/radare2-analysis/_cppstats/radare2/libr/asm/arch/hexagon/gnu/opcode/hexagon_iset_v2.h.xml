<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\hexagon\gnu\opcode\hexagon_iset_v2.h"><block>{<block_content> <expr><literal type="string">"Cd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0010 001sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memb ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 000 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memd ( Rs32 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 110 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memh ( Rs32 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 011 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memh ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 010 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memw ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 100 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memb ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 000 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memd ( Rs32 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 110 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memh ( Rs32 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 011 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memh ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 010 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memw ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 100 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memb ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 000 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memd ( Rs32 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 110 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memh ( Rs32 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 011 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memh ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 010 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memw ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 100 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 000 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 010 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 001 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 011 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 100 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 110 sssss 00-tt000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memb ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 000 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memd ( Rs32 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 110 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memh ( Rs32 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 011 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memh ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 010 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memw ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 100 sssss 000ttttt 00000-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = Ps4"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000ddss000000000000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>C2_pxfer_map</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Pd4 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0101 01-sssss 00------ ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = all8 ( Ps4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 101---ss 00------ ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = and ( Ps4 , Pt4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 000---ss 00----tt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = and ( Pt4 , ! Ps4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 011---ss 00----tt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = any8 ( Ps4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 100---ss 00------ ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = bitsclr ( Rs32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0101 10-sssss 00iiiiii ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = bitsclr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0111 10-sssss 00-ttttt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = bitsset ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0111 01-sssss 00-ttttt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.eq ( Rs32 , #s10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0101 00isssss 00iiiiii iii---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.eq ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0010 -00sssss 00-ttttt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.eq ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 1--sssss 00-ttttt 00----dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.ge ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000ddsssssiiiiiiii0000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>C2_cmpgei</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.geu ( Rs32 , #u8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000ddsssssiiiiiiii0000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>C2_cmpgeui</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.gt ( Rs32 , #s10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0101 01isssss 00iiiiii iii---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.gt ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0010 -10sssss 00-ttttt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.gt ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 1--sssss 00-ttttt 01----dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.gtu ( Rs32 , #u9 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0101 100sssss 00iiiiii iii---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.gtu ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0010 -11sssss 00-ttttt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.gtu ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 1--sssss 00-ttttt 10----dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.lt ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000ddsssssttttt0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>C2_cmplt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Pd4 = cmp.ltu ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000ddsssssttttt0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>C2_cmpltu</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Pd4 = not ( Ps4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 110---ss 00------ ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = or ( Ps4 , Pt4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 001---ss 00----tt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = or ( Pt4 , ! Ps4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 111---ss 00----tt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = tstbit ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0101 00-sssss 000iiiii ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = tstbit ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0111 00-sssss 00-ttttt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmpb.eq ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 110---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmpb.gtu ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 111---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmph.eq ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 011---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmph.gt ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 100---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmph.gtu ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 101---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmpw.eq ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 000---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmpw.gt ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 001---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = vcmpw.gtu ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -010 0--sssss 00-ttttt 010---dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Pd4 = xor ( Ps4 , Pt4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1011 010---ss 00----tt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = #s16"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1000 ii-iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = + mpyi ( Rs32 , #u8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111000000--sssss 00-iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = - mpyi ( Rs32 , #u8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111000001--sssss 00-iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = Cs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1010 000sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = Ps4"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1001 01- ---ss 00------ --- ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0000 011sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = Ss64"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1110 1-ssssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = abs ( Rs32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 10-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = abs ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 10-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rs32 , #s16 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1011 iiii iiisssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 100sssss 00-ttttt 0--ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0011 0-0sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.h , Rs32.h ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.h , Rs32.h ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.h , Rs32.l ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.h , Rs32.l ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.h ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.h ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 000sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 000sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.l ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.l ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 010sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 000sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = add ( Rt32.l , Rs32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 000sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = addasl ( Rt32 , Rs32 , #u3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0100 --- sssss 00-ttttt iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = and ( Rs32 , #s10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0110 00isssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0001 -00sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asl ( Rs32 , #u5 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 01-sssss 000iiiii 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asl ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 00-sssss 000iiiii 0 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asl ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 00-sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 01-sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = aslh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0000 000sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asr ( Rs32 , #u5 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 01-sssss 000iiiii 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 00-sssss 000iiiii 0 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asr ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 00-sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 01-sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asrh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0000 001sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = asrrnd ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddsssssiiiii0000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>S2_asr_i_r_rnd_goodsyntax</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rd32 = brev ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 01-sssss 00------ 1 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cl0 ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 00-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cl0 ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 01-sssss 00------ 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cl1 ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 00-sssss 00------ 1 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cl1 ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 01-sssss 00------ 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = clb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 00-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = clb ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 01-sssss 00------ 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = clrbit ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 11-sssss 000iiiii 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = clrbit ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 10-sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cmpy ( Rs32 , Rt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101101sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cmpy ( Rs32 , Rt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101001sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cmpy ( Rs32 , Rt32 * ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101111sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = cmpy ( Rs32 , Rt32 * ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101011sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = combine ( Rt32.h , Rs32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0011 100sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = combine ( Rt32.h , Rs32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0011 101sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = combine ( Rt32.l , Rs32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0011 110sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = combine ( Rt32.l , Rs32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0011 111sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = ct0 ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 01-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = ct1 ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 01-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = dctagr ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 010 00 01sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = extractu ( Rs32 , #u5 , #U5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1101 0IIsssss 000iiiii IIIddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = extractu ( Rs32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1001 ---sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = iassignr ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0110 011sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = ictagr ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0101 111sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = lsl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 01-sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = lsr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 00-sssss 000iiiii 0 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = lsr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 01-sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = max ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 110sssss 00-ttttt 0--ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = maxu ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 110sssss 00-ttttt 1--ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( gp + #u16:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 000 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( #g16:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 000 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 1 000 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( Rs32 + #s11:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 1 000 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 000 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( Rx32 ++ #s4:0 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 000 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 1 000 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 1 000 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memb ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 000 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( gp + #u16:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 010 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( #g16:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 010 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 1 010 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( Rs32 + #s11:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 1 010 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 010 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( Rx32 ++ #s4:1 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 010 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 1 010 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 1 010 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memh ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 010 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( gp + #u16:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 001 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( #g16:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 001 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 1 001 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( Rs32 + #s11:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 1 001 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 001 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( Rx32 ++ #s4:0 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 001 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 1 001 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 1 001 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memub ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 001 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memubh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 0 011 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memubh ( Rs32 + #s11:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 0 011 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memubh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 0 011 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memubh ( Rx32 ++ #s4:1 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 0 011 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memubh ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 0 011 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memubh ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 0 011 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memubh ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 0 011 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( gp + #u16:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 011 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( #g16:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 011 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 1 011 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( Rs32 + #s11:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 1 011 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 011 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( Rx32 ++ #s4:1 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 011 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 1 011 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 1 011 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memuh ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 011 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( gp + #u16:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 100 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( #g16:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 100 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 1 100 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( Rs32 + #s11:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 1 100 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( Rx32 ++ #s4:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 100 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( Rx32 ++ #s4:2 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 100 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 1 100 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 1 100 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 100 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = memw_locked ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 001 0 000 sssss 000----- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = min ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 101sssss 00-ttttt 0--ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = minu ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 101sssss 00-ttttt 1--ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100101sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100100sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100001sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100000sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32 , Rt32.h ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101101sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32 , Rt32.l ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101111sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32 , Rt32 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101001sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpy ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101000sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyi ( Rs32 , #m9 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddsssssiiiiiiiii000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>M2_mpysmi</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyi ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101000sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100110sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100010sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100110sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100010sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100110sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100010sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100110sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101100010sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyu ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101010sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mpyui ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddsssssttttt0000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>M2_mpyui</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rd32 = mux ( Pu4 , #s8 , #S8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 101u uIIIIIII 00Iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mux ( Pu4 , #s8 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0011 1uusssss 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mux ( Pu4 , Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0011 0uusssss 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = mux ( Pu4 , Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0100 ---sssss 00-ttttt -uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = neg ( Rs32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 10-sssss 00------ 1 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = neg ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddsssss000000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_neg</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rd32 = normamt ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 00-sssss 00------ 1 11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = not ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddsssss000000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_not</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rd32 = or ( Rs32 , #s10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0110 10isssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0001 -01sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = parity ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -000 ---sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sat ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 11-sssss 00------ 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = satb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 11-sssss 00------ 1 11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sath ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 11-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = satub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 11-sssss 00------ 1 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = satuh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 11-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = setbit ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 11-sssss 000iiiii 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = setbit ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 10-sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( #s10 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0110 01isssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.h , Rs32.h ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.h , Rs32.h ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.h , Rs32.l ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.h , Rs32.l ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.h ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.h ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 001sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 001sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.l ) :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.l ) :sat :&lt;&lt;16"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 011sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 001sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32.l , Rs32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 001sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32 , Rs32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -101 100sssss 00-ttttt 1--ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0011 0-1sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = swiz ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 10-sssss 00------ 1 11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sxtb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0000 101sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = sxth ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0000 111sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = togglebit ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 11-sssss 000iiiii 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = togglebit ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0110 10-sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vaddh ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0110 001sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vaddh ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0110 000sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vadduh ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0110 011sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vasrw ( Rss32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 11-sssss 000iiiii 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vasrw ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0101 ---sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vavgh ( Rs32 , Rt32 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0111 -01sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vavgh ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0111 -00sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vdmpy ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"111010011--sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vdmpy ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"111010010--sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vitpack ( Ps4 , Pt4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1001 00- ---ss 00----tt --- ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vmpyh ( Rs32 , Rt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101101sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vmpyh ( Rs32 , Rt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101101001sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vnavgh ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0111 -11sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vrndwh ( Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 10-sssss 00------ 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vrndwh ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 10-sssss 00------ 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsathb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 10-sssss 00------ 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsathb ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 00-sssss 00------ 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsathub ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 10-sssss 00------ 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsathub ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 00-sssss 00------ 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsatwh ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 00-sssss 00------ 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsatwuh ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 00-sssss 00------ 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsplatb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1100 01-sssss 00------ 1 11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsubh ( Rt32 , Rs32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0110 101sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsubh ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0110 100sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vsubuh ( Rt32 , Rs32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0110 111sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vtrunehb ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 10-sssss 00------ 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = vtrunohb ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1000 10-sssss 00------ 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0001 -11sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rd32 = zxtb ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddsssss000000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_zxtb</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rd32 = zxth ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0000 110sssss 00------ ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = #s8"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddiiiiiiii000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrpi</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000dddddsssss000000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrp</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rdd32 = abs ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 10-sssss 00------ 1 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = add ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = and ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 111sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = asl ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 00-sssss 00iiiiii 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = asl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 10-sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = asr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 00-sssss 00iiiiii 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = asr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 10-sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = cmpy ( Rs32 , Rt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101100sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = cmpy ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101000sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = cmpy ( Rs32 , Rt32 * ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101110sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = cmpy ( Rs32 , Rt32 * ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101010sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = cmpyi ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101000sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = cmpyr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101000sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = combine ( #s8 , #S8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1100 -IIIIIII 00Iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 0101 ---sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = deinterleave ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 11-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = extractu ( Rss32 , #u6 , #U6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0001 IIIsssss 00iiiiii IIIddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = extractu ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 0--sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = interleave ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 11-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = lfs ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 1--sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = lsl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 10-sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = lsr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 00-sssss 00iiiiii 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = lsr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 10-sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mask ( Pt4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0110 --- ----- 00----tt --- ddddd"</literal></expr><operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( gp + #u16:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 110 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( #g16:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii1 110 iiiii 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 1 110 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( Rs32 + #s11:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 1 110 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( Rx32 ++ #s4:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 110 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( Rx32 ++ #s4:3 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 110 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 1 110 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 1 110 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memd ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 1 110 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memubh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 00 0 101 sssss 00000000 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memubh ( Rs32 + #s11:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 0 ii 0 101 sssss 00iiiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memubh ( Rx32 ++ #s4:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 0 101 xxxxx 0000---i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memubh ( Rx32 ++ #s4:2 :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 0 101 xxxxx 00u0--0i iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memubh ( Rx32 ++ Mu2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 10 0 101 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memubh ( Rx32 ++ Mu2 :brev )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 11 0 101 xxxxx 00u0---- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = memubh ( Rx32 ++I :circ ( Mu2 ) )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 00 0 101 xxxxx 00u0--1- ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100101sssss 00-ttttt -11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100100sssss 00-ttttt -11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.h ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100001sssss 00-ttttt -11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100000sssss 00-ttttt -11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100101sssss 00-ttttt -10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100100sssss 00-ttttt -10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.l ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100001sssss 00-ttttt -10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100000sssss 00-ttttt -10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100101sssss 00-ttttt -01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100100sssss 00-ttttt -01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.h ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100001sssss 00-ttttt -01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100000sssss 00-ttttt -01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1 :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100101sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100100sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.l ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100001sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100000sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpy ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101000sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100110sssss 00-ttttt -11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100010sssss 00-ttttt -11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100110sssss 00-ttttt -10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100010sssss 00-ttttt -10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100110sssss 00-ttttt -01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100010sssss 00-ttttt -01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100110sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100100010sssss 00-ttttt -00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = mpyu ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101010sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = neg ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 10-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = not ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 10-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = or ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 111sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = packhl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -100 ---sssss 00-ttttt ---ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = shuffeb ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 0--sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = shuffeh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 0--sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = shuffob ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 0--sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = shuffoh ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 1--sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = sub ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = sxtw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0100 01-sssss 00------ 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vabsdiffh ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000011sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vabsdiffw ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000001sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vabsh ( Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 01-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vabsh ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 01-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vabsw ( Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 01-sssss 00------ 1 11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vabsw ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 01-sssss 00------ 1 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaddb ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaddh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaddh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaddub ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaddub ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vadduh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaddw ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaddw ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 000sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = valignb ( Rtt32 , Rss32 , #u3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0000 0--sssss 00-ttttt iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = valignb ( Rtt32 , Rss32 , Pu4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0010 0--sssss 00-ttttt -uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaslh ( Rss32 , #u4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 10-sssss 0000iiii 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaslh ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 01-sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaslw ( Rss32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 01-sssss 000iiiii 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vaslw ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 00-sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vasrh ( Rss32 , #u4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 10-sssss 0000iiii 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vasrh ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 01-sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vasrw ( Rss32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 01-sssss 000iiiii 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vasrw ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 00-sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgh ( Rss32 , Rtt32 ) :crnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 010sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgh ( Rss32 , Rtt32 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 010sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 010sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgub ( Rss32 , Rtt32 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 010sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgub ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 010sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavguh ( Rss32 , Rtt32 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 010sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavguh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 010sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavguw ( Rss32 , Rtt32 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 011sssss 00-ttttt 1--ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavguw ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 011sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgw ( Rss32 , Rtt32 ) :crnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 011sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgw ( Rss32 , Rtt32 ) :rnd"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 011sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vavgw ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 011sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vcmpyi ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000110sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vcmpyi ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000010sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vcmpyr ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000101sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vcmpyr ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000001sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vconj ( Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 10-sssss 00------ 1 11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vcrotate ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 11-sssss 00-ttttt 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vdmpy ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000100sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vdmpy ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000000sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vlslh ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 01-sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vlslw ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 00-sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vlsrh ( Rss32 , #u4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 10-sssss 0000iiii 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vlsrh ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 01-sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vlsrw ( Rss32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 01-sssss 000iiiii 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vlsrw ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0011 00-sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmaxh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 110sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmaxub ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 110sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmaxuh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 110sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmaxuw ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 101sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmaxw ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 110sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vminh ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 101sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vminub ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 101sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vminuh ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 101sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vminuw ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 101sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vminw ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 101sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyeh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000100sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyeh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000000sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyh ( Rs32 , Rt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101100sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyh ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100101000sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000101sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000100sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000001sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000000sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweuh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000111sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweuh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000110sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweuh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000011sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpyweuh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000010sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywoh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000101sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywoh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000100sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywoh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000001sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywoh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000000sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywouh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000111sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywouh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000110sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywouh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000011sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmpywouh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000010sssss 00-ttttt 111ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vmux ( Pu4 , Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -001 ---sssss 00-ttttt -uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vnavgh ( Rtt32 , Rss32 ) :crnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 100sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vnavgh ( Rtt32 , Rss32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 100sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vnavgh ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 100sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vnavgw ( Rtt32 , Rss32 ) :crnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 100sssss 00-ttttt 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vnavgw ( Rtt32 , Rss32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 100sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vnavgw ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 100sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vraddub ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000010sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vrcmpyi ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000000sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vrcmpyi ( Rss32 , Rtt32 * )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000010sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vrcmpyr ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000000sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vrcmpyr ( Rss32 , Rtt32 * )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000011sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vrmpyh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000000sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vrsadub ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101000010sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsathb ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 00-sssss 00------ 1 11ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsathub ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 00-sssss 00------ 1 00ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsatwh ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 00-sssss 00------ 1 10ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsatwuh ( Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0000 00-sssss 00------ 1 01ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsplath ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0100 01-sssss 00------ 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vspliceb ( Rss32 , Rtt32 , #u3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0000 1--sssss 00-ttttt iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vspliceb ( Rss32 , Rtt32 , Pu4 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0010 1--sssss 00-ttttt -uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubb ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubh ( Rtt32 , Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 011ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubh ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 010ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubub ( Rtt32 , Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 001ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubub ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 000ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubuh ( Rtt32 , Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 100ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubw ( Rtt32 , Rss32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 110ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsubw ( Rtt32 , Rss32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 001sssss 00-ttttt 101ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsxtbh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0100 00-sssss 00------ 00-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vsxthw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0100 00-sssss 00------ 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vtrunewh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 1--sssss 00-ttttt 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vtrunowh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 0001 1--sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vzxtbh ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0100 00-sssss 00------ 01-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = vzxthw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0100 00-sssss 00------ 11-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rdd32 = xor ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1101 -011 111sssss 00-ttttt 10-ddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32.h = #u16"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0010 ii1xxxxx 00iiiiii iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32.l = #u16"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0001 ii1xxxxx 00iiiiii iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 &amp;= asl ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 01-sssss 000iiiii 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 &amp;= asl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 01-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 &amp;= asr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 01-sssss 000iiiii 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 &amp;= asr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 01-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 &amp;= lsl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 01-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 &amp;= lsr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 01-sssss 000iiiii 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 &amp;= lsr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 01-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111000100--sssss 00-iiiii iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111011110--sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += asl ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 00-sssss 000iiiii 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += asl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 11-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += asr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 00-sssss 000iiiii 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += asr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 11-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += lsl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 11-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += lsr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 00-sssss 000iiiii 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += lsr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 11-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110100sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpy ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110000sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyi ( Rs32 , #u8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111000010--sssss 00-iiiii iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyi ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111011110--sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110110sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110010sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110110sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110010sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110110sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110010sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110110sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += mpyu ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110010sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 += sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111011110--sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111000101--sssss 00-iiiii iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111011111--sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= asl ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 00-sssss 000iiiii 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= asl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 10-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= asr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 00-sssss 000iiiii 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= asr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 10-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= lsl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 10-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= lsr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 00-sssss 000iiiii 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= lsr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 10-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.h ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110101sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.l ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpy ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110001sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyi ( Rs32 , #u8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111000011--sssss 00-iiiii iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110111sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110011sssss 00-ttttt 011xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110111sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110011sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110111sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110011sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110111sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 -= mpyu ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101110011sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 = insert ( Rs32 , #u5 , #U5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1111 0IIsssss 000iiiii IIIxxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 = insert ( Rs32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1000 ---sssss 00-ttttt ---xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxb ( Rs32 , #u4 , #S6 ) :raw"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0111 00isssss 00IIIIII iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxb ( Rs32 , #u4 , #U5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000IIIIIxxxxxsssssiiii000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>S2_tableidxb_goodsyntax</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxd ( Rs32 , #u4 , #S6 ) :raw"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0111 11isssss 00IIIIII iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxd ( Rs32 , #u4 , #U5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000IIIIIxxxxxsssssiiii000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>S2_tableidxd_goodsyntax</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxh ( Rs32 , #u4 , #S6 ) :raw"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0111 01isssss 00IIIIII iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxh ( Rs32 , #u4 , #U5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000IIIIIxxxxxsssssiiii000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>S2_tableidxh_goodsyntax</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxw ( Rs32 , #u4 , #S6 ) :raw"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0111 10isssss 00IIIIII iiixxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 = tableidxw ( Rs32 , #u4 , #U5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000IIIIIxxxxxsssssiiii000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>S2_tableidxw_goodsyntax</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"Rx32 ^= asl ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 10-sssss 000iiiii 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 ^= lsr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 10-sssss 000iiiii 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 ^= xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"111011111--sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 |= asl ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 01-sssss 000iiiii 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 |= asl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 00-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 |= asr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 01-sssss 000iiiii 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 |= asr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 00-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 |= lsl ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 00-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 |= lsr ( Rs32 , #u5 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 1110 01-sssss 000iiiii 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rx32 |= lsr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1100 00-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 &amp;= asl ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 01-sssss 00iiiiii 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 &amp;= asl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 01-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 &amp;= asr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 01-sssss 00iiiiii 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 &amp;= asr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 01-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 &amp;= lsl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 01-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 &amp;= lsr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 01-sssss 00iiiiii 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 &amp;= lsr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 01-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += asl ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 00-sssss 00iiiiii 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += asl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 11-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += asr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 00-sssss 00iiiiii 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += asr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 11-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += cmpy ( Rs32 , Rt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111100sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += cmpy ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111000sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += cmpy ( Rs32 , Rt32 * ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111110sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += cmpy ( Rs32 , Rt32 * ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111010sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += cmpyi ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111000sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += cmpyr ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111000sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += lsl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 11-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += lsr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 00-sssss 00iiiiii 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += lsr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 11-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110100sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110000sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110100sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110000sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110100sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110000sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110100sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110000sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpy ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111000sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110110sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110010sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110110sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110010sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110110sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110010sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110110sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110010sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += mpyu ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111010sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vcmpyi ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010010sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vcmpyr ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010001sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vdmpy ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010100sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vdmpy ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010000sssss 00-ttttt 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyeh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010100sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyeh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010000sssss 00-ttttt 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyeh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010001sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyh ( Rs32 , Rt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111100sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyh ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111000sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyh ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111001sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010101sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010100sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010001sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010000sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweuh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010111sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweuh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010110sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweuh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010011sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpyweuh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010010sssss 00-ttttt 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywoh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010101sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywoh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010100sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywoh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010001sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywoh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010000sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywouh ( Rss32 , Rtt32 ) :&lt;&lt;1 :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010111sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywouh ( Rss32 , Rtt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010110sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywouh ( Rss32 , Rtt32 ) :rnd :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010011sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vmpywouh ( Rss32 , Rtt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010010sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vraddub ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010010sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vrcmpyi ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010000sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vrcmpyi ( Rss32 , Rtt32 * )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010010sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vrcmpyr ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010000sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vrcmpyr ( Rss32 , Rtt32 * )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010011sssss 00-ttttt 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vrmpyh ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010000sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 += vrsadub ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11101010010sssss 00-ttttt 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= asl ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 00-sssss 00iiiiii 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= asl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 10-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= asr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 00-sssss 00iiiiii 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= asr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 10-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= cmpy ( Rs32 , Rt32 ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111100sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= cmpy ( Rs32 , Rt32 ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111000sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= cmpy ( Rs32 , Rt32 * ) :&lt;&lt;1 :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111110sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= cmpy ( Rs32 , Rt32 * ) :sat"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111010sssss 00-ttttt 111xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= lsl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 10-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= lsr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 00-sssss 00iiiiii 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= lsr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 10-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110101sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110001sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110101sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110001sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110101sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110001sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110101sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110001sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpy ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111001sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.h , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110111sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.h , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110011sssss 00-ttttt -11xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.h , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110111sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.h , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110011sssss 00-ttttt -10xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.l , Rt32.h ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110111sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.l , Rt32.h )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110011sssss 00-ttttt -01xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.l , Rt32.l ) :&lt;&lt;1"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110111sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32.l , Rt32.l )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100110011sssss 00-ttttt -00xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 -= mpyu ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"11100111011sssss 00-ttttt 000xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 = insert ( Rss32 , #u6 , #U6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0011 IIIsssss 00iiiiii IIIxxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 = insert ( Rss32 , Rtt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1010 ---sssss 00-ttttt ---xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 ^= asl ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 10-sssss 00iiiiii 010xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 ^= lsr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 10-sssss 00iiiiii 001xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 |= asl ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 01-sssss 00iiiiii 110xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 |= asl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 00-sssss 00-ttttt 10-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 |= asr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 01-sssss 00iiiiii 100xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 |= asr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 00-sssss 00-ttttt 00-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 |= lsl ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 00-sssss 00-ttttt 11-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 |= lsr ( Rss32 , #u6 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1000 0010 01-sssss 00iiiiii 101xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Rxx32 |= lsr ( Rss32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1100 1011 00-sssss 00-ttttt 01-xxxxx"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"Sd64 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0111 00-sssss 00------ --dddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"allocframe ( #u11:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 000 01 0011101 00000iii iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_SP</name><operator>|</operator><name>IMPLICIT_FP</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"barrier"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 100 00 00----- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"brkpt"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1100 001----- 00------ 000-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"call #r22:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 101i iiiiiiii 00iiiiii iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"callr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0000 101sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"ciad ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 000sssss 00------ 011-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"crswap ( Rx32 , sgp )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0101 000xxxxx 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"cswi ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 000sssss 00------ 001-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dccleana ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 000 00 00sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dccleanidx ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 001 00 01sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dccleaninva ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 000 00 10sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dccleaninvidx ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 001 00 11sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dcfetch ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 010 0 000 sssss 000----- --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_PREFERSLOT0</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dcinva ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 000 00 01sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dcinvidx ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 001 00 10sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dckill"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 001 00 00----- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dctagw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 010 00 00sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"dczeroa ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 000 01 10sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOSLOT1</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"deallocframe"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 000 0 000 11110 000----- ---11110"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LR</name><operator>|</operator><name>IMPLICIT_SP</name><operator>|</operator><name>IMPLICIT_FP</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"iassignw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 000sssss 00------ 010-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"icinva ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0110 110sssss 00000--- --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"icinvidx ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0110 110sssss 00001--- --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"ickill"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0110 110----- 00010--- --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"ictagw ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0110 110sssss 00011--- --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 .new Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memb ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 000 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 010 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memub ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 001 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memuh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 011 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rd32 = memw ( Rx32 ++ #s4:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 100 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pt4 Rdd32 = memd ( Rx32 ++ #s4:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 110 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 1uu-iiii 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrfnew_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 1uusssss 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrpfnew_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new jump:nt #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii1iiiii 00i01-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 .new jump:t #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii1iiiii 00i11-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 1uu-iiii 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrf_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 1uusssss 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrpf_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ! Pu4 Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 call #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1101 ii1iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 callr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0001 001sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 jump #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii1iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pu4 jumpr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0011 011sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memb ( Rs32 + #u6:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 000 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memb ( Rx32 ++ #s4:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 000 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memd ( Rs32 + #u6:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 110 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memd ( Rx32 ++ #s4:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 110 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memh ( Rs32 + #u6:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 011 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memh ( Rs32 + #u6:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 010 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memh ( Rx32 ++ #s4:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 011 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memh ( Rx32 ++ #s4:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 010 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memw ( Rs32 + #u6:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 100 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ! Pv4 memw ( Rx32 ++ #s4:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 100 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memb ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 000 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 010 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memub ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 001 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memuh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 011 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rd32 = memw ( Rx32 ++ #s4:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 100 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0101 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 ) Rdd32 = memd ( Rx32 ++ #s4:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 110 xxxxx 001-1tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pt4 .new ) Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0111 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 1uu-iiii 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrf</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 1uusssss 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrpf</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 000ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) call #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1101 ii1iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) callr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0001 001sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) jump #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii1iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 ) jumpr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0011 011sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 1uu-iiii 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrfnew</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 1uusssss 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrpfnew</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 001ttttt 1uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name> <operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) jump:nt #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii1iiiii 00i01-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pu4 .new ) jump:t #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii1iiiii 00i11-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memb ( Rs32 + #u6:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 000 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memb ( Rx32 ++ #s4:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 000 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memd ( Rs32 + #u6:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 110 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memd ( Rx32 ++ #s4:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 110 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memh ( Rs32 + #u6:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 011 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memh ( Rs32 + #u6:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 010 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memh ( Rx32 ++ #s4:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 011 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memh ( Rx32 ++ #s4:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 010 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memw ( Rs32 + #u6:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0100 100 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( ! Pv4 ) memw ( Rx32 ++ #s4:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 100 xxxxx 001ttttt -iiii1vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_SENSE_INVERTED</name></expr> <operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memb ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 000 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 010 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memub ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 001 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memuh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 011 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rd32 = memw ( Rx32 ++ #s4:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 100 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 ) Rdd32 = memd ( Rx32 ++ #s4:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 110 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pt4 .new ) Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 0uu-iiii 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 0uusssss 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrpt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) call #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1101 ii0iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) callr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0001 000sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) jump #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii0iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 ) jumpr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0011 010sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 0uu-iiii 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrtnew</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 0uusssss 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrptnew</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) jump:nt #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii0iiiii 00i01-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pu4 .new ) jump:t #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii0iiiii 00i11-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memb ( Rs32 + #u6:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 000 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memb ( Rx32 ++ #s4:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 000 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memd ( Rs32 + #u6:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 110 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memd ( Rx32 ++ #s4:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 110 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memh ( Rs32 + #u6:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 011 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memh ( Rs32 + #u6:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 010 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memh ( Rx32 ++ #s4:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 011 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memh ( Rx32 ++ #s4:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 010 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memw ( Rs32 + #u6:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 100 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if ( Pv4 ) memw ( Rx32 ++ #s4:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 100 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 .new Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0011 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memb ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 000 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memb ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 000 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 010 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 010 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memub ( Rs32 + #u6:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 001 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memub ( Rx32 ++ #s4:0 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 001 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memuh ( Rs32 + #u6:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 011 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memuh ( Rx32 ++ #s4:1 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 011 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memw ( Rs32 + #u6:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 100 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rd32 = memw ( Rx32 ++ #s4:2 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 100 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rdd32 = memd ( Rs32 + #u6:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0001 110 sssss 00-ttiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pt4 Rdd32 = memd ( Rx32 ++ #s4:3 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1001 1 01 1 110 xxxxx 001-0tti iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x3</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 0uu-iiii 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrtnew_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 0uusssss 001iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrptnew_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if Pu4 .new Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 001ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name><operator>|</operator><name>CONDITION_DOTNEW</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new jump:nt #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii0iiiii 00i01-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 .new jump:t #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii0iiiii 00i11-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = #s12"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1110 0uu-iiii 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrt_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = add ( Rs32 , #s8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 0100 0uusssss 000iiiii iiiddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = add ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-0sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = and ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -00sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = or ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -01sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = sub ( Rt32 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1011 0-1sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rd32 = xor ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1001 -11sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 Rdd32 = Rss32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0000uudddddsssss0000000000000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <macro><name>HEXAGON_MAP_FNAME</name><argument_list>(<argument>A2_tfrpt_alt</argument>)</argument_list></macro></block_content>}</block><operator>,</operator> 

<block>{<block_content> <expr><literal type="string">"if Pu4 Rdd32 = combine ( Rs32 , Rt32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"1111 1101 ---sssss 000ttttt 0uuddddd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 call #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1101 ii0iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 callr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0001 000sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name><operator>|</operator><name>IMPLICIT_LR</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 jump #r15:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 1100 ii0iiiii 00i00-uu iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pu4 jumpr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0011 010sssss 00----uu --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memb ( Rs32 + #u6:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 000 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memb ( Rx32 ++ #s4:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 000 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memd ( Rs32 + #u6:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 110 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memd ( Rx32 ++ #s4:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 110 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memh ( Rs32 + #u6:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 011 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memh ( Rs32 + #u6:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 010 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memh ( Rx32 ++ #s4:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 011 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memh ( Rx32 ++ #s4:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 010 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memw ( Rs32 + #u6:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 0000 100 sssss 00ittttt iiiii-vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"if Pv4 memw ( Rx32 ++ #s4:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 100 xxxxx 001ttttt -iiii0vv"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name><operator>|</operator><name>CONDITIONAL_EXEC</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"isync"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0111 11000000 000---00 00000010"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"jump #r22:2"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 100i iiiiiiii 00iiiiii iiiiiii-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xc</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"jumpr Rs32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0010 100sssss 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_COF_MAX1</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"l2kill"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 100 00 01----- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"loop0 ( #r7:2 , #U10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1001 000IIIII 00-iiiii IIIii-II"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"loop0 ( #r7:2 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0000 000sssss 00-iiiii ---ii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"loop1 ( #r7:2 , #U10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1001 001IIIII 00-iiiii IIIii-II"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC1</name><operator>|</operator><name>IMPLICIT_SA1</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"loop1 ( #r7:2 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0000 001sssss 00-iiiii ---ii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC1</name><operator>|</operator><name>IMPLICIT_SA1</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( gp + #u16:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 000 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( #g16:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 000 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 00 1 000 sssss 000ttttt 00000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( Rs32 + #s11:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 ii 1 000 sssss 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( Rx32 ++ #s4:0 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 000 xxxxx 000ttttt 0iiii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( Rx32 ++ #s4:0 :circ ( Mu2 ) ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 000 xxxxx 00uttttt 0iiii-0-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( Rx32 ++ Mu2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 10 1 000 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( Rx32 ++ Mu2 :brev ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 11 1 000 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memb ( Rx32 ++I :circ ( Mu2 ) ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 000 xxxxx 00uttttt 0-----1-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( gp + #u16:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 110 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( #g16:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 110 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( Rs32 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 00 1 110 sssss 000ttttt 00000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( Rs32 + #s11:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 ii 1 110 sssss 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( Rx32 ++ #s4:3 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 110 xxxxx 000ttttt 0iiii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( Rx32 ++ #s4:3 :circ ( Mu2 ) ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 110 xxxxx 00uttttt 0iiii-0-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( Rx32 ++ Mu2 ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 10 1 110 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( Rx32 ++ Mu2 :brev ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 11 1 110 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memd ( Rx32 ++I :circ ( Mu2 ) ) = Rtt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 110 xxxxx 00uttttt 0-----1-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( gp + #u16:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 011 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( gp + #u16:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 010 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( #g16:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 011 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( #g16:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 010 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rs32 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 00 1 011 sssss 000ttttt 00000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 00 1 010 sssss 000ttttt 00000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rs32 + #s11:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 ii 1 011 sssss 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rs32 + #s11:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 ii 1 010 sssss 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ #s4:1 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 011 xxxxx 000ttttt 0iiii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ #s4:1 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 010 xxxxx 000ttttt 0iiii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ #s4:1 :circ ( Mu2 ) ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 011 xxxxx 00uttttt 0iiii-0-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ #s4:1 :circ ( Mu2 ) ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 010 xxxxx 00uttttt 0iiii-0-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ Mu2 ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 10 1 011 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ Mu2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 10 1 010 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ Mu2 :brev ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 11 1 011 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++ Mu2 :brev ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 11 1 010 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++I :circ ( Mu2 ) ) = Rt32.h"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 011 xxxxx 00uttttt 0-----1-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memh ( Rx32 ++I :circ ( Mu2 ) ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 010 xxxxx 00uttttt 0-----1-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( gp + #u16:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 100 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( #g16:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"0100 1ii0 100 iiiii 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( Rs32 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 00 1 100 sssss 000ttttt 00000000"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( Rs32 + #s11:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 0 ii 1 100 sssss 00ittttt iiiiiiii"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( Rx32 ++ #s4:2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 01 1 100 xxxxx 000ttttt 0iiii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( Rx32 ++ #s4:2 :circ ( Mu2 ) ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 100 xxxxx 00uttttt 0iiii-0-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( Rx32 ++ Mu2 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 10 1 100 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( Rx32 ++ Mu2 :brev ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 11 1 100 xxxxx 00uttttt 0-------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw ( Rx32 ++I :circ ( Mu2 ) ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 1 00 1 100 xxxxx 00uttttt 0-----1-"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"memw_locked ( Rs32 , Pd4 ) = Rt32"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 000 01 01sssss 00-ttttt ------dd"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name><operator>|</operator><name>A_RESTRICT_SINGLE_MEM_FIRST</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"nop"</literal></expr> <operator>,</operator> <expr><literal type="string">"0111 1111 -------- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0xf</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"p3 = sp1loop0 ( #r7:2 , #U10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1001 101IIIII 00-iiiii IIIii-II"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name><operator>|</operator><name>IMPLICIT_P3</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_LATEPRED</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"p3 = sp1loop0 ( #r7:2 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0000 101sssss 00-iiiii ---ii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name><operator>|</operator><name>IMPLICIT_P3</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_LATEPRED</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"p3 = sp2loop0 ( #r7:2 , #U10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1001 110IIIII 00-iiiii IIIii-II"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name><operator>|</operator><name>IMPLICIT_P3</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_LATEPRED</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"p3 = sp2loop0 ( #r7:2 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0000 110sssss 00-iiiii ---ii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name><operator>|</operator><name>IMPLICIT_P3</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_LATEPRED</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"p3 = sp3loop0 ( #r7:2 , #U10 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1001 111IIIII 00-iiiii IIIii-II"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name><operator>|</operator><name>IMPLICIT_P3</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_LATEPRED</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"p3 = sp3loop0 ( #r7:2 , Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0000 111sssss 00-iiiii ---ii---"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_LC0</name><operator>|</operator><name>IMPLICIT_SA0</name><operator>|</operator><name>IMPLICIT_SR_OVF</name><operator>|</operator><name>IMPLICIT_P3</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_LOOP_LA</name><operator>|</operator><name>A_RESTRICT_BRANCHADDER_MAX1</name><operator>|</operator><name>A_BRANCHADDER</name><operator>|</operator><name>A_RESTRICT_LATEPRED</name><operator>|</operator><name>A_RESTRICT_NOSRMOVE</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"resume ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 010sssss 00------ 001-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"rte"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0111 111----- 000----- 000-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>IMPLICIT_PC</name></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"start ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 011sssss 00------ 001-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"stop ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 011sssss 00------ 000-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"swi ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 000sssss 00------ 000-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"syncht"</literal></expr> <operator>,</operator> <expr><literal type="string">"1010 100 00 10----- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x1</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"tlbp"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1100 100----- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"tlbr"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1100 010----- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"tlbw"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 1100 000----- 00------ --------"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"trap0 ( #u8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0100 0------- 00-iiiii ---iii--"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"trap1 ( #u8 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0101 0100 1------- 00-iiiii ---iii--"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x4</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

<block>{<block_content> <expr><literal type="string">"wait ( Rs32 )"</literal></expr> <operator>,</operator> <expr><literal type="string">"0110 0100 010sssss 00------ 000-----"</literal></expr> <operator>,</operator> <expr><name>HEXAGON_MACH</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><name>NULL</name></expr><operator>,</operator> <expr><literal type="number">0x8</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal><operator>|</operator><name>A_RESTRICT_NOPACKET</name></expr><operator>,</operator> <expr><name>NULL</name></expr></block_content>}</block><operator>,</operator>

</unit>
