<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\tms320\c55x_plus\ins.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ins.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>ut8</name> <modifier>*</modifier></type><name>ins_buff</name> <init>= <expr><operator>(</operator><name>ut8</name> <operator>*</operator><operator>)</operator><name>NULL</name></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut32</name></type> <name>ins_buff_len</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>unsigned</name> <name>int</name></type> <name>has_failed</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<function><type><name>ut32</name></type> <name>get_ins_len</name><parameter_list>(<parameter><decl><type><name>ut8</name></type> <name>opcode</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>ut32</name></type> <name>val</name> <init>= <expr><operator>(</operator><name>opcode</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xF</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>len</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>val</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case>

<case>case <expr><literal type="number">1</literal></expr>:</case>

<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case>

<case>case <expr><literal type="number">3</literal></expr>:</case>

<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">4</literal></expr>:</case>

<case>case <expr><literal type="number">5</literal></expr>:</case>

<case>case <expr><literal type="number">6</literal></expr>:</case>

<case>case <expr><literal type="number">7</literal></expr>:</case>

<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">8</literal></expr>:</case>

<case>case <expr><literal type="number">9</literal></expr>:</case>

<case>case <expr><literal type="number">10</literal></expr>:</case>

<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">11</literal></expr>:</case>

<case>case <expr><literal type="number">12</literal></expr>:</case>

<case>case <expr><literal type="number">13</literal></expr>:</case>

<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">5</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">14</literal></expr>:</case>

<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">15</literal></expr>:</case>

<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">7</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>len</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>ut32</name></type> <name>get_ins_part</name><parameter_list>(<parameter><decl><type><name>ut32</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>ut32</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>ut32</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>has_failed</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>C55PLUS_DEBUG</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>printf</name> <argument_list>(<argument><expr><literal type="string">"pos =&gt; 0x%x len =&gt; %d ins_buff_len =&gt; %d\n"</literal></expr></argument>, <argument><expr><name>pos</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>ins_buff_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>st32</name><operator>)</operator><name>pos</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>pos</name> <operator>&gt;=</operator> <name>ins_buff_len</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>has_failed</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></if></if_stmt> 

<for>for <control>(<init>;</init> <condition><expr><name>len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>len</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>ret</name> <operator>&lt;&lt;=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pos</name> <operator>&gt;=</operator> <name>ins_buff_len</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>has_failed</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>ret</name> <operator>|=</operator> <name><name>ins_buff</name><index>[<expr><name>pos</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>ins_str</name><index>[]</index></name> <init>= <expr><block>{

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"OOOOOOppHHHhhhhhkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"while (`HHHhhhhh` &amp;&amp; (RPTC &lt; `kkkkkkkk`)) repeat"</literal></expr>

,

<expr><literal type="string">"RPTCC `kkkkkkkk`, `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1</literal></expr>,

<expr><literal type="string">"OOOOOOOOHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) return"</literal></expr>

,

<expr><literal type="string">"RETCC `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x2</literal></expr>,

<expr><literal type="string">"OOOOOOOpLLLLLLLLHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) goto `LLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"BCC `LLLLLLLL`, `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x3</literal></expr>,

<expr><literal type="string">"OOOOOOOpLLLLLLLLLLLLLLLL"</literal></expr>

,

<expr><literal type="string">"`q_SAT,n`goto `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"`q_SAT,N`B `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x4</literal></expr>,

<expr><literal type="string">"OOOOOOOpLLLLLLLLLLLLLLLL"</literal></expr>

,

<expr><literal type="string">"call `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"CALL `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x5</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"RPTL_P_64"</literal></expr>

,

<expr><literal type="string">"RPTL_P_64"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x6</literal></expr>,

<expr><literal type="string">"OOOOOOppkkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"repeat(`kkkkkkkkkkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"RPT `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x7</literal></expr>,

<expr><literal type="string">"OOOOOOppllllllllllllllll"</literal></expr>

,

<expr><literal type="string">"blockrepeat { `llllllllllllllll,i`"</literal></expr>

,

<expr><literal type="string">"RPTB `llllllllllllllll`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x8</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `AAaaaaa,WACx` &amp; (`CCccccc,WACx` &lt;&lt;&lt; `SSSSSS`)"</literal></expr>

,

<expr><literal type="string">"AND `CCccccc,WACx` &lt;&lt; `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x9</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `AAaaaaa,WACx` | (`CCccccc,WACx` &lt;&lt;&lt; `SSSSSS`)"</literal></expr>

,

<expr><literal type="string">"OR `CCccccc,WACx` &lt;&lt; `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `AAaaaaa,WACx` ^ (`CCccccc,WACx` &lt;&lt;&lt; `SSSSSS`)"</literal></expr>

,

<expr><literal type="string">"XOR `CCccccc,WACx` &lt;&lt; `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``AAaaaaa,WACx` + (`CCccccc,WACx` &lt;&lt; `SSSSSS`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `CCccccc,WACx` &lt;&lt; `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``AAaaaaa,WACx` - (`CCccccc,WACx` &lt;&lt; `SSSSSS`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `CCccccc,WACx` &lt;&lt; `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``CCccccc,WACx` &lt;&lt; `SSSSSS``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SFTS`q_SAT` `CCccccc,WACx`, `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``CCccccc,WACx` &lt;&lt;C `SSSSSS``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SFTSC`q_SAT` `CCccccc,WACx`, `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCccccco-SSSSSS"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `CCccccc,WACx` &lt;&lt;&lt; `SSSSSS`"</literal></expr>

,

<expr><literal type="string">"SFTL `CCccccc,WACx`, `SSSSSS`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x10</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap----------ccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,RLHx` = exp(`ccccc,ACx`)"</literal></expr>

,

<expr><literal type="string">"EXP `ccccc,ACx`, `AAaaaaa,RLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x11</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap--bbbbb---ccccc"</literal></expr>

,

<expr><literal type="string">"`bbbbb,ACx` = mant(`ccccc,ACx`), `AAaaaaa,RLHx` = exp(`ccccc,ACx`)"</literal></expr>

,

<expr><literal type="string">"MANT `ccccc,ACx`, `bbbbb,ACx` :: NEXP `ccccc,ACx`, `AAaaaaa,RLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x12</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-Tccccc---ddddd"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,RLHx` = count(`ccccc,ACx`, `ddddd,ACx`, `T`)"</literal></expr>

,

<expr><literal type="string">"BCNT `ccccc,ACx`, `ddddd,ACx`, `T`, `AAaaaaa,RLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x13</literal></expr>,

<expr><literal type="string">"OOOOOOOOp--aaaaap--bbbbb---cccccrrrddddd"</literal></expr>

,

<expr><literal type="string">"max_diff`q_SAT,a`(`ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, pair(`rrr`))"</literal></expr>

,

<expr><literal type="string">"MAXDIFF`q_SAT` `ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, pair(`rrr`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x14</literal></expr>,

<expr><literal type="string">"OOOOOOOOp--aaaaap--bbbbb---cccccrrrddddd"</literal></expr>

,

<expr><literal type="string">"max_diff_dbl`q_SAT,a`(`ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, `rrr`)"</literal></expr>

,

<expr><literal type="string">"DMAXDIFF`q_SAT` `ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, `rrr`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x15</literal></expr>,

<expr><literal type="string">"OOOOOOOOp--aaaaap--bbbbb---cccccrrrddddd"</literal></expr>

,

<expr><literal type="string">"min_diff`q_SAT,a`(`ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, pair(`rrr`))"</literal></expr>

,

<expr><literal type="string">"MINDIFF`q_SAT` `ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, pair(`rrr`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x16</literal></expr>,

<expr><literal type="string">"OOOOOOOOp--aaaaap--bbbbb---cccccrrrddddd"</literal></expr>

,

<expr><literal type="string">"min_diff_dbl`q_SAT,a`(`ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, `rrr`)"</literal></expr>

,

<expr><literal type="string">"DMINDIFF`q_SAT` `ccccc,ACx`, `ddddd,ACx`, `aaaaa,ACx`, `bbbbb,ACx`, `rrr`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x17</literal></expr>,

<expr><literal type="string">"OOOOOOOOpCCcccccpDDdddddo-$-JJ-T"</literal></expr>

,

<expr><literal type="string">"`T` = `$`(`CCccccc,Rx` `JJ` `DDddddd,Rx`)"</literal></expr>

,

<expr><literal type="string">"CMP`$` `CCccccc,Rx` `JJ` `DDddddd,Rx`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x18</literal></expr>,

<expr><literal type="string">"OOOOOOOOpCCcccccpDDdddddo-$-JJTT"</literal></expr>

,

<expr><literal type="string">"`TT,2` = `TT,1` &amp; `$`(`CCccccc,Rx` `JJ` `DDddddd,Rx`)"</literal></expr>

,

<expr><literal type="string">"CMPAND`$` `CCccccc,Rx` `JJ` `DDddddd,Rx`, `TT,1`, `TT,2`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x19</literal></expr>,

<expr><literal type="string">"OOOOOOOOpCCcccccpDDdddddo-$-JJTT"</literal></expr>

,

<expr><literal type="string">"`TT,2` = !`TT,1` &amp; `$`(`CCccccc,Rx` `JJ` `DDddddd,Rx`)"</literal></expr>

,

<expr><literal type="string">"CMPAND`$` `CCccccc,Rx` `JJ` `DDddddd,Rx`, !`TT,1`, `TT,2`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A</literal></expr>,

<expr><literal type="string">"OOOOOOOOpCCcccccpDDdddddo-$-JJTT"</literal></expr>

,

<expr><literal type="string">"`TT,2` = `TT,1` | `$`(`CCccccc,Rx` `JJ` `DDddddd,Rx`)"</literal></expr>

,

<expr><literal type="string">"CMPOR`$` `CCccccc,Rx` `JJ` `DDddddd,Rx`, `TT,1`, `TT,2`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B</literal></expr>,

<expr><literal type="string">"OOOOOOOOpCCcccccpDDdddddo-$-JJTT"</literal></expr>

,

<expr><literal type="string">"`TT,2` = !`TT,1` | `$`(`CCccccc,Rx` `JJ` `DDddddd,Rx`)"</literal></expr>

,

<expr><literal type="string">"CMPOR`$` `CCccccc,Rx` `JJ` `DDddddd,Rx`, !`TT,1`, `TT,2`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C</literal></expr>,

<expr><literal type="string">"OOOOOOOO-AAaaaaapCCccccc------VV"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `VV,2` \\ `CCccccc,Rx` \\ `VV,1`"</literal></expr>

,

<expr><literal type="string">"ROL `VV,2`, `CCccccc,Rx`, `VV,1`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D</literal></expr>,

<expr><literal type="string">"OOOOOOOO-AAaaaaapCCccccc------VV"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `VV,1` // `CCccccc,Rx` // `VV,2`"</literal></expr>

,

<expr><literal type="string">"ROR `VV,1`, `CCccccc,Rx`, `VV,2`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-Aaaaaap-Cccccc"</literal></expr>

,

<expr><literal type="string">"mar(`q_CIRC,(``q_LINR,(``Aaaaaa,WDAx` + `Cccccc,WDAx``q_CIRC,)``q_LINR,)`)"</literal></expr>

,

<expr><literal type="string">"AADD`q_CIRC``q_LINR` `Cccccc,WDAx`, `Aaaaaa,WDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-Aaaaaap-Cccccc"</literal></expr>

,

<expr><literal type="string">"mar(`q_CIRC,(``q_LINR,(``Aaaaaa,WDAx` = `Cccccc,WDAx``q_CIRC,)``q_LINR,)`)"</literal></expr>

,

<expr><literal type="string">"AMOV`q_CIRC``q_LINR` `Cccccc,WDAx`, `Aaaaaa,WDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x20</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-Aaaaaap-Cccccc"</literal></expr>

,

<expr><literal type="string">"mar(`q_CIRC,(``q_LINR,(``Aaaaaa,WDAx` - `Cccccc,WDAx``q_CIRC,)``q_LINR,)`)"</literal></expr>

,

<expr><literal type="string">"ASUB`q_CIRC``q_LINR` `Cccccc,WDAx`, `Aaaaaa,WDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x21</literal></expr>,

<expr><literal type="string">"OOOOOOOOppAaaaaakkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"mar(`q_CIRC,(``q_LINR,(``Aaaaaa,WDAx` + `kkkkkkkkkkkkkkkk``q_CIRC,)``q_LINR,)`)"</literal></expr>

,

<expr><literal type="string">"AADD`q_CIRC``q_LINR` `kkkkkkkkkkkkkkkk`, `Aaaaaa,WDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x22</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_K_MX"</literal></expr>

,

<expr><literal type="string">"MAR_K_MX"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x23</literal></expr>,

<expr><literal type="string">"OOOOOOOOppAaaaaakkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"mar(`q_CIRC,(``q_LINR,(``Aaaaaa,WDAx` - `kkkkkkkkkkkkkkkk``q_CIRC,)``q_LINR,)`)"</literal></expr>

,

<expr><literal type="string">"ASUB`q_CIRC``q_LINR` `kkkkkkkkkkkkkkkk`, `Aaaaaa,WDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x24</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_DA_AY"</literal></expr>

,

<expr><literal type="string">"MAR_DA_AY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x25</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_DA_MY"</literal></expr>

,

<expr><literal type="string">"MAR_DA_MY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x26</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_DA_SY"</literal></expr>

,

<expr><literal type="string">"MAR_DA_SY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x27</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_K_AY"</literal></expr>

,

<expr><literal type="string">"MAR_K_AY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x28</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_K_MY"</literal></expr>

,

<expr><literal type="string">"MAR_K_MY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x29</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_K_SY"</literal></expr>

,

<expr><literal type="string">"MAR_K_SY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x2A</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_MDP"</literal></expr>

,

<expr><literal type="string">"LD_RPK_MDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x2B</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_MDP05"</literal></expr>

,

<expr><literal type="string">"LD_RPK_MDP05"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x2C</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_MDP67"</literal></expr>

,

<expr><literal type="string">"LD_RPK_MDP67"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x2D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_PDP"</literal></expr>

,

<expr><literal type="string">"LD_RPK_PDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x2E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK_03"</literal></expr>

,

<expr><literal type="string">"LD_BK_03"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x2F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK_47"</literal></expr>

,

<expr><literal type="string">"LD_BK_47"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x30</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK_C"</literal></expr>

,

<expr><literal type="string">"LD_BK_C"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x31</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK_CSR"</literal></expr>

,

<expr><literal type="string">"LD_BK_CSR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x32</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK_BR0"</literal></expr>

,

<expr><literal type="string">"LD_BK_BR0"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x33</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK_BR1"</literal></expr>

,

<expr><literal type="string">"LD_BK_BR1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x34</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-kkkkk"</literal></expr>

,

<expr><literal type="string">"sim_trig"</literal></expr>

,

<expr><literal type="string">"SIM_TRIG"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x35</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"AND_RBK"</literal></expr>

,

<expr><literal type="string">"AND_RBK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x36</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"OR_RBK"</literal></expr>

,

<expr><literal type="string">"OR_RBK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x37</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"XOR_RBK"</literal></expr>

,

<expr><literal type="string">"XOR_RBK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x38</literal></expr>,

<expr><literal type="string">"OOOOOOOO-/%aaaaap--------CCcccccKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `%,(``/,(``CCccccc,MRx` * `KKKKKKKK``/,)``%,)`"</literal></expr>

,

<expr><literal type="string">"MPYK`/``q_SAT``%` `KKKKKKKK`, `CCccccc,MRx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x39</literal></expr>,

<expr><literal type="string">"OOOOOOOO-/%aaaaap--ccccc-DDdddddKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` + `/,(``DDddddd,MRx` * `KKKKKKKK``/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MACK`/``q_SAT``%` `KKKKKKKK`, `DDddddd,MRx`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x3A</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"nop"</literal></expr>

,

<expr><literal type="string">"NOP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x3B</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,RAx` = `q_SAT,(``CCccccc,RAx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `CCccccc,RAx`, `AAaaaaa,RAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x3C</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``AAaaaaa,Rx` + `CCccccc,Rx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x3D</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``AAaaaaa,Rx` - `CCccccc,Rx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x3E</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `AAaaaaa,Rx` &amp; `CCccccc,Rx`"</literal></expr>

,

<expr><literal type="string">"AND `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x3F</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `AAaaaaa,Rx` | `CCccccc,Rx`"</literal></expr>

,

<expr><literal type="string">"OR `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x40</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `AAaaaaa,Rx` ^ `CCccccc,Rx`"</literal></expr>

,

<expr><literal type="string">"XOR `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x41</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = max(`CCccccc,Rx`, `AAaaaaa,Rx`)"</literal></expr>

,

<expr><literal type="string">"MAX `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x42</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = min(`CCccccc,Rx`, `AAaaaaa,Rx`)"</literal></expr>

,

<expr><literal type="string">"MIN `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x43</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(`|`CCccccc,Rx`|`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ABS`q_SAT` `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x44</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(`-`CCccccc,Rx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"NEG`q_SAT` `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x45</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = ~`CCccccc,Rx`"</literal></expr>

,

<expr><literal type="string">"NOT `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x46</literal></expr>,

<expr><literal type="string">"OOOOOOOp-CCccccc-DDddddd"</literal></expr>

,

<expr><literal type="string">"push(`CCccccc,RLHx`, `DDddddd,RLHx`)"</literal></expr>

,

<expr><literal type="string">"PSH `CCccccc,RLHx`, `DDddddd,RLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x47</literal></expr>,

<expr><literal type="string">"OOOOOOOp-AAaaaaa-BBbbbbb"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,RLHx`, `BBbbbbb,RLHx` = pop()"</literal></expr>

,

<expr><literal type="string">"POP `AAaaaaa,RLHx`, `BBbbbbb,RLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x48</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-kkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `kkkk`"</literal></expr>

,

<expr><literal type="string">"MOV `kkkk`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x49</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-kkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `kkkk,-`"</literal></expr>

,

<expr><literal type="string">"MOV `kkkk,-`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x4A</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-kkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``AAaaaaa,Rx` + `kkkk``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `kkkk`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x4B</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-kkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``AAaaaaa,Rx` - `kkkk``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `kkkk`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x4C</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_AC_R"</literal></expr>

,

<expr><literal type="string">"MV_AC_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x4D</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-----"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``AAaaaaa,Rx` &gt;&gt; #1`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SFTS `AAaaaaa,Rx`, #-1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x4E</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-----"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``AAaaaaa,Rx` &lt;&lt; #1`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SFTS`q_SAT` `AAaaaaa,Rx`, #1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x4F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_SP_R"</literal></expr>

,

<expr><literal type="string">"MV_SP_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x50</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_SSP_R"</literal></expr>

,

<expr><literal type="string">"MV_SSP_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x51</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_CDP_R"</literal></expr>

,

<expr><literal type="string">"MV_CDP_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x52</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_BRC0_R"</literal></expr>

,

<expr><literal type="string">"MV_BRC0_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x53</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_BRC1_R"</literal></expr>

,

<expr><literal type="string">"MV_BRC1_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x54</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_RPTC_R"</literal></expr>

,

<expr><literal type="string">"MV_RPTC_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x55</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST0, #`kkkk,ST0`) = #0"</literal></expr>

,

<expr><literal type="string">"BCLR `kkkk,ST0`, ST0_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x56</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST0, #`kkkk,ST0`) = #1"</literal></expr>

,

<expr><literal type="string">"BSET `kkkk,ST0`, ST0_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x57</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST1, #`kkkk,ST1`) = #0"</literal></expr>

,

<expr><literal type="string">"BCLR `kkkk,ST1`, ST1_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x58</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST1, #`kkkk,ST1`) = #1"</literal></expr>

,

<expr><literal type="string">"BSET `kkkk,ST1`, ST1_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x59</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST2, #`kkkk,ST2`) = #0"</literal></expr>

,

<expr><literal type="string">"BCLR `kkkk,ST2`, ST2_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x5A</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST2, #`kkkk,ST2`) = #1"</literal></expr>

,

<expr><literal type="string">"BSET `kkkk,ST2`, ST2_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x5B</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST3, #`kkkk,ST3`) = #0"</literal></expr>

,

<expr><literal type="string">"BCLR `kkkk,ST3`, ST3_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x5C</literal></expr>,

<expr><literal type="string">"OOOOOOOOppq-kkkk"</literal></expr>

,

<expr><literal type="string">"bit(ST3, #`kkkk,ST3`) = #1"</literal></expr>

,

<expr><literal type="string">"BSET `kkkk,ST3`, ST3_55"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x5D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"eallow()"</literal></expr>

,

<expr><literal type="string">"EALLOW__"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x5E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"edis()"</literal></expr>

,

<expr><literal type="string">"EDIS__"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x5F</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"aborti()"</literal></expr>

,

<expr><literal type="string">"ABORTI__"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x60</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"estop_1()"</literal></expr>

,

<expr><literal type="string">"ESTOP_INC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x61</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp------"</literal></expr>

,

<expr><literal type="string">"repeat(CSR) "</literal></expr>

,

<expr><literal type="string">"RPT CSR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x62</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-ccccc"</literal></expr>

,

<expr><literal type="string">"repeat(CSR), CSR += `ccccc,DAx`"</literal></expr>

,

<expr><literal type="string">"RPTADD CSR, `ccccc,DAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x63</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp--kkkk"</literal></expr>

,

<expr><literal type="string">"repeat(CSR), CSR += `kkkk`"</literal></expr>

,

<expr><literal type="string">"RPTADD CSR, `kkkk`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x64</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp--kkkk"</literal></expr>

,

<expr><literal type="string">"repeat(CSR), CSR -= `kkkk`"</literal></expr>

,

<expr><literal type="string">"RPTSUB CSR, `kkkk`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x65</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"return"</literal></expr>

,

<expr><literal type="string">"RET"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x66</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"return_int"</literal></expr>

,

<expr><literal type="string">"RETI"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x67</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SWT_P_RPT"</literal></expr>

,

<expr><literal type="string">"SWT_P_RPT"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x68</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"BR_P_S"</literal></expr>

,

<expr><literal type="string">"BR_P_S"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x69</literal></expr>,

<expr><literal type="string">"OOOOOOpp--------llllllll"</literal></expr>

,

<expr><literal type="string">"localrepeat { `llllllll,i`"</literal></expr>

,

<expr><literal type="string">"RPTBLOCAL `llllllll`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x6A</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"RPT_P_BK"</literal></expr>

,

<expr><literal type="string">"RPT_P_BK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x6B</literal></expr>,

<expr><literal type="string">"OOOOOOOOKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"SP = SP + `KKKKKKKK`"</literal></expr>

,

<expr><literal type="string">"AADD `KKKKKKKK`, SP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x6C</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-----"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `AAaaaaa,Rx` &lt;&lt;&lt; #1"</literal></expr>

,

<expr><literal type="string">"SFTL `AAaaaaa,Rx`, #1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x6D</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaap-o-----"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `AAaaaaa,Rx` &gt;&gt;&gt; #1"</literal></expr>

,

<expr><literal type="string">"SFTL `AAaaaaa,Rx`, #-1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x6E</literal></expr>,

<expr><literal type="string">"OOOOOOOpAAAaaaaa"</literal></expr>

,

<expr><literal type="string">"`AAAaaaaa,ALLx` = `AAAaaaaa,d(ALLx`pop()`AAAaaaaa,)ALLx`"</literal></expr>

,

<expr><literal type="string">"POP `AAAaaaaa,d(ALLx``AAAaaaaa,ALLx``AAAaaaaa,)ALLx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x6F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DPOPR_SPR_DB"</literal></expr>

,

<expr><literal type="string">"DPOPR_SPR_DB"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x70</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-Aaaaaa"</literal></expr>

,

<expr><literal type="string">"`Aaaaaa,XRx` = popboth()"</literal></expr>

,

<expr><literal type="string">"POPBOTH `Aaaaaa,XRx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x71</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-Cccccc"</literal></expr>

,

<expr><literal type="string">"pshboth(`Cccccc,XRx`)"</literal></expr>

,

<expr><literal type="string">"PSHBOTH `Cccccc,XRx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x72</literal></expr>,

<expr><literal type="string">"OOOOOOOpCCCccccc"</literal></expr>

,

<expr><literal type="string">"`CCCccccc,d(ALLx`push(`CCCccccc,ALLx`)`CCCccccc,)ALLx`"</literal></expr>

,

<expr><literal type="string">"PSH `CCCccccc,d(ALLx``CCCccccc,ALLx``CCCccccc,)ALLx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x73</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DPSHR_SPW_DB"</literal></expr>

,

<expr><literal type="string">"DPSHR_SPW_DB"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x74</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_R_ACH"</literal></expr>

,

<expr><literal type="string">"MV_R_ACH"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x75</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_R_SP"</literal></expr>

,

<expr><literal type="string">"MV_R_SP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x76</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_R_SSP"</literal></expr>

,

<expr><literal type="string">"MV_R_SSP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x77</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_R_CDP"</literal></expr>

,

<expr><literal type="string">"MV_R_CDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x78</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_R_CSR"</literal></expr>

,

<expr><literal type="string">"MV_R_CSR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x79</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_R_BRC1"</literal></expr>

,

<expr><literal type="string">"MV_R_BRC1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x7A</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_R_BRC0"</literal></expr>

,

<expr><literal type="string">"MV_R_BRC0"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x7B</literal></expr>,

<expr><literal type="string">"OOOOOOOOp/%aaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``aaaaa,ACx` + `/,(`|`CCccccc,MAx`|`/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`/``q_SAT``%`V `CCccccc,MAx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x7C</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SQURA_R_RR"</literal></expr>

,

<expr><literal type="string">"SQURA_R_RR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x7D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SQURS_R_RR"</literal></expr>

,

<expr><literal type="string">"SQURS_R_RR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x7E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MPY_R_RR_AC"</literal></expr>

,

<expr><literal type="string">"MPY_R_RR_AC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x7F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SQUR_R_RR"</literal></expr>

,

<expr><literal type="string">"SQUR_R_RR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x80</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-%aaaaap--ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`rnd(`ccccc,ACx`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ROUND`q_SAT` `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x81</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-%aaaaap--ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = saturate(`%,(``ccccc,ACx``%,)`)"</literal></expr>

,

<expr><literal type="string">"SAT`%` `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x82</literal></expr>,

<expr><literal type="string">"OOOOOOO$p/%aaaaapCCccccc#DDddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``aaaaa,ACx` + `/,(``$,(``CCccccc,MRx``$,)` * `#,(``DDddddd,MAx``#,)``/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%` `$,(``CCccccc,MRx``$,)`, `#,(``DDddddd,MAx``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x83</literal></expr>,

<expr><literal type="string">"OOOOOOO$p/%aaaaapCCccccc#DDddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``aaaaa,ACx` - `/,(``$,(``CCccccc,MRx``$,)` * `#,(``DDddddd,MAx``#,)``/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%` `#,(``DDddddd,MAx``#,)`, `$,(``CCccccc,MRx``$,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x84</literal></expr>,

<expr><literal type="string">"OOOOOOO$p/%aaaaapCCccccc#DDddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``/,(``$,(``CCccccc,MRx``$,)` * `#,(``DDddddd,MAx``#,)``/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%` `#,(``DDddddd,MAx``#,)`, `$,(``CCccccc,MRx``$,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x85</literal></expr>,

<expr><literal type="string">"OOOOOOO-p/%aaaaapDDddddd---ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` + `/,(``DDddddd,MRx` * `aaaaa,ACx``/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%` `aaaaa,ACx`, `DDddddd,MRx`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x86</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCcccccoNNnnnnn"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``AAaaaaa,WACx` + (`CCccccc,WACx` &lt;&lt; `NNnnnnn,SRx`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `CCccccc,WACx` &lt;&lt; `NNnnnnn,SRx`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x87</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCcccccoNNnnnnn"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``AAaaaaa,WACx` - (`CCccccc,WACx` &lt;&lt; `NNnnnnn,SRx`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `CCccccc,WACx` &lt;&lt; `NNnnnnn,SRx`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x88</literal></expr>,

<expr><literal type="string">"OOOOOOOOp00aaaaap-Taaaaa--------"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = sftc(`aaaaa,ACx`, `T`)"</literal></expr>

,

<expr><literal type="string">"SFTCC `aaaaa,ACx`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x89</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCcccccoNNnnnnn"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `CCccccc,WACx` &lt;&lt;&lt; `NNnnnnn,SRx`"</literal></expr>

,

<expr><literal type="string">"SFTL `CCccccc,WACx`, `NNnnnnn,SRx`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x8A</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCcccccoNNnnnnn"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``CCccccc,WACx` &lt;&lt; `NNnnnnn,SRx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SFTS`q_SAT` `CCccccc,WACx`, `NNnnnnn,SRx`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x8B</literal></expr>,

<expr><literal type="string">"OOOOOOOOpAAaaaaapCCcccccoNNnnnnn"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,WACx` = `q_SAT,(``CCccccc,WACx` &lt;&lt;C `NNnnnnn,SRx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SFTSC`q_SAT` `CCccccc,WACx`, `NNnnnnn,SRx`, `AAaaaaa,WACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x8C</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-kkkkk"</literal></expr>

,

<expr><literal type="string">"swap(`kkkkk,!`)"</literal></expr>

,

<expr><literal type="string">"SWAP `kkkkk,!`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x8D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"COPR_16"</literal></expr>

,

<expr><literal type="string">"COPR_16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x8E</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"nop_16"</literal></expr>

,

<expr><literal type="string">"NOP_16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x8F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"BRC_P_SD"</literal></expr>

,

<expr><literal type="string">"BRC_P_SD"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x90</literal></expr>,

<expr><literal type="string">"OOOOOOOpllllllllllllllllllllllllHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) goto `llllllllllllllllllllllll`"</literal></expr>

,

<expr><literal type="string">"BCC `llllllllllllllllllllllll`, `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x91</literal></expr>,

<expr><literal type="string">"OOOOOOOpllllllllllllllllllllllllHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) call `llllllllllllllllllllllll`"</literal></expr>

,

<expr><literal type="string">"CALLCC `llllllllllllllllllllllll`, `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x92</literal></expr>,

<expr><literal type="string">"OOOOOOFpllllllllllllllllllllllll"</literal></expr>

,

<expr><literal type="string">"`q_SAT,n`goto `llllllllllllllllllllllll``F`"</literal></expr>

,

<expr><literal type="string">"`q_SAT,N`B `llllllllllllllllllllllll``F`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x93</literal></expr>,

<expr><literal type="string">"OOOOOOFpllllllllllllllllllllllll"</literal></expr>

,

<expr><literal type="string">"call `llllllllllllllllllllllll``F`"</literal></expr>

,

<expr><literal type="string">"CALL `llllllllllllllllllllllll``F`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x94</literal></expr>,

<expr><literal type="string">"OOOOOOOpLLLLLLLLLLLLLLLLHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) goto `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"BCC `LLLLLLLLLLLLLLLL`, `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x95</literal></expr>,

<expr><literal type="string">"OOOOOOOpLLLLLLLLLLLLLLLLHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) call `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"CALLCC `LLLLLLLLLLLLLLLL`, `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x96</literal></expr>,

<expr><literal type="string">"OOOOOOK$JCCcccccJKKKKKKKLLLLLLLLLLLLLLLL"</literal></expr>

,

<expr><literal type="string">"compare (`$,(``CCccccc,RAx` `JJ` `KKKKKKKK``$,)`) goto `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"BCC`$` `LLLLLLLLLLLLLLLL`, `CCccccc,RAx` `JJ` `KKKKKKKK`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x97</literal></expr>,

<expr><literal type="string">"OOOOOOOopssaaaaapsscccccKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + (`KKKKKKKKKKKKKKKK` &lt;&lt; `ssss`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `KKKKKKKKKKKKKKKK` &lt;&lt; `ssss`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x98</literal></expr>,

<expr><literal type="string">"OOOOOOOopssaaaaapsscccccKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - (`KKKKKKKKKKKKKKKK` &lt;&lt; `ssss`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `KKKKKKKKKKKKKKKK` &lt;&lt; `ssss`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x99</literal></expr>,

<expr><literal type="string">"OOOOOOOopssaaaaapssccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `ccccc,ACx` &amp; (`kkkkkkkkkkkkkkkk` &lt;&lt;&lt; `ssss`)"</literal></expr>

,

<expr><literal type="string">"AND `kkkkkkkkkkkkkkkk` &lt;&lt; `ssss`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x9A</literal></expr>,

<expr><literal type="string">"OOOOOOOopssaaaaapssccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `ccccc,ACx` | (`kkkkkkkkkkkkkkkk` &lt;&lt;&lt; `ssss`)"</literal></expr>

,

<expr><literal type="string">"OR `kkkkkkkkkkkkkkkk` &lt;&lt; `ssss`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x9B</literal></expr>,

<expr><literal type="string">"OOOOOOOopssaaaaapssccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `ccccc,ACx` ^ (`kkkkkkkkkkkkkkkk` &lt;&lt;&lt; `ssss`)"</literal></expr>

,

<expr><literal type="string">"XOR `kkkkkkkkkkkkkkkk` &lt;&lt; `ssss`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x9C</literal></expr>,

<expr><literal type="string">"OOOOOOOopssaaaaapss-----KKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `KKKKKKKKKKKKKKKK` &lt;&lt; `ssss`"</literal></expr>

,

<expr><literal type="string">"MOV `KKKKKKKKKKKKKKKK` &lt;&lt; `ssss`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x9D</literal></expr>,

<expr><literal type="string">"OOOOOOOO-AAaaaaap11ccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = field_extract(`ccccc,ACx`.L, `kkkkkkkkkkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"BFXTR `kkkkkkkkkkkkkkkk`, `ccccc,ACx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x9E</literal></expr>,

<expr><literal type="string">"OOOOOOOO-AAaaaaap11ccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = field_expand(`ccccc,ACx`.L, `kkkkkkkkkkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"BFXPA `kkkkkkkkkkkkkkkk`, `ccccc,ACx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x9F</literal></expr>,

<expr><literal type="string">"OOOOOOOO-AAaaaaaKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``KKKKKKKKKKKKKKKK``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `KKKKKKKKKKKKKKKK`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA0</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-aaaaakkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"mar(`aaaaa,DAx` = `kkkkkkkkkkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"AMOV `kkkkkkkkkkkkkkkk`, `aaaaa,DAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA1</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_DP"</literal></expr>

,

<expr><literal type="string">"LD_RPK_DP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA2</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_SSP"</literal></expr>

,

<expr><literal type="string">"LD_RPK_SSP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA3</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_CDP"</literal></expr>

,

<expr><literal type="string">"LD_RPK_CDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA4</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_BF01"</literal></expr>

,

<expr><literal type="string">"LD_RPK_BF01"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA5</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_BF23"</literal></expr>

,

<expr><literal type="string">"LD_RPK_BF23"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA6</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_BF45"</literal></expr>

,

<expr><literal type="string">"LD_RPK_BF45"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA7</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_BF67"</literal></expr>

,

<expr><literal type="string">"LD_RPK_BF67"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA8</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_BFC"</literal></expr>

,

<expr><literal type="string">"LD_RPK_BFC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xA9</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RPK_SP"</literal></expr>

,

<expr><literal type="string">"LD_RPK_SP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xAA</literal></expr>,

<expr><literal type="string">"OOOOOOOO-/%aaaaap--------CCcccccKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``/,(``CCccccc,MRx` * `KKKKKKKKKKKKKKKK``/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPYK`/``q_SAT``%` `KKKKKKKKKKKKKKKK`, `CCccccc,MRx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xAB</literal></expr>,

<expr><literal type="string">"OOOOOOOO-/%aaaaap--ccccc-DDdddddKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` + `/,(``DDddddd,MRx` * `KKKKKKKKKKKKKKKK``/,)``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MACK`/``q_SAT``%` `KKKKKKKKKKKKKKKK`, `DDddddd,MRx`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xAC</literal></expr>,

<expr><literal type="string">"OOOOOOOop--aaaaap--cccccKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + (`KKKKKKKKKKKKKKKK` &lt;&lt; #16)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `KKKKKKKKKKKKKKKK` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xAD</literal></expr>,

<expr><literal type="string">"OOOOOOOop--aaaaap--cccccKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - (`KKKKKKKKKKKKKKKK` &lt;&lt; #16)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `KKKKKKKKKKKKKKKK` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xAE</literal></expr>,

<expr><literal type="string">"OOOOOOOop--aaaaap--ccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `ccccc,ACx` &amp; (`kkkkkkkkkkkkkkkk` &lt;&lt;&lt; #16)"</literal></expr>

,

<expr><literal type="string">"AND `kkkkkkkkkkkkkkkk` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xAF</literal></expr>,

<expr><literal type="string">"OOOOOOOop--aaaaap--ccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `ccccc,ACx` | (`kkkkkkkkkkkkkkkk` &lt;&lt;&lt; #16)"</literal></expr>

,

<expr><literal type="string">"OR `kkkkkkkkkkkkkkkk` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB0</literal></expr>,

<expr><literal type="string">"OOOOOOOop--aaaaap--ccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `ccccc,ACx` ^ (`kkkkkkkkkkkkkkkk` &lt;&lt;&lt; #16)"</literal></expr>

,

<expr><literal type="string">"XOR `kkkkkkkkkkkkkkkk` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB1</literal></expr>,

<expr><literal type="string">"OOOOOOOop--aaaaap-------KKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``KKKKKKKKKKKKKKKK` &lt;&lt; #16`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `KKKKKKKKKKKKKKKK` &lt;&lt; #16, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB2</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"idle"</literal></expr>

,

<expr><literal type="string">"IDLE"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB3</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCcccccKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``CCccccc,Rx` + `KKKKKKKKKKKKKKKK``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `KKKKKKKKKKKKKKKK`, `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB4</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCcccccKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `q_SAT,(``CCccccc,Rx` - `KKKKKKKKKKKKKKKK``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `KKKKKKKKKKKKKKKK`, `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB5</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `CCccccc,Rx` &amp; `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"AND `kkkkkkkkkkkkkkkk`, `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB6</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `CCccccc,Rx` | `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"OR `kkkkkkkkkkkkkkkk`, `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB7</literal></expr>,

<expr><literal type="string">"OOOOOOOopAAaaaaapCCccccckkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `CCccccc,Rx` ^ `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"XOR `kkkkkkkkkkkkkkkk`, `CCccccc,Rx`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB8</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LMVM_MM_L"</literal></expr>

,

<expr><literal type="string">"LMVM_MM_L"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xB9</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MVM_MM_YX"</literal></expr>

,

<expr><literal type="string">"MVM_MM_YX"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xBA</literal></expr>,

<expr><literal type="string">"OOOOOOOO-XXXxxxxp--ccccc-YYYyyyy"</literal></expr>

,

<expr><literal type="string">"`XXXxxxx,w` = LO(`ccccc,ACx`), `YYYyyyy,w` = HI(`ccccc,ACx`)"</literal></expr>

,

<expr><literal type="string">"MOV `ccccc,ACx`, `XXXxxxx,w`, `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xBB</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp00aaaaa-YYYyyyy"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`(`XXXxxxx,r` &lt;&lt; #16) + (`YYYyyyy,r` &lt;&lt; #16)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `XXXxxxx,r` &lt;&lt; #16, `YYYyyyy,r` &lt;&lt; #16, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xBC</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp00aaaaa-YYYyyyy"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`(`XXXxxxx,r` &lt;&lt; #16) - (`YYYyyyy,r` &lt;&lt; #16)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `XXXxxxx,r` &lt;&lt; #16, `YYYyyyy,r` &lt;&lt; #16, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xBD</literal></expr>,

<expr><literal type="string">"OOOOOOOO-XXXxxxxp--aaaaa-YYYyyyy"</literal></expr>

,

<expr><literal type="string">"LO(`aaaaa,ACx`) = `q_SAT,(``XXXxxxx,r``q_SAT,)`, HI(`aaaaa,ACx`) = `q_SAT,(``YYYyyyy,r``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xBE</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xBF</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC0</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC1</literal></expr>,

<expr><literal type="string">"OOOOOOO-pXXXxxxxp4$-----%YYYyyyyqq#aaaaa/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"mar(`XXXxxxx,r`), `aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``YYYyyyy,r``$,)` * `#,(``ZZZzzzz,r``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"AMAR `XXXxxxx,r` :: MPY`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC2</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC3</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC4</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`aaaaa,ACx` &gt;&gt; #16) + `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` &gt;&gt; #16 :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC5</literal></expr>,

<expr><literal type="string">"OOOOOOO-pXXXxxxxp4$-----%YYYyyyyqq#aaaaa/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"mar(`XXXxxxx,r`), `aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``ZZZzzzz,r``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"AMAR `XXXxxxx,r` :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC6</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC7</literal></expr>,

<expr><literal type="string">"OOOOOOO-pXXXxxxxp4$-----%YYYyyyyqq#aaaaa/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"mar(`XXXxxxx,r`), `aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`aaaaa,ACx` &gt;&gt; #16) + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``ZZZzzzz,r``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"AMAR `XXXxxxx,r` :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC8</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xC9</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`aaaaa,ACx` &gt;&gt; #16) + `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` &gt;&gt; #16 :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xCA</literal></expr>,

<expr><literal type="string">"OOOOOOO-pXXXxxxxp4$-----%YYYyyyyqq#aaaaa/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"mar(`XXXxxxx,r`), `aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(``YYYyyyy,r``$,)` * `#,(``ZZZzzzz,r``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"AMAR `XXXxxxx,r` :: MAS`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xCB</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xCC</literal></expr>,

<expr><literal type="string">"OOOOOOO-pXXXxxxxp--------YYYyyyyqq-------ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"mar(`XXXxxxx,r`), mar(`YYYyyyy,r`), mar(`ZZZzzzz,r`)"</literal></expr>

,

<expr><literal type="string">"AMAR `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xCD</literal></expr>,

<expr><literal type="string">"OOOOOOO-pXXXxxxxp0-aaaaa0YYYyyyyqq-bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"firs`/,a``q_SAT,a`(`XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aaaaa,ACx`, `bbbbb,ACx`)"</literal></expr>

,

<expr><literal type="string">"FIRSADD`/``q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aaaaa,ACx`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xCE</literal></expr>,

<expr><literal type="string">"OOOOOOO-pXXXxxxxp0-aaaaa0YYYyyyyqq-bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"firsn`/,a``q_SAT,a`(`XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aaaaa,ACx`, `bbbbb,ACx`)"</literal></expr>

,

<expr><literal type="string">"FIRSSUB`/``q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aaaaa,ACx`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xCF</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp4$aaaaa%YYYyyyy/-#-----"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``XXXxxxx,r``$,)` * `#,(``YYYyyyy,r``#,)``/,)``%,)``4,)``q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MPYM`/``q_SAT``%``4` `3``$,(``XXXxxxx,r``$,)`, `#,(``YYYyyyy,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD0</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp4$aaaaa%YYYyyyy/-#ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``ccccc,ACx` + `/,(``$,(``XXXxxxx,r``$,)` * `#,(``YYYyyyy,r``#,)``/,)``%,)``4,)``q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MACM`/``q_SAT``%``4` `3``$,(``XXXxxxx,r``$,)`, `#,(``YYYyyyy,r``#,)`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD1</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp4$aaaaa%YYYyyyy/-#ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`ccccc,ACx` &gt;&gt; #16) + `/,(``$,(``XXXxxxx,r``$,)` * `#,(``YYYyyyy,r``#,)``/,)``%,)``4,)``q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MACM`/``q_SAT``%``4` `3``$,(``XXXxxxx,r``$,)`, `#,(``YYYyyyy,r``#,)`, `ccccc,ACx` &gt;&gt; #16, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD2</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp4$aaaaa%YYYyyyy/-#ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``ccccc,ACx` - `/,(``$,(``XXXxxxx,r``$,)` * `#,(``YYYyyyy,r``#,)``/,)``%,)``4,)``q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MASM`/``q_SAT``%``4` `3``$,(``XXXxxxx,r``$,)`, `#,(``YYYyyyy,r``#,)`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD3</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp-oaaaaa%YYYyyyy/ccbbbbb"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``aaaaa,ACx` - `/`(`cc,Tx` * `XXXxxxx,r`)`%,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``YYYyyyy,r` &lt;&lt; #16`q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MASM`/``q_SAT``%` `XXXxxxx3,3r`, `cc,Tx`, `aaaaa,ACx` :: MOV`q_SAT` `YYYyyyy,r` &lt;&lt; #16, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD4</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp-oaaaaa%YYYyyyy/ccbbbbb"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``aaaaa,ACx` + `/`(`cc,Tx` * `XXXxxxx,r`)`%,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``YYYyyyy,r` &lt;&lt; #16`q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MACM`/``q_SAT``%` `XXXxxxx3,3r`, `cc,Tx`, `aaaaa,ACx` :: MOV`q_SAT` `YYYyyyy,r` &lt;&lt; #16, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD5</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp--aaaaa1YYYyyyy/--bbbbb"</literal></expr>

,

<expr><literal type="string">"lms`/,a``q_SAT,a`(`XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`)"</literal></expr>

,

<expr><literal type="string">"LMS`/``q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD6</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp--aaaaa0YYYyyyy/--bbbbb"</literal></expr>

,

<expr><literal type="string">"sqdst`/,a``q_SAT,a`(`XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`)"</literal></expr>

,

<expr><literal type="string">"SQDST`/``q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD7</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp--aaaaa0YYYyyyy/--bbbbb"</literal></expr>

,

<expr><literal type="string">"abdst`/,a``q_SAT,a`(`XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`)"</literal></expr>

,

<expr><literal type="string">"ABDST`/``q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD8</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp-oaaaaa%YYYyyyy/ccddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``/,(``cc,Tx` * `XXXxxxx,r``/,)``%,)``q_SAT,)`, `YYYyyyy,w` = `q_SAT,(`HI(`ccccc,ACx` &lt;&lt; T2)`q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MPYM`/``q_SAT``%` `XXXxxxx3,3r`, `cc,Tx`, `aaaaa,ACx` :: MOV`q_SAT` HI(`ccccc,ACx` &lt;&lt; T2), `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xD9</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp-oaaaaa%YYYyyyy/ccddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``aaaaa,ACx` + `/`(`cc,Tx` * `XXXxxxx,r`)`%,)``q_SAT,)`, `YYYyyyy,w` = `q_SAT,(`HI(`ccccc,ACx` &lt;&lt; T2)`q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MACM`/``q_SAT``%` `XXXxxxx3,3r`, `cc,Tx`, `aaaaa,ACx` :: MOV`q_SAT` HI(`ccccc,ACx` &lt;&lt; T2), `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xDA</literal></expr>,

<expr><literal type="string">"OOOOOOO3pXXXxxxxp-oaaaaa%YYYyyyy/ccddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``aaaaa,ACx` - `/`(`cc,Tx` * `XXXxxxx,r`)`%,)``q_SAT,)`, `YYYyyyy,w` = `q_SAT,(`HI(`ccccc,ACx` &lt;&lt; T2)`q_SAT,)``XXXxxxx3,3r`"</literal></expr>

,

<expr><literal type="string">"MASM`/``q_SAT``%` `XXXxxxx3,3r`, `cc,Tx`, `aaaaa,ACx` :: MOV`q_SAT` HI(`ccccc,ACx` &lt;&lt; T2), `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xDB</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp--aaaaa-YYYyyyy---ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + (`XXXxxxx,r` &lt;&lt; #16)`q_SAT,)`, `YYYyyyy,w` = `q_SAT,(`HI(`aaaaa,ACx` &lt;&lt; T2)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `XXXxxxx,r` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx` :: MOV`q_SAT` HI(`aaaaa,ACx` &lt;&lt; T2), `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xDC</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp--aaaaa-YYYyyyy---ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`(`XXXxxxx,r` &lt;&lt; #16) - `ccccc,ACx``q_SAT,)`, `YYYyyyy,w` = `q_SAT,(`HI(`aaaaa,ACx` &lt;&lt; T2)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `ccccc,ACx`, `XXXxxxx,r` &lt;&lt; #16, `aaaaa,ACx` :: MOV`q_SAT` HI(`aaaaa,ACx` &lt;&lt; T2), `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xDD</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp--aaaaa-YYYyyyy---ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``XXXxxxx,r` &lt;&lt; #16`q_SAT,)`, `YYYyyyy,w` = `q_SAT,(`HI(`ccccc,ACx` &lt;&lt; T2)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `XXXxxxx,r` &lt;&lt; #16, `aaaaa,ACx` :: MOV`q_SAT` HI(`ccccc,ACx` &lt;&lt; T2), `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xDE</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SDUAL__"</literal></expr>

,

<expr><literal type="string">"SDUAL__"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xDF</literal></expr>,

<expr><literal type="string">"OOOOOOOOpGFccccc"</literal></expr>

,

<expr><literal type="string">"`q_SAT,n`goto `ccccc,ACx``G``F`"</literal></expr>

,

<expr><literal type="string">"`q_SAT,N`B `ccccc,ACx``G``F`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE0</literal></expr>,

<expr><literal type="string">"OOOOOOOOpGFccccc"</literal></expr>

,

<expr><literal type="string">"call `ccccc,ACx``G``F`"</literal></expr>

,

<expr><literal type="string">"CALL `ccccc,ACx``G``F`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE1</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SWT_P_DA"</literal></expr>

,

<expr><literal type="string">"SWT_P_DA"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE2</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"reset"</literal></expr>

,

<expr><literal type="string">"RESET"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE3</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-kkkkk"</literal></expr>

,

<expr><literal type="string">"intr(`kkkkk`)"</literal></expr>

,

<expr><literal type="string">"INTR `kkkkk`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE4</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-kkkkk"</literal></expr>

,

<expr><literal type="string">"trap(`kkkkk`)"</literal></expr>

,

<expr><literal type="string">"TRAP `kkkkk`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE5</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"XCN_PMC_S"</literal></expr>

,

<expr><literal type="string">"XCN_PMC_S"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE6</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"XCN_PMU_S"</literal></expr>

,

<expr><literal type="string">"XCN_PMU_S"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE7</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"estop_0"</literal></expr>

,

<expr><literal type="string">"ESTOP_BYTE"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE8</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"MMAP"</literal></expr>

,

<expr><literal type="string">"MMAP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xE9</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"PORT_READ"</literal></expr>

,

<expr><literal type="string">"PORT_READ"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xEA</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"PORT_WRITE"</literal></expr>

,

<expr><literal type="string">"PORT_WRITE"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xEB</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"copr(`kkkkkkkk`, `aa,ACx`, `bb,ACx`)"</literal></expr>

,

<expr><literal type="string">"COPR__"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xEC</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"LINR"</literal></expr>

,

<expr><literal type="string">"LINR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xED</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"CIRC"</literal></expr>

,

<expr><literal type="string">"CIRC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xEE</literal></expr>,

<expr><literal type="string">"OOOOOOppHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) execute (AD_Unit)"</literal></expr>

,

<expr><literal type="string">"XCC `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xEF</literal></expr>,

<expr><literal type="string">"OOOOOOppHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) execute (D_Unit)"</literal></expr>

,

<expr><literal type="string">"XCCPART `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF0</literal></expr>,

<expr><literal type="string">"OOOOOOppHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) execute (AD_Unit)"</literal></expr>

,

<expr><literal type="string">"XCC `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF1</literal></expr>,

<expr><literal type="string">"OOOOOOppHHHhhhhh"</literal></expr>

,

<expr><literal type="string">"if (`HHHhhhhh`) execute (D_Unit)"</literal></expr>

,

<expr><literal type="string">"XCCPART `HHHhhhhh`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF2</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_RGM"</literal></expr>

,

<expr><literal type="string">"LD_RGM"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF3</literal></expr>,

<expr><literal type="string">"OOOOOOqqMMMMxxxxmm-aaaaa"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``MMMMxxxxmm,r` &lt;&lt; #16`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `MMMMxxxxmm,r` &lt;&lt; #16, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF4</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq--o--"</literal></expr>

,

<expr><literal type="string">"mar(`MMMMxxxxmm,r`)"</literal></expr>

,

<expr><literal type="string">"AMAR `MMMMxxxxmm,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF5</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-p---"</literal></expr>

,

<expr><literal type="string">"push(`MMMMxxxxmm,r`)"</literal></expr>

,

<expr><literal type="string">"PSH `MMMMxxxxmm,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF6</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm------"</literal></expr>

,

<expr><literal type="string">"delay(`MMMMxxxxmm`)"</literal></expr>

,

<expr><literal type="string">"DELAY `MMMMxxxxmm`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF7</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-p---"</literal></expr>

,

<expr><literal type="string">"push(dbl(`MMMMxxxxmm,dr`))"</literal></expr>

,

<expr><literal type="string">"PSH dbl(`MMMMxxxxmm,dr`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF8</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-p---"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,dw`) = pop()"</literal></expr>

,

<expr><literal type="string">"POP dbl(`MMMMxxxxmm,dw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xF9</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-p---"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,w` = pop()"</literal></expr>

,

<expr><literal type="string">"POP `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xFA</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"STH_RDM"</literal></expr>

,

<expr><literal type="string">"STH_RDM"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xFB</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_RGM"</literal></expr>

,

<expr><literal type="string">"ST_RGM"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xFC</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp$-------#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(``MMMMxxxxmm``$,)` * `#,(``ZZZzzzz``#,)``/,)``%,)``4,)``q_SAT,)``MMMMxxxxmm3,3`, delay(`MMMMxxxxmm`)"</literal></expr>

,

<expr><literal type="string">"MACMZ`/``q_SAT``%``4` `3``$,(``MMMMxxxxmm,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xFD</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MPY_R_MWK"</literal></expr>

,

<expr><literal type="string">"MPY_R_MWK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xFE</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAC_R_MP"</literal></expr>

,

<expr><literal type="string">"MAC_R_MP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0xFF</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAS_R_MP"</literal></expr>

,

<expr><literal type="string">"MAS_R_MP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x100</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAC_R_RM_A"</literal></expr>

,

<expr><literal type="string">"MAC_R_RM_A"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x101</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAS_R_RM_A"</literal></expr>

,

<expr><literal type="string">"MAS_R_RM_A"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x102</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp/ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` + `/`(`MMMMxxxxmm,r` * `MMMMxxxxmm,r`)`%,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"SQAM`/``q_SAT``%` `3``MMMMxxxxmm,r`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x103</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp/ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` - `/`(`MMMMxxxxmm,r` * `MMMMxxxxmm,r`)`%,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"SQSM`/``q_SAT``%` `3``MMMMxxxxmm,r`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x104</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MPY_R_RM_L"</literal></expr>

,

<expr><literal type="string">"MPY_R_RM_L"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x105</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp/-----"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``/,(``MMMMxxxxmm,r` * `MMMMxxxxmm,r``/,)``%,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"SQRM`/``q_SAT``%` `3``MMMMxxxxmm,r`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x106</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp$-----/CCccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``/,(``$,(``CCccccc,MRx` * `MMMMxxxxmm,r``$,)``/,)``%,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MPYM`/``q_SAT``%``$` `3``MMMMxxxxmm,r`, `CCccccc,MRx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x107</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp$ccccc/DDddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` + `/,(``$,(``DDddddd,MRx` * `MMMMxxxxmm,r``$,)``/,)``%,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MACM`/``q_SAT``%``$` `3``MMMMxxxxmm,r`, `DDddddd,MRx`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x108</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp$ccccc/DDddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` - `/,(``$,(``DDddddd,MRx` * `MMMMxxxxmm,r``$,)``/,)``%,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MASM`/``q_SAT``%``$` `3``MMMMxxxxmm,r`, `DDddddd,MRx`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x109</literal></expr>,

<expr><literal type="string">"OOOOOoppMMMMxxxxmmAaaaaaACCccccc"</literal></expr>

,

<expr><literal type="string">"`AaaaaaA,!` = `q_SAT,(``CCccccc,Rx` + `MMMMxxxxmm,r``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `MMMMxxxxmm,r`, `CCccccc,Rx`, `AaaaaaA,!`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x10A</literal></expr>,

<expr><literal type="string">"OOOOOoppMMMMxxxxmmAaaaaaACCccccc"</literal></expr>

,

<expr><literal type="string">"`AaaaaaA,!` = `q_SAT,(``CCccccc,Rx` - `MMMMxxxxmm,r``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `MMMMxxxxmm,r`, `CCccccc,Rx`, `AaaaaaA,!`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x10B</literal></expr>,

<expr><literal type="string">"OOOOOoppMMMMxxxxmmAaaaaaACCccccc"</literal></expr>

,

<expr><literal type="string">"`AaaaaaA,!` = `q_SAT,(``MMMMxxxxmm,r` - `CCccccc,Rx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `CCccccc,Rx`, `MMMMxxxxmm,r`, `AaaaaaA,!`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x10C</literal></expr>,

<expr><literal type="string">"OOOOOoppMMMMxxxxmmAaaaaaACCccccc"</literal></expr>

,

<expr><literal type="string">"`AaaaaaA,!` = `CCccccc,Rx` &amp; `MMMMxxxxmm,r`"</literal></expr>

,

<expr><literal type="string">"AND`q_SAT` `MMMMxxxxmm,r`, `CCccccc,Rx`, `AaaaaaA,!`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x10D</literal></expr>,

<expr><literal type="string">"OOOOOoppMMMMxxxxmmAaaaaaACCccccc"</literal></expr>

,

<expr><literal type="string">"`AaaaaaA,!` = `CCccccc,Rx` | `MMMMxxxxmm,r`"</literal></expr>

,

<expr><literal type="string">"OR`q_SAT` `MMMMxxxxmm,r`, `CCccccc,Rx`, `AaaaaaA,!`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x10E</literal></expr>,

<expr><literal type="string">"OOOOOoppMMMMxxxxmmAaaaaaACCccccc"</literal></expr>

,

<expr><literal type="string">"`AaaaaaA,!` = `CCccccc,Rx` ^ `MMMMxxxxmm,r`"</literal></expr>

,

<expr><literal type="string">"XOR`q_SAT` `MMMMxxxxmm,r`, `CCccccc,Rx`, `AaaaaaA,!`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x10F</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo------kkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(`MMMMxxxxmm,r`, `kkkk`)"</literal></expr>

,

<expr><literal type="string">"BTST `kkkk`, `MMMMxxxxmm,r`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x110</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"BIT_MBT_K2"</literal></expr>

,

<expr><literal type="string">"BIT_MBT_K2"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x111</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_DP"</literal></expr>

,

<expr><literal type="string">"LD_DP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x112</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_CDP"</literal></expr>

,

<expr><literal type="string">"LD_CDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x113</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BOF01"</literal></expr>

,

<expr><literal type="string">"LD_BOF01"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x114</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BOF23"</literal></expr>

,

<expr><literal type="string">"LD_BOF23"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x115</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BOF45"</literal></expr>

,

<expr><literal type="string">"LD_BOF45"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x116</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BOF67"</literal></expr>

,

<expr><literal type="string">"LD_BOF67"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x117</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BOFC"</literal></expr>

,

<expr><literal type="string">"LD_BOFC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x118</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_SP"</literal></expr>

,

<expr><literal type="string">"LD_SP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x119</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_SSP"</literal></expr>

,

<expr><literal type="string">"LD_SSP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x11A</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK03"</literal></expr>

,

<expr><literal type="string">"LD_BK03"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x11B</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BK47"</literal></expr>

,

<expr><literal type="string">"LD_BK47"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x11C</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BKC"</literal></expr>

,

<expr><literal type="string">"LD_BKC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x11D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_MDP"</literal></expr>

,

<expr><literal type="string">"LD_MDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x11E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_MDP05"</literal></expr>

,

<expr><literal type="string">"LD_MDP05"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x11F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_MDP67"</literal></expr>

,

<expr><literal type="string">"LD_MDP67"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x120</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_PDP"</literal></expr>

,

<expr><literal type="string">"LD_PDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x121</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_CSR"</literal></expr>

,

<expr><literal type="string">"LD_CSR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x122</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BRC0"</literal></expr>

,

<expr><literal type="string">"LD_BRC0"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x123</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_BRC1"</literal></expr>

,

<expr><literal type="string">"LD_BRC1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x124</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_TRN0"</literal></expr>

,

<expr><literal type="string">"LD_TRN0"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x125</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LD_TRN1"</literal></expr>

,

<expr><literal type="string">"LD_TRN1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x126</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaa-p-ccccc-NNnnnnn"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + (`MMMMxxxxmm,r` &lt;&lt; `NNnnnnn,SRx`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `MMMMxxxxmm,r` &lt;&lt; `NNnnnnn,SRx`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x127</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaa-p-ccccc-NNnnnnn"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - (`MMMMxxxxmm,r` &lt;&lt; `NNnnnnn,SRx`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `MMMMxxxxmm,r` &lt;&lt; `NNnnnnn,SRx`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x128</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc-NNnnnnn"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = ads2c`q_SAT,a`(`MMMMxxxxmm,r`, `ccccc,ACx`, `NNnnnnn,SRx`, TC1, TC2)"</literal></expr>

,

<expr><literal type="string">"ADDSUB2CC`q_SAT` `MMMMxxxxmm,r`, `ccccc,ACx`, `NNnnnnn,SRx`, TC1, TC2, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x129</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm%aaaaa-p$----q-NNnnnnn"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `NNnnnnn,SRx``%,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `%,(``$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `NNnnnnn,SRx``%,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x12A</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTaaaaapp-ccccc--------"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = adsc`q_SAT,a`(`MMMMxxxxmm,r`, `ccccc,ACx`, `T`)"</literal></expr>

,

<expr><literal type="string">"ADDSUBCC`q_SAT` `MMMMxxxxmm,r`, `ccccc,ACx`, `T`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x12B</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ADSC_RM_2"</literal></expr>

,

<expr><literal type="string">"ADSC_RM_2"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x12C</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc--------"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = adsc`q_SAT,a`(`MMMMxxxxmm,r`, `ccccc,ACx`, TC1, TC2)"</literal></expr>

,

<expr><literal type="string">"ADDSUBCC`q_SAT` `MMMMxxxxmm,r`, `ccccc,ACx`, TC1, TC2, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x12D</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc--------"</literal></expr>

,

<expr><literal type="string">"subc(`MMMMxxxxmm,r`, `ccccc,ACx`, `aaaaa,ACx`)"</literal></expr>

,

<expr><literal type="string">"SUBC `MMMMxxxxmm,r`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x12E</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + (`MMMMxxxxmm,r` &lt;&lt; #16)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `MMMMxxxxmm,r` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x12F</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - (`MMMMxxxxmm,r` &lt;&lt; #16)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `MMMMxxxxmm,r` &lt;&lt; #16, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x130</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`(`MMMMxxxxmm,r` &lt;&lt; #16) - `ccccc,ACx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `ccccc,ACx`, `MMMMxxxxmm,r` &lt;&lt; #16, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x131</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaa-po100cc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(``MMMMxxxxmm,r` + `cc,Tx``q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(``MMMMxxxxmm,r` - `cc,Tx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADDSUB`q_SAT` `cc,Tx`, `MMMMxxxxmm,r`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x132</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaa-po100cc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(``MMMMxxxxmm,r` - `cc,Tx``q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(``MMMMxxxxmm,r` + `cc,Tx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUBADD`q_SAT` `cc,Tx`, `MMMMxxxxmm,r`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x133</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaapp$---AA"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `$,(`high_byte(`MMMMxxxxmm,r`)`$,)`"</literal></expr>

,

<expr><literal type="string">"MOV `$,(`high_byte(`MMMMxxxxmm,r`)`$,)`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x134</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaapp$---AA"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = `$,(`low_byte(`MMMMxxxxmm,r`)`$,)`"</literal></expr>

,

<expr><literal type="string">"MOV `$,(`low_byte(`MMMMxxxxmm,r`)`$,)`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x135</literal></expr>,

<expr><literal type="string">"OOOOOOqqMMMMxxxxmm$aaaaa"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `$,(``MMMMxxxxmm,r``$,)`"</literal></expr>

,

<expr><literal type="string">"MOV `$,(``MMMMxxxxmm,r``$,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x136</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaappoccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + `$,(``MMMMxxxxmm,r``$,)` + Carry`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `$,(``MMMMxxxxmm,r``$,)`, CARRY, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x137</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaappoccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - uns(`MMMMxxxxmm,r`) - Borrow`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `$,(``MMMMxxxxmm,r``$,)`, BORROW, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x138</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm1aaaaappoccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + uns(`MMMMxxxxmm,r`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` uns(`MMMMxxxxmm,r`), `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x139</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm1aaaaappoccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - uns(`MMMMxxxxmm,r`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` uns(`MMMMxxxxmm,r`), `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x13A</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTcccccppo---CC"</literal></expr>

,

<expr><literal type="string">"`T` = bit(`MMMMxxxxmm,r`, `CCccccc,RLHx`)"</literal></expr>

,

<expr><literal type="string">"BTST `CCccccc,RLHx`, `MMMMxxxxmm,r`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x13B</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaa-p-----q--SSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`low_byte(`MMMMxxxxmm,r`) &lt;&lt; `SSSSSS``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` low_byte(`MMMMxxxxmm,r`) &lt;&lt; `SSSSSS`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x13C</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaa-p-----q--SSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`high_byte(`MMMMxxxxmm,r`) &lt;&lt; `SSSSSS``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` high_byte(`MMMMxxxxmm,r`) &lt;&lt; `SSSSSS`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x13D</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo------kkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(`MMMMxxxxmm,rw`, `kkkk`), bit(`MMMMxxxxmm,rw`, `kkkk`) = #1"</literal></expr>

,

<expr><literal type="string">"BTSTSET `kkkk`, `MMMMxxxxmm,rw`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x13E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SMBX_MS_2"</literal></expr>

,

<expr><literal type="string">"SMBX_MS_2"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x13F</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo------kkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(`MMMMxxxxmm,rw`, `kkkk`), bit(`MMMMxxxxmm,rw`, `kkkk`) = #0"</literal></expr>

,

<expr><literal type="string">"BTSTCLR `kkkk`, `MMMMxxxxmm,rw`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x140</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"RMBX_MR_2"</literal></expr>

,

<expr><literal type="string">"RMBX_MR_2"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x141</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo------kkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(`MMMMxxxxmm,rw`, `kkkk`), cbit(`MMMMxxxxmm,rw`, `kkkk`)"</literal></expr>

,

<expr><literal type="string">"BTSTNOT `kkkk`, `MMMMxxxxmm,rw`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x142</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"CMBX_MC_2"</literal></expr>

,

<expr><literal type="string">"CMBX_MC_2"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x143</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqcccccppo---CC"</literal></expr>

,

<expr><literal type="string">"bit(`MMMMxxxxmm,r`, `CCccccc,RLHx`) = #1"</literal></expr>

,

<expr><literal type="string">"BSET `CCccccc,RLHx`, `MMMMxxxxmm,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x144</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqcccccppo---CC"</literal></expr>

,

<expr><literal type="string">"bit(`MMMMxxxxmm,r`, `CCccccc,RLHx`) = #0"</literal></expr>

,

<expr><literal type="string">"BCLR `CCccccc,RLHx`, `MMMMxxxxmm,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x145</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-cccccppo---CC"</literal></expr>

,

<expr><literal type="string">"cbit(`MMMMxxxxmm,rw`, `CCccccc,RLHx`)"</literal></expr>

,

<expr><literal type="string">"BNOT `CCccccc,RLHx`, `MMMMxxxxmm,rw`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x146</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-ccccc-p----CC"</literal></expr>

,

<expr><literal type="string">"push(`CCccccc,RLHx`, `MMMMxxxxmm,r`)"</literal></expr>

,

<expr><literal type="string">"PSH `CCccccc,RLHx`, `MMMMxxxxmm,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x147</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaa-p----AA"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,RLHx`, `MMMMxxxxmm,w` = pop()"</literal></expr>

,

<expr><literal type="string">"POP `AAaaaaa,RLHx`, `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x148</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_COPR"</literal></expr>

,

<expr><literal type="string">"ST_COPR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x149</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqcccccpp----CC"</literal></expr>

,

<expr><literal type="string">"high_byte(`MMMMxxxxmm,w`) = `CCccccc,Rx`"</literal></expr>

,

<expr><literal type="string">"MOV `CCccccc,Rx`, high_byte(`MMMMxxxxmm,w`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x14A</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqcccccpp----CC"</literal></expr>

,

<expr><literal type="string">"low_byte(`MMMMxxxxmm,w`) = `CCccccc,Rx`"</literal></expr>

,

<expr><literal type="string">"MOV `CCccccc,Rx`, low_byte(`MMMMxxxxmm,w`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x14B</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_DP"</literal></expr>

,

<expr><literal type="string">"ST_DP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x14C</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_CDP"</literal></expr>

,

<expr><literal type="string">"ST_CDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x14D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BOF01"</literal></expr>

,

<expr><literal type="string">"ST_BOF01"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x14E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BOF23"</literal></expr>

,

<expr><literal type="string">"ST_BOF23"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x14F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BOF45"</literal></expr>

,

<expr><literal type="string">"ST_BOF45"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x150</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BOF67"</literal></expr>

,

<expr><literal type="string">"ST_BOF67"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x151</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BOFC"</literal></expr>

,

<expr><literal type="string">"ST_BOFC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x152</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_SP"</literal></expr>

,

<expr><literal type="string">"ST_SP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x153</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_SSP"</literal></expr>

,

<expr><literal type="string">"ST_SSP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x154</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BK03"</literal></expr>

,

<expr><literal type="string">"ST_BK03"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x155</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BK47"</literal></expr>

,

<expr><literal type="string">"ST_BK47"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x156</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BKC"</literal></expr>

,

<expr><literal type="string">"ST_BKC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x157</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_MDP"</literal></expr>

,

<expr><literal type="string">"ST_MDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x158</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_MDP05"</literal></expr>

,

<expr><literal type="string">"ST_MDP05"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x159</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_MDP67"</literal></expr>

,

<expr><literal type="string">"ST_MDP67"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x15A</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_PDP"</literal></expr>

,

<expr><literal type="string">"ST_PDP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x15B</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_CSR"</literal></expr>

,

<expr><literal type="string">"ST_CSR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x15C</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BRC0"</literal></expr>

,

<expr><literal type="string">"ST_BRC0"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x15D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_BRC1"</literal></expr>

,

<expr><literal type="string">"ST_BRC1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x15E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_TRN0"</literal></expr>

,

<expr><literal type="string">"ST_TRN0"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x15F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_TRN1"</literal></expr>

,

<expr><literal type="string">"ST_TRN1"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x160</literal></expr>,

<expr><literal type="string">"OOOOOoKKMMMMxxxxmmKKKKKK"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,w` = `KKKKKKKK`"</literal></expr>

,

<expr><literal type="string">"MOV `KKKKKKKK`, `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x161</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_RM_ASM"</literal></expr>

,

<expr><literal type="string">"ST_RM_ASM"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x162</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"STH_R_RM_ASM"</literal></expr>

,

<expr><literal type="string">"STH_R_RM_ASM"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x163</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm%ccccc@p$---Iq-NNnnnnn"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,w` = `I`(`@,(``$,(``%,(``ccccc,ACx` &lt;&lt; `NNnnnnn,SRx``%,)``$,)``@,)`)"</literal></expr>

,

<expr><literal type="string">"MOV `$,(``%,(``I`(`@,(``ccccc,ACx` &lt;&lt; `NNnnnnn,SRx``@,)`)`%,)``$,)`, `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x164</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"STH_R_RM"</literal></expr>

,

<expr><literal type="string">"STH_R_RM"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x165</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm%ccccc@p$---Iq"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,w` = `I`(`@,(``$,(``%,(``ccccc,ACx``%,)``$,)``@,)`)"</literal></expr>

,

<expr><literal type="string">"MOV `$,(``%,(``I`(`@,(``ccccc,ACx``@,)`)`%,)``$,)`, `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x166</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ST_RM_SH"</literal></expr>

,

<expr><literal type="string">"ST_RM_SH"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x167</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"STH_RM_SH"</literal></expr>

,

<expr><literal type="string">"STH_RM_SH"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x168</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_COPR"</literal></expr>

,

<expr><literal type="string">"DST_COPR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x169</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_RPC"</literal></expr>

,

<expr><literal type="string">"DST_RPC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x16A</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_XR"</literal></expr>

,

<expr><literal type="string">"DST_XR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x16B</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_RDLM"</literal></expr>

,

<expr><literal type="string">"DST_RDLM"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x16C</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm%ccccc@p$----q"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,dw`) = `@,(``$,(``%,(``ccccc,ACx``%,)``$,)``@,)`"</literal></expr>

,

<expr><literal type="string">"MOV `$,(``%,(``@,(``ccccc,ACx``@,)``%,)``$,)`, dbl(`MMMMxxxxmm,dw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x16D</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqccccc-p----CC"</literal></expr>

,

<expr><literal type="string">"HI(`MMMMxxxxmm,dw`) = `CCccccc,RL`, LO(`MMMMxxxxmm,dw`) = `CCccccc,RLP`"</literal></expr>

,

<expr><literal type="string">"MOV pair(`CCccccc,RLHx`), dbl(`MMMMxxxxmm,dw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x16E</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-ccccc"</literal></expr>

,

<expr><literal type="string">"HI(`MMMMxxxxmm,w`) = HI(`ccccc,ACx`) &gt;&gt; #1, LO(`MMMMxxxxmm,w`) = LO(`ccccc,ACx`) &gt;&gt; #1"</literal></expr>

,

<expr><literal type="string">"MOV `ccccc,ACx` &gt;&gt; #1, dbl(`MMMMxxxxmm,w`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x16F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_RDLM_HI"</literal></expr>

,

<expr><literal type="string">"DST_RDLM_HI"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x170</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_RDLM_LO"</literal></expr>

,

<expr><literal type="string">"DST_RDLM_LO"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x171</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaappo---AA"</literal></expr>

,

<expr><literal type="string">"bit(`AAaaaaa,Rx`, `MMMMxxxxmm,baddr`) = #1"</literal></expr>

,

<expr><literal type="string">"BSET `MMMMxxxxmm,baddr`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x172</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaappo---AA"</literal></expr>

,

<expr><literal type="string">"bit(`AAaaaaa,Rx`, `MMMMxxxxmm,baddr`) = #0"</literal></expr>

,

<expr><literal type="string">"BCLR `MMMMxxxxmm,baddr`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x173</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-cccccppo---CC"</literal></expr>

,

<expr><literal type="string">"TC1,TC2 = bit(`CCccccc,Rx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"BTSTP `MMMMxxxxmm,baddr`, `CCccccc,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x174</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaappo---AA"</literal></expr>

,

<expr><literal type="string">"cbit(`AAaaaaa,Rx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"BNOT `MMMMxxxxmm,baddr`, `AAaaaaa,Rx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x175</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTcccccppo---CC"</literal></expr>

,

<expr><literal type="string">"`T` = bit(`CCccccc,Rx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"BTST `MMMMxxxxmm,baddr`, `CCccccc,Rx`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x176</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmoaaaaa"</literal></expr>

,

<expr><literal type="string">"`aaaaa,XDAx` = mar(`MMMMxxxxmm,r`)"</literal></expr>

,

<expr><literal type="string">"AMAR `MMMMxxxxmm,r`, `aaaaa,XDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x177</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + dbl(`MMMMxxxxmm,dr`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` dbl(`MMMMxxxxmm,dr`), `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x178</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - dbl(`MMMMxxxxmm,dr`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` dbl(`MMMMxxxxmm,dr`), `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x179</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp-ccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`dbl(`MMMMxxxxmm,dr`) - `ccccc,ACx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `ccccc,ACx`, dbl(`MMMMxxxxmm,dr`), `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x17A</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DLD_RPC"</literal></expr>

,

<expr><literal type="string">"DLD_RPC"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x17B</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm4aaaaa"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(`dbl(`MMMMxxxxmm,dr`)`4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT``4` dbl(`MMMMxxxxmm,dr`), `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x17C</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaa-p----00"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(`HI(`MMMMxxxxmm,dr`)&lt;&lt;#16`q_SAT,)`, `aaaaa,ACxP` = `q_SAT,(`LO(`MMMMxxxxmm,dr`)&lt;&lt;#16`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` dbl(`MMMMxxxxmm,dr`), pair(HI(`aaaaa,ACx`))"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x17D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DLD_RDLM_LO"</literal></expr>

,

<expr><literal type="string">"DLD_RDLM_LO"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x17E</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaa-p----AA"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,Rx` = HI(`MMMMxxxxmm,dr`), `AAaaaaa,RxP` = LO(`MMMMxxxxmm,dr`)"</literal></expr>

,

<expr><literal type="string">"MOV dbl(`MMMMxxxxmm,dr`), pair(`AAaaaaa,RLHx`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x17F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DLD_XR"</literal></expr>

,

<expr><literal type="string">"DLD_XR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x180</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaappoccccc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(`HI(`MMMMxxxxmm,r`) + HI(`ccccc,ACx`)`q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(`LO(`MMMMxxxxmm,r`) + LO(`ccccc,ACx`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` dual(`MMMMxxxxmm,r`), `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x181</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaappoccccc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(`HI(`ccccc,ACx`) - HI(`MMMMxxxxmm,r`)`q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(`LO(`ccccc,ACx`) - LO(`MMMMxxxxmm,r`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` dual(`MMMMxxxxmm,r`), `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x182</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaappoccccc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(`HI(`MMMMxxxxmm,r`) - HI(`ccccc,ACx`)`q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(`LO(`MMMMxxxxmm,r`) - LO(`ccccc,ACx`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `ccccc,ACx`, dual(`MMMMxxxxmm,r`), `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x183</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaappo100cc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(``cc,Tx` - HI(`MMMMxxxxmm,r`)`q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(``cc,Tx` - LO(`MMMMxxxxmm,r`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` dual(`MMMMxxxxmm,r`), `cc,Tx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x184</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaappo100cc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(`HI(`MMMMxxxxmm,r`) + `cc,Tx``q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(`LO(`MMMMxxxxmm,r`) + `cc,Tx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` dual(`MMMMxxxxmm,r`), `cc,Tx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x185</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaappo100cc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(`HI(`MMMMxxxxmm,r`) - `cc,Tx``q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(`LO(`MMMMxxxxmm,r`) - `cc,Tx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `cc,Tx`, dual(`MMMMxxxxmm,r`), `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x186</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaa-po100cc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(`HI(`MMMMxxxxmm,r`) + `cc,Tx``q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(`LO(`MMMMxxxxmm,r`) - `cc,Tx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADDSUB`q_SAT` `cc,Tx`, dual(`MMMMxxxxmm,r`), `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x187</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqaaaaa-po100cc"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(`HI(`MMMMxxxxmm,r`) - `cc,Tx``q_SAT,)`, LO(`aaaaa,ACx`) = `q_SAT,(`LO(`MMMMxxxxmm,r`) + `cc,Tx``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUBADD`q_SAT` `cc,Tx`, dual(`MMMMxxxxmm,r`), `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x188</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-po---YYYyyyy"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,w` = `YYYyyyy,r`"</literal></expr>

,

<expr><literal type="string">"MOV `YYYyyyy,r`, `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x189</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-po---YYYyyyy"</literal></expr>

,

<expr><literal type="string">"`YYYyyyy,w` = `MMMMxxxxmm,r`"</literal></expr>

,

<expr><literal type="string">"MOV `MMMMxxxxmm,r`, `YYYyyyy,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x18A</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-po---YYYyyyy"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,dw`) = dbl(`YYYyyyy,r`)"</literal></expr>

,

<expr><literal type="string">"MOV dbl(`YYYyyyy,r`), dbl(`MMMMxxxxmm,dw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x18B</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-po---YYYyyyy"</literal></expr>

,

<expr><literal type="string">"dbl(`YYYyyyy,w`) = dbl(`MMMMxxxxmm,dr`)"</literal></expr>

,

<expr><literal type="string">"MOV dbl(`MMMMxxxxmm,dr`), dbl(`YYYyyyy,w`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x18C</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmT-poJJKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`T` = (`MMMMxxxxmm,r` `JJ` `KKKKKKKKKKKKKKKK`)"</literal></expr>

,

<expr><literal type="string">"CMP `MMMMxxxxmm,r` `JJ` `KKKKKKKKKKKKKKKK`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x18D</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"CMPM_MWK_2"</literal></expr>

,

<expr><literal type="string">"CMPM_MWK_2"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x18E</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmT-p---kkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`T` = `MMMMxxxxmm,r` &amp; `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"BAND `MMMMxxxxmm,r`, `kkkkkkkkkkkkkkkk`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x18F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"BITF_MWK_2"</literal></expr>

,

<expr><literal type="string">"BITF_MWK_2"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x190</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--kkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,rw` = `MMMMxxxxmm,rw` &amp; `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"AND `kkkkkkkkkkkkkkkk`, `MMMMxxxxmm,rw`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x191</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--kkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,rw` = `MMMMxxxxmm,rw` | `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"OR `kkkkkkkkkkkkkkkk`, `MMMMxxxxmm,rw`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x192</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--kkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,rw` = `MMMMxxxxmm,rw` ^ `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"XOR `kkkkkkkkkkkkkkkk`, `MMMMxxxxmm,rw`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x193</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--KKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,rw` = `q_SAT,(``MMMMxxxxmm,rw` + `KKKKKKKKKKKKKKKK``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `KKKKKKKKKKKKKKKK`, `MMMMxxxxmm,rw`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x194</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaa-p/-----KKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `%,(``/,(``MMMMxxxxmm,r` * `KKKKKKKK``/,)``%,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MPYMK`/``%` `3``MMMMxxxxmm,r`, `KKKKKKKK`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x195</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaa-p/cccccKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``%,(``ccccc,ACx` + `/,(``MMMMxxxxmm,r` * `KKKKKKKK``/,)``%,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MACMK`/``q_SAT``%` `3``MMMMxxxxmm,r`, `KKKKKKKK`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x196</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaapp-cccccqqSSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + (`$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `SSSSSS`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `SSSSSS`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x197</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaapp-cccccqqSSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - (`$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `SSSSSS`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `SSSSSS`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x198</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaapp------qqSSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `SSSSSS``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `$,(``MMMMxxxxmm,r``$,)` &lt;&lt; `SSSSSS`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x199</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"STHS_RM_SHS"</literal></expr>

,

<expr><literal type="string">"STHS_RM_SHS"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x19A</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm%ccccc@p$---Iq--SSSSSS"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,w` = `I`(`@,(``$,(``%,(``ccccc,ACx` &lt;&lt; `SSSSSS``%,)``$,)``@,)`)"</literal></expr>

,

<expr><literal type="string">"MOV `$,(``%,(``I`(`@,(``ccccc,ACx` &lt;&lt; `SSSSSS``@,)`)`%,)``$,)`, `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x19B</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--iiiiiiiiiiiiiiii"</literal></expr>

,

<expr><literal type="string">"`MMMMxxxxmm,w` = `iiiiiiiiiiiiiiii`"</literal></expr>

,

<expr><literal type="string">"MOV `iiiiiiiiiiiiiiii`, `MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x19C</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm------LLLLLLLLLLLLLLLL"</literal></expr>

,

<expr><literal type="string">"if (`MMMMxxxxmm,r` != #0) goto `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"BCC `LLLLLLLLLLLLLLLL`, `MMMMxxxxmm,r` != #0"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x19D</literal></expr>,

<expr><literal type="string">"OOOOOOOop-Aaaaaap-Cccccc"</literal></expr>

,

<expr><literal type="string">"`Aaaaaa,XRx` = `Cccccc,XRx`"</literal></expr>

,

<expr><literal type="string">"MOV `Cccccc,XRx`, `Aaaaaa,XRx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x19E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"FAR"</literal></expr>

,

<expr><literal type="string">"FAR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x19F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"LOCAL"</literal></expr>

,

<expr><literal type="string">"LOCAL"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_XAR_AX"</literal></expr>

,

<expr><literal type="string">"MAR_XAR_AX"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A1</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_XAR_MX"</literal></expr>

,

<expr><literal type="string">"MAR_XAR_MX"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A2</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_XAR_SX"</literal></expr>

,

<expr><literal type="string">"MAR_XAR_SX"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A3</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_XAR_AY"</literal></expr>

,

<expr><literal type="string">"MAR_XAR_AY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A4</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_XAR_MY"</literal></expr>

,

<expr><literal type="string">"MAR_XAR_MY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A5</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAR_XAR_SY"</literal></expr>

,

<expr><literal type="string">"MAR_XAR_SY"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A6</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"USR"</literal></expr>

,

<expr><literal type="string">"USR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A7</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MMAP_USR"</literal></expr>

,

<expr><literal type="string">"MMAP_USR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A8</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"LOCK"</literal></expr>

,

<expr><literal type="string">"LOCK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1A9</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"BR_USR"</literal></expr>

,

<expr><literal type="string">"BR_USR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1AA</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp--aaaaa1YYYyyyy/--bbbbb"</literal></expr>

,

<expr><literal type="string">"lmsf`/,a``q_SAT,a`(`XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`)"</literal></expr>

,

<expr><literal type="string">"LMSF`/``q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `aaaaa,ACx`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1AB</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp$-------#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(``ZZZzzzz,r``#,)``/,)``%,)``4,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MPYM`/``q_SAT``%``4` `3``$,(``MMMMxxxxmm,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1AC</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp$-------#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(``ZZZzzzz,r``#,)``/,)``%,)``4,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MACM`/``q_SAT``%``4` `3``$,(``MMMMxxxxmm,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1AD</literal></expr>,

<expr><literal type="string">"OOOOOOO3MMMMxxxxmm%aaaaapp$-------#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(``ZZZzzzz,r``#,)``/,)``%,)``4,)``q_SAT,)``MMMMxxxxmm3,3r`"</literal></expr>

,

<expr><literal type="string">"MASM`/``q_SAT``%``4` `3``$,(``MMMMxxxxmm,r``$,)`, `#,(``ZZZzzzz,r``#,)`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1AE</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1AF</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B0</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B1</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B2</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B3</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B4</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B5</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B6</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`aaaaa,ACx` &gt;&gt; #16) + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` &gt;&gt; #16 :: MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B7</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B8</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1B9</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`aaaaa,ACx` &gt;&gt; #16) + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` &gt;&gt; #16 :: MAC`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1BA</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/`(`$,(``MMMMxxxxmm,r``$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(``MMMMxxxxmm,r``$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1BB</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1BC</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1BD</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1BE</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1BF</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C0</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C1</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C2</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C3</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`aaaaa,ACx` &gt;&gt; #16) + `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` &gt;&gt; #16 :: MAC`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C4</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C5</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C6</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(`(`aaaaa,ACx` &gt;&gt; #16) + `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(`(`bbbbb,ACx` &gt;&gt; #16) + `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` &gt;&gt; #16 :: MAC`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx` &gt;&gt; #16"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C7</literal></expr>,

<expr><literal type="string">"OOOOOOOoMMMMxxxxmm%aaaaapp$bbbbbqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/`(`$,(`LO(`MMMMxxxxmm,r`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/`(`$,(`HI(`MMMMxxxxmm,r`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)`)`%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(`LO(`MMMMxxxxmm,r`)`$,)`, `#,(`LO(`ZZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(`HI(`MMMMxxxxmm,r`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C8</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DBLCOEF"</literal></expr>

,

<expr><literal type="string">"DBLCOEF"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1C9</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-aaaaakkkkkkkkkkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"mar(`aaaaa,XDAx` + `kkkkkkkkkkkkkkkkkkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"AADD `kkkkkkkkkkkkkkkkkkkkkkkk`, `aaaaa,XDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1CA</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-aaaaakkkkkkkkkkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"mar(`aaaaa,XDAx` = `kkkkkkkkkkkkkkkkkkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"AMOV `kkkkkkkkkkkkkkkkkkkkkkkk`, `aaaaa,XDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1CB</literal></expr>,

<expr><literal type="string">"OOOOOOOOpp-aaaaakkkkkkkkkkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"mar(`aaaaa,XDAx` - `kkkkkkkkkkkkkkkkkkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"ASUB `kkkkkkkkkkkkkkkkkkkkkkkk`, `aaaaa,XDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1CC</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq--o--"</literal></expr>

,

<expr><literal type="string">"mar(byte(`MMMMxxxxmm,br`))"</literal></expr>

,

<expr><literal type="string">"AMAR byte(`MMMMxxxxmm,br`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1CD</literal></expr>,

<expr><literal type="string">"OOOOOOO$JCCcccccJDDdddddLLLLLLLLLLLLLLLL"</literal></expr>

,

<expr><literal type="string">"compare (`$,(``CCccccc,RAx` `JJ` `DDddddd,RAx``$,)`) goto `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"BCC`$` `LLLLLLLLLLLLLLLL`, `CCccccc,RAx` `JJ` `DDddddd,RAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1CE</literal></expr>,

<expr><literal type="string">"OOOOOOqqMMMMxxxxmm$aaaaa"</literal></expr>

,

<expr><literal type="string">"HI(`aaaaa,ACx`) = `q_SAT,(``$,(``MMMMxxxxmm,r``$,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `$,(``MMMMxxxxmm,r``$,)`, `aaaaa,ACx`.H"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1CF</literal></expr>,

<expr><literal type="string">"OOOOOOqqMMMMxxxxmm$aaaaa"</literal></expr>

,

<expr><literal type="string">"LO(`aaaaa,ACx`) = `q_SAT,(``$,(``MMMMxxxxmm,r``$,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `$,(``MMMMxxxxmm,r``$,)`, `aaaaa,ACx`.L"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D0</literal></expr>,

<expr><literal type="string">"OOOOOpAAMMMMxxxxmmAaaaaa"</literal></expr>

,

<expr><literal type="string">"copy(`AAAaaaaa,ALLx` = `AAAaaaaa,d(ALLx``MMMMxxxxmm,!AAAaaaaa!r``AAAaaaaa,)ALLx`)"</literal></expr>

,

<expr><literal type="string">"COPY `AAAaaaaa,d(ALLx``MMMMxxxxmm,!AAAaaaaa!r``AAAaaaaa,)ALLx`, `AAAaaaaa,ALLx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D1</literal></expr>,

<expr><literal type="string">"OOOOOOOOAAAaaaaakkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`AAAaaaaa,ADRx` = `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"MOV `kkkkkkkkkkkkkkkk`, `AAAaaaaa,ADRx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D2</literal></expr>,

<expr><literal type="string">"OOOOOOOpAAAaaaaakkkkkkkkkkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"copy(`AAAaaaaa,ALLx` = `AAAaaaaa,d(ALLx``kkkkkkkkkkkkkkkkkkkkkkkk,m``AAAaaaaa,)ALLx`)"</literal></expr>

,

<expr><literal type="string">"COPY `AAAaaaaa,d(ALLx``kkkkkkkkkkkkkkkkkkkkkkkk,m``AAAaaaaa,)ALLx`, `AAAaaaaa,ALLx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D3</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaapp$---AA"</literal></expr>

,

<expr><literal type="string">"`AAaaaaa,RA` = `$,(`byte(`MMMMxxxxmm,br`)`$,)`"</literal></expr>

,

<expr><literal type="string">"MOV `$,(`byte(`MMMMxxxxmm,br`)`$,)`, `AAaaaaa,RA`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D4</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MV_COPR"</literal></expr>

,

<expr><literal type="string">"MV_COPR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D5</literal></expr>,

<expr><literal type="string">"OOOOOOOop00aaaaapCCccccc"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``CCccccc,RLHx` &lt;&lt; #16`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `CCccccc,RLHx` &lt;&lt; #16, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D6</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-po---YYYyyyy"</literal></expr>

,

<expr><literal type="string">"byte(`MMMMxxxxmm,bw`) = byte(`YYYyyyy,r`)"</literal></expr>

,

<expr><literal type="string">"MOV byte(`YYYyyyy,r`), byte(`MMMMxxxxmm,bw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D7</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmq-po---YYYyyyy"</literal></expr>

,

<expr><literal type="string">"byte(`YYYyyyy,w`) = byte(`MMMMxxxxmm,br`)"</literal></expr>

,

<expr><literal type="string">"MOV byte(`MMMMxxxxmm,br`), byte(`YYYyyyy,w`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D8</literal></expr>,

<expr><literal type="string">"OOOOOOOOpCCcccccpkkkkkkko-$-JJ-T"</literal></expr>

,

<expr><literal type="string">"`T` = `$`(`CCccccc,Rx` `JJ` `kkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"CMP`$` `CCccccc,Rx` `JJ` `kkkkkkk`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1D9</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp1Aaaaaa-YYYyyyy"</literal></expr>

,

<expr><literal type="string">"`Aaaaaa,ACLHx` = `q_SAT,(``XXXxxxx,r` + `YYYyyyy,r``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `Aaaaaa,ACLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1DA</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp1Aaaaaa-YYYyyyy"</literal></expr>

,

<expr><literal type="string">"`Aaaaaa,ACLHx` = `q_SAT,(``XXXxxxx,r` - `YYYyyyy,r``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `XXXxxxx,r`, `YYYyyyy,r`, `Aaaaaa,ACLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1DB</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"return || far()"</literal></expr>

,

<expr><literal type="string">"FRET"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1DC</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"SAT"</literal></expr>

,

<expr><literal type="string">"SAT"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1DD</literal></expr>,

<expr><literal type="string">"OOOOOpCCMMMMxxxxmmCccccc"</literal></expr>

,

<expr><literal type="string">"`CCCccccc,d(ALLx``MMMMxxxxmm,!CCCccccc!w``CCCccccc,)ALLx` = `CCCccccc,ALLx`"</literal></expr>

,

<expr><literal type="string">"MOV `CCCccccc,ALLx`, `CCCccccc,d(ALLx``MMMMxxxxmm,!CCCccccc!w``CCCccccc,)ALLx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1DE</literal></expr>,

<expr><literal type="string">"OOOOOOOpCCCccccckkkkkkkkkkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`CCCccccc,d(ALLx``kkkkkkkkkkkkkkkkkkkkkkkk,m``CCCccccc,)ALLx` = `CCCccccc,ALLx`"</literal></expr>

,

<expr><literal type="string">"MOV `CCCccccc,ALLx`, `CCCccccc,d(ALLx``kkkkkkkkkkkkkkkkkkkkkkkk,m``CCCccccc,)ALLx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1DF</literal></expr>,

<expr><literal type="string">"OOOOOoiiMMMMxxxxmmiiiiii"</literal></expr>

,

<expr><literal type="string">"byte(`MMMMxxxxmm,bw`) = `iiiiiiii`"</literal></expr>

,

<expr><literal type="string">"MOV `iiiiiiii`, byte(`MMMMxxxxmm,bw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E0</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-cccccpp----CC"</literal></expr>

,

<expr><literal type="string">"byte(`MMMMxxxxmm,bw`) = `CCccccc,RA`"</literal></expr>

,

<expr><literal type="string">"MOV `CCccccc,RA`, byte(`MMMMxxxxmm,bw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E1</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"if (!TC1) execute(D_unit) ||"</literal></expr>

,

<expr><literal type="string">"XCCPART !TC1 ||"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E2</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"if (TC1) execute(D_unit) ||"</literal></expr>

,

<expr><literal type="string">"XCCPART TC1 ||"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E3</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"XPORT_READ"</literal></expr>

,

<expr><literal type="string">"XPORT_READ"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E4</literal></expr>,

<expr><literal type="string">"OOOOOOpp"</literal></expr>

,

<expr><literal type="string">"XPORT_WRITE"</literal></expr>

,

<expr><literal type="string">"XPORT_WRITE"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E5</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"to_word()"</literal></expr>

,

<expr><literal type="string">"to_word"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E6</literal></expr>,

<expr><literal type="string">"OOOOOOOOppqq----"</literal></expr>

,

<expr><literal type="string">"to_byte()"</literal></expr>

,

<expr><literal type="string">"to_byte"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E7</literal></expr>,

<expr><literal type="string">"OOOOOOOOkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"ecopr(`kkkkkkkk`)"</literal></expr>

,

<expr><literal type="string">"ECOPR__"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E8</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-------p0-000cc0-------qq-000aa0-------kkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `cc,ACx`, `aa,ACx`)"</literal></expr>

,

<expr><literal type="string">"COPR_1`q_SAT` `kkkkkkkk`, `cc,ACx`, `aa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1E9</literal></expr>,

<expr><literal type="string">"OOOOOOOOp-------p0-000aa0-------qq-000bb0-------kkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `aa,ACx`, `bb,ACx`)"</literal></expr>

,

<expr><literal type="string">"COPR_2`q_SAT` `kkkkkkkk`, `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1EA</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-000ccpp-000aaqq------0-------kkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `cc,ACx`, `MMMMxxxxmm,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_M`q_SAT` `kkkkkkkk`, `cc,ACx`, `MMMMxxxxmm,r`, `aa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1EB</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm1000aapp-000bbqq------1ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `MMMMxxxxmm,r`, dbl(`ZZZzzzz,r`))"</literal></expr>

,

<expr><literal type="string">"COPR_MZ`q_SAT` `kkkkkkkk`, `MMMMxxxxmm,r`, dbl(`ZZZzzzz,r`), `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1EC</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-000ccpp-000aaqq------0-------kkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `cc,ACx`, dbl(`MMMMxxxxmm,dr`))"</literal></expr>

,

<expr><literal type="string">"COPR_LM`q_SAT` `kkkkkkkk`, `cc,ACx`, dbl(`MMMMxxxxmm,dr`), `aa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1ED</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm1000aapp-000bbqq------1ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, dbl(`MMMMxxxxmm,dr`), dbl(`ZZZzzzz,r`))"</literal></expr>

,

<expr><literal type="string">"COPR_LMZ1`q_SAT` `kkkkkkkk`, dbl(`MMMMxxxxmm,dr`), dbl(`ZZZzzzz,r`), `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1EE</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm1000aapp-000bbqq------1ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `aa,ACx`, `bb,ACx`, dbl(`MMMMxxxxmm,r`), dbl(`ZZZzzzz,dr`))"</literal></expr>

,

<expr><literal type="string">"COPR_LMZ2`q_SAT` `kkkkkkkk`, `aa,ACx`, `bb,ACx`, dbl(`MMMMxxxxmm,dr`), dbl(`ZZZzzzz,r`), `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1EF</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp1-000cc1YYYyyyyqq-000aa0-------kkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `cc,ACx`, `XXXxxxx,r`, `YYYyyyy,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_XY1`q_SAT` `kkkkkkkk`, `cc,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `aa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F0</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp1-000aa1YYYyyyyqq-000bb0-------kkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `aa,ACx`, `bb,ACx`, `XXXxxxx,r`, `YYYyyyy,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_XY2`q_SAT` `kkkkkkkk`, `aa,ACx`, `bb,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F1</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp10000aa1YYYyyyyqq-000bb1ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_XYZ1`q_SAT` `kkkkkkkk`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F2</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp10000aa1YYYyyyyqq-000bb1ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `aa,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_XYZ2`q_SAT` `kkkkkkkk`, `aa,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F3</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp10000aa1YYYyyyyqq-000bb1ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `bb,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_XYZ3`q_SAT` `kkkkkkkk`, `bb,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F4</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp10000aa1YYYyyyyqq-000bb1ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx`, `bb,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `aa,ACx`, `bb,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_XYZ4`q_SAT` `kkkkkkkk`, `aa,ACx`, `bb,ACx`, `XXXxxxx,r`, `YYYyyyy,r`, `ZZZzzzz,r`, `aa,ACx`, `bb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F5</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp10000aa1YYYyyyyqq-000001ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `YYYyyyy,r`, `ZZZzzzz,r`), mar(`XXXxxxx,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_MARXYZ1`q_SAT` `kkkkkkkk`, `YYYyyyy,r`, `ZZZzzzz,r`, `aa,ACx` :: AMAR `XXXxxxx,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F6</literal></expr>,

<expr><literal type="string">"OOOOOOOOpXXXxxxxp10000aa1YYYyyyyqq-000001ZZZzzzzkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"`aa,ACx` = copr`q_SAT,a`(`kkkkkkkk`, `aa,ACx`, `YYYyyyy,r`, `ZZZzzzz,r`), mar(`XXXxxxx,r`)"</literal></expr>

,

<expr><literal type="string">"COPR_MARXYZ2`q_SAT` `kkkkkkkk`, `aa,ACx`, `YYYyyyy,r`, `ZZZzzzz,r`, `aa,ACx` :: AMAR `XXXxxxx,r`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F7</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmAaaaaa-pCcccccqqDddddd"</literal></expr>

,

<expr><literal type="string">"`Aaaaaa,ACLHx` = field_extract_r(`Cccccc,ACLHx`, `Dddddd,ACLHx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"BFXTR `Cccccc,ACLHx`, `Dddddd,ACLHx`, `MMMMxxxxmm,baddr`, `Aaaaaa,ACLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F8</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmAaaaaa-pCcccccqqDddddd"</literal></expr>

,

<expr><literal type="string">"`Aaaaaa,ACLHx` = field_extract_l(`Cccccc,ACLHx`, `Dddddd,ACLHx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"BFXTL `Cccccc,ACLHx`, `Dddddd,ACLHx`, `MMMMxxxxmm,baddr`, `Aaaaaa,ACLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1F9</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaa-p-cccccqq-ddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = field_extract_r(`ccccc,ACx`, `ddddd,ACx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"DBFXTR `ccccc,ACx`, `ddddd,ACx`, `MMMMxxxxmm,baddr`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1FA</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm-aaaaa-p-cccccqq-ddddd"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = field_extract_l(`ccccc,ACx`, `ddddd,ACx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"DBFXTL `ccccc,ACx`, `ddddd,ACx`, `MMMMxxxxmm,baddr`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1FB</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmAaaaaa-pCcccccqqDddddd"</literal></expr>

,

<expr><literal type="string">"`Aaaaaa,ACLHx` = field_insert(`Cccccc,ACLHx`, `Dddddd,ACLHx`, `MMMMxxxxmm,baddr`)"</literal></expr>

,

<expr><literal type="string">"BFINS `Cccccc,ACLHx`, `Dddddd,ACLHx`, `MMMMxxxxmm,baddr`, `Aaaaaa,ACLHx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1FC</literal></expr>,

<expr><literal type="string">"OOOOOOOWp-%aaaaap--bbbbb--$cccccqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`LO(`ccccc,ACx`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(`HI(`ccccc,ACx`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(`LO(`ccccc,ACx`)`$,)`, `#,(`LO(`ZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MPY`/``q_SAT``%``4` `$,(`HI(`ccccc,ACx`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1FD</literal></expr>,

<expr><literal type="string">"OOOOOOOWp-%aaaaap--bbbbb--$cccccqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(`LO(`ccccc,ACx`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` +`/,(``$,(`HI(`ccccc,ACx`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(`LO(`ccccc,ACx`)`$,)`, `#,(`LO(`ZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(`HI(`ccccc,ACx`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1FE</literal></expr>,

<expr><literal type="string">"OOOOOOOWp-%aaaaap--bbbbb--$cccccqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(`LO(`ccccc,ACx`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` -`/,(``$,(`HI(`ccccc,ACx`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(`LO(`ccccc,ACx`)`$,)`, `#,(`LO(`ZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(`HI(`ccccc,ACx`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x1FF</literal></expr>,

<expr><literal type="string">"OOOOOOOWp-%aaaaap--bbbbb--$cccccqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(`LO(`ccccc,ACx`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` +`/,(``$,(`HI(`ccccc,ACx`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(`LO(`ccccc,ACx`)`$,)`, `#,(`LO(`ZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(`HI(`ccccc,ACx`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x200</literal></expr>,

<expr><literal type="string">"OOOOOOOWp-%aaaaap--bbbbb--$cccccqq#4----/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` - `/,(``$,(`LO(`ccccc,ACx`)`$,)` * `#,(`LO(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` -`/,(``$,(`HI(`ccccc,ACx`)`$,)` * `#,(`HI(`ZZZzzzz,r`)`#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAS`/``q_SAT``%``4` `$,(`LO(`ccccc,ACx`)`$,)`, `#,(`LO(`ZZzzzz,r`)`#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(`HI(`ccccc,ACx`)`$,)`, `#,(`HI(`ZZZzzzz,r`)`#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x201</literal></expr>,

<expr><literal type="string">"OOOOOOk$JCCcccccJkkkkkkkLLLLLLLLLLLLLLLL"</literal></expr>

,

<expr><literal type="string">"compare (uns(`CCccccc,RAx` `JJ` `kkkkkkkk`)) goto `LLLLLLLLLLLLLLLL`"</literal></expr>

,

<expr><literal type="string">"BCCU `LLLLLLLLLLLLLLLL`, `CCccccc,RAx` `JJ` `kkkkkkkk`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x202</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DLD_R_ABS"</literal></expr>

,

<expr><literal type="string">"DLD_R_ABS"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x203</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_R_ABS"</literal></expr>

,

<expr><literal type="string">"DST_R_ABS"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x204</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"SUB_MWK"</literal></expr>

,

<expr><literal type="string">"SUB_MWK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x205</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DPSHR_SPW"</literal></expr>

,

<expr><literal type="string">"DPSHR_SPW"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x206</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DPOPR_SPR"</literal></expr>

,

<expr><literal type="string">"DPOPR_SPR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x207</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DST_R"</literal></expr>

,

<expr><literal type="string">"DST_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x208</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"DLD_R"</literal></expr>

,

<expr><literal type="string">"DLD_R"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x209</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmoaaaaa"</literal></expr>

,

<expr><literal type="string">"`aaaaa,XDAx` = mar(byte(`MMMMxxxxmm,r`))"</literal></expr>

,

<expr><literal type="string">"AMAR byte(`MMMMxxxxmm,r`), `aaaaa,XDAx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x20A</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--KKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,rw`) = `q_SAT,(`dbl(`MMMMxxxxmm,rw`) + `KKKKKKKKKKKKKKKK``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `KKKKKKKKKKKKKKKK`, dbl(`MMMMxxxxmm,rw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x20B</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--iiiiiiiiiiiiiiii"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,w`) = `iiiiiiiiiiiiiiii`"</literal></expr>

,

<expr><literal type="string">"MOV `iiiiiiiiiiiiiiii`, dbl(`MMMMxxxxmm,w`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x20C</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--kkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,rw`) = dbl(`MMMMxxxxmm,rw`) &amp; `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"AND `kkkkkkkkkkkkkkkk`, dbl(`MMMMxxxxmm,rw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x20D</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--kkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,rw`) = dbl(`MMMMxxxxmm,rw`) | `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"OR `kkkkkkkkkkkkkkkk`, dbl(`MMMMxxxxmm,rw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x20E</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmqppo--kkkkkkkkkkkkkkkk"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,rw`) = dbl(`MMMMxxxxmm,rw`) ^ `kkkkkkkkkkkkkkkk`"</literal></expr>

,

<expr><literal type="string">"XOR `kkkkkkkkkkkkkkkk`, dbl(`MMMMxxxxmm,rw`)"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x20F</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaapp-cccccqqSSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` + (`$,(`dbl(`MMMMxxxxmm,r`)`$,)` &lt;&lt; `SSSSSS`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"ADD`q_SAT` `$,(`dbl(`MMMMxxxxmm,r`)`$,)` &lt;&lt; `SSSSSS`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x210</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaapp-cccccqqSSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``ccccc,ACx` - (`$,(`dbl(`MMMMxxxxmm,r`)`$,)` &lt;&lt; `SSSSSS`)`q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"SUB`q_SAT` `$,(`dbl(`MMMMxxxxmm,r`)`$,)` &lt;&lt; `SSSSSS`, `ccccc,ACx`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x211</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm$aaaaapp------qqSSSSSS"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``$,(`dbl(`MMMMxxxxmm,r`)`$,)` &lt;&lt; `SSSSSS``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MOV`q_SAT` `$,(`dbl(`MMMMxxxxmm,r`)`$,)` &lt;&lt; `SSSSSS`, `aaaaa,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x212</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm%ccccc@p$----q-NNnnnnn"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,w`) = `@,(``$,(``%,(``ccccc,ACx` &lt;&lt; `NNnnnnn,SRx``%,)``$,)``@,)`"</literal></expr>

,

<expr><literal type="string">"MOV `$,(``%,(``@,(``ccccc,ACx` &lt;&lt; `NNnnnnn,SRx``@,)``%,)``$,)`), dbl(`MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x213</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmm%ccccc@p$----q--SSSSSS"</literal></expr>

,

<expr><literal type="string">"dbl(`MMMMxxxxmm,w`) = `@,(``$,(``%,(``ccccc,ACx` &lt;&lt; `SSSSSS``%,)``$,)``@,)`"</literal></expr>

,

<expr><literal type="string">"MOV `$,(``%,(``@,(``ccccc,ACx` &lt;&lt; `SSSSSS``@,)``%,)``$,)`), dbl(`MMMMxxxxmm,w`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x214</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmT-poJJKKKKKKKKKKKKKKKK"</literal></expr>

,

<expr><literal type="string">"`T` = (dbl(`MMMMxxxxmm,r`) `JJ` `KKKKKKKKKKKKKKKK`)"</literal></expr>

,

<expr><literal type="string">"CMP dbl(`MMMMxxxxmm,r`) `JJ` `KKKKKKKKKKKKKKKK`, `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x215</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo-----kkkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(dbl(`MMMMxxxxmm,rw`), `kkkkk`), bit(dbl(`MMMMxxxxmm,rw`), `kkkkk`) = #0"</literal></expr>

,

<expr><literal type="string">"BTSTCLR `kkkkk`, dbl(`MMMMxxxxmm,rw`), `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x216</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo-----kkkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(dbl(`MMMMxxxxmm,rw`), `kkkkk`), bit(dbl(`MMMMxxxxmm,rw`), `kkkkk`) = #1"</literal></expr>

,

<expr><literal type="string">"BTSTSET `kkkkk`, dbl(`MMMMxxxxmm,rw`), `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x217</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo-----kkkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(dbl(`MMMMxxxxmm,r`), `kkkkk`)"</literal></expr>

,

<expr><literal type="string">"BTST `kkkkk`, dbl(`MMMMxxxxmm,r`), `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x218</literal></expr>,

<expr><literal type="string">"OOOOOOOOMMMMxxxxmmTppo-----kkkkk"</literal></expr>

,

<expr><literal type="string">"`T` = bit(dbl(`MMMMxxxxmm,rw`), `kkkkk`), cbit(dbl(`MMMMxxxxmm,rw`), `kkkkk`)"</literal></expr>

,

<expr><literal type="string">"BTSTNOT `kkkkk`, dbl(`MMMMxxxxmm,rw`), `T`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x219</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` + `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAC`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x21A</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MPY`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x21B</literal></expr>,

<expr><literal type="string">"OOOOOOOWpXXXxxxxp4$aaaaa%YYYyyyyqq#bbbbb/ZZZzzzz"</literal></expr>

,

<expr><literal type="string">"`aaaaa,ACx` = `q_SAT,(``4,(``%,(``aaaaa,ACx` + `/,(``$,(``XXXxxxx,r``$,)` * `#,(``W,L(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`, `bbbbb,ACx` = `q_SAT,(``4,(``%,(``bbbbb,ACx` - `/,(``$,(``YYYyyyy,r``$,)` * `#,(``W,H(``ZZZzzzz,r``W,)``#,)``/,)``%,)``4,)``q_SAT,)`"</literal></expr>

,

<expr><literal type="string">"MAC`/``q_SAT``%``4` `$,(``XXXxxxx,r``$,)`, `#,(``W,L(``ZZZzzzz,r``W,)``#,)`, `aaaaa,ACx` :: MAS`/``q_SAT``%``4` `$,(``YYYyyyy,r``$,)`, `#,(``W,H(``ZZZzzzz,r``W,)``#,)`, `bbbbb,ACx`"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x21C</literal></expr>,

<expr><literal type="string">"OOOOOOOOppppqqqq"</literal></expr>

,

<expr><literal type="string">"debug_data()"</literal></expr>

,

<expr><literal type="string">"debug_data"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x21D</literal></expr>,

<expr><literal type="string">"OOOOOOOOppppqqqq"</literal></expr>

,

<expr><literal type="string">"debug_prog()"</literal></expr>

,

<expr><literal type="string">"debug_prog"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x223</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"NO_OF_INSTR"</literal></expr>

,

<expr><literal type="string">"NO_OF_INSTR"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x224</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"FIELDMASK"</literal></expr>

,

<expr><literal type="string">"FIELDMASK"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x225</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"REPEAT_LOCAL_END"</literal></expr>

,

<expr><literal type="string">"REPEAT_LOCAL_END"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x226</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"REPEAT_BLOCK_END"</literal></expr>

,

<expr><literal type="string">"REPEAT_BLOCK_END"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x227</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"REPEAT_STMT_END"</literal></expr>

,

<expr><literal type="string">"REPEAT_STMT_END"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x228</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"PARALLEL"</literal></expr>

,

<expr><literal type="string">"PARALLEL"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x22E</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"FILLER"</literal></expr>

,

<expr><literal type="string">"FILLER"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x22F</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"ILLOP"</literal></expr>

,

<expr><literal type="string">"ILLOP"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x230</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"MAX_INSTR_COUNT"</literal></expr>

,

<expr><literal type="string">"MAX_INSTR_COUNT"</literal></expr>

,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="number">0x0</literal></expr>,

<expr><literal type="string">"@(#) $Id: dasm_header,v 1.51 2007/01/31 21:42:44 brett Exp $"</literal></expr>

,

<expr><literal type="string">"@(#) $Id: tbl_encoding,v 1.9 2007/01/31 21:42:44 brett Exp $"</literal></expr>

,

<expr><literal type="string">"@(#) $Id: tbl_lengths,v 1.7 2007/01/31 21:42:44 brett Exp $"</literal></expr>

,

<expr><literal type="string">"@(#) $Id: tbl_opcodes,v 1.10 2007/01/31 21:42:44 brett Exp $"</literal></expr>

,

<expr><literal type="string">"@(#) $Id: dasm_vars,v 1.3 2004/09/24 19:48:27 brett Exp $"</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

</unit>
