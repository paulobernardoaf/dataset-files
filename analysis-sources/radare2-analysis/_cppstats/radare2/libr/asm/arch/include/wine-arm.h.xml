<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\include\wine-arm.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_SIZEOF_INST</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_EQ</name></cpp:macro> <cpp:value>0x00000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_NE</name></cpp:macro> <cpp:value>0x10000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_HS</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_LO</name></cpp:macro> <cpp:value>0x30000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_MI</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_PL</name></cpp:macro> <cpp:value>0x50000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_VS</name></cpp:macro> <cpp:value>0x60000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_VC</name></cpp:macro> <cpp:value>0x70000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_HI</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_LS</name></cpp:macro> <cpp:value>0x90000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_GE</name></cpp:macro> <cpp:value>0xa0000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_LT</name></cpp:macro> <cpp:value>0xb0000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_GT</name></cpp:macro> <cpp:value>0xc0000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_LE</name></cpp:macro> <cpp:value>0xd0000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_AL</name></cpp:macro> <cpp:value>0xe0000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_NV</name></cpp:macro> <cpp:value>0xf0000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_COND_MASK</name></cpp:macro> <cpp:value>0xf0000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R0</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R1</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R2</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R3</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R4</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R5</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R6</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R7</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R8</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R9</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R10</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R11</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R12</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R13</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R14</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_R15</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_PC</name></cpp:macro> <cpp:value>ARM_R15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_LR</name></cpp:macro> <cpp:value>ARM_R14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_SP</name></cpp:macro> <cpp:value>ARM_R13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_FP</name></cpp:macro> <cpp:value>ARM_R11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_BRANCH_I</name></cpp:macro> <cpp:value>0x0a000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_BRANCH_I_MASK</name></cpp:macro> <cpp:value>0x0E000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_BRANCH_LINK</name></cpp:macro> <cpp:value>0x01000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_BRANCH_NOLINK</name></cpp:macro> <cpp:value>0x00000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_I</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_AND</name></cpp:macro> <cpp:value>0x0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_EOR</name></cpp:macro> <cpp:value>(0x01&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_SUB</name></cpp:macro> <cpp:value>(0x02&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_RSB</name></cpp:macro> <cpp:value>(0x03&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_ADD</name></cpp:macro> <cpp:value>(0x04&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_ADC</name></cpp:macro> <cpp:value>(0x05&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_SBC</name></cpp:macro> <cpp:value>(0x06&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_RSC</name></cpp:macro> <cpp:value>(0x07&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_TST</name></cpp:macro> <cpp:value>(0x08&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_TEQ</name></cpp:macro> <cpp:value>(0x09&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_CMP</name></cpp:macro> <cpp:value>(0x0a&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_CMN</name></cpp:macro> <cpp:value>(0x0b&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_ORR</name></cpp:macro> <cpp:value>(0x0c&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_MOV</name></cpp:macro> <cpp:value>(0x0d&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_BIC</name></cpp:macro> <cpp:value>(0x0e&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_MVN</name></cpp:macro> <cpp:value>(0x0f&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_IMM</name></cpp:macro> <cpp:value>0x2000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_NOIMM</name></cpp:macro> <cpp:value>0x000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_SETCOND</name></cpp:macro> <cpp:value>(1&lt;&lt;20)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DP_NOSETCOND</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_I</name></cpp:macro> <cpp:value>0x04000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_I_MASK</name></cpp:macro> <cpp:value>0x0C000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_IM</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_NOTIM</name></cpp:macro> <cpp:value>(0x01&lt;&lt;25)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_PRE</name></cpp:macro> <cpp:value>(0x01&lt;&lt;24)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_POST</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_ADD</name></cpp:macro> <cpp:value>(0x01&lt;&lt;23)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_SUB</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_BYTE</name></cpp:macro> <cpp:value>(0x01&lt;&lt;22)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_WORD</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_NOWB</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_WB</name></cpp:macro> <cpp:value>(0x01&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_LOAD</name></cpp:macro> <cpp:value>(0x01&lt;&lt;20)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_STORE</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTX_RD_MASK</name></cpp:macro> <cpp:value>( 0x0F &lt;&lt; 12 )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_I</name></cpp:macro> <cpp:value>0x08000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_I_MASK</name></cpp:macro> <cpp:value>0x0E000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_PRE</name></cpp:macro> <cpp:value>(0x01&lt;&lt;24)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_POST</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_ADD</name></cpp:macro> <cpp:value>(0x01&lt;&lt;23)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_SUB</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_NOWB</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_WB</name></cpp:macro> <cpp:value>(0x01&lt;&lt;21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_LOAD</name></cpp:macro> <cpp:value>(0x01&lt;&lt;20)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARM_DTM_STORE</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>_arm_label</name> <block>{ 

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>at</name></decl>;</decl_stmt>

}</block></struct></type> <name>arm_label</name>;</typedef>

<typedef>typedef <type><struct>struct <name>_arm_code_seq</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>max_ins</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>act_ins</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type> <name>codeseq</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>arm_label</name> <modifier>*</modifier></type><name>def_labels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>lastlabel</name></decl>;</decl_stmt>

}</block></struct></type> <name>arm_code_seq</name>;</typedef>

</unit>
