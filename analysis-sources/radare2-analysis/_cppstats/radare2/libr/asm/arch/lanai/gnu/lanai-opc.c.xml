<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\lanai\gnu\lanai-opc.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ansidecl.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"opcode/lanai.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>architecture_pname</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="string">"v0"</literal></expr>,

<expr><literal type="string">"v1"</literal></expr>,

<expr><name>NULL</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GENERIC_PAIR</name><parameter_list>(<parameter><type><name>mask</name></type></parameter>,<parameter><type><name>high</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(high),((mask)&amp;~(high))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RI_PAIR</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>f</name></type></parameter>,<parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_RI_MASK, L3_RI | L3_RI_OP(op) | ((f)?L3_RI_F:0) | ((h)?L3_RI_H:0) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RR_PAIR</name><parameter_list>(<parameter><type><name>f</name></type></parameter>,<parameter><type><name>op</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_RR_MASK, L3_RR | ((f)?L3_RR_F:0) | L3_RR_OP(op) | ((((op)&amp;L3_OP_MASK)==L3_SH) ? ((op)&amp;L3_ARITH?0xc0:0x80) : 0 ))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LEADZ_PAIR</name><parameter_list>(<parameter><type><name>f</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_LEADZ_MASK, L3_LEADZ | ((f)?L3_LEADZ_F:0))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POPC_PAIR</name><parameter_list>(<parameter><type><name>f</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_POPC_MASK, L3_POPC | ((f)?L3_POPC_F:0))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RRR_PAIR</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_RRR_MASK, L3_RRR )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RM_PAIR</name><parameter_list>(<parameter><type><name>s</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>q</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_RM_MASK, L3_RM | ((s)?L3_RM_S:0) | ((p)?L3_RM_P:0) | ((q)?L3_RM_Q:0) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RRM_PAIR</name><parameter_list>(<parameter><type><name>s</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>q</name></type></parameter>,<parameter><type><name>mode</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_RRM_MASK, L3_RRM | ((s)?L3_RRM_S:0) | ((p)?L3_RRM_P:0) | ((q)?L3_RRM_Q:0) | L3_RRM_MODE(mode) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BR_PAIR</name><parameter_list>(<parameter><type><name>cond</name></type></parameter>,<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_BR_MASK, L3_BR | L3_BR_COND(cond) | ((r)?L3_BR_R:0) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCC_PAIR</name><parameter_list>(<parameter><type><name>cond</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR (L3_SCC_MASK, L3_SCC | L3_BR_COND (cond))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SLS_PAIR</name><parameter_list>(<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_SLS_MASK, L3_SLS | ((s)?L3_SLS_S:0) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SLI_PAIR</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_SLI_MASK, L3_SLI )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPLS_PAIR</name><parameter_list>(<parameter><type><name>s</name></type></parameter>,<parameter><type><name>mode</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>q</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_SPLS_MASK, L3_SPLS | L3_SPLS_MODE(mode) | ((s)?L3_SPLS_S:0) | ((p)?L3_SPLS_P:0) | ((q)?L3_SPLS_Q:0) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PUNT_PAIR</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_PUNT_MASK, L3_PUNT )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SBR_PAIR</name><parameter_list>(<parameter><type><name>cond</name></type></parameter>,<parameter><type><name>op</name></type></parameter>,<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_SBR_MASK, L3_SBR|L3_SBR_COND(cond)|L3_SBR_OP(op)|((r)?L3_SBR_R:0))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PCREL_SBR_PAIR</name><parameter_list>(<parameter><type><name>cond</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_SBR_MASK|L3_RS1(0x1f)| L3_SBR_OP(7), L3_SBR|L3_SBR_COND(cond)|L3_SBR_OP(L3_ADD)|L3_RS1(2)|L3_SBR_R)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RI_MOV_PAIR</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>f</name></type></parameter>,<parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_RI_MASK|L3_RS1(31), L3_RI|L3_RI_OP(op)|((f)?L3_RI_F:0)|((h)?L3_RI_H:0)|(((op)==L3_AND)?L3_RS1(1):0))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RR_MOV_PAIR</name><parameter_list>(<parameter><type><name>f</name></type></parameter>,<parameter><type><name>op</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GENERIC_PAIR(L3_RR_MASK|0x007c0000, L3_RR | ((f)?L3_RR_F:0) | L3_RR_OP(op) | (((op)&amp;L3_ARITH)?1&lt;&lt;6:0) | ((op)==L3_SH?1&lt;&lt;7:0) )</cpp:value></cpp:define>

<decl_stmt><decl><type><name><name>struct</name> <name>lanai_opcode</name></name></type> <name><name>lanai_opcodes</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">"nop"</literal></expr>, <expr><literal type="number">0x00000001</literal></expr>,<expr><literal type="number">0xfffffffe</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"nop(RI)"</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>,<expr><literal type="number">0x8f820000</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"nop(RR)"</literal></expr>, <expr><literal type="number">0xc0000000</literal></expr>,<expr><literal type="number">0x3f820000</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_RR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"nop(RRR)"</literal></expr>, <expr><literal type="number">0xd0000000</literal></expr>,<expr><literal type="number">0x2f820000</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_RRR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"nop(BR)"</literal></expr>, <expr><literal type="number">0xe2000000</literal></expr>,<expr><literal type="number">0x1c000000</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_BR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"nop(SLI)"</literal></expr>, <expr><literal type="number">0xf0020000</literal></expr>,<expr><literal type="number">0x0f810000</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_SLI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"nop(SPLS)"</literal></expr>, <expr><literal type="number">0xf0030000</literal></expr>,<expr><literal type="number">0x0f808000</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_SPLS</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"nop(SBR)"</literal></expr>, <expr><literal type="number">0xf203c000</literal></expr>,<expr><literal type="number">0x0c003800</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_SBR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RR_MOV_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_ADD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,d"</literal></expr>, <expr><name>F_RR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_T</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B,P"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>SLI_PAIR</name><argument_list>()</argument_list></call></expr> ,<expr><literal type="string">"I,d"</literal></expr>, <expr><name>F_SLI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_ADD</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"j,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_ADD</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"J,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_AND</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"l,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_AND</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"L,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"j,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"J,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"l,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr>, <expr><call><name>RI_MOV_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"L,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"add"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_ADD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"add"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_T</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"p,b,P"</literal></expr>, <expr><name>F_UNBR</name><operator>|</operator><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"add"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADD</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"add"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADD</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"add.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_ADD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"add.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"add.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"addc"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_ADDC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"addc"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADDC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"addc"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADDC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"addc.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_ADDC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"addc.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADDC</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"addc.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_ADDC</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"and"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_AND</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"and"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_AND</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,l,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"and"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_AND</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,L,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"and.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_AND</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"and.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_AND</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,l,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"and.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_AND</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,L,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bt"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_T</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_UNBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_T</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_UNBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_T</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_UNBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bt.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_T</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELUNBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bt.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_T</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELUNBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bf"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_F</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_BR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bf"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_F</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_BR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bf"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_F</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_BR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bf.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_F</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_BR</name><operator>|</operator><name>F_REL</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bf.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_F</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_BR</name><operator>|</operator><name>F_REL</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bhi"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bhi"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bhi"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bhi.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bhi.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bugt"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bugt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bugt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bugt.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bugt.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bls"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bls"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bls"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bls.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bls.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bule"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bule"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bule"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bule.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bule.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcc"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcc"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcc"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcc.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcc.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"buge"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"buge"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"buge"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"buge.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"buge.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcs"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcs"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcs"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcs.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bcs.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bult"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bult"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bult"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bult.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bult.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>,<expr><name>F_ALIAS</name><operator>|</operator><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bne"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_NE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bne"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_NE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bne"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_NE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bne.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_NE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bne.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_NE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"beq"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_EQ</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"beq"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_EQ</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"beq"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_EQ</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"beq.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_EQ</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"beq.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_EQ</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvc"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_VC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvc"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_VC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvc"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_VC</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvc.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_VC</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvc.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_VC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvs"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_VS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvs"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_VS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvs"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_VS</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvs.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_VS</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bvs.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_VS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bpl"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_PL</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bpl"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_PL</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bpl"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_PL</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bpl.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_PL</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bpl.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_PL</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bmi"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_MI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bmi"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_MI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bmi"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_MI</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bmi.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_MI</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bmi.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_MI</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bge"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_GE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bge"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_GE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bge"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_GE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bge.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_GE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bge.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_GE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"blt"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LT</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"blt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LT</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"blt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LT</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"blt.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LT</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"blt.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LT</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bgt"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_GT</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bgt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_GT</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bgt"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_GT</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bgt.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_GT</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"bgt.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_GT</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ble"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"B"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ble"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ble"</literal></expr>, <expr><call><name>SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"143"</literal></expr>, <expr><name>F_CONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ble.r"</literal></expr>, <expr><call><name>BR_PAIR</name><argument_list>(<argument><expr><name>L3_LE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"b"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ble.r"</literal></expr>, <expr><call><name>PCREL_SBR_PAIR</name><argument_list>(<argument><expr><name>L3_LE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"3"</literal></expr>, <expr><name>F_RELCONDBR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><literal type="number">0x80030004</literal></expr>,<expr><literal type="number">0x7000fffb</literal></expr> ,<expr><literal type="string">"[++1],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><literal type="number">0x80010004</literal></expr>,<expr><literal type="number">0x7002fffb</literal></expr> ,<expr><literal type="string">"[1++],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><literal type="number">0x8003fffc</literal></expr>,<expr><literal type="number">0x70000003</literal></expr> ,<expr><literal type="string">"[--1],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><literal type="number">0x8001fffc</literal></expr>,<expr><literal type="number">0x70020003</literal></expr> ,<expr><literal type="string">"[1--],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1],d"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[*1],d"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1*],d"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[162],d"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[*162],d"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[1*62],d"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>SLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[Y],d"</literal></expr>, <expr><name>F_SLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><literal type="number">0x80020000</literal></expr>,<expr><literal type="number">0x707d0000</literal></expr> ,<expr><literal type="string">"[o],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"o[1],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"o[*1],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"o[1*],d"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><literal type="number">0x80030004</literal></expr>,<expr><literal type="number">0x7000fffb</literal></expr> ,<expr><literal type="string">"[++1],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><literal type="number">0x80010004</literal></expr>,<expr><literal type="number">0x7002fffb</literal></expr> ,<expr><literal type="string">"[1++],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><literal type="number">0x8003fffc</literal></expr>,<expr><literal type="number">0x70000003</literal></expr> ,<expr><literal type="string">"[--1],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><literal type="number">0x8001fffc</literal></expr>,<expr><literal type="number">0x70020003</literal></expr> ,<expr><literal type="string">"[1--],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[*1],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1*],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[162],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[*162],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[1*62],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>SLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[Y],d"</literal></expr>, <expr><name>F_SLS</name><operator>|</operator><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[o],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"o[1],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"o[*1],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"o[1*],d"</literal></expr>, <expr><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><literal type="number">0xf0030c02</literal></expr>,<expr><literal type="number">0x0000f3fd</literal></expr> ,<expr><literal type="string">"[++1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><literal type="number">0xf0030402</literal></expr>,<expr><literal type="number">0x0000fbfd</literal></expr> ,<expr><literal type="string">"[1++],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><literal type="number">0xf0030ffe</literal></expr>,<expr><literal type="number">0x0000f001</literal></expr> ,<expr><literal type="string">"[--1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><literal type="number">0xf00307fe</literal></expr>,<expr><literal type="number">0x0000f801</literal></expr> ,<expr><literal type="string">"[1--],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[*1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1*],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[162],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[*162],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[1*62],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><literal type="number">0xf0030800</literal></expr>,<expr><literal type="number">0x007cf400</literal></expr> ,<expr><literal type="string">"[i],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[*1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[1*],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>, <expr><literal type="number">0xf0031c02</literal></expr>,<expr><literal type="number">0x0000e3fd</literal></expr> ,<expr><literal type="string">"[++1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>, <expr><literal type="number">0xf0031402</literal></expr>,<expr><literal type="number">0x0000ebfd</literal></expr> ,<expr><literal type="string">"[1++],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>, <expr><literal type="number">0xf0031ffe</literal></expr>,<expr><literal type="number">0x0000e001</literal></expr> ,<expr><literal type="string">"[--1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>, <expr><literal type="number">0xf00317fe</literal></expr>,<expr><literal type="number">0x0000e801</literal></expr> ,<expr><literal type="string">"[1--],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"2[1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"2[*1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"2[1*],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"[162],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"[*162],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"[1*62],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>, <expr><literal type="number">0xf0031800</literal></expr>,<expr><literal type="number">0x007ce400</literal></expr> ,<expr><literal type="string">"[i],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"i[1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"i[*1],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.h"</literal></expr>,<expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>,<expr><literal type="string">"i[1*],d"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><literal type="number">0xf0034c01</literal></expr>,<expr><literal type="number">0x0000b3fe</literal></expr> ,<expr><literal type="string">"[++1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><literal type="number">0xf0034401</literal></expr>,<expr><literal type="number">0x0000bbfe</literal></expr> ,<expr><literal type="string">"[1++],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><literal type="number">0xf0034fff</literal></expr>,<expr><literal type="number">0x0000b000</literal></expr> ,<expr><literal type="string">"[--1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><literal type="number">0xf00347ff</literal></expr>,<expr><literal type="number">0x0000b800</literal></expr> ,<expr><literal type="string">"[1--],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[*1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1*],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[162],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[*162],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[1*62],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><literal type="number">0xf0034800</literal></expr>,<expr><literal type="number">0x007cb400</literal></expr> ,<expr><literal type="string">"[i],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[*1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[1*],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><literal type="number">0xf0035c01</literal></expr>,<expr><literal type="number">0x0000a3fe</literal></expr> ,<expr><literal type="string">"[++1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><literal type="number">0xf0035401</literal></expr>,<expr><literal type="number">0x0000abfe</literal></expr> ,<expr><literal type="string">"[1++],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><literal type="number">0xf0035fff</literal></expr>,<expr><literal type="number">0x0000a000</literal></expr> ,<expr><literal type="string">"[--1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><literal type="number">0xf00357ff</literal></expr>,<expr><literal type="number">0x0000a800</literal></expr> ,<expr><literal type="string">"[1--],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[*1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"2[1*],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[162],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[*162],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"[1*62],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><literal type="number">0xf0035800</literal></expr>,<expr><literal type="number">0x007ca400</literal></expr> ,<expr><literal type="string">"[i],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[*1],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"uld.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_UNSIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"i[1*],d"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"leadz"</literal></expr>, <expr><call><name>LEADZ_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,d"</literal></expr>, <expr><name>F_LEADZ</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"leadz.f"</literal></expr>, <expr><call><name>LEADZ_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,d"</literal></expr>, <expr><name>F_LEADZ</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"or"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_OR</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"or"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"or"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"or.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_OR</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"or.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"or.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_OR</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"popc"</literal></expr>, <expr><call><name>POPC_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,d"</literal></expr>, <expr><name>F_POPC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"popc.f"</literal></expr>, <expr><call><name>POPC_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,d"</literal></expr>, <expr><name>F_POPC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"put"</literal></expr>, <expr><call><name>RRR_PAIR</name><argument_list>()</argument_list></call></expr> ,<expr><literal type="string">"15(243),d"</literal></expr>,<expr><name>F_RRR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"punt"</literal></expr>, <expr><literal type="number">0xf003ff47</literal></expr>, <expr><literal type="number">0x00000000</literal></expr> ,<expr><literal type="string">""</literal></expr>, <expr><name>F_PUNT</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sh"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SH</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sh"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SH</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,s,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sh.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SH</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sh.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SH</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,s,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sha"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SH</name><operator>|</operator><name>L3_ARITH</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sha"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SH</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,s,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sha.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SH</name><operator>|</operator><name>L3_ARITH</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sha.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SH</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,s,d"</literal></expr>, <expr><name>F_RI</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><literal type="number">0x90030004</literal></expr>,<expr><literal type="number">0x6000fffb</literal></expr> ,<expr><literal type="string">"d,[++1]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><literal type="number">0x90010004</literal></expr>,<expr><literal type="number">0x6002fffb</literal></expr> ,<expr><literal type="string">"d,[1++]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><literal type="number">0x9003fffc</literal></expr>,<expr><literal type="number">0x60000003</literal></expr> ,<expr><literal type="string">"d,[--1]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><literal type="number">0x9001fffc</literal></expr>,<expr><literal type="number">0x60020003</literal></expr> ,<expr><literal type="string">"d,[1--]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[1]"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[*1]"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[1*]"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[162]"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[*162]"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_FULLWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[1*62]"</literal></expr>, <expr><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>SLS_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[Y]"</literal></expr>, <expr><name>F_SLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><literal type="number">0x90020000</literal></expr>,<expr><literal type="number">0x607d0000</literal></expr> ,<expr><literal type="string">"d,[o]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,o[1]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,o[*1]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st"</literal></expr>, <expr><call><name>RM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,o[1*]"</literal></expr>, <expr><name>F_RM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><literal type="number">0xf0032c02</literal></expr>,<expr><literal type="number">0x0000d3fd</literal></expr> ,<expr><literal type="string">"d,[++1]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><literal type="number">0xf0032402</literal></expr>,<expr><literal type="number">0x0000dbfd</literal></expr> ,<expr><literal type="string">"d,[1++]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><literal type="number">0xf0032ffe</literal></expr>,<expr><literal type="number">0x0000d001</literal></expr> ,<expr><literal type="string">"d,[--1]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><literal type="number">0xf00327fe</literal></expr>,<expr><literal type="number">0x0000d801</literal></expr> ,<expr><literal type="string">"d,[1--]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[1]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[*1]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[1*]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[162]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[*162]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[1*62]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><literal type="number">0xf0032800</literal></expr>,<expr><literal type="number">0x007cd400</literal></expr> ,<expr><literal type="string">"d,[i]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,i[1]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,i[*1]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_HALFWORD</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,i[1*]"</literal></expr>, <expr><name>F_HALF</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><literal type="number">0xf0036c01</literal></expr>,<expr><literal type="number">0x000093fe</literal></expr> ,<expr><literal type="string">"d,[++1]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><literal type="number">0xf0036401</literal></expr>,<expr><literal type="number">0x00009bfe</literal></expr> ,<expr><literal type="string">"d,[1++]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><literal type="number">0xf0036fff</literal></expr>,<expr><literal type="number">0x00009000</literal></expr> ,<expr><literal type="string">"d,[--1]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><literal type="number">0xf00367ff</literal></expr>,<expr><literal type="number">0x00009800</literal></expr> ,<expr><literal type="string">"d,[1--]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[1]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[*1]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,2[1*]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[162]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[*162]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>RRM_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,[1*62]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_RRM</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><literal type="number">0xf0036800</literal></expr>,<expr><literal type="number">0x007c9400</literal></expr> ,<expr><literal type="string">"d,[i]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,i[1]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,i[*1]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr>, <expr><call><name>SPLS_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SIGNED_BYTE</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"d,i[1*]"</literal></expr>, <expr><name>F_BYTE</name><operator>|</operator><name>F_SPLS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sub"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SUB</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sub"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUB</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sub"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUB</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sub.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SUB</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sub.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUB</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sub.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUB</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"subb"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_SUBB</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"subb"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUBB</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"subb"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUBB</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"subb.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_SUBB</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"subb.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUBB</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"subb.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_SUBB</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"shi"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name><operator>|</operator><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sugt"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_HI</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sls"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name><operator>|</operator><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sule"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_LS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"scc"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name><operator>|</operator><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"suge"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"scs"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_CS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name><operator>|</operator><name>F_ALIAS</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sult"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_CC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sne"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_NE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"seq"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_EQ</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"svc"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_VC</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"svs"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_VS</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"spl"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_PL</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"smi"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_MI</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sge"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_GE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"slt"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_LT</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sgt"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_GT</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"sle"</literal></expr>, <expr><call><name>SCC_PAIR</name><argument_list>(<argument><expr><name>L3_LE</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1"</literal></expr>, <expr><name>F_SCC</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"xor"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>L3_XOR</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"xor"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_XOR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"xor"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_XOR</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"xor.f"</literal></expr>, <expr><call><name>RR_PAIR</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>L3_XOR</name></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,2,d"</literal></expr>, <expr><name>F_RR</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"xor.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_XOR</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,j,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"xor.f"</literal></expr>, <expr><call><name>RI_PAIR</name><argument_list>(<argument><expr><name>L3_XOR</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr> ,<expr><literal type="string">"1,J,d"</literal></expr>, <expr><name>F_RI</name></expr>,<expr><literal type="number">0</literal></expr>}</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>bfd_lanai_num_opcodes</name> <init>= <expr><operator>(</operator><operator>(</operator><sizeof>sizeof <name>lanai_opcodes</name></sizeof><operator>)</operator><operator>/</operator><operator>(</operator><sizeof>sizeof <name><name>lanai_opcodes</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></sizeof><operator>)</operator><operator>)</operator></expr></init></decl>;</decl_stmt>

</unit>
