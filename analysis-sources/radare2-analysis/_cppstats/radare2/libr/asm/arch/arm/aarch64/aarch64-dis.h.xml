<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\arm\aarch64\aarch64-dis.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"aarch64-opc.h"</cpp:file></cpp:include>

<function_decl><type><specifier>const</specifier> <name>aarch64_opcode</name><modifier>*</modifier></type> <name>aarch64_opcode_lookup</name> <parameter_list>(<parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>aarch64_opcode</name><modifier>*</modifier></type> <name>aarch64_find_next_opcode</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>aarch64_opcode</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>aarch64_opcode</name><modifier>*</modifier></type> <name>aarch64_find_alias_opcode</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>aarch64_opcode</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>aarch64_opcode</name><modifier>*</modifier></type> <name>aarch64_find_next_alias_opcode</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>aarch64_opcode</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bfd_boolean</name></type>

<name>aarch64_extract_operand</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>aarch64_operand</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>aarch64_opnd_info</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>aarch64_insn</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>aarch64_inst</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>aarch64_operand_error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AARCH64_DECL_OPD_EXTRACTOR</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>bfd_boolean aarch64_##x (const aarch64_operand *, aarch64_opnd_info *, const aarch64_insn, const aarch64_inst *, aarch64_operand_error *)</cpp:value></cpp:define>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_regno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_regno_pair</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_regrt_sysins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_reglane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_reglist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_ldst_reglist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_ldst_reglist_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_ldst_elemlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_advsimd_imm_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_shll_imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_imm_half</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_advsimd_imm_modified</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_fpimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_fbits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_aimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_limm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_inv_limm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_addr_simple</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_addr_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_addr_regoff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_addr_simm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_addr_simm10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_addr_uimm12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_simd_addr_post</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sysreg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_pstatefield</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sysins_op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_barrier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_prfop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_reg_extended</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_reg_shifted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_ri_s4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_ri_s4xvl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_ri_s6xvl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_ri_s9xvl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_ri_u6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_rr_lsl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_rz_xtw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_zi_u5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_zz_lsl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_zz_sxtw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_addr_zz_uxtw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_aimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_asimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_float_half_one</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_float_half_two</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_float_zero_one</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_limm_mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_quad_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_reglist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_shlimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_sve_shrimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_imm_rotate1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AARCH64_DECL_OPD_EXTRACTOR</name> <argument_list>(<argument><expr><name>ext_imm_rotate2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>AARCH64_DECL_OPD_EXTRACTOR</name></cpp:undef>

</unit>
