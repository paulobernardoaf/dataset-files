



























#include <stdint.h>
static int avrdis (char *out, unsigned long long addr, const unsigned char *buf, int len);


#define AVR_TOTAL_INSTRUCTIONS 145
#define AVR_MAX_NUM_OPERANDS 2


enum AVR_Operand_Types {
OPERAND_NONE, OPERAND_REGISTER_GHOST,
OPERAND_REGISTER, OPERAND_REGISTER_STARTR16,
OPERAND_REGISTER_EVEN_PAIR, OPERAND_REGISTER_EVEN_PAIR_STARTR24,
OPERAND_BRANCH_ADDRESS, OPERAND_RELATIVE_ADDRESS, OPERAND_LONG_ABSOLUTE_ADDRESS,
OPERAND_IO_REGISTER, OPERAND_DATA, OPERAND_DES_ROUND, OPERAND_COMPLEMENTED_DATA, OPERAND_BIT, OPERAND_WORD_DATA,
OPERAND_X, OPERAND_XP, OPERAND_MX,
OPERAND_Y, OPERAND_YP, OPERAND_MY, OPERAND_YPQ,
OPERAND_Z, OPERAND_ZP, OPERAND_MZ, OPERAND_ZPQ,
};









#define AVR_LONG_INSTRUCTION_FOUND 1
#define AVR_LONG_INSTRUCTION_PRINT 2


struct _instructionInfo {
char mnemonic[7];

uint16_t opcodeMask;
int numOperands;

uint16_t operandMasks[AVR_MAX_NUM_OPERANDS];
int operandTypes[AVR_MAX_NUM_OPERANDS];
};
typedef struct _instructionInfo instructionInfo;


struct _assembledInstruction {
uint32_t address;
uint16_t opcode;
};
typedef struct _assembledInstruction assembledInstruction;


struct _disassembledInstruction {
uint32_t address;


instructionInfo *instruction;



int32_t operands[AVR_MAX_NUM_OPERANDS];


struct _disassembledInstruction *alternateInstruction;
};
typedef struct _disassembledInstruction disassembledInstruction;


static int disassembleInstruction(disassembledInstruction *dInstruction, const assembledInstruction aInstruction);



