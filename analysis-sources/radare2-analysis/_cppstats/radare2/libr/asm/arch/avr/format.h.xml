<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\avr\format.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avr_disasm.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"errorcodes.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_REGISTER</name></cpp:macro> <cpp:value>"r"</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_DATA_HEX</name></cpp:macro> <cpp:value>"0x"</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_DATA_BIN</name></cpp:macro> <cpp:value>"0b"</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_DATA_DEC</name></cpp:macro> <cpp:value>""</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_BIT</name></cpp:macro> <cpp:value>""</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_IO_REGISTER</name></cpp:macro> <cpp:value>"0x"</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_ABSOLUTE_ADDRESS</name></cpp:macro> <cpp:value>"0x"</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_BRANCH_ADDRESS</name></cpp:macro> <cpp:value>"."</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_DES_ROUND</name></cpp:macro> <cpp:value>"0x"</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPERAND_PREFIX_WORD_DATA</name></cpp:macro> <cpp:value>"0x"</cpp:value></cpp:define> 

<enum>enum <name>AVR_Formatting_Options</name> <block>{

<decl><name>FORMAT_OPTION_ADDRESS_LABEL</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>FORMAT_OPTION_ADDRESS</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>FORMAT_OPTION_DESTINATION_ADDRESS_COMMENT</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>FORMAT_OPTION_DATA_HEX</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>FORMAT_OPTION_DATA_BIN</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

<decl><name>FORMAT_OPTION_DATA_DEC</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>,

}</block>;</enum>

<struct>struct <name>_formattingOptions</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>options</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>addressLabelPrefix</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>addressFieldWidth</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>_formattingOptions</name></name></type> <name>formattingOptions</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>printDisassembledInstruction</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>disassembledInstruction</name></type> <name>dInstruction</name></decl></parameter>, <parameter><decl><type><name>formattingOptions</name></type> <name>fOptions</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>extern</specifier> <name>uint32_t</name></type> <name>AVR_Long_Address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>AVR_Long_Instruction</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
