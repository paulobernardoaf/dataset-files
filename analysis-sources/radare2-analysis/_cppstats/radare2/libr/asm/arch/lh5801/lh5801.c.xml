<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\lh5801\lh5801.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lh5801.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARRAY_LENGTH</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(sizeof(a)/sizeof((a)[0]))</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>lh5801_insn_class_desc</name></name></type>

<name><name>lh5801_insn_class_descs</name><index>[<expr><name>LH5801_INSNC_NUMBER</name></expr>]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>LH5801_INSNC_ADC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"adc"</literal></expr>, <expr><literal type="string">"add with carry"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ADI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"adi"</literal></expr>, <expr><literal type="string">"add immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_DCA</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"dca"</literal></expr>, <expr><literal type="string">"decimal add"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ADR</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"adr"</literal></expr>, <expr><literal type="string">"add Rreg"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SBC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sbc"</literal></expr>, <expr><literal type="string">"subtract with carry"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SBI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sbi"</literal></expr>, <expr><literal type="string">"subtract immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_DCS</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"dcs"</literal></expr>, <expr><literal type="string">"decimal subtract"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_AND</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"and"</literal></expr>, <expr><literal type="string">"and accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ANI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"ani"</literal></expr>, <expr><literal type="string">"and immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ORA</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"ora"</literal></expr>, <expr><literal type="string">"or accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ORI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"ori"</literal></expr>, <expr><literal type="string">"or immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_EOR</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"eor"</literal></expr>, <expr><literal type="string">"exclusive or"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_EAI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"eai"</literal></expr>, <expr><literal type="string">"exclusive or accumulator, immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_INC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"inc"</literal></expr>, <expr><literal type="string">"increment"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_DEC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"dec"</literal></expr>, <expr><literal type="string">"decrement"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_CPA</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"cpa"</literal></expr>, <expr><literal type="string">"compare accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_CPI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"cpi"</literal></expr>, <expr><literal type="string">"compare immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_BIT</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"bit"</literal></expr>, <expr><literal type="string">"bit test"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_BII</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"bii"</literal></expr>, <expr><literal type="string">"bit test immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_LDA</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"lda"</literal></expr>, <expr><literal type="string">"load accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_LDE</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"lde"</literal></expr>, <expr><literal type="string">"load and decrement"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_LIN</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"lin"</literal></expr>, <expr><literal type="string">"load and increment"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_LDI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"ldi"</literal></expr>, <expr><literal type="string">"load immediate"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_LDX</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"ldx"</literal></expr>, <expr><literal type="string">"load Xreg"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_STA</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sta"</literal></expr>, <expr><literal type="string">"store accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SDE</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sde"</literal></expr>, <expr><literal type="string">"store and decrement"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SIN</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sin"</literal></expr>, <expr><literal type="string">"store and increment"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_STX</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"stx"</literal></expr>, <expr><literal type="string">"store Xreg"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_PSH</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"psh"</literal></expr>, <expr><literal type="string">"push"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_POP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"pop"</literal></expr>, <expr><literal type="string">"pop"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ATT</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"att"</literal></expr>, <expr><literal type="string">"accumulator to t (status register)"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_TTA</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"tta"</literal></expr>, <expr><literal type="string">"t (status register) to accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_TIN</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"tin"</literal></expr>, <expr><literal type="string">"transfer and increment"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_CIN</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"cin"</literal></expr>, <expr><literal type="string">"compare and increment"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ROL</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rol"</literal></expr>, <expr><literal type="string">"rotate left"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ROR</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"ror"</literal></expr>, <expr><literal type="string">"rotate right"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SHL</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"shl"</literal></expr>, <expr><literal type="string">"shift left"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SHR</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"shr"</literal></expr>, <expr><literal type="string">"shift right"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_DRL</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"drl"</literal></expr>, <expr><literal type="string">"digit rotate left"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_DRR</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"drr"</literal></expr>, <expr><literal type="string">"digit rotate right"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_AEX</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"aex"</literal></expr>, <expr><literal type="string">"exchange accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SEC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sec"</literal></expr>, <expr><literal type="string">"set carry flag"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_REC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rec"</literal></expr>, <expr><literal type="string">"reset carry flag"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_CDV</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"cdv"</literal></expr>, <expr><literal type="string">"clear divider"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ATP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"atp"</literal></expr>, <expr><literal type="string">"accumulator to port"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SPU</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"spu"</literal></expr>, <expr><literal type="string">"set PU"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_RPU</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rpu"</literal></expr>, <expr><literal type="string">"reset PU"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SPV</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"spv"</literal></expr>, <expr><literal type="string">"set PV"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_RPV</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rpv"</literal></expr>, <expr><literal type="string">"reset PV"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SDP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sdp"</literal></expr>, <expr><literal type="string">"set display"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_RDP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rdp"</literal></expr>, <expr><literal type="string">"reset display"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_ITA</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"ita"</literal></expr>, <expr><literal type="string">"IN to accumulator"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SIE</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sie"</literal></expr>, <expr><literal type="string">"set interrupt enable"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_RIE</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rie"</literal></expr>, <expr><literal type="string">"reset interrupt enable"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_AM0</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"am0"</literal></expr>, <expr><literal type="string">"accumulator to tm and 0"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_AM1</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"am1"</literal></expr>, <expr><literal type="string">"accumulator to tm and 1"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_NOP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"nop"</literal></expr>, <expr><literal type="string">"no operation"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_HLT</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"hlt"</literal></expr>, <expr><literal type="string">"halt"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_OFF</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"off"</literal></expr>, <expr><literal type="string">"\"off\", reset BF"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_JMP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"jmp"</literal></expr>, <expr><literal type="string">"jump"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_BCH</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"bch"</literal></expr>, <expr><literal type="string">"unconditional branch"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_BCC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"bcc"</literal></expr>, <expr><literal type="string">"conditional branch"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_LOP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"lop"</literal></expr>, <expr><literal type="string">"loop"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_SJP</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"sjp"</literal></expr>, <expr><literal type="string">"subroutine jump (aka. call)"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_VEJ</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"vej"</literal></expr>, <expr><literal type="string">"vector subroutine jump, short format"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_VMJ</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"vmj"</literal></expr>, <expr><literal type="string">"vector subroutine jump, long format"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_VCC</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"vcc"</literal></expr>, <expr><literal type="string">"conditional vector subroutine jump"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_RTN</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rtn"</literal></expr>, <expr><literal type="string">"return from subroutine"</literal></expr> }</block></expr>,

<expr><index>[<expr><name>LH5801_INSNC_RTI</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="string">"rti"</literal></expr>, <expr><literal type="string">"return from interrupt"</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<enum>enum <name>lh5801_insn_format</name> <block>{

<decl><name>LH5801_IFMT_IMM0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_IMM1</name></decl>,

<decl><name>LH5801_IFMT_IMM2</name></decl>,

<decl><name>LH5801_IFMT_IMM3</name></decl>,

<decl><name>LH5801_IFMT_IMM_MASK</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_FD_NO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_FD_YES</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_FD_MOD</name> <init>= <expr><literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>, 

<decl><name>LH5801_IFMT_FD_MASK</name> <init>= <expr><literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>, 

<decl><name>LH5801_IFMT_RREG</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>, 

<decl><name>LH5801_IFMT_AREG</name> <init>= <expr><literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>, 

<decl><name>LH5801_IFMT_SREG</name> <init>= <expr><literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>, 

<decl><name>LH5801_IFMT_PREG</name> <init>= <expr><literal type="number">4</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>, 

<decl><name>LH5801_IFMT_REG_MASK</name> <init>= <expr><literal type="number">7</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_COND</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_BCH</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_VEJ</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">9</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_RFULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_RLOW</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_RHIGH</name> <init>= <expr><literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>,

<decl><name>LH5801_IFMT_RMEM</name> <init>= <expr><literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>, 

<decl><name>LH5801_IFMT_RMODE_MASK</name> <init>= <expr><literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LH5801_IFMT_IMMS</name><parameter_list>(<parameter><type><name>f</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((f)&amp;LH5801_IFMT_IMM_MASK)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LH5801_IFMT_RMODE</name><parameter_list>(<parameter><type><name>f</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((f)&amp;LH5801_IFMT_RMODE_MASK)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>lh5801_ifmt_fd_matches</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>lh5801_insn_format</name></name></type> <name>fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list> <block>{<block_content>

<switch>switch <condition>(<expr><name>fmt</name> <operator>&amp;</operator> <name>LH5801_IFMT_FD_MASK</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LH5801_IFMT_FD_NO</name></expr>:</case> <return>return <expr><operator>!</operator><name>fd</name></expr>;</return>

<case>case <expr><name>LH5801_IFMT_FD_YES</name></expr>:</case> <return>return <expr><name>fd</name></expr>;</return>

<case>case <expr><name>LH5801_IFMT_FD_MOD</name></expr>:</case> <return>return <expr><name>true</name></expr>;</return>

<default>default:</default> <return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<struct>struct <name>lh5801_insn_desc</name> <block>{

<decl_stmt><decl><type><name>ut8</name></type> <name>iclass</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ut8</name></type> <name>opcode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>format</name></decl>;</decl_stmt> 

}</block>;</struct>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>lh5801_insn_desc</name></name></type> <name><name>lh5801_insn_descs</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x02</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x82</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x03</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xa3</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_AREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xb3</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name><operator>|</operator><name>LH5801_IFMT_RMEM</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4f</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM3</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xef</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DCA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x8c</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ADR</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xca</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SBC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x00</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SBC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x80</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SBC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x01</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SBC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xa1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SBI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_AREG</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xb1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DCS</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x0c</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_AND</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x09</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_AND</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xa9</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ANI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_AREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xb9</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ANI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x49</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ANI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM3</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xe9</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ORA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x0b</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ORA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xab</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ORI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_AREG</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xbb</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ORI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4b</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ORI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM3</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xeb</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_EOR</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x0d</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_EOR</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xad</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_EAI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xbd</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_INC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_AREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xdd</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_INC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x40</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_INC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name><operator>|</operator><name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x40</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_INC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x44</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DEC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_AREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xdf</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DEC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x42</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DEC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name><operator>|</operator><name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x42</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DEC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x46</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CPA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x06</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CPA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x86</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CPA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x07</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CPA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xa7</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CPI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4e</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CPI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4c</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CPI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_AREG</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xb7</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_BIT</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x0f</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_BIT</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xaf</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_BII</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_AREG</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xbf</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_BII</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4d</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_BII</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM3</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xed</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x04</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x84</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x05</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xa5</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDE</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x47</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LIN</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x45</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4a</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x48</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_AREG</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xb5</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_SREG</name><operator>|</operator><name>LH5801_IFMT_IMM2</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xaa</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDX</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x08</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDX</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_SREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x48</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LDX</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_PREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x58</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_STA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RLOW</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x0a</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_STA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RHIGH</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x08</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_STA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name><operator>|</operator><name>LH5801_IFMT_RMEM</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x0e</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_STA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name><operator>|</operator><name>LH5801_IFMT_FD_MOD</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xae</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SDE</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x43</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SIN</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x41</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_STX</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4a</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_STX</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_SREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4e</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_STX</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_PREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x5e</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_PSH</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_AREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xc8</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_PSH</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x88</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_POP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_AREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x8a</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_POP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name><operator>|</operator><name>LH5801_IFMT_RREG</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x0a</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ATT</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xec</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_TTA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xaa</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_TIN</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xf5</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CIN</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xf7</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ROL</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xdd</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ROR</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xd1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SHL</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xd9</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SHR</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xd5</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DRL</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>, 

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xd7</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_DRR</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>, 

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xd3</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_AEX</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xf1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_AM0</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xce</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_AM1</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xde</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_CDV</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x8e</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ATP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xcc</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SDP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xc1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_RDP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xc0</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SPU</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xe1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_RPU</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xe3</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SPV</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xa8</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_RPV</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xb8</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_ITA</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xba</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_RIE</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xbe</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SIE</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x81</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_HLT</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xb1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_OFF</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_FD_YES</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x4c</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_NOP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x38</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SEC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xfb</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_REC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xf9</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_JMP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xba</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_BCH</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_BCH</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x8e</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_BCC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_BCH</name><operator>|</operator><name>LH5801_IFMT_COND</name><operator>|</operator><name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x81</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_LOP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x88</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_SJP</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM2</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xbe</literal></expr>,

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_VEJ</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_VEJ</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xc0</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_VCC</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_COND</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xc1</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_VMJ</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <name>LH5801_IFMT_IMM1</name></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0xcd</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_RTN</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x9a</literal></expr>

}</block></expr>,

<expr><block>{ 

<expr><operator>.</operator><name>iclass</name> <operator>=</operator> <name>LH5801_INSNC_RTI</name></expr>,

<expr><operator>.</operator><name>format</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>opcode</name> <operator>=</operator> <literal type="number">0x8a</literal></expr>

}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>lh5801_decode</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>lh5801_insn</name></name> <modifier>*</modifier></type><name>insn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>fd</name> <init>= <expr><operator>(</operator><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0xfd</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>type</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>lh5801_insn_desc</name></name></type> <name>desc</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>fd</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>buf</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name><operator>--</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>len</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ARRAY_LENGTH</name><argument_list>(<argument><expr><name>lh5801_insn_descs</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>ut8</name></type> <name>byte</name> <init>= <expr><operator>*</operator><name>buf</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>ifmt_reg</name></decl>;</decl_stmt>

<expr_stmt><expr><name>desc</name> <operator>=</operator> <name><name>lh5801_insn_descs</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>fmt</name> <operator>=</operator> <name><name>desc</name><operator>.</operator><name>format</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>ifmt_reg</name> <operator>=</operator> <name>fmt</name> <operator>&amp;</operator> <name>LH5801_IFMT_REG_MASK</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>lh5801_ifmt_fd_matches</name><argument_list>(<argument><expr><name>fmt</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ifmt_reg</name> <operator>==</operator> <name>LH5801_IFMT_RREG</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>byte</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>%</operator> <literal type="number">4</literal> <operator>==</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ifmt_reg</name> <operator>==</operator> <name>LH5801_IFMT_RREG</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>byte</name> <operator>&amp;=</operator> <literal type="number">0xcf</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<if_stmt><if>if <condition>(<expr><name>fmt</name> <operator>&amp;</operator> <name>LH5801_IFMT_COND</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>byte</name> <operator>&amp;=</operator> <literal type="number">0xf1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<if_stmt><if>if <condition>(<expr><name>fmt</name> <operator>&amp;</operator> <name>LH5801_IFMT_BCH</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>byte</name> <operator>&amp;=</operator> <literal type="number">0xef</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<if_stmt><if>if <condition>(<expr><name>byte</name> <operator>==</operator> <name><name>desc</name><operator>.</operator><name>opcode</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>type</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>fmt</name> <operator>&amp;</operator> <name>LH5801_IFMT_VEJ</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>byte</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator> <name>byte</name> <operator>&gt;=</operator> <literal type="number">0xc0</literal> <operator>&amp;&amp;</operator> <name>byte</name> <operator>&lt;=</operator> <literal type="number">0xf6</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>type</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>type</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>insn</name><operator>-&gt;</operator><name>iclass</name></name> <operator>=</operator> <name><name>desc</name><operator>.</operator><name>iclass</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>insn</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>insn</name><operator>-&gt;</operator><name>fd</name></name> <operator>=</operator> <name>fd</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>insn</name><operator>-&gt;</operator><name>opcode</name></name> <operator>=</operator> <name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><call><name>LH5801_IFMT_IMMS</name><argument_list>(<argument><expr><name><name>desc</name><operator>.</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">3</literal></expr>:</case> <expr_stmt><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>buf</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>buf</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></switch>

<return>return <expr><name>fd</name> <operator>+</operator> <literal type="number">1</literal> <operator>+</operator> <call><name>LH5801_IFMT_IMMS</name><argument_list>(<argument><expr><name><name>desc</name><operator>.</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>print_reg</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>lh5801_insn</name></name> <modifier>*</modifier></type><name>insn</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>lh5801_insn_desc</name></name></type> <name>desc</name> <init>= <expr><name><name>lh5801_insn_descs</name><index>[<expr><name><name>insn</name><operator>-&gt;</operator><name>type</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>regnr</name> <init>= <expr><operator>(</operator><name><name>insn</name><operator>-&gt;</operator><name>opcode</name></name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">3</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>names</name><index>[]</index></name> <init>= <expr><literal type="string">"xyu"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>saved_buf</name> <init>= <expr><name>buf</name></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <name>LH5801_IFMT_REG_MASK</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LH5801_IFMT_AREG</name></expr>:</case> <return>return <expr><literal type="string">"a"</literal></expr>;</return>

<case>case <expr><name>LH5801_IFMT_SREG</name></expr>:</case> <return>return <expr><literal type="string">"s"</literal></expr>;</return>

<case>case <expr><name>LH5801_IFMT_PREG</name></expr>:</case> <return>return <expr><literal type="string">"p"</literal></expr>;</return>

</block_content>}</block></switch>

<if_stmt><if>if <condition>(<expr><name>regnr</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="string">"invalid"</literal></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content> <switch>switch <condition>(<expr><call><name>LH5801_IFMT_RMODE</name><argument_list>(<argument><expr><name><name>desc</name><operator>.</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LH5801_IFMT_RFULL</name></expr>:</case>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>names</name><index>[<expr><name>regnr</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_RLOW</name></expr>:</case>

<case>case <expr><name>LH5801_IFMT_RHIGH</name></expr>:</case>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>names</name><index>[<expr><name>regnr</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <name>LH5801_IFMT_RLOW</name><operator>)</operator></expr>?</condition><then> <expr><literal type="char">'l'</literal></expr></then><else>:<expr><literal type="char">'h'</literal></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_RMEM</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <name>LH5801_IFMT_FD_MOD</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>insn</name><operator>-&gt;</operator><name>fd</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><operator>(</operator><name>buf</name><operator>++</operator><operator>)</operator> <operator>=</operator> <literal type="char">'#'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'('</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>names</name><index>[<expr><name>regnr</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="char">')'</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></else></if_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></switch></block_content></block></else></if_stmt>

<return>return <expr><name>saved_buf</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lh5801_print_insn</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>lh5801_insn</name></name> <modifier>*</modifier></type><name>insn</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>lh5801_insn_class_desc</name></name> <modifier>*</modifier></type><name>iclass</name> <init>=

<expr><operator>&amp;</operator><name><name>lh5801_insn_class_descs</name><index>[<expr><name><name>insn</name><operator>-&gt;</operator><name>iclass</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>lh5801_insn_desc</name></name></type> <name>desc</name> <init>= <expr><name><name>lh5801_insn_descs</name><index>[<expr><name><name>insn</name><operator>-&gt;</operator><name>type</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mnem</name> <init>= <expr><name><name>iclass</name><operator>-&gt;</operator><name>mnem</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>mnembuf</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>regbuf</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <name>LH5801_IFMT_COND</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>mnembuf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>mnem</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>mnembuf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"chzv"</literal><index>[<expr><operator>(</operator><name><name>insn</name><operator>-&gt;</operator><name>opcode</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>%</operator> <literal type="number">4</literal></expr>]</index></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>mnembuf</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>insn</name><operator>-&gt;</operator><name>opcode</name></name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator></expr>?</condition><then> <expr><literal type="char">'s'</literal></expr></then><else>:<expr><literal type="char">'r'</literal></expr></else></ternary></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>mnembuf</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mnem</name> <operator>=</operator> <name>mnembuf</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <operator>~</operator><name>LH5801_IFMT_RMODE_MASK</name> <operator>&amp;</operator> <operator>~</operator><name>LH5801_IFMT_COND</name>

<operator>&amp;</operator> <operator>~</operator><name>LH5801_IFMT_FD_MASK</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LH5801_IFMT_VEJ</name></expr>:</case>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %02xh"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_IMM0</name></expr>:</case>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_IMM0</name><operator>|</operator><name>LH5801_IFMT_RREG</name></expr>:</case>

<case>case <expr><name>LH5801_IFMT_IMM0</name><operator>|</operator><name>LH5801_IFMT_AREG</name></expr>:</case>

<case>case <expr><name>LH5801_IFMT_IMM0</name><operator>|</operator><name>LH5801_IFMT_SREG</name></expr>:</case>

<case>case <expr><name>LH5801_IFMT_IMM0</name><operator>|</operator><name>LH5801_IFMT_PREG</name></expr>:</case>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %s"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>, <argument><expr><call><name>print_reg</name><argument_list>(<argument><expr><name>regbuf</name></expr></argument>, <argument><expr><name>insn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_IMM1</name></expr>:</case>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %02xh"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_RREG</name></expr>:</case>

<case>case <expr><name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_AREG</name></expr>:</case>

<case>case <expr><name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_SREG</name></expr>:</case>

<case>case <expr><name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_PREG</name></expr>:</case>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %s, %02xh"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>,

<argument><expr><call><name>print_reg</name><argument_list>(<argument><expr><name>regbuf</name></expr></argument>, <argument><expr><name>insn</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_IMM1</name><operator>|</operator><name>LH5801_IFMT_BCH</name></expr>:</case>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %c%02xh"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>,

<argument><expr><ternary><condition><expr><operator>(</operator><name><name>insn</name><operator>-&gt;</operator><name>opcode</name></name> <operator>&amp;</operator> <literal type="number">0x10</literal><operator>)</operator></expr>?</condition><then> <expr><literal type="char">'-'</literal></expr></then><else>:<expr><literal type="char">'+'</literal></expr></else></ternary></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_IMM2</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <name>LH5801_IFMT_FD_MOD</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %s(%02x%02xh)"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>insn</name><operator>-&gt;</operator><name>fd</name></name></expr>?</condition><then> <expr><literal type="string">"#"</literal></expr></then><else>:<expr><literal type="string">""</literal></expr></else></ternary></expr></argument>,

<argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %02x%02xh"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>,

<argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<break>break;</break>

<case>case <expr><name>LH5801_IFMT_IMM3</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <name>LH5801_IFMT_FD_MOD</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s %s(%02x%02xh), %02xh"</literal></expr></argument>, <argument><expr><name>mnem</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>insn</name><operator>-&gt;</operator><name>fd</name></name></expr>?</condition><then> <expr><literal type="string">"#"</literal></expr></then><else>:<expr><literal type="string">""</literal></expr></else></ternary></expr></argument>,

<argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>insn</name><operator>-&gt;</operator><name>imm</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>,<argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"imm3 invalid format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s, BUG: unknown format 0x%x -&gt; 0x%x"</literal></expr></argument>,

<argument><expr><name>mnem</name></expr></argument>, <argument><expr><name><name>desc</name><operator>.</operator><name>format</name></name></expr></argument>,

<argument><expr><name><name>desc</name><operator>.</operator><name>format</name></name> <operator>&amp;</operator> <operator>~</operator><name>LH5801_IFMT_RMODE_MASK</name> <operator>&amp;</operator>

<operator>~</operator><name>LH5801_IFMT_COND</name> <operator>&amp;</operator> <operator>~</operator><name>LH5801_IFMT_FD_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></switch>

</block_content>}</block></function>

</unit>
