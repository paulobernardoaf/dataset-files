<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\asm\arch\mcore\mcore.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mcore.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_anal.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MCORE_INSTR_ALIGN</name></cpp:macro> <cpp:value>(2)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>mcore_ctrl_registers</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="string">"psr"</literal></expr>, 

<expr><literal type="string">"vbr"</literal></expr>, 

<expr><literal type="string">"epsr"</literal></expr>, 

<expr><literal type="string">"fpsr"</literal></expr>, 

<expr><literal type="string">"epc"</literal></expr>, 

<expr><literal type="string">"fpc"</literal></expr>, 

<expr><literal type="string">"ss0"</literal></expr>, 

<expr><literal type="string">"ss1"</literal></expr>,

<expr><literal type="string">"ss2"</literal></expr>,

<expr><literal type="string">"ss3"</literal></expr>,

<expr><literal type="string">"ss4"</literal></expr>,

<expr><literal type="string">"gcr"</literal></expr>, 

<expr><literal type="string">"gsr"</literal></expr>, 

<expr><literal type="string">"cpidr"</literal></expr>,

<expr><literal type="string">"dcsr"</literal></expr>,

<expr><literal type="string">"cwr"</literal></expr>,

<expr><literal type="string">"cr16"</literal></expr>,

<expr><literal type="string">"cfr"</literal></expr>,

<expr><literal type="string">"ccr"</literal></expr>,

<expr><literal type="string">"capr"</literal></expr>,

<expr><literal type="string">"pacr"</literal></expr>,

<expr><literal type="string">"prsr"</literal></expr>,

<expr><literal type="string">"cr22"</literal></expr>,

<expr><literal type="string">"cr23"</literal></expr>,

<expr><literal type="string">"cr24"</literal></expr>,

<expr><literal type="string">"cr25"</literal></expr>,

<expr><literal type="string">"cr26"</literal></expr>,

<expr><literal type="string">"cr27"</literal></expr>,

<expr><literal type="string">"cr28"</literal></expr>,

<expr><literal type="string">"cr29"</literal></expr>,

<expr><literal type="string">"cr30"</literal></expr>,

<expr><literal type="string">"cr31"</literal></expr>,

<expr><literal type="string">"unknown"</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INVALID_FIELD</name></cpp:macro> <cpp:value>(0)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>mcore_mask</name> <block>{

<decl_stmt><decl><type><name>ut16</name></type> <name>mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>type</name></decl>;</decl_stmt>

}</block></struct></type> <name>mcore_mask_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>mcore_ops</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>cpu</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>n_args</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mcore_mask_t</name></type> <name><name>args</name><index>[<expr><name>ARGS_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>mcore_ops_t</name>;</typedef>

<decl_stmt><decl><type><name>ut16</name></type> <name><name>load_shift</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MCORE_INSTRS</name></cpp:macro> <cpp:value>265</cpp:value></cpp:define>

<decl_stmt><decl><type><name>mcore_ops_t</name></type> <name><name>mcore_instructions</name><index>[<expr><name>MCORE_INSTRS</name></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">"bkpt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000000</literal></expr>, <expr><name>R_ANAL_OP_TYPE_ILL</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"sync"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000001</literal></expr>, <expr><name>R_ANAL_OP_TYPE_SYNC</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rte"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000010</literal></expr>, <expr><name>R_ANAL_OP_TYPE_RET</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rfi"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000011</literal></expr>, <expr><name>R_ANAL_OP_TYPE_RET</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"stop"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000100</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"wait"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000101</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"doze"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000110</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"idly4"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000000111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"trap"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000001011</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mvtc"</literal></expr> , <expr><name>MCORE_CPU_510E</name></expr>, <expr><literal type="number">0b0000000000001100</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cprc"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000001101</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">0</literal></expr>, <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cpseti"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mvc"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mvcv"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000000111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ldq"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000001001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"stq"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000001011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ldm"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000001101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"stm"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000001111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"dect"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000010001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"decf"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000010011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"inct"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000010101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"incf"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000010111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"jmp"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000011001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_CALL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"jsr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000011011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_RET</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ff1"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000011101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"brev"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"xtrb3"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000100001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"xtrb2"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000100011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"xtrb1"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000100101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"xtrb0"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000100111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"zextb"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000101001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"sextb"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000101011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"zexth"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000101101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"sexth"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000101111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"declt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000110001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"declt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000110011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"decgt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000110101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"decne"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000110111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"clrt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000111001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"clrf"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000111011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"abs"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000111101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"not"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000000111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"movt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000001011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mult"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000001111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"subu"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000010111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"addc"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000011011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"subc"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000011111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cprgr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000100111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"movf"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000101011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lsr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000101111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cmphs"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000101111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cmplt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000110111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"tst"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000111011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cmpne"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0000111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mfcr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001000111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_CTRL</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"psrclr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001000111110111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b0111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"psrset"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001000111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b0111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mov"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001001011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bgenr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001001111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rsub"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001010011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lxw"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001010111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"and"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001011011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"xor"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001011111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mtcr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001000111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_CTRL</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"asr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001101011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lsl"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001101111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"addu"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001110011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lxh"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001110111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"or"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001111011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"andn"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0001111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"addi"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010000111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">3</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cmplti"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010001111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"subi"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010010111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cpwgr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010011111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_CTRL</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rsubi"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010100111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cmpnei"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010101111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bmaski"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010110000001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"divu"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010110000011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mflos"</literal></expr> , <expr><name>MCORE_CPU_610E</name></expr>, <expr><literal type="number">0b0010110000101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mfhis"</literal></expr> , <expr><name>MCORE_CPU_610E</name></expr>, <expr><literal type="number">0b0010110000101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mtlo"</literal></expr> , <expr><name>MCORE_CPU_620</name></expr> , <expr><literal type="number">0b0010110001001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mthi"</literal></expr> , <expr><name>MCORE_CPU_620</name></expr> , <expr><literal type="number">0b0010110001011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mtlo"</literal></expr> , <expr><name>MCORE_CPU_620</name></expr> , <expr><literal type="number">0b0010110001101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"mthi"</literal></expr> , <expr><name>MCORE_CPU_620</name></expr> , <expr><literal type="number">0b0010110001111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bmaski"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010110011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b001110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bmaski"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010110111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"andi"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0010111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bclri"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011000111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cpwir"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011001000001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"divs"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011001000011111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cprsr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011001000101111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cpwsr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011001000111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bgeni"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011001001111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bgeni"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011001011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b001110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bgeni"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011001111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bgeni"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011010111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"btsti"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011011111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"xsr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011100000001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rotli"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011100111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"asrc"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011101000001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"asri"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011101111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lslc"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011110000001111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lsli"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0011110111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"movi"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0110011111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b11111110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cpwcr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0110111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_NULL</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b011111000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_IMM</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"jmpi"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0111000011111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_JMP</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11111111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_JMP</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lrw"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0111111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_LOAD</name></expr> , <expr><literal type="number">2</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11111111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_MEM</name></expr> }</block></expr>,<expr><block>{ <expr><literal type="number">0b111100000000</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>TYPE_REG</name></expr> }</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"jsri"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b0111111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_CALL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11111111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_JMPI</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.w"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1000111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_LOAD</name></expr> , <expr><literal type="number">4</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b11110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b111100000000</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b110000000000000</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"st.w"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1001111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_STORE</name></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b11110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b111100000000</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b110000000000000</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.b"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1010111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_LOAD</name></expr> , <expr><literal type="number">4</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b11110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b111100000000</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b110000000000000</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"st.b"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1011111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_STORE</name></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b11110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b111100000000</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b110000000000000</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ld.h"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1100111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_LOAD</name></expr> , <expr><literal type="number">4</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b11110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b111100000000</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b110000000000000</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"st.h"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1101111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_STORE</name></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b1111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b11110000</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b111100000000</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{ <expr><literal type="number">0b110000000000000</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><name>TYPE_NONE</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bt"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1110011111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_CJMP</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11111111111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_JMP</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bf"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1110111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_CJMP</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11111111111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_JMP</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"br"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1111011111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_CJMP</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11111111111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_JMP</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bsr"</literal></expr> , <expr><name>MCORE_CPU_DFLT</name></expr>, <expr><literal type="number">0b1111111111111111</literal></expr>, <expr><name>R_ANAL_OP_TYPE_CALL</name></expr> , <expr><literal type="number">1</literal></expr>, <expr><block>{<expr><block>{ <expr><literal type="number">0b11111111111</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>TYPE_JMP</name></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>,<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>mcore_t</name> <modifier>*</modifier></type><name>find_instruction</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name><modifier>*</modifier></type> <name>buffer</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>ut32</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mcore_ops_t</name> <modifier>*</modifier></type><name>op_ptr</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mcore_t</name> <modifier>*</modifier></type><name>op</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>buffer</name> <operator>||</operator> <operator>!</operator><operator>(</operator><name>op</name> <operator>=</operator> <call><name>malloc</name> <argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>mcore_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name> <argument_list>(<argument><expr><name>op</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>mcore_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>count</name> <init>= <expr><sizeof>sizeof <argument_list>(<argument><expr><name>mcore_instructions</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof <argument_list>(<argument><expr><name>mcore_ops_t</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>data</name> <init>= <expr><name><name>buffer</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>data</name> <operator>|=</operator> <name><name>buffer</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>bytes</name></name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <name>MCORE_INSTR_ALIGN</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>data</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>op_ptr</name> <operator>=</operator> <operator>&amp;</operator><name><name>mcore_instructions</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>op_ptr</name> <operator>=</operator> <operator>&amp;</operator><name><name>mcore_instructions</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ut16</name></type> <name>masked</name> <init>= <expr><name>data</name> <operator>&amp;</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>mask</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>masked</name> <operator>==</operator> <name>data</name></expr>)</condition> <block>{<block_content>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;=</operator> <name>count</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>name</name></name> <operator>=</operator> <literal type="string">"illegal"</literal></expr>;</expr_stmt>

<return>return <expr><name>op</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strncmp</name> <argument_list>(<argument><expr><name><name>op_ptr</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><literal type="string">"lrw"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name>data</name> <operator>&amp;</operator> <literal type="number">0b111100000000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0b111100000000</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i</name><operator>&lt;</operator> <name>MCORE_INSTRS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>op_ptr</name> <operator>=</operator> <operator>&amp;</operator><name><name>mcore_instructions</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>name</name></name> <operator>=</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>name</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>n_args</name></name> <operator>=</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>n_args</name></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>n_args</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <operator>(</operator><name>data</name> <operator>&amp;</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>mask</name><operator>)</operator> <operator>&gt;&gt;</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>shift</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>op</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>=</operator> <name><name>op_ptr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>op</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>mcore_init</name><parameter_list>(<parameter><decl><type><name>mcore_handle</name><modifier>*</modifier></type> <name>handle</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut8</name><modifier>*</modifier></type> <name>buffer</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ut32</name></type> <name>size</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>handle</name> <operator>||</operator> <operator>!</operator><name>buffer</name> <operator>||</operator> <name>size</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>handle</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name>buffer</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>handle</name><operator>-&gt;</operator><name>end</name></name> <operator>=</operator> <name>buffer</name> <operator>+</operator> <name>size</name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name>mcore_t</name><modifier>*</modifier></type> <name>mcore_next</name><parameter_list>(<parameter><decl><type><name>mcore_handle</name><modifier>*</modifier></type> <name>handle</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>mcore_t</name> <modifier>*</modifier></type><name>op</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>handle</name> <operator>||</operator> <name><name>handle</name><operator>-&gt;</operator><name>pos</name></name> <operator>+</operator> <name>MCORE_INSTR_ALIGN</name> <operator>&gt;</operator> <name><name>handle</name><operator>-&gt;</operator><name>end</name></name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>op</name> <operator>&amp;&amp;</operator> <name><name>handle</name><operator>-&gt;</operator><name>pos</name></name> <operator>+</operator> <literal type="number">2</literal> <operator>&lt;=</operator> <name><name>handle</name><operator>-&gt;</operator><name>end</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>op</name> <operator>=</operator> <call><name>find_instruction</name> <argument_list>(<argument><expr><name><name>handle</name><operator>-&gt;</operator><name>pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>handle</name><operator>-&gt;</operator><name>pos</name></name> <operator>+=</operator> <name>MCORE_INSTR_ALIGN</name></expr>;</expr_stmt>

<return>return <expr><name>op</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>mcore_free</name><parameter_list>(<parameter><decl><type><name>mcore_t</name><modifier>*</modifier></type> <name>instr</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>instr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>print_loop</name><parameter_list>(<parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>str</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>mcore_t</name><modifier>*</modifier></type> <name>instr</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>ut32</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bufsize</name> <init>= <expr><name>size</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>add</name> <init>= <expr><call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><name>bufsize</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name><name>instr</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>add</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <name><name>instr</name><operator>-&gt;</operator><name>n_args</name></name> <operator>&amp;&amp;</operator> <name>add</name> <operator>&lt;</operator> <name>bufsize</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>==</operator> <name>TYPE_REG</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>add</name> <operator>+=</operator> <call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name> <operator>+</operator> <name>add</name></expr></argument>, <argument><expr><name>bufsize</name> <operator>-</operator> <name>add</name></expr></argument>, <argument><expr><literal type="string">" r%u,"</literal></expr></argument>, <argument><expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>==</operator> <name>TYPE_IMM</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>add</name> <operator>+=</operator> <call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name> <operator>+</operator> <name>add</name></expr></argument>, <argument><expr><name>bufsize</name> <operator>-</operator> <name>add</name></expr></argument>, <argument><expr><literal type="string">" 0x%x,"</literal></expr></argument>, <argument><expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>==</operator> <name>TYPE_MEM</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>add</name> <operator>+=</operator> <call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name> <operator>+</operator> <name>add</name></expr></argument>, <argument><expr><name>bufsize</name> <operator>-</operator> <name>add</name></expr></argument>, <argument><expr><literal type="string">" 0x%x(r%d),"</literal></expr></argument>,

<argument><expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>, <argument><expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>==</operator> <name>TYPE_JMPI</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ut64</name></type> <name>jump</name> <init>= <expr><name>addr</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xfffffffc</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>add</name> <operator>+=</operator> <call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name> <operator>+</operator> <name>add</name></expr></argument>, <argument><expr><name>bufsize</name> <operator>-</operator> <name>add</name></expr></argument>, <argument><expr><literal type="string">" [0x%"</literal> <name>PFMT64x</name><literal type="string">"],"</literal></expr></argument>, <argument><expr><name>jump</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>==</operator> <name>TYPE_JMP</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ut64</name></type> <name>jump</name> <init>= <expr><name>addr</name> <operator>+</operator> <name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>add</name> <operator>+=</operator> <call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name> <operator>+</operator> <name>add</name></expr></argument>, <argument><expr><name>bufsize</name> <operator>-</operator> <name>add</name></expr></argument>, <argument><expr><literal type="string">" 0x%"</literal> <name>PFMT64x</name> <literal type="string">","</literal></expr></argument>, <argument><expr><name>jump</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>==</operator> <name>TYPE_CTRL</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ut32</name></type> <name>pos</name> <init>= <expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>pos</name> <operator>&gt;=</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>pos</name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>add</name> <operator>+=</operator> <call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name> <operator>+</operator> <name>add</name></expr></argument>, <argument><expr><name>bufsize</name> <operator>-</operator> <name>add</name></expr></argument>, <argument><expr><literal type="string">" %s,"</literal></expr></argument>, <argument><expr><name><name>mcore_ctrl_registers</name><index>[<expr><name>pos</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>n_args</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><operator>(</operator><name>str</name> <operator>+</operator> <name>add</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>mcore_snprint</name><parameter_list>(<parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>str</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>mcore_t</name><modifier>*</modifier></type> <name>instr</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>ut32</name></type> <name>imm</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>instr</name> <operator>||</operator> <operator>!</operator><name>str</name></expr>)</condition> <block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>instr</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>R_ANAL_OP_TYPE_LOAD</name></expr>:</case>

<case>case <expr><name>R_ANAL_OP_TYPE_STORE</name></expr>:</case>

<expr_stmt><expr><name>imm</name> <operator>=</operator> <name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>&lt;&lt;</operator> <name><name>load_shift</name><index>[<expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>value</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>snprintf</name> <argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><literal type="string">"%s r%u, (r%u, 0x%x)"</literal></expr></argument>,

<argument><expr><name><name>instr</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>, <argument><expr><name><name>instr</name><operator>-&gt;</operator><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>, <argument><expr><name>imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>print_loop</name> <argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><name>instr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></function>

</unit>
