<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\bin\format\sfc\sfc_specs.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOROM_PAGE_SIZE</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HIROM_PAGE_SIZE</name></cpp:macro> <cpp:value>0x10000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BANK_SIZE</name></cpp:macro> <cpp:value>0x10000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SFC_HDR_SIZE</name></cpp:macro> <cpp:value>sizeof (sfc_int_hdr)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOROM_HDR_LOC</name></cpp:macro> <cpp:value>0x7FC0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HIROM_HDR_LOC</name></cpp:macro> <cpp:value>0xFFC0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ADDMEM_START_ADDRESS</name></cpp:macro> <cpp:value>0x6000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ADDMEM_SIZE</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU1_REG_ADDRESS</name></cpp:macro> <cpp:value>0x2100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU1_REG_SIZE</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSP_REG_ADDRESS</name></cpp:macro> <cpp:value>0x3000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSP_REG_SIZE</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OLDJOY_REG_ADDRESS</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OLDJOY_REG_SIZE</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU2_REG_ADDRESS</name></cpp:macro> <cpp:value>0x4200</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU2_REG_SIZE</name></cpp:macro> <cpp:value>0x0300</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOWRAM_START_ADDRESS</name></cpp:macro> <cpp:value>0x7E0000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOWRAM_SIZE</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOWRAM_MIRROR_START_ADDRESS</name></cpp:macro> <cpp:value>0x0000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOWRAM_MIRROR_SIZE</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HIRAM_START_ADDRESS</name></cpp:macro> <cpp:value>0x7E2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HIRAM_SIZE</name></cpp:macro> <cpp:value>0x6000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EXTRAM_START_ADDRESS</name></cpp:macro> <cpp:value>0x7E8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EXTRAM_SIZE</name></cpp:macro> <cpp:value>0x18000</cpp:value></cpp:define>

<macro><name>R_PACKED</name> <argument_list>(

<argument>typedef struct {

char name[<literal type="number">0x15</literal>]; 

ut8 rom_setup; 

ut8 rom_type; 

ut8 rom_size; 

ut8 sram_size; 

ut8 dest_code;

ut8 fixed_0x33; 

ut8 rom_version;

ut16 comp_check; 

ut16 checksum;

}</argument>)</argument_list></macro> <expr_stmt><expr><name>sfc_int_hdr</name></expr>;</expr_stmt>

</unit>
