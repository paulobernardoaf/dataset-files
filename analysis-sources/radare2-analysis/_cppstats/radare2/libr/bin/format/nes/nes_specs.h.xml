<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\bin\format\nes\nes_specs.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INES_MAGIC</name></cpp:macro> <cpp:value>"\x4E\x45\x53\x1A"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRG_PAGE_SIZE</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHR_PAGE_SIZE</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INES_HDR_SIZE</name></cpp:macro> <cpp:value>sizeof (ines_hdr)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_START_ADDRESS</name></cpp:macro> <cpp:value>0x0000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_SIZE</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_MIRROR_1_ADDRESS</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_MIRROR_1_SIZE</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_MIRROR_2_ADDRESS</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_MIRROR_2_SIZE</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_MIRROR_3_ADDRESS</name></cpp:macro> <cpp:value>0x1800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAM_MIRROR_3_SIZE</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_REG_ADDRESS</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_REG_SIZE</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APU_AND_IOREGS_START_ADDRESS</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APU_AND_IOREGS_SIZE</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRAM_START_ADDRESS</name></cpp:macro> <cpp:value>0x6000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRAM_SIZE</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROM_START_ADDRESS</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROM_SIZE</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROM_MIRROR_ADDRESS</name></cpp:macro> <cpp:value>0xC000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROM_MIRROR_SIZE</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NMI_VECTOR_START_ADDRESS</name></cpp:macro> <cpp:value>0xFFFA</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESET_VECTOR_START_ADDRESS</name></cpp:macro> <cpp:value>0xFFFC</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IRQ_VECTOR_START_ADDRESS</name></cpp:macro> <cpp:value>0xFFFE</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_CTRL_REG1</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_CTRL_REG2</name></cpp:macro> <cpp:value>0x2001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_STATUS</name></cpp:macro> <cpp:value>0x2002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_SPR_ADDR</name></cpp:macro> <cpp:value>0x2003</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_SPR_DATA</name></cpp:macro> <cpp:value>0x2004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_SCROLL_REG</name></cpp:macro> <cpp:value>0x2005</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_ADDRESS</name></cpp:macro> <cpp:value>0x2006</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PPU_DATA</name></cpp:macro> <cpp:value>0x2007</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SND_REGISTER</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SND_SQUARE1_REG</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SND_SQUARE2_REG</name></cpp:macro> <cpp:value>0x4004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SND_TRIANGLE_REG</name></cpp:macro> <cpp:value>0x4008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SND_NOISE_REG</name></cpp:macro> <cpp:value>0x400c</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SND_DELTA_REG</name></cpp:macro> <cpp:value>0x4010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SND_MASTERCTRL_REG</name></cpp:macro> <cpp:value>0x4015</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPR_DMA</name></cpp:macro> <cpp:value>0x4014</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JOYPAD_PORT</name></cpp:macro> <cpp:value>0x4016</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JOYPAD_PORT1</name></cpp:macro> <cpp:value>0x4016</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JOYPAD_PORT2</name></cpp:macro> <cpp:value>0x4017</cpp:value></cpp:define>

<macro><name>R_PACKED</name> <argument_list>(

<argument>typedef struct {

char id[<literal type="number">0x4</literal>]; 

ut8 prg_page_count_16k; 

ut8 chr_page_count_8k; 

ut8 rom_control_byte_0; 

ut8 rom_control_byte_1; 

ut8 ram_bank_count_8k; 

ut8 reserved[<literal type="number">7</literal>]; 

}</argument>)</argument_list></macro> <expr_stmt><expr><name>ines_hdr</name></expr>;</expr_stmt>

</unit>
