<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\bin\format\mach0\dyldcache.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;r_types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mach0_specs.h"</cpp:file></cpp:include>

<struct>struct <name>r_bin_dyldcache_obj_t</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nlibs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>cache_header</name></name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBuffer</name><modifier>*</modifier></type> <name>b</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>r_bin_dyldcache_lib_t</name> <block>{

<decl_stmt><decl><type><name>char</name></type> <name><name>path</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RBuffer</name> <modifier>*</modifier></type><name>b</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>last</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>dyld_cache_mapping_info</name> <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>fileOffset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>maxProt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>initProt</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>dyld_cache_image_info</name> <block>{

<decl_stmt><decl><type><name>ut64</name></type> <name>address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>modTime</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut64</name></type> <name>inode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>pathFileOffset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>pad</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>dyld_cache_slide_info</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>toc_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>toc_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>entries_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>entries_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>entries_size</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><struct>struct <name>_dyld_cache_local_symbols_info</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>nlistOffset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>nlistCount</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>stringsOffset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>stringsSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>entriesOffset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>entriesCount</name></decl>;</decl_stmt>

}</block></struct></type> <name>dyld_cache_local_symbols_info</name>;</typedef>

<typedef>typedef <type><struct>struct <name>_dyld_cache_local_symbols_entry</name> <block>{

<decl_stmt><decl><type><name>ut32</name></type> <name>dylibOffset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>nlistStartIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ut32</name></type> <name>nlistCount</name></decl>;</decl_stmt>

}</block></struct></type> <name>dyld_cache_local_symbols_entry</name>;</typedef>

<function_decl><type><name><name>struct</name> <name>r_bin_dyldcache_lib_t</name></name> <modifier>*</modifier></type><name>r_bin_dyldcache_extract</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_bin_dyldcache_obj_t</name></name><modifier>*</modifier></type> <name>bin</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>nlib</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>r_bin_dyldcache_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_bin_dyldcache_obj_t</name></name><modifier>*</modifier></type> <name>bin</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>r_bin_dyldcache_obj_t</name></name><modifier>*</modifier></type> <name>r_bin_dyldcache_new</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>file</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>r_bin_dyldcache_obj_t</name></name><modifier>*</modifier></type> <name>r_bin_dyldcache_from_bytes_new</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ut8</name><modifier>*</modifier></type> <name>bytes</name></decl></parameter>, <parameter><decl><type><name>ut64</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>r_bin_dydlcache_get_libname</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>r_bin_dyldcache_lib_t</name></name> <modifier>*</modifier></type><name>lib</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>libname</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
