<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\radare2-analysis\_cppstats\radare2\libr\debug\p\native\linux\reg\linux-x64-32.h"><return>return <expr><call><name>strdup</name> <argument_list>(

<argument><expr><literal type="string">"=PC eip\n"</literal>

<literal type="string">"=SP esp\n"</literal>

<literal type="string">"=BP ebp\n"</literal>

<literal type="string">"=A0 eax\n"</literal>

<literal type="string">"=A1 ebx\n"</literal>

<literal type="string">"=A2 ecx\n"</literal>

<literal type="string">"=A3 edx\n"</literal>

<literal type="string">"=ZF zf\n"</literal>

<literal type="string">"=SF sf\n"</literal>

<literal type="string">"=OF of\n"</literal>

<literal type="string">"=CF cf\n"</literal>

<literal type="string">"=SN oeax\n"</literal>

<literal type="string">"gpr eax .32 80 0\n"</literal>

<literal type="string">"gpr ax .16 80 0\n"</literal>

<literal type="string">"gpr ah .8 81 0\n"</literal>

<literal type="string">"gpr al .8 80 0\n"</literal>

<literal type="string">"gpr ebx .32 40 0\n"</literal>

<literal type="string">"gpr bx .16 40 0\n"</literal>

<literal type="string">"gpr bh .8 41 0\n"</literal>

<literal type="string">"gpr bl .8 40 0\n"</literal>

<literal type="string">"gpr ecx .32 88 0\n"</literal>

<literal type="string">"gpr cx .16 88 0\n"</literal>

<literal type="string">"gpr ch .8 89 0\n"</literal>

<literal type="string">"gpr cl .8 88 0\n"</literal>

<literal type="string">"gpr edx .32 96 0\n"</literal>

<literal type="string">"gpr dx .16 96 0\n"</literal>

<literal type="string">"gpr dh .8 97 0\n"</literal>

<literal type="string">"gpr dl .8 96 0\n"</literal>

<literal type="string">"gpr esi .32 104 0\n"</literal>

<literal type="string">"gpr si .16 104 0\n"</literal>

<literal type="string">"gpr edi .32 112 0\n"</literal>

<literal type="string">"gpr di .16 112 0\n"</literal>

<literal type="string">"gpr esp .32 152 0\n"</literal>

<literal type="string">"gpr sp .16 152 0\n"</literal>

<literal type="string">"gpr ebp .32 32 0\n"</literal>

<literal type="string">"gpr bp .16 32 0\n"</literal>

<literal type="string">"gpr eip .32 128 0\n"</literal>

<literal type="string">"gpr ip .16 128 0\n"</literal>

<literal type="string">"seg@gpr xfs .32 200 0\n"</literal>

<literal type="string">"seg@gpr xgs .32 208 0\n"</literal>

<literal type="string">"seg@gpr xcs .32 136 0\n"</literal>

<literal type="string">"seg@gpr cs .16 136 0\n"</literal>

<literal type="string">"seg@gpr xss .32 160 0\n"</literal>

<literal type="string">"gpr flags .16 144 0\n"</literal>

<literal type="string">"gpr eflags .32 144 0 c1p.a.zstido.n.rv\n"</literal>

<literal type="string">"gpr rflags .64 144 0 c1p.a.zstido.n.rv\n"</literal>

<literal type="string">"gpr cf .1 .1152 0 carry\n"</literal>

<literal type="string">"gpr pf .1 .1154 0 parity\n"</literal>

<literal type="string">"gpr af .1 .1156 0 adjust\n"</literal>

<literal type="string">"gpr zf .1 .1158 0 zero\n"</literal>

<literal type="string">"gpr sf .1 .1159 0 sign\n"</literal>

<literal type="string">"gpr tf .1 .1160 0 trap\n"</literal>

<literal type="string">"gpr if .1 .1161 0 interrupt\n"</literal>

<literal type="string">"gpr df .1 .1162 0 direction\n"</literal>

<literal type="string">"gpr of .1 .1163 0 overflow\n"</literal>

<literal type="string">"gpr oeax .32 120 0\n"</literal>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

"drx dr0 .64 0 0\n"

"drx dr1 .64 8 0\n"

"drx dr2 .64 16 0\n"

"drx dr3 .64 24 0\n"

"drx dr6 .64 48 0\n"

"drx dr7 .64 56 0\n"

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<literal type="string">"drx dr0 .32 0 0\n"</literal>

<literal type="string">"drx dr1 .32 4 0\n"</literal>

<literal type="string">"drx dr2 .32 8 0\n"</literal>

<literal type="string">"drx dr3 .32 12 0\n"</literal>

<literal type="string">"drx dr6 .32 24 0\n"</literal>

<literal type="string">"drx dr7 .32 28 0\n"</literal>

<literal type="string">"fpu cwd .16 0 0\n"</literal>

<literal type="string">"fpu swd .16 2 0\n"</literal>

<literal type="string">"fpu ftw .16 4 0\n"</literal>

<literal type="string">"fpu fop .16 6 0\n"</literal>

<literal type="string">"fpu frip .64 8 0\n"</literal>

<literal type="string">"fpu frdp .64 16 0\n"</literal>

<literal type="string">"fpu mxcsr .32 24 0\n"</literal>

<literal type="string">"fpu mxcr_mask .32 28 0\n"</literal>

<literal type="string">"fpu st0 .64 32 0\n"</literal>

<literal type="string">"fpu st1 .64 48 0\n"</literal>

<literal type="string">"fpu st2 .64 64 0\n"</literal>

<literal type="string">"fpu st3 .64 80 0\n"</literal>

<literal type="string">"fpu st4 .64 96 0\n"</literal>

<literal type="string">"fpu st5 .64 112 0\n"</literal>

<literal type="string">"fpu st6 .64 128 0\n"</literal>

<literal type="string">"fpu st7 .64 144 0\n"</literal>

<literal type="string">"fpu xmm0h .64 160 0\n"</literal>

<literal type="string">"fpu xmm0l .64 168 0\n"</literal>

<literal type="string">"fpu xmm1h .64 176 0\n"</literal>

<literal type="string">"fpu xmm1l .64 184 0\n"</literal>

<literal type="string">"fpu xmm2h .64 192 0\n"</literal>

<literal type="string">"fpu xmm2l .64 200 0\n"</literal>

<literal type="string">"fpu xmm3h .64 208 0\n"</literal>

<literal type="string">"fpu xmm3l .64 216 0\n"</literal>

<literal type="string">"fpu xmm4h .64 224 0\n"</literal>

<literal type="string">"fpu xmm4l .64 232 0\n"</literal>

<literal type="string">"fpu xmm5h .64 240 0\n"</literal>

<literal type="string">"fpu xmm5l .64 248 0\n"</literal>

<literal type="string">"fpu xmm6h .64 256 0\n"</literal>

<literal type="string">"fpu xmm6l .64 264 0\n"</literal>

<literal type="string">"fpu xmm7h .64 272 0\n"</literal>

<literal type="string">"fpu xmm7l .64 280 0\n"</literal>

<literal type="string">"fpu x64-32 .64 288 0\n"</literal></expr></argument>

)</argument_list></call></expr>;</return>

</unit>
