<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats\lvgl\src\lv_core\lv_style.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_obj.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_debug.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_mem.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_anim.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STYLE_MIX_MAX</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STYLE_MIX_SHIFT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VAL_PROP</name><parameter_list>(<parameter><type><name>v1</name></type></parameter>, <parameter><type><name>v2</name></type></parameter>, <parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>v1 + (((v2 - v1) * r) &gt;&gt; STYLE_MIX_SHIFT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STYLE_ATTR_MIX</name><parameter_list>(<parameter><type><name>attr</name></type></parameter>, <parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>if(start-&gt;attr != end-&gt;attr) { res-&gt;attr = VAL_PROP(start-&gt;attr, end-&gt;attr, r); } else { res-&gt;attr = start-&gt;attr; }</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>style_animator</name><parameter_list>(<parameter><decl><type><name>lv_style_anim_dsc_t</name> <modifier>*</modifier></type> <name>dsc</name></decl></parameter>, <parameter><decl><type><name>lv_anim_value_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>style_animation_common_end_cb</name><parameter_list>(<parameter><decl><type><name>lv_anim_t</name> <modifier>*</modifier></type> <name>a</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_scr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_transp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_transp_fit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_transp_tight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_plain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_plain_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_pretty</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_pretty_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_btn_rel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_btn_pr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_btn_tgl_rel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_btn_tgl_pr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name></type> <name>lv_style_btn_ina</name></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>lv_style_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>glass</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_COVER</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <name>LV_COLOR_WHITE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <name>LV_COLOR_WHITE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>radius</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">20</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name>LV_COLOR_BLACK</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_COVER</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>part</name></name> <operator>=</operator> <name>LV_BORDER_FULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name>LV_COLOR_GRAY</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>LV_SHADOW_FULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>text</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_COVER</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x30</literal></expr></argument>, <argument><expr><literal type="number">0x30</literal></expr></argument>, <argument><expr><literal type="number">0x30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>text</name><operator>.</operator><name>sel_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x55</literal></expr></argument>, <argument><expr><literal type="number">0x96</literal></expr></argument>, <argument><expr><literal type="number">0xd8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>text</name><operator>.</operator><name>font</name></name> <operator>=</operator> <name>LV_FONT_DEFAULT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>text</name><operator>.</operator><name>letter_space</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>text</name><operator>.</operator><name>line_space</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>image</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_COVER</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>image</name><operator>.</operator><name>intense</name></name> <operator>=</operator> <name>LV_OPA_TRANSP</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>line</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_COVER</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>line</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>line</name><operator>.</operator><name>rounded</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_DEBUG</name></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ASSERT_STYLE</name></expr></cpp:if>

<expr_stmt><expr><name><name>lv_style_scr</name><operator>.</operator><name>debug_sentinel</name></name> <operator>=</operator> <name>LV_STYLE_DEGUG_SENTINEL_VALUE</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_plain</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_scr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">20</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">20</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">20</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">20</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_plain_color</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_plain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain_color</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xf0</literal></expr></argument>, <argument><expr><literal type="number">0xf0</literal></expr></argument>, <argument><expr><literal type="number">0xf0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain_color</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xf0</literal></expr></argument>, <argument><expr><literal type="number">0xf0</literal></expr></argument>, <argument><expr><literal type="number">0xf0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain_color</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xf0</literal></expr></argument>, <argument><expr><literal type="number">0xf0</literal></expr></argument>, <argument><expr><literal type="number">0xf0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain_color</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x55</literal></expr></argument>, <argument><expr><literal type="number">0x96</literal></expr></argument>, <argument><expr><literal type="number">0xd8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_plain_color</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <name><name>lv_style_plain_color</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_pretty</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_plain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <name>LV_COLOR_WHITE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <name>LV_COLOR_SILVER</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>body</name><operator>.</operator><name>radius</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">15</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x40</literal></expr></argument>, <argument><expr><literal type="number">0x40</literal></expr></argument>, <argument><expr><literal type="number">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>=</operator> <ternary><condition><expr><name>LV_DPI</name> <operator>/</operator> <literal type="number">50</literal> <operator>&gt;=</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><name>LV_DPI</name> <operator>/</operator> <literal type="number">50</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_30</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_pretty_color</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_pretty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty_color</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xe0</literal></expr></argument>, <argument><expr><literal type="number">0xe0</literal></expr></argument>, <argument><expr><literal type="number">0xe0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty_color</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xe0</literal></expr></argument>, <argument><expr><literal type="number">0xe0</literal></expr></argument>, <argument><expr><literal type="number">0xe0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty_color</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xc0</literal></expr></argument>, <argument><expr><literal type="number">0xc0</literal></expr></argument>, <argument><expr><literal type="number">0xc0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty_color</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x6b</literal></expr></argument>, <argument><expr><literal type="number">0x9a</literal></expr></argument>, <argument><expr><literal type="number">0xc7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty_color</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x2b</literal></expr></argument>, <argument><expr><literal type="number">0x59</literal></expr></argument>, <argument><expr><literal type="number">0x8b</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_pretty_color</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x15</literal></expr></argument>, <argument><expr><literal type="number">0x2c</literal></expr></argument>, <argument><expr><literal type="number">0x42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_transp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_plain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp</name><operator>.</operator><name>glass</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp</name><operator>.</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_TRANSP</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_transp_fit</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_transp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp_fit</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp_fit</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp_fit</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp_fit</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_transp_tight</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_transp_fit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_transp_tight</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_btn_rel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_plain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x76</literal></expr></argument>, <argument><expr><literal type="number">0xa2</literal></expr></argument>, <argument><expr><literal type="number">0xd0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x19</literal></expr></argument>, <argument><expr><literal type="number">0x3a</literal></expr></argument>, <argument><expr><literal type="number">0x5d</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>radius</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">15</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name> <operator>=</operator> <name>LV_DPI</name> <operator>/</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x0b</literal></expr></argument>, <argument><expr><literal type="number">0x19</literal></expr></argument>, <argument><expr><literal type="number">0x28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>=</operator> <ternary><condition><expr><name>LV_DPI</name> <operator>/</operator> <literal type="number">50</literal> <operator>&gt;=</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><name>LV_DPI</name> <operator>/</operator> <literal type="number">50</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_70</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name>LV_COLOR_GRAY</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xff</literal></expr></argument>, <argument><expr><literal type="number">0xff</literal></expr></argument>, <argument><expr><literal type="number">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_rel</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xff</literal></expr></argument>, <argument><expr><literal type="number">0xff</literal></expr></argument>, <argument><expr><literal type="number">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_btn_pr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_btn_rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_pr</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x33</literal></expr></argument>, <argument><expr><literal type="number">0x62</literal></expr></argument>, <argument><expr><literal type="number">0x94</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_pr</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x10</literal></expr></argument>, <argument><expr><literal type="number">0x26</literal></expr></argument>, <argument><expr><literal type="number">0x3c</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_pr</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><literal type="number">0xb5</literal></expr></argument>, <argument><expr><literal type="number">0xc6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_pr</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><literal type="number">0xb5</literal></expr></argument>, <argument><expr><literal type="number">0xc6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_pr</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><literal type="number">0xb5</literal></expr></argument>, <argument><expr><literal type="number">0xc6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_btn_tgl_rel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_btn_rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x0a</literal></expr></argument>, <argument><expr><literal type="number">0x11</literal></expr></argument>, <argument><expr><literal type="number">0x22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x37</literal></expr></argument>, <argument><expr><literal type="number">0x62</literal></expr></argument>, <argument><expr><literal type="number">0x90</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_rel</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x01</literal></expr></argument>, <argument><expr><literal type="number">0x07</literal></expr></argument>, <argument><expr><literal type="number">0x0d</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_rel</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xc8</literal></expr></argument>, <argument><expr><literal type="number">0xdd</literal></expr></argument>, <argument><expr><literal type="number">0xf4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_rel</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xc8</literal></expr></argument>, <argument><expr><literal type="number">0xdd</literal></expr></argument>, <argument><expr><literal type="number">0xf4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_rel</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xc8</literal></expr></argument>, <argument><expr><literal type="number">0xdd</literal></expr></argument>, <argument><expr><literal type="number">0xf4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_btn_tgl_pr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_btn_tgl_rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_pr</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x02</literal></expr></argument>, <argument><expr><literal type="number">0x14</literal></expr></argument>, <argument><expr><literal type="number">0x27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_pr</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x2b</literal></expr></argument>, <argument><expr><literal type="number">0x4c</literal></expr></argument>, <argument><expr><literal type="number">0x70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_pr</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><literal type="number">0xb5</literal></expr></argument>, <argument><expr><literal type="number">0xc6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_pr</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><literal type="number">0xb5</literal></expr></argument>, <argument><expr><literal type="number">0xc6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_tgl_pr</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><literal type="number">0xb5</literal></expr></argument>, <argument><expr><literal type="number">0xc6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lv_style_btn_ina</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_btn_rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_ina</name><operator>.</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xd8</literal></expr></argument>, <argument><expr><literal type="number">0xd8</literal></expr></argument>, <argument><expr><literal type="number">0xd8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_ina</name><operator>.</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0xd8</literal></expr></argument>, <argument><expr><literal type="number">0xd8</literal></expr></argument>, <argument><expr><literal type="number">0xd8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_ina</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x90</literal></expr></argument>, <argument><expr><literal type="number">0x90</literal></expr></argument>, <argument><expr><literal type="number">0x90</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_ina</name><operator>.</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x70</literal></expr></argument>, <argument><expr><literal type="number">0x70</literal></expr></argument>, <argument><expr><literal type="number">0x70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_ina</name><operator>.</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x70</literal></expr></argument>, <argument><expr><literal type="number">0x70</literal></expr></argument>, <argument><expr><literal type="number">0x70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>lv_style_btn_ina</name><operator>.</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_make</name><argument_list>(<argument><expr><literal type="number">0x70</literal></expr></argument>, <argument><expr><literal type="number">0x70</literal></expr></argument>, <argument><expr><literal type="number">0x70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_style_copy</name><parameter_list>(<parameter><decl><type><name>lv_style_t</name> <modifier>*</modifier></type> <name>dest</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>src</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_style_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_style_mix</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>lv_style_t</name> <modifier>*</modifier></type> <name>res</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>ratio</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>opa</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>radius</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>opa</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>text</name><operator>.</operator><name>line_space</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>text</name><operator>.</operator><name>letter_space</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>text</name><operator>.</operator><name>opa</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>line</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>line</name><operator>.</operator><name>opa</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>image</name><operator>.</operator><name>intense</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>STYLE_ATTR_MIX</name><argument_list>(<argument><expr><name><name>image</name><operator>.</operator><name>opa</name></name></expr></argument>, <argument><expr><name>ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_opa_t</name></type> <name>opa</name> <init>= <expr><ternary><condition><expr><name>ratio</name> <operator>==</operator> <name>STYLE_MIX_MAX</name></expr> ?</condition><then> <expr><name>LV_OPA_COVER</name></expr> </then><else>: <expr><name>ratio</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>main_color</name></name> <operator>=</operator> <call><name>lv_color_mix</name><argument_list>(<argument><expr><name><name>end</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>main_color</name></name></expr></argument>, <argument><expr><name><name>start</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>main_color</name></name></expr></argument>, <argument><expr><name>opa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>grad_color</name></name> <operator>=</operator> <call><name>lv_color_mix</name><argument_list>(<argument><expr><name><name>end</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>grad_color</name></name></expr></argument>, <argument><expr><name><name>start</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>grad_color</name></name></expr></argument>, <argument><expr><name>opa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_mix</name><argument_list>(<argument><expr><name><name>end</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name><name>start</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name>opa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_mix</name><argument_list>(<argument><expr><name><name>end</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name><name>start</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name>opa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_mix</name><argument_list>(<argument><expr><name><name>end</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name><name>start</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name>opa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>image</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_mix</name><argument_list>(<argument><expr><name><name>end</name><operator>-&gt;</operator><name>image</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name><name>start</name><operator>-&gt;</operator><name>image</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name>opa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>line</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>lv_color_mix</name><argument_list>(<argument><expr><name><name>end</name><operator>-&gt;</operator><name>line</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name><name>start</name><operator>-&gt;</operator><name>line</name><operator>.</operator><name>color</name></name></expr></argument>, <argument><expr><name>opa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>ratio</name> <operator>&lt;</operator> <operator>(</operator><name>STYLE_MIX_MAX</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>part</name></name> <operator>=</operator> <name><name>start</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>part</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>glass</name></name> <operator>=</operator> <name><name>start</name><operator>-&gt;</operator><name>glass</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name> <operator>=</operator> <name><name>start</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name><name>start</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>line</name><operator>.</operator><name>rounded</name></name> <operator>=</operator> <name><name>start</name><operator>-&gt;</operator><name>line</name><operator>.</operator><name>rounded</name></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>part</name></name> <operator>=</operator> <name><name>end</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>part</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>glass</name></name> <operator>=</operator> <name><name>end</name><operator>-&gt;</operator><name>glass</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name> <operator>=</operator> <name><name>end</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name><name>end</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>res</name><operator>-&gt;</operator><name>line</name><operator>.</operator><name>rounded</name></name> <operator>=</operator> <name><name>end</name><operator>-&gt;</operator><name>line</name><operator>.</operator><name>rounded</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>

<function><type><name>void</name></type> <name>lv_style_anim_init</name><parameter_list>(<parameter><decl><type><name>lv_anim_t</name> <modifier>*</modifier></type> <name>a</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>lv_anim_init</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>start</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>end</name></name> <operator>=</operator> <name>STYLE_MIX_MAX</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>style_animator</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>path_cb</name></name> <operator>=</operator> <name>lv_anim_path_linear</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>ready_cb</name></name> <operator>=</operator> <name>style_animation_common_end_cb</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_style_anim_dsc_t</name> <modifier>*</modifier></type> <name>dsc</name></decl>;</decl_stmt>

<expr_stmt><expr><name>dsc</name> <operator>=</operator> <call><name>lv_mem_alloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_style_anim_dsc_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_MEM</name><argument_list>(<argument><expr><name>dsc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>dsc</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>dsc</name><operator>-&gt;</operator><name>ready_cb</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsc</name><operator>-&gt;</operator><name>style_anim</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dsc</name><operator>-&gt;</operator><name>style_start</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_plain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dsc</name><operator>-&gt;</operator><name>style_end</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_plain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>var</name></name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>dsc</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_style_anim_set_styles</name><parameter_list>(<parameter><decl><type><name>lv_anim_t</name> <modifier>*</modifier></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>lv_style_t</name> <modifier>*</modifier></type> <name>to_anim</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>end</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_style_anim_dsc_t</name> <modifier>*</modifier></type> <name>dsc</name> <init>= <expr><name><name>a</name><operator>-&gt;</operator><name>var</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>dsc</name><operator>-&gt;</operator><name>style_anim</name></name> <operator>=</operator> <name>to_anim</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dsc</name><operator>-&gt;</operator><name>style_start</name></name></expr></argument>, <argument><expr><name>start</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_style_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dsc</name><operator>-&gt;</operator><name>style_end</name></name></expr></argument>, <argument><expr><name>end</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_style_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>dsc</name><operator>-&gt;</operator><name>style_anim</name></name></expr></argument>, <argument><expr><name>start</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_style_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>

<function><type><specifier>static</specifier> <name>void</name></type> <name>style_animator</name><parameter_list>(<parameter><decl><type><name>lv_style_anim_dsc_t</name> <modifier>*</modifier></type> <name>dsc</name></decl></parameter>, <parameter><decl><type><name>lv_anim_value_t</name></type> <name>val</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>start</name> <init>= <expr><operator>&amp;</operator><name><name>dsc</name><operator>-&gt;</operator><name>style_start</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>end</name> <init>= <expr><operator>&amp;</operator><name><name>dsc</name><operator>-&gt;</operator><name>style_end</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_style_t</name> <modifier>*</modifier></type> <name>act</name> <init>= <expr><name><name>dsc</name><operator>-&gt;</operator><name>style_anim</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_style_mix</name><argument_list>(<argument><expr><name>start</name></expr></argument>, <argument><expr><name>end</name></expr></argument>, <argument><expr><name>act</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_report_style_mod</name><argument_list>(<argument><expr><name><name>dsc</name><operator>-&gt;</operator><name>style_anim</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>style_animation_common_end_cb</name><parameter_list>(<parameter><decl><type><name>lv_anim_t</name> <modifier>*</modifier></type> <name>a</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>a</name></expr>;</expr_stmt> 

<decl_stmt><decl><type><name>lv_style_anim_dsc_t</name> <modifier>*</modifier></type> <name>dsc</name> <init>= <expr><name><name>a</name><operator>-&gt;</operator><name>var</name></name></expr></init></decl>;</decl_stmt> 

<if_stmt><if>if<condition>(<expr><name><name>dsc</name><operator>-&gt;</operator><name>ready_cb</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>dsc</name><operator>-&gt;</operator><name>ready_cb</name></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>lv_mem_free</name><argument_list>(<argument><expr><name>dsc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
