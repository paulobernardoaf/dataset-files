




#ifndef LV_LABEL_H
#define LV_LABEL_H

#ifdef __cplusplus
extern "C" {
#endif




#ifdef LV_CONF_INCLUDE_SIMPLE
#include "lv_conf.h"
#else
#include "../../../lv_conf.h"
#endif

#if LV_USE_LABEL != 0

#include <stdarg.h>
#include "../lv_core/lv_obj.h"
#include "../lv_font/lv_font.h"
#include "../lv_font/lv_symbol_def.h"
#include "../lv_misc/lv_txt.h"
#include "../lv_draw/lv_draw.h"




#define LV_LABEL_DOT_NUM 3
#define LV_LABEL_POS_LAST 0xFFFF
#define LV_LABEL_TEXT_SEL_OFF LV_DRAW_LABEL_NO_TXT_SEL

LV_EXPORT_CONST_INT(LV_LABEL_DOT_NUM);
LV_EXPORT_CONST_INT(LV_LABEL_POS_LAST);
LV_EXPORT_CONST_INT(LV_LABEL_TEXT_SEL_OFF);






enum {
LV_LABEL_LONG_EXPAND, 
LV_LABEL_LONG_BREAK, 

LV_LABEL_LONG_DOT, 
LV_LABEL_LONG_SROLL, 
LV_LABEL_LONG_SROLL_CIRC, 
LV_LABEL_LONG_CROP, 
};
typedef uint8_t lv_label_long_mode_t;


enum {
LV_LABEL_ALIGN_LEFT, 
LV_LABEL_ALIGN_CENTER, 
LV_LABEL_ALIGN_RIGHT, 
LV_LABEL_ALIGN_AUTO, 
};
typedef uint8_t lv_label_align_t;


typedef struct
{


char * text; 

union
{
char * tmp_ptr; 

char tmp[LV_LABEL_DOT_NUM + 1]; 
} dot;
uint16_t dot_end; 
lv_point_t offset; 
#if LV_LABEL_LONG_TXT_HINT
lv_draw_label_hint_t hint; 
#endif

#if LV_USE_ANIMATION
uint16_t anim_speed; 
#endif

#if LV_LABEL_TEXT_SEL
uint16_t txt_sel_start; 
uint16_t txt_sel_end; 
#endif

lv_label_long_mode_t long_mode : 3; 
uint8_t static_txt : 1; 
uint8_t align : 2; 
uint8_t recolor : 1; 
uint8_t expand : 1; 
uint8_t body_draw : 1; 
uint8_t dot_tmp_alloc : 1; 

} lv_label_ext_t;


enum {
LV_LABEL_STYLE_MAIN,
};
typedef uint8_t lv_label_style_t;











lv_obj_t * lv_label_create(lv_obj_t * par, const lv_obj_t * copy);










void lv_label_set_text(lv_obj_t * label, const char * text);






void lv_label_set_text_fmt(lv_obj_t * label, const char * fmt, ...);








void lv_label_set_array_text(lv_obj_t * label, const char * array, uint16_t size);







void lv_label_set_static_text(lv_obj_t * label, const char * text);








void lv_label_set_long_mode(lv_obj_t * label, lv_label_long_mode_t long_mode);






void lv_label_set_align(lv_obj_t * label, lv_label_align_t align);






void lv_label_set_recolor(lv_obj_t * label, bool en);






void lv_label_set_body_draw(lv_obj_t * label, bool en);






void lv_label_set_anim_speed(lv_obj_t * label, uint16_t anim_speed);







static inline void lv_label_set_style(lv_obj_t * label, lv_label_style_t type, const lv_style_t * style)
{
(void)type; 
lv_obj_set_style(label, style);
}






void lv_label_set_text_sel_start(lv_obj_t * label, uint16_t index);






void lv_label_set_text_sel_end(lv_obj_t * label, uint16_t index);










char * lv_label_get_text(const lv_obj_t * label);






lv_label_long_mode_t lv_label_get_long_mode(const lv_obj_t * label);






lv_label_align_t lv_label_get_align(const lv_obj_t * label);






bool lv_label_get_recolor(const lv_obj_t * label);






bool lv_label_get_body_draw(const lv_obj_t * label);






uint16_t lv_label_get_anim_speed(const lv_obj_t * label);








void lv_label_get_letter_pos(const lv_obj_t * label, uint16_t index, lv_point_t * pos);








uint16_t lv_label_get_letter_on(const lv_obj_t * label, lv_point_t * pos);







bool lv_label_is_char_under_pos(const lv_obj_t * label, lv_point_t * pos);







static inline const lv_style_t * lv_label_get_style(const lv_obj_t * label, lv_label_style_t type)
{
(void)type; 
return lv_obj_get_style(label);
}






uint16_t lv_label_get_text_sel_start(const lv_obj_t * label);






uint16_t lv_label_get_text_sel_end(const lv_obj_t * label);












void lv_label_ins_text(lv_obj_t * label, uint32_t pos, const char * txt);








void lv_label_cut_text(lv_obj_t * label, uint32_t pos, uint32_t cnt);





#endif 

#ifdef __cplusplus
} 
#endif

#endif 
