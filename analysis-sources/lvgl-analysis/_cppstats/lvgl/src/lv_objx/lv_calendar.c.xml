<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats\lvgl\src\lv_objx\lv_calendar.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_calendar.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_CALENDAR</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_debug.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_draw/lv_draw.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_hal/lv_hal_indev.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_utils.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_indev.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_themes/lv_theme.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_OBJX_NAME</name></cpp:macro> <cpp:value>"lv_calendar"</cpp:value></cpp:define>

<enum>enum <block>{

<decl><name>DAY_DRAW_PREV_MONTH</name></decl>,

<decl><name>DAY_DRAW_ACT_MONTH</name></decl>,

<decl><name>DAY_DRAW_NEXT_MONTH</name></decl>,

}</block>;</enum>

<typedef>typedef <type><name>uint8_t</name></type> <name>day_draw_state_t</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>lv_calendar_design</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>lv_design_mode_t</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_calendar_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>calculate_touched_day</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_point_t</name> <modifier>*</modifier></type> <name>touched_point</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>lv_coord_t</name></type> <name>get_header_height</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>lv_coord_t</name></type> <name>get_day_names_height</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>draw_header</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>draw_day_names</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>draw_days</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>uint8_t</name></type> <name>get_day_of_week</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>year</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>month</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>day</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>is_highlighted</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>year</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>month</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>day</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>get_day_name</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>day</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>get_month_name</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>month</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>uint8_t</name></type> <name>get_month_length</name><parameter_list>(<parameter><decl><type><name>int32_t</name></type> <name>year</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>month</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>uint8_t</name></type> <name>is_leap_year</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>year</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>static</specifier> <name>lv_signal_cb_t</name></type> <name>ancestor_signal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>lv_design_cb_t</name></type> <name>ancestor_design</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name><name>day_name</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"Su"</literal></expr>, <expr><literal type="string">"Mo"</literal></expr>, <expr><literal type="string">"Tu"</literal></expr>, <expr><literal type="string">"We"</literal></expr>, <expr><literal type="string">"Th"</literal></expr>, <expr><literal type="string">"Fr"</literal></expr>, <expr><literal type="string">"Sa"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name><name>month_name</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"January"</literal></expr>, <expr><literal type="string">"February"</literal></expr>, <expr><literal type="string">"March"</literal></expr>, <expr><literal type="string">"April"</literal></expr>, <expr><literal type="string">"May"</literal></expr>, <expr><literal type="string">"June"</literal></expr>,

<expr><literal type="string">"July"</literal></expr>, <expr><literal type="string">"August"</literal></expr>, <expr><literal type="string">"September"</literal></expr>, <expr><literal type="string">"October"</literal></expr>, <expr><literal type="string">"November"</literal></expr>, <expr><literal type="string">"December"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<function><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_calendar_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_LOG_TRACE</name><argument_list>(<argument><expr><literal type="string">"calendar create started"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>new_calendar</name> <init>= <expr><call><name>lv_obj_create</name><argument_list>(<argument><expr><name>par</name></expr></argument>, <argument><expr><name>copy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_MEM</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>new_calendar</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_allocate_ext_attr</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_calendar_ext_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_MEM</name><argument_list>(<argument><expr><name>ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>ext</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>ancestor_signal</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ancestor_signal</name> <operator>=</operator> <call><name>lv_obj_get_signal_cb</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>ancestor_design</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ancestor_design</name> <operator>=</operator> <call><name>lv_obj_get_design_cb</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>year</name></name> <operator>=</operator> <literal type="number">2018</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <literal type="number">2018</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates_num</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>day_names</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>month_names</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_plain_color</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header_pr</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_pretty_color</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_plain_color</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_btn_ina</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_plain_color</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_pretty_color</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_pretty</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_set_signal_cb</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>lv_calendar_signal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_set_design_cb</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>lv_calendar_design</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>copy</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>lv_obj_set_size</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_DPI</name> <operator>*</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>LV_DPI</name> <operator>*</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_pretty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_theme_t</name> <modifier>*</modifier></type> <name>th</name> <init>= <expr><call><name>lv_theme_get_current</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>th</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_BG</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>bg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_HEADER</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_HEADER_PR</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>header_pr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_DAY_NAMES</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>day_names</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_WEEK_BOX</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>week_box</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_TODAY_BOX</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>today_box</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_HIGHLIGHTED_DAYS</name></expr></argument>,

<argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>highlighted_days</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_INACTIVE_DAYS</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>calendar</name><operator>.</operator><name>inactive_days</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_BG</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_pretty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_HEADER</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_HEADER_PR</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header_pr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_DAY_NAMES</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_WEEK_BOX</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_TODAY_BOX</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_HIGHLIGHTED_DAYS</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_calendar_set_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_INACTIVE_DAYS</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>copy_ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>copy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>year</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>year</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>month</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>month</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>day</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>highlighted_dates</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates_num</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>highlighted_dates_num</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>day_names</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>day_names</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>month_names</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>month_names</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>style_header</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header_pr</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>style_header_pr</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>style_week_box</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>style_today_box</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>style_day_names</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_refresh_style</name><argument_list>(<argument><expr><name>new_calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>LV_LOG_INFO</name><argument_list>(<argument><expr><literal type="string">"calendar created"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>new_calendar</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_calendar_set_today_date</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>lv_calendar_date_t</name> <modifier>*</modifier></type> <name>today</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_NULL</name><argument_list>(<argument><expr><name>today</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>year</name></name> <operator>=</operator> <name><name>today</name><operator>-&gt;</operator><name>year</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>month</name></name> <operator>=</operator> <name><name>today</name><operator>-&gt;</operator><name>month</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>=</operator> <name><name>today</name><operator>-&gt;</operator><name>day</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_calendar_set_showed_date</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>lv_calendar_date_t</name> <modifier>*</modifier></type> <name>showed</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_NULL</name><argument_list>(<argument><expr><name>showed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <name><name>showed</name><operator>-&gt;</operator><name>year</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <name><name>showed</name><operator>-&gt;</operator><name>month</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <name><name>showed</name><operator>-&gt;</operator><name>day</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_calendar_set_highlighted_dates</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>lv_calendar_date_t</name></type> <name><name>highlighted</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>date_num</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_NULL</name><argument_list>(<argument><expr><name>highlighted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name></name> <operator>=</operator> <name>highlighted</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates_num</name></name> <operator>=</operator> <name>date_num</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_calendar_set_day_names</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>day_names</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_NULL</name><argument_list>(<argument><expr><name>day_names</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>day_names</name></name> <operator>=</operator> <name>day_names</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_calendar_set_month_names</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>month_names</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_ASSERT_NULL</name><argument_list>(<argument><expr><name>month_names</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>month_names</name></name> <operator>=</operator> <name>month_names</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>lv_calendar_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>lv_calendar_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LV_CALENDAR_STYLE_BG</name></expr>:</case> <expr_stmt><expr><call><name>lv_obj_set_style</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_DAY_NAMES</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_HEADER</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_HEADER_PR</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header_pr</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_HIGHLIGHTED_DAYS</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_INACTIVE_DAYS</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_TODAY_BOX</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_WEEK_BOX</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>lv_calendar_date_t</name> <modifier>*</modifier></type> <name>lv_calendar_get_today_date</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>today</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>lv_calendar_date_t</name> <modifier>*</modifier></type> <name>lv_calendar_get_showed_date</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>lv_calendar_date_t</name> <modifier>*</modifier></type> <name>lv_calendar_get_pressed_date</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>lv_calendar_date_t</name> <modifier>*</modifier></type> <name>lv_calendar_get_highlighted_dates</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>uint16_t</name></type> <name>lv_calendar_get_highlighted_dates_num</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates_num</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>lv_calendar_get_day_names</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>day_names</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>lv_calendar_get_month_names</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>month_names</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_calendar_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>lv_calendar_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LV_CALENDAR_STYLE_BG</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_HEADER</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_HEADER_PR</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_header_pr</name></name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_DAY_NAMES</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name></name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_HIGHLIGHTED_DAYS</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_INACTIVE_DAYS</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_WEEK_BOX</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name></name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>LV_CALENDAR_STYLE_TODAY_BOX</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name></name></expr>;</expr_stmt> <break>break;</break>

<default>default:</default> <expr_stmt><expr><name>style</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>style</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>lv_calendar_design</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>lv_design_mode_t</name></type> <name>mode</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_COVER_CHK</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>ancestor_design</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_DRAW_MAIN</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>lv_opa_t</name></type> <name>opa_scale</name> <init>= <expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>calendar</name><operator>-&gt;</operator><name>coords</name></name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><call><name>lv_calendar_get_style</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_BG</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>draw_header</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>draw_day_names</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>draw_days</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_DRAW_POST</name></expr>)</condition> <block>{<block_content>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_calendar_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_res_t</name></type> <name>res</name></decl>;</decl_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>ancestor_signal</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>sign</name></expr></argument>, <argument><expr><name>param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>LV_RES_OK</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>res</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_GET_TYPE</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>lv_obj_handle_get_type_signal</name><argument_list>(<argument><expr><name>param</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CLEANUP</name></expr>)</condition> <block>{<block_content>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_PRESSING</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>header_area</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>header_area</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>calendar</name><operator>-&gt;</operator><name>coords</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>header_area</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <call><name>get_header_height</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name> <init>= <expr><call><name>lv_indev_get_act</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_point_t</name></type> <name>p</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_indev_get_point</name><argument_list>(<argument><expr><name>indev</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><call><name>lv_area_is_point_on</name><argument_list>(<argument><expr><operator>&amp;</operator><name>header_area</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>p</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <name><name>header_area</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <call><name>lv_area_get_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name>header_area</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><call><name>calculate_touched_day</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_PRESS_LOST</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_RELEASED</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name><operator>--</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name><operator>--</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>&gt;=</operator> <literal type="number">12</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>lv_event_send</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_EVENT_VALUE_CHANGED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>LV_RES_OK</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>res</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CONTROL</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>c</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>uint8_t</name> <operator>*</operator><operator>)</operator><name>param</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <name>LV_KEY_RIGHT</name> <operator>||</operator> <name>c</name> <operator>==</operator> <name>LV_KEY_UP</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>&gt;=</operator> <literal type="number">12</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <name>LV_KEY_LEFT</name> <operator>||</operator> <name>c</name> <operator>==</operator> <name>LV_KEY_DOWN</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name><operator>--</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name><operator>--</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>res</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>calculate_touched_day</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_point_t</name> <modifier>*</modifier></type> <name>touched_point</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>days_area</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>days_area</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>calendar</name><operator>-&gt;</operator><name>coords</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_bg</name> <init>= <expr><call><name>lv_calendar_get_style</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_BG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>days_area</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>days_area</name><operator>.</operator><name>x2</name></name> <operator>-=</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>days_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator>

<name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <call><name>get_header_height</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>get_day_names_height</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><call><name>lv_area_is_point_on</name><argument_list>(<argument><expr><operator>&amp;</operator><name>days_area</name></expr></argument>, <argument><expr><name>touched_point</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>w</name> <init>= <expr><operator>(</operator><name><name>days_area</name><operator>.</operator><name>x2</name></name> <operator>-</operator> <name><name>days_area</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>h</name> <init>= <expr><operator>(</operator><name><name>days_area</name><operator>.</operator><name>y2</name></name> <operator>-</operator> <name><name>days_area</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">6</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>x_pos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>x_pos</name> <operator>=</operator> <operator>(</operator><name><name>touched_point</name><operator>-&gt;</operator><name>x</name></name> <operator>-</operator> <name><name>days_area</name><operator>.</operator><name>x1</name></name><operator>)</operator> <operator>/</operator> <name>w</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>x_pos</name> <operator>&gt;</operator> <literal type="number">6</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x_pos</name> <operator>=</operator> <literal type="number">6</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>y_pos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>y_pos</name> <operator>=</operator> <operator>(</operator><name><name>touched_point</name><operator>-&gt;</operator><name>y</name></name> <operator>-</operator> <name><name>days_area</name><operator>.</operator><name>y1</name></name><operator>)</operator> <operator>/</operator> <name>h</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>y_pos</name> <operator>&gt;</operator> <literal type="number">5</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>y_pos</name> <operator>=</operator> <literal type="number">5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_pos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_pos</name> <operator>=</operator> <operator>(</operator><name>y_pos</name> <operator>*</operator> <literal type="number">7</literal><operator>)</operator> <operator>+</operator> <name>x_pos</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>i_pos</name> <operator>&lt;</operator> <call><name>get_day_of_week</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>-</operator> <operator>(</operator><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><literal type="number">12</literal></expr> </then><else>: <expr><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <call><name>get_month_length</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>month</name></name></expr></argument>)</argument_list></call> <operator>-</operator>

<call><name>get_day_of_week</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal> <operator>+</operator> <name>i_pos</name></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>i_pos</name> <operator>&lt;</operator> <operator>(</operator><call><name>get_day_of_week</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>+</operator>

<call><name>get_month_length</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <name>i_pos</name> <operator>+</operator> <literal type="number">1</literal> <operator>-</operator> <call><name>get_day_of_week</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>i_pos</name> <operator>&lt;</operator> <literal type="number">42</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>year</name></name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">12</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>month</name></name> <operator>=</operator> <ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">12</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>pressed_date</name><operator>.</operator><name>day</name></name> <operator>=</operator> <name>i_pos</name> <operator>+</operator> <literal type="number">1</literal> <operator>-</operator> <call><name>get_day_of_week</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>-</operator>

<call><name>get_month_length</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if> <else>else <block>{<block_content>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>lv_coord_t</name></type> <name>get_header_height</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_header</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>+</operator>

<name><name>ext</name><operator>-&gt;</operator><name>style_header</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>lv_coord_t</name></type> <name>get_day_names_height</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>+</operator>

<name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>draw_header</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_bidi_dir_t</name></type> <name>bidi_dir</name> <init>= <expr><call><name>lv_obj_get_base_dir</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_opa_t</name></type> <name>opa_scale</name> <init>= <expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>header_area</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <call><name>get_header_height</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name>header_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>txt_buf</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_utils_num_to_str</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name>txt_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>txt_buf</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <literal type="char">' '</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>txt_buf</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>txt_buf</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><call><name>get_month_name</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_header</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_label</name><argument_list>(<argument><expr><operator>&amp;</operator><name>header_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>, <argument><expr><name>txt_buf</name></expr></argument>, <argument><expr><name>LV_TXT_FLAG_CENTER</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>bidi_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>arrow_style</name> <init>= <expr><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name><name>ext</name><operator>-&gt;</operator><name>style_header_pr</name></name></expr> </then><else>: <expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_header</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_label</name><argument_list>(<argument><expr><operator>&amp;</operator><name>header_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>arrow_style</name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>, <argument><expr><name>LV_SYMBOL_LEFT</name></expr></argument>, <argument><expr><name>LV_TXT_FLAG_NONE</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>bidi_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>arrow_style</name> <operator>=</operator> <ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>btn_pressing</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name><name>ext</name><operator>-&gt;</operator><name>style_header_pr</name></name></expr> </then><else>: <expr><name><name>ext</name><operator>-&gt;</operator><name>style_header</name></name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>header_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>header_area</name><operator>.</operator><name>x2</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_header</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>-</operator>

<call><name>lv_txt_get_width</name><argument_list>(<argument><expr><name>LV_SYMBOL_RIGHT</name></expr></argument>, <argument><expr><operator>(</operator><name>uint16_t</name><operator>)</operator><call><name>strlen</name><argument_list>(<argument><expr><name>LV_SYMBOL_RIGHT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>arrow_style</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>,

<argument><expr><name><name>arrow_style</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>line_space</name></name></expr></argument>, <argument><expr><name>LV_TXT_FLAG_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_label</name><argument_list>(<argument><expr><operator>&amp;</operator><name>header_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>arrow_style</name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>, <argument><expr><name>LV_SYMBOL_RIGHT</name></expr></argument>, <argument><expr><name>LV_TXT_FLAG_NONE</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>bidi_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>draw_day_names</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_bidi_dir_t</name></type> <name>bidi_dir</name> <init>= <expr><call><name>lv_obj_get_base_dir</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_opa_t</name></type> <name>opa_scale</name> <init>= <expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>l_pad</name> <init>= <expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>w</name> <init>=

<expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>box_w</name> <init>= <expr><name>w</name> <operator>/</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>label_area</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <call><name>get_header_height</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">7</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <operator>(</operator><name>w</name> <operator>*</operator> <name>i</name><operator>)</operator> <operator>/</operator> <literal type="number">7</literal> <operator>+</operator> <name>l_pad</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name>box_w</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_label</name><argument_list>(<argument><expr><operator>&amp;</operator><name>label_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name></name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>, <argument><expr><call><name>get_day_name</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>LV_TXT_FLAG_CENTER</name></expr></argument>,

<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>bidi_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>draw_days</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_bidi_dir_t</name></type> <name>bidi_dir</name> <init>= <expr><call><name>lv_obj_get_base_dir</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_bg</name> <init>= <expr><call><name>lv_calendar_get_style</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name>LV_CALENDAR_STYLE_BG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>label_area</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_opa_t</name></type> <name>opa_scale</name> <init>= <expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <call><name>get_header_height</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>+</operator>

<call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call> <operator>+</operator>

<name><name>ext</name><operator>-&gt;</operator><name>style_day_names</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>style_bg</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>w</name> <init>= <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>-</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>h</name> <init>= <expr><name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y2</name></name> <operator>-</operator> <name><name>label_area</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>box_w</name> <init>= <expr><name>w</name> <operator>/</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>vert_space</name> <init>= <expr><operator>(</operator><name>h</name> <operator>-</operator> <operator>(</operator><literal type="number">6</literal> <operator>*</operator> <call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>style_bg</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator> <operator>/</operator> <literal type="number">5</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>week</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>day_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>month_start_day</name> <init>= <expr><call><name>get_day_of_week</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>day_draw_state_t</name></type> <name>draw_state</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>act_style</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>month_start_day</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>day_cnt</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>draw_state</name> <operator>=</operator> <name>DAY_DRAW_ACT_MONTH</name></expr>;</expr_stmt>

<expr_stmt><expr><name>act_style</name> <operator>=</operator> <name>style_bg</name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>draw_state</name> <operator>=</operator> <name>DAY_DRAW_PREV_MONTH</name></expr>;</expr_stmt>

<expr_stmt><expr><name>day_cnt</name> <operator>=</operator> <call><name>get_month_length</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>day_cnt</name> <operator>-=</operator> <name>month_start_day</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt> 

<expr_stmt><expr><name>act_style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>month_of_today_shown</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>year</name></name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>month</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>month_of_today_shown</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>buf</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>in_week_box</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>week</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>week</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>week</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name>month_of_today_shown</name> <operator>&amp;&amp;</operator>

<operator>(</operator><operator>(</operator><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_ACT_MONTH</name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>&gt;=</operator> <name>day_cnt</name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>&lt;</operator> <name>day_cnt</name> <operator>+</operator> <literal type="number">7</literal><operator>)</operator> <operator>||</operator>

<operator>(</operator><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_PREV_MONTH</name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>&lt;=</operator> <literal type="number">7</literal> <operator>-</operator> <name>month_start_day</name> <operator>&amp;&amp;</operator> <name>week</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>week_box_area</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>week_box_area</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>label_area</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>week_box_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator>

<name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>week_box_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator>

<name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>-</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>week_box_area</name><operator>.</operator><name>y1</name></name> <operator>-=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>week_box_area</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name>week_box_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name></name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in_week_box</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>in_week_box</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>day</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>day</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>day</name> <operator>&lt;</operator> <literal type="number">7</literal></expr>;</condition> <incr><expr><name>day</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_PREV_MONTH</name> <operator>&amp;&amp;</operator> <name>day</name> <operator>==</operator> <name>month_start_day</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>draw_state</name> <operator>=</operator> <name>DAY_DRAW_ACT_MONTH</name></expr>;</expr_stmt>

<expr_stmt><expr><name>day_cnt</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>act_style</name> <operator>=</operator> <name>style_bg</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_ACT_MONTH</name> <operator>&amp;&amp;</operator>

<name>day_cnt</name> <operator>&gt;</operator> <call><name>get_month_length</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>draw_state</name> <operator>=</operator> <name>DAY_DRAW_NEXT_MONTH</name></expr>;</expr_stmt>

<expr_stmt><expr><name>day_cnt</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>act_style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_inactive_days</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator>

<name><name>calendar</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <operator>(</operator><name>w</name> <operator>*</operator> <name>day</name><operator>)</operator> <operator>/</operator> <literal type="number">7</literal> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name>box_w</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_ACT_MONTH</name> <operator>&amp;&amp;</operator> <name>month_of_today_shown</name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>==</operator> <name>day_cnt</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>today_box_area</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>today_box_area</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>label_area</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>today_box_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>today_box_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>x2</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>today_box_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>today_box_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>label_area</name><operator>.</operator><name>y2</name></name> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name>today_box_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name></name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>final_style</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_PREV_MONTH</name> <operator>&amp;&amp;</operator>

<call><name>is_highlighted</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>-</operator> <operator>(</operator><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><literal type="number">12</literal></expr> </then><else>: <expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>-</operator> <literal type="number">1</literal></expr></else></ternary></expr></argument>, <argument><expr><name>day_cnt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>final_style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_ACT_MONTH</name> <operator>&amp;&amp;</operator>

<call><name>is_highlighted</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name></expr></argument>, <argument><expr><name>day_cnt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>final_style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_NEXT_MONTH</name> <operator>&amp;&amp;</operator>

<call><name>is_highlighted</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>year</name></name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">12</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>==</operator> <literal type="number">12</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><name><name>ext</name><operator>-&gt;</operator><name>showed_date</name><operator>.</operator><name>month</name></name> <operator>+</operator> <literal type="number">1</literal></expr></else></ternary></expr></argument>, <argument><expr><name>day_cnt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>final_style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_highlighted_days</name></name></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>month_of_today_shown</name> <operator>&amp;&amp;</operator> <name>day_cnt</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>today</name><operator>.</operator><name>day</name></name> <operator>&amp;&amp;</operator> <name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_ACT_MONTH</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>final_style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_today_box</name></name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>(<expr><name>in_week_box</name> <operator>&amp;&amp;</operator> <name>draw_state</name> <operator>==</operator> <name>DAY_DRAW_ACT_MONTH</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>final_style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>style_week_box</name></name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>final_style</name> <operator>=</operator> <name>act_style</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>lv_utils_num_to_str</name><argument_list>(<argument><expr><name>day_cnt</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_draw_label</name><argument_list>(<argument><expr><operator>&amp;</operator><name>label_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>final_style</name></expr></argument>, <argument><expr><name>opa_scale</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>LV_TXT_FLAG_CENTER</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>bidi_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>day_cnt</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name>vert_space</name> <operator>+</operator> <call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>style_bg</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>label_area</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name>vert_space</name> <operator>+</operator> <call><name>lv_font_get_line_height</name><argument_list>(<argument><expr><name><name>style_bg</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>font</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>is_highlighted</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>year</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>month</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>day</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name></name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates_num</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates_num</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>year</name> <operator>==</operator> <name>year</name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>month</name> <operator>==</operator> <name>month</name> <operator>&amp;&amp;</operator>

<name><name>ext</name><operator>-&gt;</operator><name>highlighted_dates</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>day</name> <operator>==</operator> <name>day</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>get_day_name</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>day</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>day_names</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>day_names</name><index>[<expr><name>day</name></expr>]</index></name></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name><name>day_name</name><index>[<expr><name>day</name></expr>]</index></name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>get_month_name</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>calendar</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>month</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>month</name><operator>--</operator></expr>;</expr_stmt> 

<if_stmt><if>if<condition>(<expr><name>month</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>month</name> <operator>=</operator> <literal type="number">12</literal> <operator>+</operator> <name>month</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>lv_calendar_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>calendar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>month_names</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>month_names</name><index>[<expr><name>month</name></expr>]</index></name></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name><name>month_name</name><index>[<expr><name>month</name></expr>]</index></name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint8_t</name></type> <name>get_month_length</name><parameter_list>(<parameter><decl><type><name>int32_t</name></type> <name>year</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>month</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>month</name><operator>--</operator></expr>;</expr_stmt> 

<if_stmt><if>if<condition>(<expr><name>month</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>year</name><operator>--</operator></expr>;</expr_stmt> 

<expr_stmt><expr><name>month</name> <operator>=</operator> <literal type="number">12</literal> <operator>+</operator> <name>month</name></expr>;</expr_stmt> 

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>month</name> <operator>&gt;=</operator> <literal type="number">12</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>year</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>month</name> <operator>-=</operator> <literal type="number">12</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>month</name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><literal type="number">28</literal> <operator>+</operator> <call><name>is_leap_year</name><argument_list>(<argument><expr><name>year</name></expr></argument>)</argument_list></call><operator>)</operator></expr> </then><else>: <expr><literal type="number">31</literal> <operator>-</operator> <name>month</name> <operator>%</operator> <literal type="number">7</literal> <operator>%</operator> <literal type="number">2</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint8_t</name></type> <name>is_leap_year</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>year</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>year</name> <operator>%</operator> <literal type="number">4</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><operator>(</operator><name>year</name> <operator>%</operator> <literal type="number">100</literal> <operator>==</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>year</name> <operator>%</operator> <literal type="number">400</literal><operator>)</operator><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint8_t</name></type> <name>get_day_of_week</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>year</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>month</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>day</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>a</name> <init>= <expr><ternary><condition><expr><name>month</name> <operator>&lt;</operator> <literal type="number">3</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>b</name> <init>= <expr><name>year</name> <operator>-</operator> <name>a</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>day_of_week</name> <init>= <expr><operator>(</operator><name>day</name> <operator>+</operator> <operator>(</operator><literal type="number">31</literal> <operator>*</operator> <operator>(</operator><name>month</name> <operator>-</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">12</literal> <operator>*</operator> <name>a</name><operator>)</operator> <operator>/</operator> <literal type="number">12</literal><operator>)</operator> <operator>+</operator> <name>b</name> <operator>+</operator> <operator>(</operator><name>b</name> <operator>/</operator> <literal type="number">4</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><name>b</name> <operator>/</operator> <literal type="number">100</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>b</name> <operator>/</operator> <literal type="number">400</literal><operator>)</operator><operator>)</operator> <operator>%</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<return>return <expr><name>day_of_week</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
