<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats\lvgl\src\lv_objx\lv_canvas.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LV_CONF_INCLUDE_SIMPLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_conf.h"</cpp:file></cpp:include>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../lv_conf.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_CANVAS</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_obj.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_objx/lv_img.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_draw/lv_draw_img.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>lv_img_ext_t</name></type> <name>img</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_img_dsc_t</name></type> <name>dsc</name></decl>;</decl_stmt>

}</block></struct></type> <name>lv_canvas_ext_t</name>;</typedef>

<enum>enum <block>{

<decl><name>LV_CANVAS_STYLE_MAIN</name></decl>,

}</block>;</enum>

<typedef>typedef <type><name>uint8_t</name></type> <name>lv_canvas_style_t</name>;</typedef>

<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_canvas_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_set_buffer</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>lv_img_cf_t</name></type> <name>cf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_set_px</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>lv_color_t</name></type> <name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_set_palette</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>lv_color_t</name></type> <name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_canvas_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_color_t</name></type> <name>lv_canvas_get_px</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_img_dsc_t</name> <modifier>*</modifier></type> <name>lv_canvas_get_img</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_canvas_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_canvas_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_copy_buf</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type> <name>to_copy</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>w</name></decl></parameter>,

<parameter><decl><type><name>lv_coord_t</name></type> <name>h</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_rotate</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_img_dsc_t</name> <modifier>*</modifier></type> <name>img</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>angle</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>offset_x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>offset_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>pivot_x</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>pivot_y</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_fill_bg</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_color_t</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_draw_rect</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>h</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_draw_text</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>max_w</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>txt</name></decl></parameter>, <parameter><decl><type><name>lv_label_align_t</name></type> <name>align</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_draw_img</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type> <name>src</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_draw_line</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_point_t</name> <modifier>*</modifier></type> <name>points</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>point_cnt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_draw_polygon</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_point_t</name> <modifier>*</modifier></type> <name>points</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>point_cnt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_canvas_draw_arc</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>canvas</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>r</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>start_angle</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>end_angle</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_TRUE_COLOR</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_TRUE_COLOR(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_TRUE_COLOR_ALPHA</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_ALPHA_1BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_ALPHA_1BIT(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_ALPHA_2BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_ALPHA_2BIT(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_ALPHA_4BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_ALPHA_4BIT(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_ALPHA_8BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_ALPHA_8BIT(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_INDEXED_1BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_INDEXED_1BIT(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_INDEXED_2BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_INDEXED_2BIT(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_INDEXED_4BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_INDEXED_4BIT(w, h)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CANVAS_BUF_SIZE_INDEXED_8BIT</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LV_IMG_BUF_SIZE_INDEXED_8BIT(w, h)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
