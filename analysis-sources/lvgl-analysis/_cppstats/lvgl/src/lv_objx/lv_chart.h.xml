<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats\lvgl\src\lv_objx\lv_chart.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LV_CONF_INCLUDE_SIMPLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_conf.h"</cpp:file></cpp:include>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../lv_conf.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_CHART</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_obj.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_line.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CHART_POINT_DEF</name></cpp:macro> <cpp:value>(LV_COORD_MIN)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CHART_TICK_LENGTH_AUTO</name></cpp:macro> <cpp:value>255</cpp:value></cpp:define>

<expr_stmt><expr><call><name>LV_EXPORT_CONST_INT</name><argument_list>(<argument><expr><name>LV_CHART_POINT_DEF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_EXPORT_CONST_INT</name><argument_list>(<argument><expr><name>LV_CHART_TICK_LENGTH_AUTO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<enum>enum <block>{

<decl><name>LV_CHART_TYPE_NONE</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>, 

<decl><name>LV_CHART_TYPE_LINE</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>, 

<decl><name>LV_CHART_TYPE_COLUMN</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>, 

<decl><name>LV_CHART_TYPE_POINT</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>, 

<decl><name>LV_CHART_TYPE_VERTICAL_LINE</name> <init>= <expr><literal type="number">0x08</literal></expr></init></decl>, 

<decl><name>LV_CHART_TYPE_AREA</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>, 

}</block>;</enum>

<typedef>typedef <type><name>uint8_t</name></type> <name>lv_chart_type_t</name>;</typedef>

<enum>enum <block>{

<decl><name>LV_CHART_UPDATE_MODE_SHIFT</name></decl>, 

<decl><name>LV_CHART_UPDATE_MODE_CIRCULAR</name></decl>, 

}</block>;</enum>

<typedef>typedef <type><name>uint8_t</name></type> <name>lv_chart_update_mode_t</name>;</typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>lv_coord_t</name> <modifier>*</modifier></type> <name>points</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_color_t</name></type> <name>color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>start_point</name></decl>;</decl_stmt>

}</block></struct></type> <name>lv_chart_series_t</name>;</typedef>

<enum>enum <block>{

<decl><name>LV_CHART_AXIS_SKIP_LAST_TICK</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>, 

<decl><name>LV_CHART_AXIS_DRAW_LAST_TICK</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>, 

<decl><name>LV_CHART_AXIS_INVERSE_LABELS_ORDER</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl> 

}</block>;</enum>

<typedef>typedef <type><name>uint8_t</name></type> <name>lv_chart_axis_options_t</name>;</typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>list_of_values</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_chart_axis_options_t</name></type> <name>options</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_tick_marks</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>major_tick_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>minor_tick_len</name></decl>;</decl_stmt>

}</block></struct></type> <name>lv_chart_axis_cfg_t</name>;</typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>lv_ll_t</name></type> <name>series_ll</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>ymin</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>ymax</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>hdiv_cnt</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vdiv_cnt</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name></type> <name>point_cnt</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_chart_type_t</name></type> <name>type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_chart_axis_cfg_t</name></type> <name>y_axis</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_chart_axis_cfg_t</name></type> <name>x_axis</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_chart_axis_cfg_t</name></type> <name>secondary_y_axis</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>margin</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>update_mode</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>width</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_opa_t</name></type> <name>opa</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_opa_t</name></type> <name>dark</name></decl>;</decl_stmt> 

}</block> <decl><name>series</name></decl>;</struct>

}</block></struct></type> <name>lv_chart_ext_t</name>;</typedef>

<enum>enum <block>{

<decl><name>LV_CHART_STYLE_MAIN</name></decl>,

}</block>;</enum>

<typedef>typedef <type><name>uint8_t</name></type> <name>lv_chart_style_t</name>;</typedef>

<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_chart_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_chart_series_t</name> <modifier>*</modifier></type> <name>lv_chart_add_series</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_color_t</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_clear_serie</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_series_t</name> <modifier>*</modifier></type> <name>serie</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_div_line_count</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>hdiv</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>vdiv</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_range</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>ymin</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>ymax</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_type</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_type_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_point_count</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>point_cnt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_series_opa</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_opa_t</name></type> <name>opa</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_series_width</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_series_darking</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_opa_t</name></type> <name>dark_eff</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_init_points</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_series_t</name> <modifier>*</modifier></type> <name>ser</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_points</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_series_t</name> <modifier>*</modifier></type> <name>ser</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name><name>y_array</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_next</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_series_t</name> <modifier>*</modifier></type> <name>ser</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_update_mode</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_update_mode_t</name></type> <name>update_mode</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>lv_chart_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>type</name></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>lv_obj_set_style</name><argument_list>(<argument><expr><name>chart</name></expr></argument>, <argument><expr><name>style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>void</name></type> <name>lv_chart_set_x_tick_length</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>major_tick_len</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>minor_tick_len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_y_tick_length</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>major_tick_len</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>minor_tick_len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_secondary_y_tick_length</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>major_tick_len</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>minor_tick_len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_x_tick_texts</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>list_of_values</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>num_tick_marks</name></decl></parameter>,

<parameter><decl><type><name>lv_chart_axis_options_t</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_secondary_y_tick_texts</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>list_of_values</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>num_tick_marks</name></decl></parameter>,

<parameter><decl><type><name>lv_chart_axis_options_t</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_y_tick_texts</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>list_of_values</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>num_tick_marks</name></decl></parameter>,

<parameter><decl><type><name>lv_chart_axis_options_t</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_set_margin</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>margin</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_chart_type_t</name></type> <name>lv_chart_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint16_t</name></type> <name>lv_chart_get_point_cnt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_opa_t</name></type> <name>lv_chart_get_series_opa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_coord_t</name></type> <name>lv_chart_get_series_width</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_opa_t</name></type> <name>lv_chart_get_series_darking</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_chart_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>, <parameter><decl><type><name>lv_chart_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>type</name></expr>;</expr_stmt> 

<return>return <expr><call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>chart</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>uint16_t</name></type> <name>lv_chart_get_margin</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_chart_refresh</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>chart</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
