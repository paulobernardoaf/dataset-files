







#if defined(__cplusplus)
extern "C" {
#endif




#if defined(LV_CONF_INCLUDE_SIMPLE)
#include "lv_conf.h"
#else
#include "../../../lv_conf.h"
#endif

#if LV_USE_IMG != 0

#include "../lv_core/lv_obj.h"
#include "../lv_misc/lv_fs.h"
#include "lv_label.h"
#include "../lv_draw/lv_draw.h"









typedef struct
{


const void * src; 
lv_point_t offset;
lv_coord_t w; 
lv_coord_t h; 
uint8_t src_type : 2; 
uint8_t auto_size : 1; 
uint8_t cf : 5; 
} lv_img_ext_t;


enum {
LV_IMG_STYLE_MAIN,
};
typedef uint8_t lv_img_style_t;











lv_obj_t * lv_img_create(lv_obj_t * par, const lv_obj_t * copy);










void lv_img_set_src(lv_obj_t * img, const void * src_img);







void lv_img_set_auto_size(lv_obj_t * img, bool autosize_en);







void lv_img_set_offset_x(lv_obj_t * img, lv_coord_t x);







void lv_img_set_offset_y(lv_obj_t * img, lv_coord_t y);







static inline void lv_img_set_style(lv_obj_t * img, lv_img_style_t type, const lv_style_t * style)
{
(void)type; 
lv_obj_set_style(img, style);
}










const void * lv_img_get_src(lv_obj_t * img);






const char * lv_img_get_file_name(const lv_obj_t * img);






bool lv_img_get_auto_size(const lv_obj_t * img);






lv_coord_t lv_img_get_offset_x(lv_obj_t * img);






lv_coord_t lv_img_get_offset_y(lv_obj_t * img);







static inline const lv_style_t * lv_img_get_style(const lv_obj_t * img, lv_img_style_t type)
{
(void)type; 
return lv_obj_get_style(img);
}






#define LV_IMG_DECLARE(var_name) extern const lv_img_dsc_t var_name;

#endif 

#if defined(__cplusplus)
} 
#endif


