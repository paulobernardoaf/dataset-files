<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats\lvgl\src\lv_objx\lv_table.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LV_CONF_INCLUDE_SIMPLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_conf.h"</cpp:file></cpp:include>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../lv_conf.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_TABLE</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_LABEL</name> <operator>==</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"lv_table: lv_label is required. Enable it in lv_conf.h (LV_USE_LABEL 1) "</cpp:literal></cpp:error>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_obj.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_label.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LV_TABLE_COL_MAX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_TABLE_COL_MAX</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_TABLE_CELL_STYLE_CNT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<typedef>typedef <type><union>union

<block>{

<struct>struct

<block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>align</name> <range>: <expr><literal type="number">2</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>right_merge</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>type</name> <range>: <expr><literal type="number">2</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>crop</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

}</block> <decl><name>s</name></decl>;</struct>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>format_byte</name></decl>;</decl_stmt>

}</block></union></type> <name>lv_table_cell_format_t</name>;</typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name>col_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>row_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>cell_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name><name>cell_style</name><index>[<expr><name>LV_TABLE_CELL_STYLE_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name><name>col_w</name><index>[<expr><name>LV_TABLE_COL_MAX</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>lv_table_ext_t</name>;</typedef>

<enum>enum <block>{

<decl><name>LV_TABLE_STYLE_BG</name></decl>,

<decl><name>LV_TABLE_STYLE_CELL1</name></decl>,

<decl><name>LV_TABLE_STYLE_CELL2</name></decl>,

<decl><name>LV_TABLE_STYLE_CELL3</name></decl>,

<decl><name>LV_TABLE_STYLE_CELL4</name></decl>,

}</block>;</enum>

<typedef>typedef <type><name>uint8_t</name></type> <name>lv_table_style_t</name>;</typedef>

<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_table_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_cell_value</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>txt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_row_cnt</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row_cnt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_col_cnt</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col_cnt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_col_width</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col_id</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>w</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_cell_align</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><name>lv_label_align_t</name></type> <name>align</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_cell_type</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_cell_crop</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>crop</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_cell_merge_right</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>lv_table_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>lv_table_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>lv_table_get_cell_value</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint16_t</name></type> <name>lv_table_get_row_cnt</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint16_t</name></type> <name>lv_table_get_col_cnt</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_coord_t</name></type> <name>lv_table_get_col_width</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_label_align_t</name></type> <name>lv_table_get_cell_align</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_label_align_t</name></type> <name>lv_table_get_cell_type</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>lv_label_align_t</name></type> <name>lv_table_get_cell_crop</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>lv_table_get_cell_merge_right</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>col</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_table_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>lv_table_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
