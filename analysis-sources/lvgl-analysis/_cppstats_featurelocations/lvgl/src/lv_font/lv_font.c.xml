<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats_featurelocations\lvgl\src\lv_font\lv_font.c">








<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_font.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_utils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_log.h"</cpp:file></cpp:include>



































<function><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type> <name>lv_font_get_glyph_bitmap</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_font_t</name> <modifier>*</modifier></type> <name>font_p</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>letter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>font_p</name><operator>-&gt;</operator><name>get_glyph_bitmap</name></name><argument_list>(<argument><expr><name>font_p</name></expr></argument>, <argument><expr><name>letter</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>









<function><type><name>bool</name></type> <name>lv_font_get_glyph_dsc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_font_t</name> <modifier>*</modifier></type> <name>font_p</name></decl></parameter>, <parameter><decl><type><name>lv_font_glyph_dsc_t</name> <modifier>*</modifier></type> <name>dsc_out</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>letter</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>letter_next</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>font_p</name><operator>-&gt;</operator><name>get_glyph_dsc</name></name><argument_list>(<argument><expr><name>font_p</name></expr></argument>, <argument><expr><name>dsc_out</name></expr></argument>, <argument><expr><name>letter</name></expr></argument>, <argument><expr><name>letter_next</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>








<function><type><name>uint16_t</name></type> <name>lv_font_get_glyph_width</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_font_t</name> <modifier>*</modifier></type> <name>font</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>letter</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>letter_next</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_font_glyph_dsc_t</name></type> <name>g</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ret</name></decl>;</decl_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>lv_font_get_glyph_dsc</name><argument_list>(<argument><expr><name>font</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>g</name></expr></argument>, <argument><expr><name>letter</name></expr></argument>, <argument><expr><name>letter_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>ret</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name><name>g</name><operator>.</operator><name>adv_w</name></name></expr>;</return></block_content></block></if>
<else>else<block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>




</unit>
