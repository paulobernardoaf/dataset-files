<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats_featurelocations\lvgl\src\lv_core\lv_indev.h">




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LV_INDEV_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_INDEV_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_obj.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_hal/lv_hal_indev.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_group.h"</cpp:file></cpp:include>
















<function_decl><type><name>void</name></type> <name>lv_indev_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>lv_indev_read_task</name><parameter_list>(<parameter><decl><type><name>lv_task_t</name> <modifier>*</modifier></type> <name>task</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>lv_indev_get_act</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_indev_type_t</name></type> <name>lv_indev_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>lv_indev_reset</name><parameter_list>(<parameter><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>lv_indev_reset_long_press</name><parameter_list>(<parameter><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_indev_enable</name><parameter_list>(<parameter><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_indev_set_cursor</name><parameter_list>(<parameter><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>, <parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cur_obj</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_GROUP</name></expr></cpp:if>





<function_decl><type><name>void</name></type> <name>lv_indev_set_group</name><parameter_list>(<parameter><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>, <parameter><decl><type><name>lv_group_t</name> <modifier>*</modifier></type> <name>group</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>







<function_decl><type><name>void</name></type> <name>lv_indev_set_button_points</name><parameter_list>(<parameter><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_point_t</name> <modifier>*</modifier></type> <name>points</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_indev_get_point</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>, <parameter><decl><type><name>lv_point_t</name> <modifier>*</modifier></type> <name>point</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>uint32_t</name></type> <name>lv_indev_get_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>lv_indev_is_dragging</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>lv_indev_get_vect</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>, <parameter><decl><type><name>lv_point_t</name> <modifier>*</modifier></type> <name>point</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>lv_indev_wait_release</name><parameter_list>(<parameter><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>lv_task_t</name> <modifier>*</modifier></type> <name>lv_indev_get_read_task</name><parameter_list>(<parameter><decl><type><name>lv_disp_t</name> <modifier>*</modifier></type> <name>indev</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_indev_get_obj_act</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
