<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats_featurelocations\lvgl\src\lv_objx\lv_page.c">







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_objx/lv_page.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_PAGE</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_debug.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_group.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_draw/lv_draw.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_themes/lv_theme.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_refr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_anim.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_math.h"</cpp:file></cpp:include>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_OBJX_NAME</name></cpp:macro> <cpp:value>"lv_page"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_PAGE_SB_MIN_SIZE</name></cpp:macro> <cpp:value>(LV_DPI / 8)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_PAGE_SCROLL_ANIM_TIME</name></cpp:macro> <cpp:value>200</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_PAGE_END_FLASH_SIZE</name></cpp:macro> <cpp:value>(LV_DPI / 4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_PAGE_END_ANIM_TIME</name></cpp:macro> <cpp:value>300</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_PAGE_END_ANIM_WAIT_TIME</name></cpp:macro> <cpp:value>300</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name> <operator>==</operator> <literal type="number">0</literal></expr></cpp:if>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LV_PAGE_DEF_ANIM_TIME</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_PAGE_DEF_ANIM_TIME</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>








<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>lv_page_sb_refresh</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>lv_page_design</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>lv_design_mode_t</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>lv_scrl_design</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>lv_design_mode_t</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_page_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_page_scrollable_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>scrl_def_event_cb</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_event_t</name></type> <name>event</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>edge_flash_anim</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_anim_value_t</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>edge_flash_anim_end</name><parameter_list>(<parameter><decl><type><name>lv_anim_t</name> <modifier>*</modifier></type> <name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<decl_stmt><decl><type><specifier>static</specifier> <name>lv_design_cb_t</name></type> <name>ancestor_design</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>lv_signal_cb_t</name></type> <name>ancestor_signal</name></decl>;</decl_stmt>















<function><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_page_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_LOG_TRACE</name><argument_list>(<argument><expr><literal type="string">"page create started"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>new_page</name> <init>= <expr><call><name>lv_cont_create</name><argument_list>(<argument><expr><name>par</name></expr></argument>, <argument><expr><name>copy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>LV_ASSERT_MEM</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>new_page</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>ancestor_signal</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ancestor_signal</name> <operator>=</operator> <call><name>lv_obj_get_signal_cb</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>ancestor_design</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ancestor_design</name> <operator>=</operator> <call><name>lv_obj_get_design_cb</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_allocate_ext_attr</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_page_ext_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>LV_ASSERT_MEM</name><argument_list>(<argument><expr><name>ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>ext</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_pretty</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>=</operator> <name>LV_SB_MODE_AUTO</name></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>style</name></name> <operator>=</operator> <operator>&amp;</operator><name>lv_style_plain_color</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>anim_time</name></name> <operator>=</operator> <name>LV_PAGE_DEF_ANIM_TIME</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>scroll_prop</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>scroll_prop_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name>copy</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name> <operator>=</operator> <call><name>lv_cont_create</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_signal_cb</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>lv_page_scrollable_signal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_design_cb</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>lv_scrl_design</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_drag</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_drag_throw</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_protect</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>LV_PROTECT_PARENT</name> <operator>|</operator> <name>LV_PROTECT_PRESS_LOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_cont_set_fit4</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>LV_FIT_FILL</name></expr></argument>, <argument><expr><name>LV_FIT_FILL</name></expr></argument>, <argument><expr><name>LV_FIT_FILL</name></expr></argument>, <argument><expr><name>LV_FIT_FILL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_event_cb</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>scrl_def_event_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 




<expr_stmt><expr><call><name>lv_obj_set_signal_cb</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>lv_page_signal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_design_cb</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>lv_page_design</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_page_set_sb_mode</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>lv_theme_t</name> <modifier>*</modifier></type> <name>th</name> <init>= <expr><call><name>lv_theme_get_current</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>th</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>par</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content> 
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>bg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_transp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>page</name><operator>.</operator><name>bg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>page</name><operator>.</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SB</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>page</name><operator>.</operator><name>sb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_pretty_color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_pretty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SB</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_pretty_color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>copy_ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>copy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name> <operator>=</operator> <call><name>lv_cont_create</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name><name>copy_ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_signal_cb</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>lv_page_scrollable_signal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><call><name>lv_obj_set_signal_cb</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>lv_page_signal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_design_cb</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>lv_page_design</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>, <argument><expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>copy</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>, <argument><expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>copy</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SB</name></expr></argument>, <argument><expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>copy</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SB</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_page_set_sb_mode</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>, <argument><expr><name><name>copy_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>lv_obj_refresh_style</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>lv_page_sb_refresh</name><argument_list>(<argument><expr><name>new_page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LV_LOG_INFO</name><argument_list>(<argument><expr><literal type="string">"page created"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>new_page</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>lv_page_clean</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name> <init>= <expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_obj_clean</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>










<function><type><name>void</name></type> <name>lv_page_set_sb_mode</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_sb_mode_t</name></type> <name>sb_mode</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>sb_mode</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>sb_mode</name> <operator>==</operator> <name>LV_SB_MODE_HIDE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>|=</operator> <name>LV_SB_MODE_HIDE</name></expr>;</expr_stmt></block_content></block></if> 
<if type="elseif">else if<condition>(<expr><name>sb_mode</name> <operator>==</operator> <name>LV_SB_MODE_UNHIDE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>&amp;=</operator> <operator>(</operator><operator>~</operator><name>LV_SB_MODE_HIDE</name><operator>)</operator></expr>;</expr_stmt></block_content></block></if> 
<else>else <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>&amp;</operator> <name>LV_SB_MODE_HIDE</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>sb_mode</name> <operator>|=</operator> <name>LV_SB_MODE_HIDE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>=</operator> <name>sb_mode</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_page_sb_refresh</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>lv_page_set_anim_time</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>anim_time</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>anim_time</name></name> <operator>=</operator> <name>anim_time</name></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>page</name></expr>;</expr_stmt> 
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>anim_time</name></expr>;</expr_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>







<function><type><name>void</name></type> <name>lv_page_set_scroll_propagation</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>scroll_prop</name></name> <operator>=</operator> <ternary><condition><expr><name>en</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>lv_page_set_edge_flash</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>=</operator> <ternary><condition><expr><name>en</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>page</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>en</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>







<function><type><name>void</name></type> <name>lv_page_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_page_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LV_PAGE_STYLE_BG</name></expr>:</case> <expr_stmt><expr><call><name>lv_obj_set_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>LV_PAGE_STYLE_SCRL</name></expr>:</case> <expr_stmt><expr><call><name>lv_obj_set_style</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>LV_PAGE_STYLE_SB</name></expr>:</case>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_area_set_height</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_area_set_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_sb_refresh</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_refresh_ext_draw_pad</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<case>case <expr><name>LV_PAGE_STYLE_EDGE_FLASH</name></expr>:</case> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>style</name></name> <operator>=</operator> <name>style</name></expr>;</expr_stmt> <break>break;</break>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></switch>
</block_content>}</block></function>










<function><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_page_get_scrl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr>;</return>
</block_content>}</block></function>






<function><type><name>uint16_t</name></type> <name>lv_page_get_anim_time</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>anim_time</name></name></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>page</name></expr>;</expr_stmt> 
<return>return <expr><literal type="number">0</literal></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>






<function><type><name>lv_sb_mode_t</name></type> <name>lv_page_get_sb_mode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name></expr>;</return>
</block_content>}</block></function>






<function><type><name>bool</name></type> <name>lv_page_get_scroll_propagation</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>scroll_prop</name></name> <operator>==</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name>false</name></expr> </then><else>: <expr><name>true</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>






<function><type><name>bool</name></type> <name>lv_page_get_edge_flash</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><ternary><condition><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>==</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name>false</name></expr> </then><else>: <expr><name>true</name></expr></else></ternary></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>page</name></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>






<function><type><name>lv_coord_t</name></type> <name>lv_page_get_fit_width</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>bg_style</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>scrl_style</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>bg_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>-</operator> <name><name>bg_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>-</operator>
<name><name>scrl_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>-</operator> <name><name>scrl_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</return>
</block_content>}</block></function>






<function><type><name>lv_coord_t</name></type> <name>lv_page_get_fit_height</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>bg_style</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>scrl_style</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>bg_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>-</operator> <name><name>bg_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name> <operator>-</operator>
<name><name>scrl_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>-</operator> <name><name>scrl_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</return>
</block_content>}</block></function>







<function><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_page_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_page_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LV_PAGE_STYLE_BG</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>LV_PAGE_STYLE_SCRL</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>LV_PAGE_STYLE_SB</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name></name></expr>;</expr_stmt> <break>break;</break>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<case>case <expr><name>LV_PAGE_STYLE_EDGE_FLASH</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>style</name></name></expr>;</expr_stmt> <break>break;</break>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<default>default:</default> <expr_stmt><expr><name>style</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> <break>break;</break>
</block_content>}</block></switch>

<return>return <expr><name>style</name></expr>;</return>
</block_content>}</block></function>











<function><type><name>bool</name></type> <name>lv_page_on_edge</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_page_edge_t</name></type> <name>edge</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>page_style</name> <init>= <expr><call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name> <init>= <expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_area_t</name></type> <name>page_coords</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_area_t</name></type> <name>scrl_coords</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>lv_obj_get_coords</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>scrl_coords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_get_coords</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>page_coords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>edge</name> <operator>&amp;</operator> <name>LV_PAGE_EDGE_TOP</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>y1</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name>edge</name> <operator>&amp;</operator> <name>LV_PAGE_EDGE_BOTTOM</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>y2</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>y2</name></name> <operator>-</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name>edge</name> <operator>&amp;</operator> <name>LV_PAGE_EDGE_LEFT</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>x1</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name>edge</name> <operator>&amp;</operator> <name>LV_PAGE_EDGE_RIGHT</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>x2</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>x2</name></name> <operator>-</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>lv_page_glue_obj</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>obj</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>glue</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lv_obj_set_drag_parent</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>glue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_drag</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>glue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>







<function><type><name>void</name></type> <name>lv_page_focus</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>obj</name></decl></parameter>, <parameter><decl><type><name>lv_anim_enable_t</name></type> <name>anim_en</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>


<expr_stmt><expr><call><name>lv_anim_del</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_del</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_del</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_del</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_scrl</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>obj_y</name> <init>= <expr><name><name>obj</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>scrl</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>obj_h</name> <init>= <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>scrlable_y</name> <init>= <expr><call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>page_h</name> <init>= <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>top_err</name> <init>= <expr><operator>-</operator><operator>(</operator><name>scrlable_y</name> <operator>+</operator> <name>obj_y</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>bot_err</name> <init>= <expr><name>scrlable_y</name> <operator>+</operator> <name>obj_y</name> <operator>+</operator> <name>obj_h</name> <operator>-</operator> <name>page_h</name></expr></init></decl>;</decl_stmt>


<if_stmt><if>if<condition>(<expr><operator>(</operator><name>obj_h</name> <operator>&lt;=</operator> <name>page_h</name> <operator>&amp;&amp;</operator> <name>top_err</name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>obj_h</name> <operator>&gt;</operator> <name>page_h</name> <operator>&amp;&amp;</operator> <name>top_err</name> <operator>&lt;</operator> <name>bot_err</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>scrlable_y</name> <operator>=</operator> <operator>-</operator><operator>(</operator><name>obj_y</name> <operator>-</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>-</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>scrlable_y</name> <operator>+=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>
</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><operator>(</operator><name>obj_h</name> <operator>&lt;=</operator> <name>page_h</name> <operator>&amp;&amp;</operator> <name>bot_err</name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>obj_h</name> <operator>&gt;</operator> <name>page_h</name> <operator>&amp;&amp;</operator> <name>top_err</name> <operator>&gt;=</operator> <name>bot_err</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>scrlable_y</name> <operator>=</operator> <operator>-</operator><operator>(</operator><name>obj_y</name> <operator>+</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>scrlable_y</name> <operator>-=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>scrlable_y</name> <operator>+=</operator> <name>page_h</name> <operator>-</operator> <name>obj_h</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>obj_x</name> <init>= <expr><name><name>obj</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>scrl</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>obj_w</name> <init>= <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>scrlable_x</name> <init>= <expr><call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>page_w</name> <init>= <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>left_err</name> <init>= <expr><operator>-</operator><operator>(</operator><name>scrlable_x</name> <operator>+</operator> <name>obj_x</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>right_err</name> <init>= <expr><name>scrlable_x</name> <operator>+</operator> <name>obj_x</name> <operator>+</operator> <name>obj_w</name> <operator>-</operator> <name>page_w</name></expr></init></decl>;</decl_stmt>


<if_stmt><if>if<condition>(<expr><operator>(</operator><name>obj_w</name> <operator>&lt;=</operator> <name>page_w</name> <operator>&amp;&amp;</operator> <name>left_err</name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>obj_w</name> <operator>&gt;</operator> <name>page_w</name> <operator>&amp;&amp;</operator> <name>left_err</name> <operator>&lt;</operator> <name>right_err</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>scrlable_x</name> <operator>=</operator> <operator>-</operator><operator>(</operator><name>obj_x</name> <operator>-</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>-</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>scrlable_x</name> <operator>+=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>
</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><operator>(</operator><name>obj_w</name> <operator>&lt;=</operator> <name>page_w</name> <operator>&amp;&amp;</operator> <name>right_err</name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>obj_w</name> <operator>&gt;</operator> <name>page_w</name> <operator>&amp;&amp;</operator> <name>left_err</name> <operator>&gt;=</operator> <name>right_err</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>scrlable_x</name> <operator>=</operator> <operator>-</operator><operator>(</operator><name>obj_x</name> <operator>+</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>scrlable_x</name> <operator>-=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>scrlable_x</name> <operator>+=</operator> <name>page_w</name> <operator>-</operator> <name>obj_w</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>anim_en</name> <operator>==</operator> <name>LV_ANIM_OFF</name> <operator>||</operator> <call><name>lv_page_get_anim_time</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_obj_set_y</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>scrlable_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_x</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>scrlable_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_anim_t</name></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>act_time</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>start</name></name> <operator>=</operator> <call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name>scrlable_y</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>time</name></name> <operator>=</operator> <call><name>lv_page_get_anim_time</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>ready_cb</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>var</name></name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>path_cb</name></name> <operator>=</operator> <name>lv_anim_path_linear</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_y</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>.</operator><name>start</name></name> <operator>=</operator> <call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name>scrlable_x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_x</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>lv_page_scroll_hor</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>dist</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name> <init>= <expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_anim_t</name></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>var</name></name> <operator>=</operator> <name>scrl</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>start</name></name> <operator>=</operator> <call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name><name>a</name><operator>.</operator><name>start</name></name> <operator>+</operator> <name>dist</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>path_cb</name></name> <operator>=</operator> <name>lv_anim_path_linear</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>ready_cb</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>act_time</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>LV_PAGE_SCROLL_ANIM_TIME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback_pause</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat_pause</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>lv_obj_set_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>dist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>lv_page_scroll_ver</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>dist</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name> <init>= <expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_anim_t</name></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>var</name></name> <operator>=</operator> <name>scrl</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>start</name></name> <operator>=</operator> <call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name><name>a</name><operator>.</operator><name>start</name></name> <operator>+</operator> <name>dist</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_y</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>path_cb</name></name> <operator>=</operator> <name>lv_anim_path_linear</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>ready_cb</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>act_time</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>LV_PAGE_SCROLL_ANIM_TIME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback_pause</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat_pause</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>lv_obj_set_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>dist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>lv_page_start_edge_flash</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_anim_t</name></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>var</name></name> <operator>=</operator> <name>page</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>start</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name>LV_PAGE_END_FLASH_SIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>edge_flash_anim</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>path_cb</name></name> <operator>=</operator> <name>lv_anim_path_linear</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>ready_cb</name></name> <operator>=</operator> <name>edge_flash_anim_end</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>act_time</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>LV_PAGE_END_ANIM_TIME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback_pause</name></name> <operator>=</operator> <name>LV_PAGE_END_ANIM_WAIT_TIME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat_pause</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>page</name></expr>;</expr_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>bool</name></type> <name>lv_page_design</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>lv_design_mode_t</name></type> <name>mode</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_COVER_CHK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ancestor_design</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_style_t</name></type> <name>style_tmp</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>style_tmp</name></expr></argument>, <argument><expr><name>style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_DRAW_MAIN</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>style_tmp</name><operator>.</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>page</name><operator>-&gt;</operator><name>coords</name></name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>style_tmp</name></expr></argument>, <argument><expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_DRAW_POST</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>style_tmp</name><operator>.</operator><name>body</name><operator>.</operator><name>shadow</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>style_tmp</name><operator>.</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_TRANSP</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>page</name><operator>-&gt;</operator><name>coords</name></name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>style_tmp</name></expr></argument>, <argument><expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>lv_area_t</name></type> <name>sb_area</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>&amp;</operator> <name>LV_SB_MODE_HIDE</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name></name></expr></argument>, <argument><expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>&amp;</operator> <name>LV_SB_MODE_HIDE</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name></name></expr></argument>, <argument><expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>page_w</name> <init>= <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>page_h</name> <init>= <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_area_t</name></type> <name>flash_area</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>-</operator> <name>page_w</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>+</operator> <name>page_w</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <literal type="number">3</literal> <operator>*</operator> <name>page_w</name> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>-</operator> <name>page_w</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>+</operator> <name>page_w</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y2</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y2</name></name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>page_w</name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>page_h</name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <name>page_h</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y2</name></name> <operator>+</operator> <name>page_h</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>-</operator> <literal type="number">3</literal> <operator>*</operator> <name>page_h</name> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>x2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y1</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <name>page_h</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_area</name><operator>.</operator><name>y2</name></name> <operator>=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y2</name></name> <operator>+</operator> <name>page_h</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>||</operator>
<name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_style_t</name></type> <name>flash_style</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_style_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>flash_style</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>style</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>flash_style</name><operator>.</operator><name>body</name><operator>.</operator><name>radius</name></name> <operator>=</operator> <name>LV_RADIUS_CIRCLE</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>opa</name> <init>= <expr><operator>(</operator><name><name>flash_style</name><operator>.</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>*</operator> <name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name><operator>)</operator> <operator>/</operator> <name>LV_PAGE_END_FLASH_SIZE</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>flash_style</name><operator>.</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>opa</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_draw_rect</name><argument_list>(<argument><expr><operator>&amp;</operator><name>flash_area</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flash_style</name></expr></argument>, <argument><expr><call><name>lv_obj_get_opa_scale</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>











<function><type><specifier>static</specifier> <name>bool</name></type> <name>lv_scrl_design</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_area_t</name> <modifier>*</modifier></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>lv_design_mode_t</name></type> <name>mode</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_COVER_CHK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ancestor_design</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_DRAW_MAIN</name></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_GROUP</name></expr></cpp:if>



<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_scrl_ori</name> <init>= <expr><call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name> <init>= <expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_page</name> <init>= <expr><call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_group_t</name> <modifier>*</modifier></type> <name>g</name> <init>= <expr><call><name>lv_obj_get_group</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name><name>style_page</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>==</operator> <name>LV_OPA_TRANSP</name><operator>)</operator> <operator>&amp;&amp;</operator>
<name><name>style_page</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content> 
<if_stmt><if>if<condition>(<expr><call><name>lv_group_get_focused</name><argument_list>(<argument><expr><name>g</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>page</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_style_t</name> <modifier>*</modifier></type> <name>style_mod</name></decl>;</decl_stmt>
<expr_stmt><expr><name>style_mod</name> <operator>=</operator> <call><name>lv_group_mod_style</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>style_scrl_ori</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name><name>style_mod</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>==</operator> <name>LV_OPA_TRANSP</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>style_mod</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>style_mod</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>opa</name></name> <operator>=</operator> <name>LV_OPA_50</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>style_mod</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>border</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>style_mod</name> <operator>=</operator> <call><name>lv_group_mod_style</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>style_mod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>scrl</name><operator>-&gt;</operator><name>style_p</name></name> <operator>=</operator> <name>style_mod</name></expr>;</expr_stmt> 
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><call><name>ancestor_design</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_GROUP</name></expr></cpp:if>
<expr_stmt><expr><name><name>scrl</name><operator>-&gt;</operator><name>style_p</name></name> <operator>=</operator> <name>style_scrl_ori</name></expr>;</expr_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>mode</name> <operator>==</operator> <name>LV_DESIGN_DRAW_POST</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ancestor_design</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_page_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_res_t</name></type> <name>res</name></decl>;</decl_stmt>


<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>ancestor_signal</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>sign</name></expr></argument>, <argument><expr><name>param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>LV_RES_OK</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>res</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_GET_TYPE</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>lv_obj_handle_get_type_signal</name><argument_list>(<argument><expr><name>param</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>child</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CHILD_CHG</name></expr>)</condition> <block>{<block_content> 
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>LV_RES_OK</name></expr>;</return></block_content></block></if></if_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_bg</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_scrl</name> <init>= <expr><call><name>lv_page_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_fit_t</name></type> <name>fit_left</name> <init>= <expr><call><name>lv_page_get_scrl_fit_left</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_fit_t</name></type> <name>fit_right</name> <init>= <expr><call><name>lv_page_get_scrl_fit_right</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_fit_t</name></type> <name>fit_top</name> <init>= <expr><call><name>lv_page_get_scrl_fit_top</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>child</name> <operator>=</operator> <call><name>lv_obj_get_child</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while<condition>(<expr><name>child</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><call><name>lv_obj_is_protected</name><argument_list>(<argument><expr><name>child</name></expr></argument>, <argument><expr><name>LV_PROTECT_PARENT</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>false</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tmp</name> <init>= <expr><name>child</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>child</name> <operator>=</operator> <call><name>lv_obj_get_child</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<if_stmt><if>if<condition>(<expr><operator>(</operator><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>==</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>fit_left</name> <operator>==</operator> <name>LV_FIT_TIGHT</name> <operator>||</operator> <name>fit_left</name> <operator>==</operator> <name>LV_FIT_FILL</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><operator>(</operator><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>==</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>fit_right</name> <operator>==</operator> <name>LV_FIT_TIGHT</name> <operator>||</operator> <name>fit_right</name> <operator>==</operator> <name>LV_FIT_FILL</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>-=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x2</name></name> <operator>-=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>==</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>fit_top</name> <operator>==</operator> <name>LV_FIT_TIGHT</name> <operator>||</operator> <name>fit_top</name> <operator>==</operator> <name>LV_FIT_FILL</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tmp</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>style_scrl</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>lv_obj_set_parent</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>child</name> <operator>=</operator> <call><name>lv_obj_get_child</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></while>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_STYLE_CHG</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name><name>ext</name><operator>-&gt;</operator><name>scrl</name><operator>-&gt;</operator><name>signal_cb</name></name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>LV_SIGNAL_CORD_CHG</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>scrl</name><operator>-&gt;</operator><name>coords</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_page_sb_refresh</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>lv_obj_refresh_ext_draw_pad</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CORD_CHG</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>lv_area_get_width</name><argument_list>(<argument><expr><name>param</name></expr></argument>)</argument_list></call> <operator>||</operator>
<call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>lv_area_get_height</name><argument_list>(<argument><expr><name>param</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>ext</name><operator>-&gt;</operator><name>scrl</name><operator>-&gt;</operator><name>signal_cb</name></name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>LV_SIGNAL_CORD_CHG</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>scrl</name><operator>-&gt;</operator><name>coords</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_page_sb_refresh</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_REFR_EXT_DRAW_PAD</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>page</name><operator>-&gt;</operator><name>ext_draw_pad</name></name> <operator>&lt;</operator> <operator>(</operator><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>page</name><operator>-&gt;</operator><name>ext_draw_pad</name></name> <operator>=</operator> <operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>page</name><operator>-&gt;</operator><name>ext_draw_pad</name></name> <operator>&lt;</operator> <operator>(</operator><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>page</name><operator>-&gt;</operator><name>ext_draw_pad</name></name> <operator>=</operator> <operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CONTROL</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>c</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>uint32_t</name> <operator>*</operator><operator>)</operator><name>param</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <name>LV_KEY_DOWN</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_scroll_ver</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>-</operator><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <name>LV_KEY_UP</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_scroll_ver</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <name>LV_KEY_RIGHT</name></expr>)</condition> <block>{<block_content>


<if_stmt><if>if<condition>(<expr><call><name>lv_page_get_scrl_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>&lt;=</operator> <call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>lv_page_scroll_ver</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>-</operator><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>lv_page_scroll_hor</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>-</operator><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <name>LV_KEY_LEFT</name></expr>)</condition> <block>{<block_content>


<if_stmt><if>if<condition>(<expr><call><name>lv_page_get_scrl_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>&lt;=</operator> <call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>lv_page_scroll_ver</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>lv_page_scroll_hor</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_GET_EDITABLE</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>bool</name> <modifier>*</modifier></type> <name>editable</name> <init>= <expr><operator>(</operator><name>bool</name> <operator>*</operator><operator>)</operator><name>param</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>*</operator><name>editable</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_page_scrollable_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_res_t</name></type> <name>res</name></decl>;</decl_stmt>


<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>ancestor_signal</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><name>sign</name></expr></argument>, <argument><expr><name>param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>LV_RES_OK</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>res</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_GET_TYPE</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>lv_obj_handle_get_type_signal</name><argument_list>(<argument><expr><name>param</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name> <init>= <expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>page_style</name> <init>= <expr><call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>page_ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CORD_CHG</name></expr>)</condition> <block>{<block_content>


<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>new_x</name> <init>= <expr><call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>new_y</name> <init>= <expr><call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>refr_x</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>refr_y</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_area_t</name></type> <name>page_coords</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_area_t</name></type> <name>scrl_coords</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_obj_get_coords</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>scrl_coords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_get_coords</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>page_coords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_area_t</name> <modifier>*</modifier></type> <name>ori_coords</name> <init>= <expr><operator>(</operator><name>lv_area_t</name> <operator>*</operator><operator>)</operator><name>param</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>diff_x</name> <init>= <expr><name><name>scrl</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>-</operator> <name><name>ori_coords</name><operator>-&gt;</operator><name>x1</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>diff_y</name> <init>= <expr><name><name>scrl</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <name><name>ori_coords</name><operator>-&gt;</operator><name>y1</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>hpad</name> <init>= <expr><name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>vpad</name> <init>= <expr><name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page_parent</name> <init>= <expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name> <init>= <expr><call><name>lv_indev_get_act</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_point_t</name></type> <name>drag_vect</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_indev_get_vect</name><argument_list>(<argument><expr><name>indev</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>drag_vect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>scroll_prop</name></name> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>scroll_prop_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name>lv_indev_is_dragging</name><argument_list>(<argument><expr><name>indev</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>false</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>(</operator><operator>(</operator><name><name>drag_vect</name><operator>.</operator><name>y</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>y1</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name><name>drag_vect</name><operator>.</operator><name>y</name></name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>y2</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>y2</name></name> <operator>-</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name><operator>)</operator><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>(</operator><name><name>drag_vect</name><operator>.</operator><name>x</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>x1</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name><name>drag_vect</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>scrl_coords</name><operator>.</operator><name>x2</name></name> <operator>==</operator> <name><name>page_coords</name><operator>.</operator><name>x2</name></name> <operator>-</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>page_parent</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content> 
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>scroll_prop_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if<condition>(<expr><call><name>lv_area_get_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name>scrl_coords</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>hpad</name> <operator>&lt;=</operator> <call><name>lv_area_get_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name>page_coords</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>scrl_coords</name><operator>.</operator><name>x1</name></name> <operator>!=</operator> <name><name>page_coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_x</name> <operator>=</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>refr_x</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>


<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>scroll_prop_ip</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>drag_vect</name><operator>.</operator><name>x</name></name> <operator>==</operator> <name>diff_x</name></expr>)</condition> <block>{<block_content> 

<expr_stmt><expr><name>new_x</name> <operator>=</operator> <name><name>ori_coords</name><operator>-&gt;</operator><name>x1</name></name> <operator>-</operator> <name><name>page_coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>refr_x</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><name><name>scrl_coords</name><operator>.</operator><name>x2</name></name> <operator>&lt;</operator> <name><name>page_coords</name><operator>.</operator><name>x2</name></name> <operator>-</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_x</name> <operator>=</operator> <call><name>lv_area_get_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name>page_coords</name></expr></argument>)</argument_list></call> <operator>-</operator> <call><name>lv_area_get_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name>scrl_coords</name></expr></argument>)</argument_list></call> <operator>-</operator>
<name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt> 
<expr_stmt><expr><name>refr_x</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>scrl_coords</name><operator>.</operator><name>x1</name></name> <operator>&gt;</operator> <name><name>page_coords</name><operator>.</operator><name>x1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_x</name> <operator>=</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt> 
<expr_stmt><expr><name>refr_x</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>


<if_stmt><if>if<condition>(<expr><call><name>lv_area_get_height</name><argument_list>(<argument><expr><operator>&amp;</operator><name>scrl_coords</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>vpad</name> <operator>&lt;=</operator> <call><name>lv_area_get_height</name><argument_list>(<argument><expr><operator>&amp;</operator><name>page_coords</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>scrl_coords</name><operator>.</operator><name>y1</name></name> <operator>!=</operator> <name><name>page_coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_y</name> <operator>=</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>refr_y</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>


<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>scroll_prop_ip</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>drag_vect</name><operator>.</operator><name>y</name></name> <operator>==</operator> <name>diff_y</name></expr>)</condition> <block>{<block_content> 

<expr_stmt><expr><name>new_y</name> <operator>=</operator> <name><name>ori_coords</name><operator>-&gt;</operator><name>y1</name></name> <operator>-</operator> <name><name>page_coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>refr_y</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><name><name>scrl_coords</name><operator>.</operator><name>y2</name></name> <operator>&lt;</operator> <name><name>page_coords</name><operator>.</operator><name>y2</name></name> <operator>-</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_y</name> <operator>=</operator> <call><name>lv_area_get_height</name><argument_list>(<argument><expr><operator>&amp;</operator><name>page_coords</name></expr></argument>)</argument_list></call> <operator>-</operator> <call><name>lv_area_get_height</name><argument_list>(<argument><expr><operator>&amp;</operator><name>scrl_coords</name></expr></argument>)</argument_list></call> <operator>-</operator>
<name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt> 
<expr_stmt><expr><name>refr_y</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>scrl_coords</name><operator>.</operator><name>y1</name></name> <operator>&gt;</operator> <name><name>page_coords</name><operator>.</operator><name>y1</name></name> <operator>+</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_y</name> <operator>=</operator> <name><name>page_style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt> 
<expr_stmt><expr><name>refr_y</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>(<expr><name>refr_x</name> <operator>||</operator> <name>refr_y</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_obj_set_pos</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><name>new_x</name></expr></argument>, <argument><expr><name>new_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>scroll_prop_ip</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>refr_y</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_obj_set_y</name><argument_list>(<argument><expr><name>page_parent</name></expr></argument>, <argument><expr><call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name>page_parent</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>diff_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>refr_x</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>lv_obj_set_x</name><argument_list>(<argument><expr><name>page_parent</name></expr></argument>, <argument><expr><call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name>page_parent</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>diff_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>lv_page_sb_refresh</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_DRAG_END</name></expr>)</condition> <block>{<block_content>


<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>scroll_prop_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_DRAG</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_area_t</name></type> <name>sb_area_tmp</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>page_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate_area</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>page_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>page_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate_area</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CLEANUP</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>page_ext</name><operator>-&gt;</operator><name>scrl</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <name>void</name></type> <name>scrl_def_event_cb</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_event_t</name></type> <name>event</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name> <init>= <expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<if_stmt><if>if<condition>(<expr><name>event</name> <operator>==</operator> <name>LV_EVENT_PRESSED</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_PRESSING</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_PRESS_LOST</name> <operator>||</operator>
<name>event</name> <operator>==</operator> <name>LV_EVENT_RELEASED</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_SHORT_CLICKED</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_CLICKED</name> <operator>||</operator>
<name>event</name> <operator>==</operator> <name>LV_EVENT_LONG_PRESSED</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_LONG_PRESSED_REPEAT</name> <operator>||</operator>
<name>event</name> <operator>==</operator> <name>LV_EVENT_DRAG_BEGIN</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_DRAG_END</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_DRAG_THROW_BEGIN</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_event_send</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>event</name></expr></argument>, <argument><expr><call><name>lv_event_get_data</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>void</name></type> <name>lv_page_sb_refresh</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name> <init>= <expr><call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name> <init>= <expr><name><name>ext</name><operator>-&gt;</operator><name>scrl</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>size_tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>scrl_w</name> <init>= <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>scrl_h</name> <init>= <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>obj_w</name> <init>= <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>obj_h</name> <init>= <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>





<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>sb_hor_pad</name> <init>= <expr><call><name>LV_MATH_MAX</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name></expr></argument>, <argument><expr><name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>sb_ver_pad</name> <init>= <expr><call><name>LV_MATH_MAX</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name></expr></argument>, <argument><expr><name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_OFF</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_ON</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<decl_stmt><decl><type><name>lv_area_t</name></type> <name>sb_area_tmp</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate_area</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate_area</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_DRAG</name> <operator>&amp;&amp;</operator> <call><name>lv_indev_is_dragging</name><argument_list>(<argument><expr><call><name>lv_indev_get_act</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <name>false</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if<condition>(<expr><name>scrl_w</name> <operator>&lt;=</operator> <name>obj_w</name> <operator>-</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>-</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_set_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>, <argument><expr><name>obj_w</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>sb_hor_pad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_area_set_pos</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>, <argument><expr><name>sb_hor_pad</name></expr></argument>,
<argument><expr><name>obj_h</name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_AUTO</name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_DRAG</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if>

<else>else <block>{<block_content>
<expr_stmt><expr><name>size_tmp</name> <operator>=</operator>
<operator>(</operator><name>obj_w</name> <operator>*</operator> <operator>(</operator><name>obj_w</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>sb_hor_pad</name><operator>)</operator><operator>)</operator><operator>)</operator> <operator>/</operator> <operator>(</operator><name>scrl_w</name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name><operator>)</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>size_tmp</name> <operator>&lt;</operator> <name>LV_PAGE_SB_MIN_SIZE</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>size_tmp</name> <operator>=</operator> <name>LV_PAGE_SB_MIN_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>lv_area_set_width</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>, <argument><expr><name>size_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_area_set_pos</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>,
<argument><expr><name>sb_hor_pad</name> <operator>+</operator>
<operator>(</operator><operator>-</operator><operator>(</operator><call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name><operator>)</operator> <operator>*</operator> <operator>(</operator><name>obj_w</name> <operator>-</operator> <name>size_tmp</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>sb_hor_pad</name><operator>)</operator><operator>)</operator> <operator>/</operator>
<operator>(</operator><name>scrl_w</name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name> <operator>-</operator> <name>obj_w</name><operator>)</operator></expr></argument>,
<argument><expr><name>obj_h</name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_AUTO</name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_DRAG</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>


<if_stmt><if>if<condition>(<expr><name>scrl_h</name> <operator>&lt;=</operator> <name>obj_h</name> <operator>-</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>-</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_set_height</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>, <argument><expr><name>obj_h</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>sb_ver_pad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_area_set_pos</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>,
<argument><expr><name>obj_w</name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr></argument>, <argument><expr><name>sb_ver_pad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_AUTO</name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_DRAG</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if>

<else>else <block>{<block_content>
<expr_stmt><expr><name>size_tmp</name> <operator>=</operator>
<operator>(</operator><name>obj_h</name> <operator>*</operator> <operator>(</operator><name>obj_h</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>sb_ver_pad</name><operator>)</operator><operator>)</operator><operator>)</operator> <operator>/</operator> <operator>(</operator><name>scrl_h</name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name><operator>)</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>size_tmp</name> <operator>&lt;</operator> <name>LV_PAGE_SB_MIN_SIZE</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>size_tmp</name> <operator>=</operator> <name>LV_PAGE_SB_MIN_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>lv_area_set_height</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>, <argument><expr><name>size_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_area_set_pos</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>,
<argument><expr><name>obj_w</name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>inner</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>right</name></name></expr></argument>,
<argument><expr><name>sb_ver_pad</name> <operator>+</operator> <operator>(</operator><operator>-</operator><operator>(</operator><call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name><operator>)</operator> <operator>*</operator>
<operator>(</operator><name>obj_h</name> <operator>-</operator> <name>size_tmp</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>sb_ver_pad</name><operator>)</operator><operator>)</operator> <operator>/</operator>
<operator>(</operator><name>scrl_h</name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name> <operator>+</operator> <name><name>style</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>bottom</name></name> <operator>-</operator> <name>obj_h</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_AUTO</name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>mode</name></name> <operator>==</operator> <name>LV_SB_MODE_DRAG</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>


<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_draw</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>hor_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate_area</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_draw</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_area_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ext</name><operator>-&gt;</operator><name>sb</name><operator>.</operator><name>ver_area</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y1</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>x2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb_area_tmp</name><operator>.</operator><name>y2</name></name> <operator>+=</operator> <name><name>page</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate_area</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sb_area_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<function><type><specifier>static</specifier> <name>void</name></type> <name>edge_flash_anim</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_anim_value_t</name></type> <name>v</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>state</name></name> <operator>=</operator> <name>v</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>edge_flash_anim_end</name><parameter_list>(<parameter><decl><type><name>lv_anim_t</name> <modifier>*</modifier></type> <name>a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_page_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name><name>a</name><operator>-&gt;</operator><name>var</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_invalidate</name><argument_list>(<argument><expr><name><name>a</name><operator>-&gt;</operator><name>var</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
