<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats_featurelocations\lvgl\src\lv_objx\lv_page.h">




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LV_PAGE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_PAGE_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LV_CONF_INCLUDE_SIMPLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_conf.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../lv_conf.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_PAGE</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_CONT</name> <operator>==</operator> <literal type="number">0</literal></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"lv_page: lv_cont is required. Enable it in lv_conf.h (LV_USE_CONT 1) "</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_cont.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_indev.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_misc/lv_anim.h"</cpp:file></cpp:include>










<enum>enum <block>{
<decl><name>LV_SB_MODE_OFF</name> <init>= <expr><literal type="number">0x0</literal></expr></init></decl>, 
<decl><name>LV_SB_MODE_ON</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>, 
<decl><name>LV_SB_MODE_DRAG</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>, 
<decl><name>LV_SB_MODE_AUTO</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>, 
<decl><name>LV_SB_MODE_HIDE</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>, 
<decl><name>LV_SB_MODE_UNHIDE</name> <init>= <expr><literal type="number">0x5</literal></expr></init></decl>, 
}</block>;</enum>
<typedef>typedef <type><name>uint8_t</name></type> <name>lv_sb_mode_t</name>;</typedef>


<enum>enum <block>{ <decl><name>LV_PAGE_EDGE_LEFT</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>, <decl><name>LV_PAGE_EDGE_TOP</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>, <decl><name>LV_PAGE_EDGE_RIGHT</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>, <decl><name>LV_PAGE_EDGE_BOTTOM</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl> }</block>;</enum>
<typedef>typedef <type><name>uint8_t</name></type> <name>lv_page_edge_t</name>;</typedef>


<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>lv_cont_ext_t</name></type> <name>bg</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl>;</decl_stmt> 
<struct>struct
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>lv_area_t</name></type> <name>hor_area</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>lv_area_t</name></type> <name>ver_area</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>hor_draw</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>ver_draw</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>lv_sb_mode_t</name></type> <name>mode</name> <range>: <expr><literal type="number">3</literal></expr></range></decl>;</decl_stmt> 
}</block> <decl><name>sb</name></decl>;</struct>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<struct>struct
<block>{
<decl_stmt><decl><type><name>lv_anim_value_t</name></type> <name>state</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enabled</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>top_ip</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bottom_ip</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>right_ip</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>left_ip</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 

}</block> <decl><name>edge_flash</name></decl>;</struct>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>anim_time</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>scroll_prop</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>scroll_prop_ip</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 
}</block></struct></type> <name>lv_page_ext_t</name>;</typedef>

<enum>enum <block>{
<decl><name>LV_PAGE_STYLE_BG</name></decl>,
<decl><name>LV_PAGE_STYLE_SCRL</name></decl>,
<decl><name>LV_PAGE_STYLE_SB</name></decl>,
<decl><name>LV_PAGE_STYLE_EDGE_FLASH</name></decl>,
}</block>;</enum>
<typedef>typedef <type><name>uint8_t</name></type> <name>lv_page_style_t</name>;</typedef>











<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_page_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>lv_page_clean</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_page_get_scrl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>uint16_t</name></type> <name>lv_page_get_anim_time</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>lv_page_set_sb_mode</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_sb_mode_t</name></type> <name>sb_mode</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_page_set_anim_time</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>anim_time</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>lv_page_set_scroll_propagation</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_page_set_edge_flash</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>;</function_decl>










<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>lv_page_set_scrl_fit4</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_fit_t</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>lv_fit_t</name></type> <name>right</name></decl></parameter>, <parameter><decl><type><name>lv_fit_t</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>lv_fit_t</name></type> <name>bottom</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lv_cont_set_fit4</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>left</name></expr></argument>, <argument><expr><name>right</name></expr></argument>, <argument><expr><name>top</name></expr></argument>, <argument><expr><name>bottom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>lv_page_set_scrl_fit2</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_fit_t</name></type> <name>hor</name></decl></parameter>, <parameter><decl><type><name>lv_fit_t</name></type> <name>ver</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lv_cont_set_fit2</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>hor</name></expr></argument>, <argument><expr><name>ver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>







<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>lv_page_set_scrl_fit</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_fit_t</name></type> <name>fit</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lv_cont_set_fit</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>lv_page_set_scrl_width</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lv_obj_set_width</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>lv_page_set_scrl_height</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lv_obj_set_height</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>lv_page_set_scrl_layout</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_layout_t</name></type> <name>layout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lv_cont_set_layout</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>







<function_decl><type><name>void</name></type> <name>lv_page_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_page_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>lv_sb_mode_t</name></type> <name>lv_page_get_sb_mode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>lv_page_get_scroll_propagation</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>lv_page_get_edge_flash</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_coord_t</name></type> <name>lv_page_get_fit_width</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_coord_t</name></type> <name>lv_page_get_fit_height</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>lv_coord_t</name></type> <name>lv_page_get_scrl_width</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>lv_coord_t</name></type> <name>lv_page_get_scrl_height</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>lv_layout_t</name></type> <name>lv_page_get_scrl_layout</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>lv_cont_get_layout</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>lv_fit_t</name></type> <name>lv_page_get_scrl_fit_left</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>lv_cont_get_fit_left</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>lv_fit_t</name></type> <name>lv_page_get_scrl_fit_right</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>lv_cont_get_fit_right</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>lv_fit_t</name></type> <name>lv_page_get_scrl_fit_top</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>lv_cont_get_fit_top</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>lv_fit_t</name></type> <name>lv_page_get_scrl_fit_bottom</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>lv_cont_get_fit_bottom</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>







<function_decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_page_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_page_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>bool</name></type> <name>lv_page_on_edge</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_page_edge_t</name></type> <name>edge</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_page_glue_obj</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>obj</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>glue</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>lv_page_focus</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>obj</name></decl></parameter>, <parameter><decl><type><name>lv_anim_enable_t</name></type> <name>anim_en</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_page_scroll_hor</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>dist</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_page_scroll_ver</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>dist</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_page_start_edge_flash</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>




<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
