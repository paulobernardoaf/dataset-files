<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats_featurelocations\lvgl\src\lv_objx\lv_cpicker.h">




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LV_CPICKER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_CPICKER_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LV_CONF_INCLUDE_SIMPLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_conf.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../lv_conf.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_CPICKER</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_obj.h"</cpp:file></cpp:include>









<enum>enum <block>{
<decl><name>LV_CPICKER_TYPE_RECT</name></decl>,
<decl><name>LV_CPICKER_TYPE_DISC</name></decl>,
}</block>;</enum>
<typedef>typedef <type><name>uint8_t</name></type> <name>lv_cpicker_type_t</name>;</typedef>

<enum>enum <block>{
<decl><name>LV_CPICKER_COLOR_MODE_HUE</name></decl>,
<decl><name>LV_CPICKER_COLOR_MODE_SATURATION</name></decl>,
<decl><name>LV_CPICKER_COLOR_MODE_VALUE</name></decl>
}</block>;</enum>
<typedef>typedef <type><name>uint8_t</name></type> <name>lv_cpicker_color_mode_t</name>;</typedef>




<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>lv_color_hsv_t</name></type> <name>hsv</name></decl>;</decl_stmt>
<struct>struct <block>{
<decl_stmt><decl><type><name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_point_t</name></type> <name>pos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>colored</name> <range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

}</block> <decl><name>indic</name></decl>;</struct>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>last_click_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>last_change_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_point_t</name></type> <name>last_press_point</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_cpicker_color_mode_t</name></type> <name>color_mode</name> <range>:<expr><literal type="number">2</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>color_mode_fixed</name> <range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_cpicker_type_t</name></type> <name>type</name> <range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>preview</name> <range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
}</block></struct></type> <name>lv_cpicker_ext_t</name>;</typedef>


<enum>enum <block>{
<decl><name>LV_CPICKER_STYLE_MAIN</name></decl>,
<decl><name>LV_CPICKER_STYLE_INDICATOR</name></decl>,
}</block>;</enum>
<typedef>typedef <type><name>uint8_t</name></type> <name>lv_cpicker_style_t</name>;</typedef>












<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_cpicker_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>lv_cpicker_set_type</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>lv_cpicker_type_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>lv_cpicker_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>lv_cpicker_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>lv_style_t</name> <modifier>*</modifier></type><name>style</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>lv_cpicker_set_hue</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>hue</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>lv_cpicker_set_saturation</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>saturation</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>lv_cpicker_set_value</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>lv_cpicker_set_hsv</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>lv_color_hsv_t</name></type> <name>hsv</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>lv_cpicker_set_color</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>lv_color_t</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_cpicker_set_color_mode</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>lv_cpicker_color_mode_t</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_cpicker_set_color_mode_fixed</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>fixed</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_cpicker_set_indic_colored</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_cpicker_set_preview</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>lv_cpicker_color_mode_t</name></type> <name>lv_cpicker_get_color_mode</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>lv_cpicker_get_color_mode_fixed</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_cpicker_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>, <parameter><decl><type><name>lv_cpicker_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>uint16_t</name></type> <name>lv_cpicker_get_hue</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>uint8_t</name></type> <name>lv_cpicker_get_saturation</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>uint8_t</name></type> <name>lv_cpicker_get_value</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_color_hsv_t</name></type> <name>lv_cpicker_get_hsv</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>lv_color_t</name></type> <name>lv_cpicker_get_color</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>lv_cpicker_get_indic_colored</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>lv_cpicker_get_preview</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>cpicker</name></decl></parameter>)</parameter_list>;</function_decl>









<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
