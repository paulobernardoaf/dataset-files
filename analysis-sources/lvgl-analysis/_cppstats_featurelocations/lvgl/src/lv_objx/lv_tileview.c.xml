<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats_featurelocations\lvgl\src\lv_objx\lv_tileview.c">







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_tileview.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_TILEVIEW</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_cont.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_debug.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_themes/lv_theme.h"</cpp:file></cpp:include>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_OBJX_NAME</name></cpp:macro> <cpp:value>"lv_tileview"</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LV_TILEVIEW_DEF_ANIM_TIME</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_TILEVIEW_DEF_ANIM_TIME</name></cpp:macro> <cpp:value>300</cpp:value></cpp:define> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LV_TILEVIEW_DEF_ANIM_TIME</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_TILEVIEW_DEF_ANIM_TIME</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>








<function_decl><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_tileview_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_tileview_scrl_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>tileview_scrl_event_cb</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_event_t</name></type> <name>event</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>drag_end_handler</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>set_valid_drag_dirs</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>)</parameter_list>;</function_decl>




<decl_stmt><decl><type><specifier>static</specifier> <name>lv_signal_cb_t</name></type> <name>ancestor_signal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>lv_signal_cb_t</name></type> <name>ancestor_scrl_signal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>lv_design_cb_t</name></type> <name>ancestor_design</name></decl>;</decl_stmt>















<function><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_tileview_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_LOG_TRACE</name><argument_list>(<argument><expr><literal type="string">"tileview create started"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>new_tileview</name> <init>= <expr><call><name>lv_page_create</name><argument_list>(<argument><expr><name>par</name></expr></argument>, <argument><expr><name>copy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>LV_ASSERT_MEM</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>new_tileview</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>


<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_allocate_ext_attr</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>lv_tileview_ext_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>LV_ASSERT_MEM</name><argument_list>(<argument><expr><name>ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>ext</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>ancestor_signal</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ancestor_signal</name> <operator>=</operator> <call><name>lv_obj_get_signal_cb</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>ancestor_scrl_signal</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ancestor_scrl_signal</name> <operator>=</operator> <call><name>lv_obj_get_signal_cb</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>ancestor_design</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ancestor_design</name> <operator>=</operator> <call><name>lv_obj_get_design_cb</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>anim_time</name></name> <operator>=</operator> <name>LV_TILEVIEW_DEF_ANIM_TIME</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos_cnt</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<expr_stmt><expr><call><name>lv_obj_set_signal_cb</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>lv_tileview_signal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_signal_cb</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>lv_tileview_scrl_signal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name>copy</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>



<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>w</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>h</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>par</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>w</name> <operator>=</operator> <call><name>lv_obj_get_width_fit</name><argument_list>(<argument><expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>h</name> <operator>=</operator> <call><name>lv_obj_get_height_fit</name><argument_list>(<argument><expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>w</name> <operator>=</operator> <call><name>lv_disp_get_hor_res</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>h</name> <operator>=</operator> <call><name>lv_disp_get_ver_res</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>lv_obj_set_size</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lv_obj_set_drag_throw</name><argument_list>(<argument><expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_scrl_fit</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>LV_FIT_TIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_event_cb</name><argument_list>(<argument><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>scrl</name></name></expr></argument>, <argument><expr><name>tileview_scrl_event_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_theme_t</name> <modifier>*</modifier></type> <name>th</name> <init>= <expr><call><name>lv_theme_get_current</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>th</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>tileview</name><operator>.</operator><name>bg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>tileview</name><operator>.</operator><name>scrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SB</name></expr></argument>, <argument><expr><name><name>th</name><operator>-&gt;</operator><name>style</name><operator>.</operator><name>tileview</name><operator>.</operator><name>sb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_BG</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_transp_tight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_set_style</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>, <argument><expr><name>LV_PAGE_STYLE_SCRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lv_style_transp_tight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if>

<else>else <block>{<block_content>
<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>copy_ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>copy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>valid_pos</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos_cnt</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>valid_pos_cnt</name></name></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>anim_time</name></name> <operator>=</operator> <name><name>copy_ext</name><operator>-&gt;</operator><name>anim_time</name></name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<expr_stmt><expr><call><name>lv_obj_refresh_style</name><argument_list>(<argument><expr><name>new_tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>LV_LOG_INFO</name><argument_list>(<argument><expr><literal type="string">"tileview created"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>new_tileview</name></expr>;</return>
</block_content>}</block></function>










<function><type><name>void</name></type> <name>lv_tileview_add_element</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>, <parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>element</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LV_ASSERT_NULL</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><name><name>element</name><operator>-&gt;</operator><name>parent_event</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_obj_set_drag_parent</name><argument_list>(<argument><expr><name>element</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_tileview_set_tile_act</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>












<function><type><name>void</name></type> <name>lv_tileview_set_valid_positions</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_point_t</name></type> <name><name>valid_pos</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>valid_pos_cnt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LV_ASSERT_NULL</name><argument_list>(<argument><expr><name>valid_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name></name> <operator>=</operator> <name>valid_pos</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos_cnt</name></name> <operator>=</operator> <name>valid_pos_cnt</name></expr>;</expr_stmt>


<decl_stmt><decl><type><name>uint16_t</name></type> <name>i</name></decl>;</decl_stmt>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>valid_pos_cnt</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>&amp;&amp;</operator> <name><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>


<if_stmt><if>if<condition>(<expr><name>valid_pos_cnt</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>lv_tileview_set_tile_act</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name><name>valid_pos</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>, <argument><expr><name><name>valid_pos</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>y</name></expr></argument>, <argument><expr><name>LV_ANIM_OFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>








<function><type><name>void</name></type> <name>lv_tileview_set_tile_act</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>lv_coord_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>lv_anim_enable_t</name></type> <name>anim</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name> <operator>==</operator> <literal type="number">0</literal></expr></cpp:if>
<expr_stmt><expr><name>anim</name> <operator>=</operator> <name>LV_ANIM_OFF</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>tile_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>valid</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<for>for<control>(<init><expr><name>tile_id</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>tile_id</name> <operator>&lt;</operator> <name><name>ext</name><operator>-&gt;</operator><name>valid_pos_cnt</name></name></expr>;</condition> <incr><expr><name>tile_id</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>tile_id</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>==</operator> <name>x</name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>tile_id</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>==</operator> <name>y</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>valid</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if<condition>(<expr><name>valid</name> <operator>==</operator> <name>false</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt> 

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>x_coord</name> <init>= <expr><operator>-</operator><name>x</name> <operator>*</operator> <call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>y_coord</name> <init>= <expr><operator>-</operator><name>y</name> <operator>*</operator> <call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name> <init>= <expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>anim</name></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>x_act</name> <init>= <expr><call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>y_act</name> <init>= <expr><call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lv_anim_t</name></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>var</name></name> <operator>=</operator> <name>scrl</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>path_cb</name></name> <operator>=</operator> <name>lv_anim_path_linear</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>ready_cb</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>act_time</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name><name>ext</name><operator>-&gt;</operator><name>anim_time</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>playback_pause</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>repeat_pause</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>x_coord</name> <operator>!=</operator> <name>x_act</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>start</name></name> <operator>=</operator> <name>x_act</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name>x_coord</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>y_coord</name> <operator>!=</operator> <name>y_act</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>start</name></name> <operator>=</operator> <name>y_act</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name>y_coord</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>.</operator><name>exec_cb</name></name> <operator>=</operator> <operator>(</operator><name>lv_anim_exec_xcb_t</name><operator>)</operator><name>lv_obj_set_y</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_anim_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>lv_obj_set_pos</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><name>x_coord</name></expr></argument>, <argument><expr><name>y_coord</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><name>lv_res_t</name></type> <name>res</name> <init>= <expr><name>LV_RES_OK</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>lv_event_send</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>LV_EVENT_VALUE_CHANGED</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tile_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>LV_RES_OK</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt> 
</block_content>}</block></function>







<function><type><name>void</name></type> <name>lv_tileview_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>, <parameter><decl><type><name>lv_tileview_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LV_TILEVIEW_STYLE_MAIN</name></expr>:</case> <expr_stmt><expr><call><name>lv_obj_set_style</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></function>















<function><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_tileview_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>, <parameter><decl><type><name>lv_tileview_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LV_ASSERT_OBJ</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<switch>switch<condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LV_TILEVIEW_STYLE_MAIN</name></expr>:</case> <expr_stmt><expr><name>style</name> <operator>=</operator> <call><name>lv_obj_get_style</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<default>default:</default> <expr_stmt><expr><name>style</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></switch>

<return>return <expr><name>style</name></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_tileview_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_res_t</name></type> <name>res</name></decl>;</decl_stmt>


<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>ancestor_signal</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>sign</name></expr></argument>, <argument><expr><name>param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>LV_RES_OK</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>res</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_GET_TYPE</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>lv_obj_handle_get_type_signal</name><argument_list>(<argument><expr><name>param</name></expr></argument>, <argument><expr><name>LV_OBJX_NAME</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CLEANUP</name></expr>)</condition> <block>{<block_content>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <name>lv_res_t</name></type> <name>lv_tileview_scrl_signal</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_signal_t</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>param</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><name>lv_res_t</name></type> <name>res</name></decl>;</decl_stmt>


<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>ancestor_scrl_signal</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><name>sign</name></expr></argument>, <argument><expr><name>param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>LV_RES_OK</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>res</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_GET_TYPE</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>lv_obj_handle_get_type_signal</name><argument_list>(<argument><expr><name>param</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name> <init>= <expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style_bg</name> <init>= <expr><call><name>lv_tileview_get_style</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name>LV_TILEVIEW_STYLE_MAIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<if_stmt><if>if<condition>(<expr><name>sign</name> <operator>==</operator> <name>LV_SIGNAL_CORD_CHG</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name> <init>= <expr><call><name>lv_indev_get_act</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>indev</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>drag_right_en</name></name> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>drag_sum</name><operator>.</operator><name>x</name></name> <operator>&lt;=</operator> <operator>-</operator><name>LV_INDEV_DEF_DRAG_LIMIT</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>drag_left_en</name></name> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>drag_sum</name><operator>.</operator><name>x</name></name> <operator>&gt;=</operator> <name>LV_INDEV_DEF_DRAG_LIMIT</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>drag_bottom_en</name></name> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>drag_sum</name><operator>.</operator><name>y</name></name> <operator>&lt;=</operator> <operator>-</operator><name>LV_INDEV_DEF_DRAG_LIMIT</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>drag_top_en</name></name> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>drag_sum</name><operator>.</operator><name>y</name></name> <operator>&gt;=</operator> <name>LV_INDEV_DEF_DRAG_LIMIT</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>x</name> <init>= <expr><call><name>lv_obj_get_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>y</name> <init>= <expr><call><name>lv_obj_get_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>h</name> <init>= <expr><call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>w</name> <init>= <expr><call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_top_en</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>y</name> <operator>&gt;</operator> <operator>-</operator><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name>h</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>vect</name><operator>.</operator><name>y</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>lv_obj_set_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name>h</name> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_bottom_en</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>vect</name><operator>.</operator><name>y</name></name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>y</name> <operator>&lt;</operator> <operator>-</operator><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name>h</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>lv_obj_set_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name>h</name> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_left_en</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>x</name> <operator>&gt;</operator> <operator>-</operator><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name>w</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>vect</name><operator>.</operator><name>x</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>lv_obj_set_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name>w</name> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_right_en</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>vect</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>x</name> <operator>&lt;</operator> <operator>-</operator><operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name>w</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_ANIMATION</name></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>enabled</name></name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>left_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>top_ip</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>bottom_ip</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>page</name><operator>.</operator><name>edge_flash</name><operator>.</operator><name>right_ip</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lv_page_start_edge_flash</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>lv_obj_set_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name>w</name> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>lv_obj_set_y</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>*</operator> <call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>lv_obj_set_x</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>, <argument><expr><operator>-</operator><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>*</operator> <call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>style_bg</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>padding</name><operator>.</operator><name>left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>tileview_scrl_event_cb</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name></decl></parameter>, <parameter><decl><type><name>lv_event_t</name></type> <name>event</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name> <init>= <expr><call><name>lv_obj_get_parent</name><argument_list>(<argument><expr><name>scrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<if_stmt><if>if<condition>(<expr><name>event</name> <operator>==</operator> <name>LV_EVENT_PRESSED</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_valid_drag_dirs</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><name>event</name> <operator>==</operator> <name>LV_EVENT_PRESS_LOST</name> <operator>||</operator> <name>event</name> <operator>==</operator> <name>LV_EVENT_RELEASED</name></expr>)</condition> <block>{<block_content>


<decl_stmt><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name> <init>= <expr><call><name>lv_indev_get_act</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><call><name>lv_indev_is_dragging</name><argument_list>(<argument><expr><name>indev</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name> <operator>||</operator> <name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>indev</name><operator>-&gt;</operator><name>proc</name><operator>.</operator><name>types</name><operator>.</operator><name>pointer</name><operator>.</operator><name>drag_in_prog</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>drag_end_handler</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>void</name></type> <name>drag_end_handler</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_indev_t</name> <modifier>*</modifier></type> <name>indev</name> <init>= <expr><call><name>lv_indev_get_act</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_point_t</name></type> <name>point_act</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_indev_get_point</name><argument_list>(<argument><expr><name>indev</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>point_act</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>scrl</name> <init>= <expr><call><name>lv_page_get_scrl</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_point_t</name></type> <name>p</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p</name><operator>.</operator><name>x</name></name> <operator>=</operator> <operator>-</operator><operator>(</operator><name><name>scrl</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>x1</name></name> <operator>-</operator> <call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>.</operator><name>y</name></name> <operator>=</operator> <operator>-</operator><operator>(</operator><name><name>scrl</name><operator>-&gt;</operator><name>coords</name><operator>.</operator><name>y1</name></name> <operator>-</operator> <call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_hor</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_point_t</name></type> <name>vect</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_indev_get_vect</name><argument_list>(<argument><expr><name>indev</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>vect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>predict</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<while>while<condition>(<expr><name><name>vect</name><operator>.</operator><name>x</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>predict</name> <operator>+=</operator> <name><name>vect</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vect</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>vect</name><operator>.</operator><name>x</name></name> <operator>*</operator> <operator>(</operator><literal type="number">100</literal> <operator>-</operator> <name>LV_INDEV_DEF_DRAG_THROW</name><operator>)</operator> <operator>/</operator> <literal type="number">100</literal></expr>;</expr_stmt>
</block_content>}</block></while>

<expr_stmt><expr><name><name>p</name><operator>.</operator><name>x</name></name> <operator>-=</operator> <name>predict</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>drag_ver</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>lv_point_t</name></type> <name>vect</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lv_indev_get_vect</name><argument_list>(<argument><expr><name>indev</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>vect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>predict</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<while>while<condition>(<expr><name><name>vect</name><operator>.</operator><name>y</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>predict</name> <operator>+=</operator> <name><name>vect</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vect</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>vect</name><operator>.</operator><name>y</name></name> <operator>*</operator> <operator>(</operator><literal type="number">100</literal> <operator>-</operator> <name>LV_INDEV_DEF_DRAG_THROW</name><operator>)</operator> <operator>/</operator> <literal type="number">100</literal></expr>;</expr_stmt>
</block_content>}</block></while>

<expr_stmt><expr><name><name>p</name><operator>.</operator><name>y</name></name> <operator>-=</operator> <name>predict</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name><name>p</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>p</name><operator>.</operator><name>x</name></name> <operator>/</operator> <call><name>lv_obj_get_width</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>p</name><operator>.</operator><name>y</name></name> <operator>/</operator> <call><name>lv_obj_get_height</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>x_move</name> <init>= <expr><name><name>p</name><operator>.</operator><name>x</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lv_coord_t</name></type> <name>y_move</name> <init>= <expr><name><name>p</name><operator>.</operator><name>y</name></name> <operator>-</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>x_move</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x_move</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>x_move</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x_move</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>y_move</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>y_move</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>y_move</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>y_move</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>lv_tileview_set_tile_act</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>+</operator> <name>x_move</name></expr></argument>, <argument><expr><name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>+</operator> <name>y_move</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>set_valid_drag_dirs</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>tileview</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><name>lv_tileview_ext_t</name> <modifier>*</modifier></type> <name>ext</name> <init>= <expr><call><name>lv_obj_get_ext_attr</name><argument_list>(<argument><expr><name>tileview</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_bottom_en</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_top_en</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_left_en</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_right_en</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i</name></decl>;</decl_stmt>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>ext</name><operator>-&gt;</operator><name>valid_pos_cnt</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_top_en</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name> <operator>+</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_bottom_en</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>-</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_left_en</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>x</name></name> <operator>+</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>ext</name><operator>-&gt;</operator><name>valid_pos</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>==</operator> <name><name>ext</name><operator>-&gt;</operator><name>act_id</name><operator>.</operator><name>y</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>drag_right_en</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
