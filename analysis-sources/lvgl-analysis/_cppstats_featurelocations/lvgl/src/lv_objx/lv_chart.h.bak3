




#ifndef LV_CHART_H
#define LV_CHART_H

#ifdef __cplusplus
extern "C" {
#endif




#ifdef LV_CONF_INCLUDE_SIMPLE
#include "lv_conf.h"
#else
#include "../../../lv_conf.h"
#endif

#if LV_USE_CHART != 0

#include "../lv_core/lv_obj.h"
#include "lv_line.h"






#define LV_CHART_POINT_DEF (LV_COORD_MIN)


#define LV_CHART_TICK_LENGTH_AUTO 255

LV_EXPORT_CONST_INT(LV_CHART_POINT_DEF);
LV_EXPORT_CONST_INT(LV_CHART_TICK_LENGTH_AUTO);






enum {
LV_CHART_TYPE_NONE = 0x00, 
LV_CHART_TYPE_LINE = 0x01, 
LV_CHART_TYPE_COLUMN = 0x02, 
LV_CHART_TYPE_POINT = 0x04, 
LV_CHART_TYPE_VERTICAL_LINE = 0x08, 
LV_CHART_TYPE_AREA = 0x10, 
};
typedef uint8_t lv_chart_type_t;


enum {
LV_CHART_UPDATE_MODE_SHIFT, 
LV_CHART_UPDATE_MODE_CIRCULAR, 
};
typedef uint8_t lv_chart_update_mode_t;

typedef struct
{
lv_coord_t * points;
lv_color_t color;
uint16_t start_point;
} lv_chart_series_t;


enum {
LV_CHART_AXIS_SKIP_LAST_TICK = 0x00, 
LV_CHART_AXIS_DRAW_LAST_TICK = 0x01, 
LV_CHART_AXIS_INVERSE_LABELS_ORDER = 0x02 
};
typedef uint8_t lv_chart_axis_options_t;

typedef struct
{
const char * list_of_values;
lv_chart_axis_options_t options;
uint8_t num_tick_marks;
uint8_t major_tick_len;
uint8_t minor_tick_len;
} lv_chart_axis_cfg_t;


typedef struct
{


lv_ll_t series_ll; 
lv_coord_t ymin; 
lv_coord_t ymax; 
uint8_t hdiv_cnt; 
uint8_t vdiv_cnt; 
uint16_t point_cnt; 
lv_chart_type_t type; 
lv_chart_axis_cfg_t y_axis;
lv_chart_axis_cfg_t x_axis;
lv_chart_axis_cfg_t secondary_y_axis;
uint16_t margin;
uint8_t update_mode : 1;
struct
{
lv_coord_t width; 
uint8_t num; 
lv_opa_t opa; 
lv_opa_t dark; 
} series;
} lv_chart_ext_t;

enum {
LV_CHART_STYLE_MAIN,
};
typedef uint8_t lv_chart_style_t;












lv_obj_t * lv_chart_create(lv_obj_t * par, const lv_obj_t * copy);











lv_chart_series_t * lv_chart_add_series(lv_obj_t * chart, lv_color_t color);






void lv_chart_clear_serie(lv_obj_t * chart, lv_chart_series_t * serie);











void lv_chart_set_div_line_count(lv_obj_t * chart, uint8_t hdiv, uint8_t vdiv);







void lv_chart_set_range(lv_obj_t * chart, lv_coord_t ymin, lv_coord_t ymax);






void lv_chart_set_type(lv_obj_t * chart, lv_chart_type_t type);






void lv_chart_set_point_count(lv_obj_t * chart, uint16_t point_cnt);






void lv_chart_set_series_opa(lv_obj_t * chart, lv_opa_t opa);






void lv_chart_set_series_width(lv_obj_t * chart, lv_coord_t width);






void lv_chart_set_series_darking(lv_obj_t * chart, lv_opa_t dark_eff);







void lv_chart_init_points(lv_obj_t * chart, lv_chart_series_t * ser, lv_coord_t y);







void lv_chart_set_points(lv_obj_t * chart, lv_chart_series_t * ser, lv_coord_t y_array[]);







void lv_chart_set_next(lv_obj_t * chart, lv_chart_series_t * ser, lv_coord_t y);






void lv_chart_set_update_mode(lv_obj_t * chart, lv_chart_update_mode_t update_mode);







static inline void lv_chart_set_style(lv_obj_t * chart, lv_chart_style_t type, const lv_style_t * style)
{
(void)type; 
lv_obj_set_style(chart, style);
}









void lv_chart_set_x_tick_length(lv_obj_t * chart, uint8_t major_tick_len, uint8_t minor_tick_len);









void lv_chart_set_y_tick_length(lv_obj_t * chart, uint8_t major_tick_len, uint8_t minor_tick_len);









void lv_chart_set_secondary_y_tick_length(lv_obj_t * chart, uint8_t major_tick_len, uint8_t minor_tick_len);









void lv_chart_set_x_tick_texts(lv_obj_t * chart, const char * list_of_values, uint8_t num_tick_marks,
lv_chart_axis_options_t options);









void lv_chart_set_secondary_y_tick_texts(lv_obj_t * chart, const char * list_of_values, uint8_t num_tick_marks,
lv_chart_axis_options_t options);









void lv_chart_set_y_tick_texts(lv_obj_t * chart, const char * list_of_values, uint8_t num_tick_marks,
lv_chart_axis_options_t options);






void lv_chart_set_margin(lv_obj_t * chart, uint16_t margin);










lv_chart_type_t lv_chart_get_type(const lv_obj_t * chart);






uint16_t lv_chart_get_point_cnt(const lv_obj_t * chart);






lv_opa_t lv_chart_get_series_opa(const lv_obj_t * chart);






lv_coord_t lv_chart_get_series_width(const lv_obj_t * chart);






lv_opa_t lv_chart_get_series_darking(const lv_obj_t * chart);







static inline const lv_style_t * lv_chart_get_style(const lv_obj_t * chart, lv_chart_style_t type)
{
(void)type; 
return lv_obj_get_style(chart);
}






uint16_t lv_chart_get_margin(lv_obj_t * chart);









void lv_chart_refresh(lv_obj_t * chart);





#endif 

#ifdef __cplusplus
} 
#endif

#endif 
