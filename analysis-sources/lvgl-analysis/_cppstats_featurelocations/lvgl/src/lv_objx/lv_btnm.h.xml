<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\lvgl-analysis\_cppstats_featurelocations\lvgl\src\lv_objx\lv_btnm.h">




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LV_BTNM_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_BTNM_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LV_CONF_INCLUDE_SIMPLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_conf.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../lv_conf.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LV_USE_BTNM</name> <operator>!=</operator> <literal type="number">0</literal></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lv_core/lv_obj.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_label.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lv_btn.h"</cpp:file></cpp:include>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_BTNM_WIDTH_MASK</name></cpp:macro> <cpp:value>0x0007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LV_BTNM_BTN_NONE</name></cpp:macro> <cpp:value>0xFFFF</cpp:value></cpp:define>

<expr_stmt><expr><call><name>LV_EXPORT_CONST_INT</name><argument_list>(<argument><expr><name>LV_BTNM_BTN_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






<enum>enum <block>{
<decl><name>LV_BTNM_CTRL_HIDDEN</name> <init>= <expr><literal type="number">0x0008</literal></expr></init></decl>, 
<decl><name>LV_BTNM_CTRL_NO_REPEAT</name> <init>= <expr><literal type="number">0x0010</literal></expr></init></decl>, 
<decl><name>LV_BTNM_CTRL_INACTIVE</name> <init>= <expr><literal type="number">0x0020</literal></expr></init></decl>, 
<decl><name>LV_BTNM_CTRL_TGL_ENABLE</name> <init>= <expr><literal type="number">0x0040</literal></expr></init></decl>, 
<decl><name>LV_BTNM_CTRL_TGL_STATE</name> <init>= <expr><literal type="number">0x0080</literal></expr></init></decl>, 
<decl><name>LV_BTNM_CTRL_CLICK_TRIG</name> <init>= <expr><literal type="number">0x0100</literal></expr></init></decl>, 
}</block>;</enum>
<typedef>typedef <type><name>uint16_t</name></type> <name>lv_btnm_ctrl_t</name>;</typedef>


<typedef>typedef <type><struct>struct
<block>{


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>map_p</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>lv_area_t</name> <modifier>*</modifier></type> <name>button_areas</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>lv_btnm_ctrl_t</name> <modifier>*</modifier></type> <name>ctrl_bits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name><name>styles_btn</name><index>[<expr><name>_LV_BTN_STATE_NUM</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint16_t</name></type> <name>btn_cnt</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint16_t</name></type> <name>btn_id_pr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint16_t</name></type> <name>btn_id_act</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>recolor</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>one_toggle</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt> 
}</block></struct></type> <name>lv_btnm_ext_t</name>;</typedef>

<enum>enum <block>{
<decl><name>LV_BTNM_STYLE_BG</name></decl>,
<decl><name>LV_BTNM_STYLE_BTN_REL</name></decl>,
<decl><name>LV_BTNM_STYLE_BTN_PR</name></decl>,
<decl><name>LV_BTNM_STYLE_BTN_TGL_REL</name></decl>,
<decl><name>LV_BTNM_STYLE_BTN_TGL_PR</name></decl>,
<decl><name>LV_BTNM_STYLE_BTN_INA</name></decl>,
}</block>;</enum>
<typedef>typedef <type><name>uint8_t</name></type> <name>lv_btnm_style_t</name>;</typedef>












<function_decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>lv_btnm_create</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>par</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>copy</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>void</name></type> <name>lv_btnm_set_map</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name><name>map</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>void</name></type> <name>lv_btnm_set_ctrl_map</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_btnm_ctrl_t</name></type> <name><name>ctrl_map</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>lv_btnm_set_pressed</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>lv_btnm_set_style</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>lv_btnm_style_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>style</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_btnm_set_recolor</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>en</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_btnm_set_btn_ctrl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>btn_id</name></decl></parameter>, <parameter><decl><type><name>lv_btnm_ctrl_t</name></type> <name>ctrl</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_btnm_clear_btn_ctrl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>btn_id</name></decl></parameter>, <parameter><decl><type><name>lv_btnm_ctrl_t</name></type> <name>ctrl</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>lv_btnm_set_btn_ctrl_all</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>lv_btnm_ctrl_t</name></type> <name>ctrl</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>lv_btnm_clear_btn_ctrl_all</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>lv_btnm_ctrl_t</name></type> <name>ctrl</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>lv_btnm_set_btn_width</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>btn_id</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>lv_btnm_set_one_toggle</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>one_toggle</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>lv_btnm_get_map_array</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>lv_btnm_get_recolor</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>uint16_t</name></type> <name>lv_btnm_get_active_btn</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>lv_btnm_get_active_btn_text</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>uint16_t</name></type> <name>lv_btnm_get_pressed_btn</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>lv_btnm_get_btn_text</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>btn_id</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>bool</name></type> <name>lv_btnm_get_btn_ctrl</name><parameter_list>(<parameter><decl><type><name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>btn_id</name></decl></parameter>, <parameter><decl><type><name>lv_btnm_ctrl_t</name></type> <name>ctrl</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>lv_style_t</name> <modifier>*</modifier></type> <name>lv_btnm_get_style</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>, <parameter><decl><type><name>lv_btnm_style_t</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>lv_btnm_get_one_toggle</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>lv_obj_t</name> <modifier>*</modifier></type> <name>btnm</name></decl></parameter>)</parameter_list>;</function_decl>




<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
