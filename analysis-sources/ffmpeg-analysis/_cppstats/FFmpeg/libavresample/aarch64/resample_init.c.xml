<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavresample\aarch64\resample_init.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/aarch64/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/samplefmt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavresample/resample.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"asm-offsets.h"</cpp:file></cpp:include>

<expr_stmt><expr><call><name>AV_CHECK_OFFSET</name><argument_list>(<argument><expr>struct <name>ResampleContext</name></expr></argument>, <argument><expr><name>filter_bank</name></expr></argument>, <argument><expr><name>FILTER_BANK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_CHECK_OFFSET</name><argument_list>(<argument><expr>struct <name>ResampleContext</name></expr></argument>, <argument><expr><name>filter_length</name></expr></argument>, <argument><expr><name>FILTER_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_CHECK_OFFSET</name><argument_list>(<argument><expr>struct <name>ResampleContext</name></expr></argument>, <argument><expr><name>phase_shift</name></expr></argument>, <argument><expr><name>PHASE_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_CHECK_OFFSET</name><argument_list>(<argument><expr>struct <name>ResampleContext</name></expr></argument>, <argument><expr><name>phase_mask</name></expr></argument>, <argument><expr><name>PHASE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>void</name></type> <name>ff_resample_one_dbl_neon</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ResampleContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst0</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dst_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>frac</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_resample_one_flt_neon</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ResampleContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst0</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dst_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>frac</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_resample_one_s16_neon</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ResampleContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst0</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dst_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>frac</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_resample_one_s32_neon</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ResampleContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst0</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dst_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>frac</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_audio_resample_init_aarch64</name><parameter_list>(<parameter><decl><type><name>ResampleContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>have_neon</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>c</name><operator>-&gt;</operator><name>linear</name></name></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name>sample_fmt</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AV_SAMPLE_FMT_DBLP</name></expr>:</case>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>resample_one</name></name> <operator>=</operator> <name>ff_resample_one_dbl_neon</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_SAMPLE_FMT_FLTP</name></expr>:</case>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>resample_one</name></name> <operator>=</operator> <name>ff_resample_one_flt_neon</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_SAMPLE_FMT_S16P</name></expr>:</case>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>resample_one</name></name> <operator>=</operator> <name>ff_resample_one_s16_neon</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_SAMPLE_FMT_S32P</name></expr>:</case>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>resample_one</name></name> <operator>=</operator> <name>ff_resample_one_s32_neon</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

</unit>
