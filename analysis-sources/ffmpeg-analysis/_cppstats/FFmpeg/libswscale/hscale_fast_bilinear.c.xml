<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libswscale\hscale_fast_bilinear.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"swscale_internal.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>ff_hyscale_fast_c</name><parameter_list>(<parameter><decl><type><name>SwsContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dstWidth</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>srcW</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>xInc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>xpos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>dstWidth</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>register</specifier> <name>unsigned</name> <name>int</name></type> <name>xx</name> <init>= <expr><name>xpos</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>register</specifier> <name>unsigned</name> <name>int</name></type> <name>xalpha</name> <init>= <expr><operator>(</operator><name>xpos</name> <operator>&amp;</operator> <literal type="number">0xFFFF</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">9</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>src</name><index>[<expr><name>xx</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name><name>src</name><index>[<expr><name>xx</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name><name>src</name><index>[<expr><name>xx</name></expr>]</index></name><operator>)</operator> <operator>*</operator> <name>xalpha</name></expr>;</expr_stmt>

<expr_stmt><expr><name>xpos</name> <operator>+=</operator> <name>xInc</name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><name>dstWidth</name><operator>-</operator><literal type="number">1</literal></expr>;</init> <condition><expr><operator>(</operator><name>i</name><operator>*</operator><name>xInc</name><operator>)</operator><operator>&gt;&gt;</operator><literal type="number">16</literal> <operator>&gt;=</operator><name>srcW</name><operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src</name><index>[<expr><name>srcW</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>*</operator><literal type="number">128</literal></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_hcscale_fast_c</name><parameter_list>(<parameter><decl><type><name>SwsContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst1</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst2</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dstWidth</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>srcW</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>xInc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>xpos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>dstWidth</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>register</specifier> <name>unsigned</name> <name>int</name></type> <name>xx</name> <init>= <expr><name>xpos</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>register</specifier> <name>unsigned</name> <name>int</name></type> <name>xalpha</name> <init>= <expr><operator>(</operator><name>xpos</name> <operator>&amp;</operator> <literal type="number">0xFFFF</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">9</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>dst1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>src1</name><index>[<expr><name>xx</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>xalpha</name> <operator>^</operator> <literal type="number">127</literal><operator>)</operator> <operator>+</operator> <name><name>src1</name><index>[<expr><name>xx</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>*</operator> <name>xalpha</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>src2</name><index>[<expr><name>xx</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>xalpha</name> <operator>^</operator> <literal type="number">127</literal><operator>)</operator> <operator>+</operator> <name><name>src2</name><index>[<expr><name>xx</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>*</operator> <name>xalpha</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>xpos</name> <operator>+=</operator> <name>xInc</name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><name>dstWidth</name><operator>-</operator><literal type="number">1</literal></expr>;</init> <condition><expr><operator>(</operator><name>i</name><operator>*</operator><name>xInc</name><operator>)</operator><operator>&gt;&gt;</operator><literal type="number">16</literal> <operator>&gt;=</operator><name>srcW</name><operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>dst1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src1</name><index>[<expr><name>srcW</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>*</operator><literal type="number">128</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src2</name><index>[<expr><name>srcW</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>*</operator><literal type="number">128</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

</unit>
