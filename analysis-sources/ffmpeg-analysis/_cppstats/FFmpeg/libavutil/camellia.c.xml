<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\camellia.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"camellia.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"intreadwrite.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"attributes.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LR32</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((x) &lt;&lt; (c) | (x) &gt;&gt; (32 - (c)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RR32</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((x) &gt;&gt; (c) | (x) &lt;&lt; (32 - (c)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MASK8</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MASK32</name></cpp:macro> <cpp:value>0xffffffff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MASK64</name></cpp:macro> <cpp:value>0xffffffffffffffff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma1</name></cpp:macro> <cpp:value>0xA09E667F3BCC908B</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma2</name></cpp:macro> <cpp:value>0xB67AE8584CAA73B2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma3</name></cpp:macro> <cpp:value>0xC6EF372FE94F82BE</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma4</name></cpp:macro> <cpp:value>0x54FF53A5F1D36F1C</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma5</name></cpp:macro> <cpp:value>0x10E527FADE682D1D</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma6</name></cpp:macro> <cpp:value>0xB05688C2B3E6C1FD</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <name>uint64_t</name></type> <name><name>SP</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<typedef>typedef <type><struct>struct <name>AVCAMELLIA</name> <block>{

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>Kw</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>Ke</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>K</name><index>[<expr><literal type="number">24</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>key_bits</name></decl>;</decl_stmt>

}</block></struct></type> <name>AVCAMELLIA</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>SBOX1</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">112</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">236</literal></expr>, <expr><literal type="number">179</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">229</literal></expr>, <expr><literal type="number">228</literal></expr>, <expr><literal type="number">133</literal></expr>, <expr><literal type="number">87</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">234</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">174</literal></expr>, <expr><literal type="number">65</literal></expr>,

<expr><literal type="number">35</literal></expr>, <expr><literal type="number">239</literal></expr>, <expr><literal type="number">107</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">165</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">237</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">79</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">101</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">189</literal></expr>,

<expr><literal type="number">134</literal></expr>, <expr><literal type="number">184</literal></expr>, <expr><literal type="number">175</literal></expr>, <expr><literal type="number">143</literal></expr>, <expr><literal type="number">124</literal></expr>, <expr><literal type="number">235</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">206</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">220</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">197</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">26</literal></expr>,

<expr><literal type="number">166</literal></expr>, <expr><literal type="number">225</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">202</literal></expr>, <expr><literal type="number">213</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">217</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">77</literal></expr>,

<expr><literal type="number">139</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">154</literal></expr>, <expr><literal type="number">102</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">204</literal></expr>, <expr><literal type="number">176</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">153</literal></expr>,

<expr><literal type="number">223</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">203</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">169</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">209</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">215</literal></expr>,

<expr><literal type="number">20</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">222</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">156</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">34</literal></expr>,

<expr><literal type="number">254</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">207</literal></expr>, <expr><literal type="number">178</literal></expr>, <expr><literal type="number">195</literal></expr>, <expr><literal type="number">181</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">145</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">252</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">80</literal></expr>,

<expr><literal type="number">170</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><literal type="number">161</literal></expr>, <expr><literal type="number">137</literal></expr>, <expr><literal type="number">98</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">149</literal></expr>, <expr><literal type="number">224</literal></expr>, <expr><literal type="number">255</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">210</literal></expr>,

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">196</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">163</literal></expr>, <expr><literal type="number">247</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">138</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">218</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">221</literal></expr>, <expr><literal type="number">148</literal></expr>,

<expr><literal type="number">135</literal></expr>, <expr><literal type="number">92</literal></expr>, <expr><literal type="number">131</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">205</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">103</literal></expr>, <expr><literal type="number">246</literal></expr>, <expr><literal type="number">243</literal></expr>, <expr><literal type="number">157</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">191</literal></expr>, <expr><literal type="number">226</literal></expr>,

<expr><literal type="number">82</literal></expr>, <expr><literal type="number">155</literal></expr>, <expr><literal type="number">216</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">200</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">150</literal></expr>, <expr><literal type="number">111</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">46</literal></expr>,

<expr><literal type="number">233</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><literal type="number">167</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">159</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">188</literal></expr>, <expr><literal type="number">142</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">245</literal></expr>, <expr><literal type="number">249</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">253</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">89</literal></expr>,

<expr><literal type="number">120</literal></expr>, <expr><literal type="number">152</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">113</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">171</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">162</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">250</literal></expr>,

<expr><literal type="number">114</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">248</literal></expr>, <expr><literal type="number">238</literal></expr>, <expr><literal type="number">172</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">54</literal></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">164</literal></expr>,

<expr><literal type="number">64</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">211</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">187</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">193</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">227</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">199</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">158</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>SBOX2</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">224</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">217</literal></expr>, <expr><literal type="number">103</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">203</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">174</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">213</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">130</literal></expr>,

<expr><literal type="number">70</literal></expr>, <expr><literal type="number">223</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">138</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">158</literal></expr>, <expr><literal type="number">156</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">202</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">123</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">113</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">248</literal></expr>, <expr><literal type="number">215</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">157</literal></expr>, <expr><literal type="number">124</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">188</literal></expr>, <expr><literal type="number">139</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">52</literal></expr>,

<expr><literal type="number">77</literal></expr>, <expr><literal type="number">195</literal></expr>, <expr><literal type="number">114</literal></expr>, <expr><literal type="number">149</literal></expr>, <expr><literal type="number">171</literal></expr>, <expr><literal type="number">142</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">179</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">162</literal></expr>, <expr><literal type="number">172</literal></expr>, <expr><literal type="number">216</literal></expr>, <expr><literal type="number">154</literal></expr>,

<expr><literal type="number">23</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">204</literal></expr>, <expr><literal type="number">247</literal></expr>, <expr><literal type="number">153</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">225</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">51</literal></expr>,

<expr><literal type="number">191</literal></expr>, <expr><literal type="number">152</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">133</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">252</literal></expr>, <expr><literal type="number">236</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">218</literal></expr>, <expr><literal type="number">111</literal></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">98</literal></expr>, <expr><literal type="number">163</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">175</literal></expr>,

<expr><literal type="number">40</literal></expr>, <expr><literal type="number">176</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">189</literal></expr>, <expr><literal type="number">54</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">229</literal></expr>, <expr><literal type="number">68</literal></expr>,

<expr><literal type="number">253</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">159</literal></expr>, <expr><literal type="number">101</literal></expr>, <expr><literal type="number">135</literal></expr>, <expr><literal type="number">107</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">209</literal></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">249</literal></expr>, <expr><literal type="number">210</literal></expr>, <expr><literal type="number">160</literal></expr>,

<expr><literal type="number">85</literal></expr>, <expr><literal type="number">161</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">250</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">196</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">193</literal></expr>, <expr><literal type="number">255</literal></expr>, <expr><literal type="number">200</literal></expr>, <expr><literal type="number">165</literal></expr>,

<expr><literal type="number">32</literal></expr>, <expr><literal type="number">137</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">239</literal></expr>, <expr><literal type="number">234</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">205</literal></expr>, <expr><literal type="number">181</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">187</literal></expr>, <expr><literal type="number">41</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">184</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">155</literal></expr>, <expr><literal type="number">148</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">102</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">206</literal></expr>, <expr><literal type="number">237</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">254</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">197</literal></expr>,

<expr><literal type="number">164</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">145</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">222</literal></expr>, <expr><literal type="number">150</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">92</literal></expr>,

<expr><literal type="number">211</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">79</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">220</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">82</literal></expr>, <expr><literal type="number">235</literal></expr>, <expr><literal type="number">243</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">178</literal></expr>,

<expr><literal type="number">240</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">207</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">226</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">169</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">87</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">245</literal></expr>,

<expr><literal type="number">228</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">170</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">221</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">227</literal></expr>, <expr><literal type="number">73</literal></expr>,

<expr><literal type="number">128</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">167</literal></expr>, <expr><literal type="number">246</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">131</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">199</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">233</literal></expr>, <expr><literal type="number">238</literal></expr>, <expr><literal type="number">143</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">61</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>SBOX3</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">56</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">217</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">114</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">171</literal></expr>, <expr><literal type="number">154</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">87</literal></expr>, <expr><literal type="number">160</literal></expr>,

<expr><literal type="number">145</literal></expr>, <expr><literal type="number">247</literal></expr>, <expr><literal type="number">181</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">162</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">210</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">246</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">167</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">142</literal></expr>, <expr><literal type="number">178</literal></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">222</literal></expr>,

<expr><literal type="number">67</literal></expr>, <expr><literal type="number">92</literal></expr>, <expr><literal type="number">215</literal></expr>, <expr><literal type="number">199</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">245</literal></expr>, <expr><literal type="number">143</literal></expr>, <expr><literal type="number">103</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">175</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">226</literal></expr>, <expr><literal type="number">133</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">83</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">156</literal></expr>, <expr><literal type="number">101</literal></expr>, <expr><literal type="number">234</literal></expr>, <expr><literal type="number">163</literal></expr>, <expr><literal type="number">174</literal></expr>, <expr><literal type="number">158</literal></expr>, <expr><literal type="number">236</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">107</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">54</literal></expr>, <expr><literal type="number">166</literal></expr>,

<expr><literal type="number">197</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">253</literal></expr>, <expr><literal type="number">102</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">150</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">149</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">216</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">204</literal></expr>,

<expr><literal type="number">239</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">229</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">152</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">139</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">235</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">176</literal></expr>, <expr><literal type="number">111</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">135</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">169</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><literal type="number">17</literal></expr>,

<expr><literal type="number">127</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">225</literal></expr>, <expr><literal type="number">218</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">200</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">40</literal></expr>,

<expr><literal type="number">85</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">196</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">203</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">202</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">255</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">105</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">98</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">209</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">237</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">159</literal></expr>, <expr><literal type="number">238</literal></expr>, <expr><literal type="number">74</literal></expr>,

<expr><literal type="number">195</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">193</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">153</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">179</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">249</literal></expr>, <expr><literal type="number">206</literal></expr>, <expr><literal type="number">191</literal></expr>, <expr><literal type="number">223</literal></expr>, <expr><literal type="number">113</literal></expr>,

<expr><literal type="number">41</literal></expr>, <expr><literal type="number">205</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">155</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">157</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">165</literal></expr>, <expr><literal type="number">137</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">23</literal></expr>,

<expr><literal type="number">244</literal></expr>, <expr><literal type="number">188</literal></expr>, <expr><literal type="number">211</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">207</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">148</literal></expr>, <expr><literal type="number">250</literal></expr>, <expr><literal type="number">252</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">254</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">172</literal></expr>,

<expr><literal type="number">60</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">243</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">184</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">213</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">125</literal></expr>,

<expr><literal type="number">57</literal></expr>, <expr><literal type="number">131</literal></expr>, <expr><literal type="number">220</literal></expr>, <expr><literal type="number">170</literal></expr>, <expr><literal type="number">124</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">164</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">248</literal></expr>, <expr><literal type="number">82</literal></expr>,

<expr><literal type="number">32</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">233</literal></expr>, <expr><literal type="number">189</literal></expr>, <expr><literal type="number">221</literal></expr>, <expr><literal type="number">228</literal></expr>, <expr><literal type="number">161</literal></expr>, <expr><literal type="number">224</literal></expr>, <expr><literal type="number">138</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">187</literal></expr>, <expr><literal type="number">227</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">79</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>SBOX4</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">112</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">179</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">228</literal></expr>, <expr><literal type="number">87</literal></expr>, <expr><literal type="number">234</literal></expr>, <expr><literal type="number">174</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">107</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">165</literal></expr>, <expr><literal type="number">237</literal></expr>, <expr><literal type="number">79</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">146</literal></expr>,

<expr><literal type="number">134</literal></expr>, <expr><literal type="number">175</literal></expr>, <expr><literal type="number">124</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">220</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">213</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">217</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">108</literal></expr>,

<expr><literal type="number">139</literal></expr>, <expr><literal type="number">154</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">176</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">223</literal></expr>, <expr><literal type="number">203</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">169</literal></expr>, <expr><literal type="number">209</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">20</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">222</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">156</literal></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">254</literal></expr>, <expr><literal type="number">207</literal></expr>, <expr><literal type="number">195</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">105</literal></expr>,

<expr><literal type="number">170</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">161</literal></expr>, <expr><literal type="number">98</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">224</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">163</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">138</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">221</literal></expr>,

<expr><literal type="number">135</literal></expr>, <expr><literal type="number">131</literal></expr>, <expr><literal type="number">205</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">246</literal></expr>, <expr><literal type="number">157</literal></expr>, <expr><literal type="number">191</literal></expr>, <expr><literal type="number">82</literal></expr>, <expr><literal type="number">216</literal></expr>, <expr><literal type="number">200</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">111</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">99</literal></expr>,

<expr><literal type="number">233</literal></expr>, <expr><literal type="number">167</literal></expr>, <expr><literal type="number">159</literal></expr>, <expr><literal type="number">188</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">249</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">113</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">171</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">141</literal></expr>,

<expr><literal type="number">114</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">248</literal></expr>, <expr><literal type="number">172</literal></expr>, <expr><literal type="number">54</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">211</literal></expr>, <expr><literal type="number">187</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">128</literal></expr>,

<expr><literal type="number">130</literal></expr>, <expr><literal type="number">236</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">229</literal></expr>, <expr><literal type="number">133</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">239</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">101</literal></expr>, <expr><literal type="number">189</literal></expr>,

<expr><literal type="number">184</literal></expr>, <expr><literal type="number">143</literal></expr>, <expr><literal type="number">235</literal></expr>, <expr><literal type="number">206</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">197</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">225</literal></expr>, <expr><literal type="number">202</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">77</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">102</literal></expr>, <expr><literal type="number">204</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">153</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">215</literal></expr>,

<expr><literal type="number">88</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">178</literal></expr>, <expr><literal type="number">181</literal></expr>, <expr><literal type="number">145</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">252</literal></expr>, <expr><literal type="number">80</literal></expr>,

<expr><literal type="number">208</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><literal type="number">137</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">149</literal></expr>, <expr><literal type="number">255</literal></expr>, <expr><literal type="number">210</literal></expr>, <expr><literal type="number">196</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">247</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">218</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">148</literal></expr>,

<expr><literal type="number">92</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">103</literal></expr>, <expr><literal type="number">243</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">226</literal></expr>, <expr><literal type="number">155</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">150</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">46</literal></expr>,

<expr><literal type="number">121</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">142</literal></expr>, <expr><literal type="number">245</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">253</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">152</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">162</literal></expr>, <expr><literal type="number">250</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">238</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">164</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">193</literal></expr>, <expr><literal type="number">227</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">199</literal></expr>, <expr><literal type="number">158</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>av_camellia_size</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>AVCAMELLIA</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>LR128</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name><name>d</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name><name>K</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">64</literal> <operator>&lt;=</operator> <name>x</name> <operator>&amp;&amp;</operator> <name>x</name> <operator>&lt;</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>x</name> <operator>-=</operator> <literal type="number">64</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>x</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name>x</name> <operator>&gt;=</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>K</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>K</name><index>[<expr><operator>!</operator><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>K</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <name>x</name> <operator>|</operator> <name><name>K</name><index>[<expr><operator>!</operator><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <operator>(</operator><literal type="number">64</literal> <operator>-</operator> <name>x</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>K</name><index>[<expr><operator>!</operator><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <name>x</name> <operator>|</operator> <name><name>K</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <operator>(</operator><literal type="number">64</literal> <operator>-</operator> <name>x</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint64_t</name></type> <name>F</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>F_IN</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>KE</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>KE</name> <operator>^=</operator> <name>F_IN</name></expr>;</expr_stmt>

<expr_stmt><expr><name>F_IN</name><operator>=</operator><name><name>SP</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">56</literal></expr>]</index></name><operator>^</operator><name><name>SP</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><operator>(</operator><name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">48</literal><operator>)</operator> <operator>&amp;</operator> <name>MASK8</name></expr>]</index></name><operator>^</operator><name><name>SP</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><operator>(</operator><name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>&amp;</operator> <name>MASK8</name></expr>]</index></name><operator>^</operator><name><name>SP</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><operator>(</operator><name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>&amp;</operator> <name>MASK8</name></expr>]</index></name><operator>^</operator><name><name>SP</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><operator>(</operator><name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>&amp;</operator> <name>MASK8</name></expr>]</index></name><operator>^</operator><name><name>SP</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><operator>(</operator><name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <name>MASK8</name></expr>]</index></name><operator>^</operator><name><name>SP</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><operator>(</operator><name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <name>MASK8</name></expr>]</index></name><operator>^</operator><name><name>SP</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><name>KE</name> <operator>&amp;</operator> <name>MASK8</name></expr>]</index></name></expr>;</expr_stmt>

<return>return <expr><name>F_IN</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint64_t</name></type> <name>FL</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>FL_IN</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>KE</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>x1</name></decl>, <decl><type ref="prev"/><name>x2</name></decl>, <decl><type ref="prev"/><name>k1</name></decl>, <decl><type ref="prev"/><name>k2</name></decl>;</decl_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <name>FL_IN</name> <operator>&gt;&gt;</operator> <literal type="number">32</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <name>FL_IN</name> <operator>&amp;</operator> <name>MASK32</name></expr>;</expr_stmt>

<expr_stmt><expr><name>k1</name> <operator>=</operator> <name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">32</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>k2</name> <operator>=</operator> <name>KE</name> <operator>&amp;</operator> <name>MASK32</name></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <name>x2</name> <operator>^</operator> <call><name>LR32</name><argument_list>(<argument><expr><operator>(</operator><name>x1</name> <operator>&amp;</operator> <name>k1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <name>x1</name> <operator>^</operator> <operator>(</operator><name>x2</name> <operator>|</operator> <name>k2</name><operator>)</operator></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><operator>(</operator><name>uint64_t</name><operator>)</operator><name>x1</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><name>x2</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint64_t</name></type> <name>FLINV</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>FLINV_IN</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>KE</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>x1</name></decl>, <decl><type ref="prev"/><name>x2</name></decl>, <decl><type ref="prev"/><name>k1</name></decl>, <decl><type ref="prev"/><name>k2</name></decl>;</decl_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <name>FLINV_IN</name> <operator>&gt;&gt;</operator> <literal type="number">32</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <name>FLINV_IN</name> <operator>&amp;</operator> <name>MASK32</name></expr>;</expr_stmt>

<expr_stmt><expr><name>k1</name> <operator>=</operator> <name>KE</name> <operator>&gt;&gt;</operator> <literal type="number">32</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>k2</name> <operator>=</operator> <name>KE</name> <operator>&amp;</operator> <name>MASK32</name></expr>;</expr_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <name>x1</name> <operator>^</operator> <operator>(</operator><name>x2</name> <operator>|</operator> <name>k2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <name>x2</name> <operator>^</operator> <call><name>LR32</name><argument_list>(<argument><expr><operator>(</operator><name>x1</name> <operator>&amp;</operator> <name>k1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><operator>(</operator><name>uint64_t</name><operator>)</operator><name>x1</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><name>x2</name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>shifts</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">111</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">111</literal></expr>}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>vars</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{<expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>generate_round_keys</name><parameter_list>(<parameter><decl><type><name>AVCAMELLIA</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name><name>Kl</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name><name>Kr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name><name>Ka</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name><name>Kb</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name><name>Kd</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>d</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>Kd</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>Kl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kd</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>Kr</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kd</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>Ka</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kd</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>Kb</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>Kl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>Kl</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>cs</name><operator>-&gt;</operator><name>key_bits</name></name> <operator>==</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">9</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><name><name>vars</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument><expr><name><name>shifts</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">77</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">111</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">12</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><name><name>vars</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument><expr><name><name>shifts</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">77</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LR128</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>Kd</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">111</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>camellia_encrypt</name><parameter_list>(<parameter><decl><type><name>AVCAMELLIA</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>D1</name></decl>, <decl><type ref="prev"/><name>D2</name></decl>;</decl_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>FLINV</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>FLINV</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>cs</name><operator>-&gt;</operator><name>key_bits</name></name> <operator>!=</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>FLINV</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">22</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">23</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WB64</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>D2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WB64</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>D1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>camellia_decrypt</name><parameter_list>(<parameter><decl><type><name>AVCAMELLIA</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>D1</name></decl>, <decl><type ref="prev"/><name>D2</name></decl>;</decl_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>cs</name><operator>-&gt;</operator><name>key_bits</name></name> <operator>!=</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">23</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">22</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>FLINV</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>FLINV</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <call><name>FLINV</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>Ke</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>Kw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>iv</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>iv</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>iv</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>AV_WB64</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>D2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WB64</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>D1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>computeSP</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>z</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>z</name> <operator>=</operator> <name><name>SBOX1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">56</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">48</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>^</operator> <name>z</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">56</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">48</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>z</name> <operator>=</operator> <name><name>SBOX2</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">48</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">48</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <name>z</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z</name> <operator>=</operator> <name><name>SBOX3</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">56</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">56</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <name>z</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z</name> <operator>=</operator> <name><name>SBOX4</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">56</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">48</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <name>z</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>SP</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">56</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">48</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>z</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <name>z</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name><name>struct</name> <name>AVCAMELLIA</name></name> <modifier>*</modifier></type><name>av_camellia_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>AVCAMELLIA</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>av_cold</name> <name>int</name></type> <name>av_camellia_init</name><parameter_list>(<parameter><decl><type><name>AVCAMELLIA</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>key_bits</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>Kl</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>Kr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>Ka</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>Kb</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>D1</name></decl>, <decl><type ref="prev"/><name>D2</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>key_bits</name> <operator>!=</operator> <literal type="number">128</literal> <operator>&amp;&amp;</operator> <name>key_bits</name> <operator>!=</operator> <literal type="number">192</literal> <operator>&amp;&amp;</operator> <name>key_bits</name> <operator>!=</operator> <literal type="number">256</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>Kb</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>Kb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>Kr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>Kr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>key_bits</name></name> <operator>=</operator> <name>key_bits</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kl</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>key</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>key_bits</name> <operator>==</operator> <literal type="number">192</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>Kr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>key</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>~</operator><name><name>Kr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>key_bits</name> <operator>==</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>Kr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>key</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RB64</name><argument_list>(<argument><expr><name>key</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>computeSP</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <name><name>Kl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>Kr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <name><name>Kl</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <name><name>Kr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name>Sigma1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name>Sigma2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <name><name>Kl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <name><name>Kl</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name>Sigma3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name>Sigma4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Ka</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>D1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Ka</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>D2</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>key_bits</name> <operator>!=</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>D1</name> <operator>=</operator> <name><name>Ka</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>Kr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>=</operator> <name><name>Ka</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <name><name>Kr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D2</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D1</name></expr></argument>, <argument><expr><name>Sigma5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>D1</name> <operator>^=</operator> <call><name>F</name><argument_list>(<argument><expr><name>D2</name></expr></argument>, <argument><expr><name>Sigma6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kb</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>D1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Kb</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>D2</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>generate_round_keys</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name>Kl</name></expr></argument>, <argument><expr><name>Kr</name></expr></argument>, <argument><expr><name>Ka</name></expr></argument>, <argument><expr><name>Kb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>av_camellia_crypt</name><parameter_list>(<parameter><decl><type><name>AVCAMELLIA</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>decrypt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<while>while <condition>(<expr><name>count</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>decrypt</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>camellia_decrypt</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>iv</name></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^</operator> <name><name>iv</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>camellia_encrypt</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>iv</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>camellia_encrypt</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src</name> <operator>+</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

</unit>
