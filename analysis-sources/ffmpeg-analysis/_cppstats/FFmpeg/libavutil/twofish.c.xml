<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\twofish.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"twofish.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"intreadwrite.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"attributes.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LR</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((x) &lt;&lt; (n) | (x) &gt;&gt; (32 - (n)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RR</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((x) &gt;&gt; (n) | (x) &lt;&lt; (32 - (n)))</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>AVTWOFISH</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>K</name><index>[<expr><literal type="number">40</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>S</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ksize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>MDS1</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>MDS2</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>MDS3</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>MDS4</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>AVTWOFISH</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>MD1</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xe8</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0xbc</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0xe2</literal></expr>,

<expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0xf6</literal></expr>,

<expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0xca</literal></expr>,

<expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0xde</literal></expr>,

<expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0xb2</literal></expr>,

<expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x4b</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0xa6</literal></expr>,

<expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0x9a</literal></expr>,

<expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0x8b</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0xd5</literal></expr>, <expr><literal type="number">0x8e</literal></expr>,

<expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">0x42</literal></expr>,

<expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x56</literal></expr>,

<expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xd3</literal></expr>, <expr><literal type="number">0x3e</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x8d</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x6a</literal></expr>,

<expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x2f</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0xcd</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x7e</literal></expr>,

<expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x12</literal></expr>,

<expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x06</literal></expr>,

<expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x8c</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x3a</literal></expr>,

<expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0x2e</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>MD2</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0xe8</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0x51</literal></expr>,

<expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x4d</literal></expr>,

<expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x69</literal></expr>,

<expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0x75</literal></expr>,

<expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0x2f</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0x21</literal></expr>,

<expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x8d</literal></expr>, <expr><literal type="number">0xd5</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x3d</literal></expr>,

<expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0x19</literal></expr>,

<expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0xbc</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0x05</literal></expr>,

<expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0xb1</literal></expr>,

<expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x4b</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0xad</literal></expr>,

<expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0x3e</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x89</literal></expr>,

<expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0xcd</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x95</literal></expr>,

<expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,

<expr><literal type="number">0x8c</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0x8b</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0xd3</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0xdd</literal></expr>,

<expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xf9</literal></expr>,

<expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0xe5</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>q0</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xe8</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0x38</literal></expr>,

<expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x48</literal></expr>,

<expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0x8b</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x82</literal></expr>,

<expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0x61</literal></expr>,

<expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0x8c</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0xf1</literal></expr>,

<expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0xd7</literal></expr>,

<expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x71</literal></expr>,

<expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0xcd</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0xe7</literal></expr>,

<expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x90</literal></expr>,

<expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0xef</literal></expr>,

<expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x3e</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x64</literal></expr>,

<expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x2f</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0xd5</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x4b</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0x5a</literal></expr>,

<expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x7d</literal></expr>,

<expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x8d</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x34</literal></expr>,

<expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0xbc</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0xa4</literal></expr>,

<expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xd3</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xe0</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>q1</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0xd3</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xe8</literal></expr>, <expr><literal type="number">0x4b</literal></expr>,

<expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x3f</literal></expr>,

<expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xbc</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xd5</literal></expr>,

<expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x51</literal></expr>,

<expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x8c</literal></expr>,

<expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0xb8</literal></expr>,

<expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0xe2</literal></expr>,

<expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x17</literal></expr>,

<expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x3e</literal></expr>,

<expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0xd9</literal></expr>,

<expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xcd</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x8b</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0x48</literal></expr>,

<expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">0x8d</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x64</literal></expr>,

<expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x69</literal></expr>,

<expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0xdc</literal></expr>,

<expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x2f</literal></expr>, <expr><literal type="number">0xa9</literal></expr>,

<expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0x91</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><name><name>struct</name> <name>AVTWOFISH</name></name> <modifier>*</modifier></type><name>av_twofish_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>AVTWOFISH</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>av_twofish_size</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>AVTWOFISH</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>uint8_t</name></type> <name>gfmul</name><parameter_list>(<parameter><decl><type><name>uint8_t</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>r</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>

<while>while <condition>(<expr><name>a</name> <operator>&amp;&amp;</operator> <name>b</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>a</name> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>r</name> <operator>=</operator> <name>r</name> <operator>^</operator> <name>b</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <name>b</name> <operator>&amp;</operator> <literal type="number">0x80</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <name>b</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>t</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>b</name> <operator>=</operator> <name>b</name> <operator>^</operator> <literal type="number">0x4d</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <name>a</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>r</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint32_t</name></type> <name>tf_RS</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>k0</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>k1</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>s</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>m</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>m</name></expr></argument>, <argument><expr><name>k0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>m</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>k1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x01</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x55</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x87</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x5a</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x58</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xdb</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x9e</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x56</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x82</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xf3</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x1e</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xc6</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x68</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xe5</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x02</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xa1</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xfc</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xc1</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x47</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xae</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x3d</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x19</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xa4</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x55</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x87</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x5a</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x58</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0xdb</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x9e</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>gfmul</name><argument_list>(<argument><expr><literal type="number">0x03</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>AV_RL32</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>tf_h0</name><parameter_list>(<parameter><decl><type><name>uint8_t</name></type> <name><name>y</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name><name>L</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>l</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>k</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name><name>L</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>q1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>q0</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>q0</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>q1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>k</name> <operator>&gt;=</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name><name>L</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>q1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>q1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>q0</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>q0</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name><name>L</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>q1</name><index>[<expr><name><name>q0</name><index>[<expr><name><name>q0</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name><name>L</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0xff</literal><operator>)</operator></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>q0</name><index>[<expr><name><name>q0</name><index>[<expr><name><name>q1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <operator>(</operator><operator>(</operator><name><name>L</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal><operator>)</operator></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>q1</name><index>[<expr><name><name>q1</name><index>[<expr><name><name>q0</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <operator>(</operator><operator>(</operator><name><name>L</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal><operator>)</operator></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>q0</name><index>[<expr><name><name>q1</name><index>[<expr><name><name>q1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>l</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name><name>L</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint32_t</name></type> <name>tf_h</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>X</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name><name>L</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>y</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>l</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><name>X</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>tf_h0</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><name>L</name></expr></argument>, <argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>l</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>l</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>l</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^</operator> <name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>l</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>^</operator> <name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

<return>return <expr><call><name>AV_RL32</name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint32_t</name></type> <name>MDS_mul</name><parameter_list>(<parameter><decl><type><name>AVTWOFISH</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>X</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>cs</name><operator>-&gt;</operator><name>MDS1</name><index>[<expr><operator>(</operator><name>X</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>]</index></name> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>MDS2</name><index>[<expr><operator>(</operator><operator>(</operator><name>X</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>]</index></name> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>MDS3</name><index>[<expr><operator>(</operator><operator>(</operator><name>X</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>]</index></name> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>MDS4</name><index>[<expr><operator>(</operator><name>X</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr>]</index></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>precomputeMDS</name><parameter_list>(<parameter><decl><type><name>AVTWOFISH</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>y</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>tf_h0</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>S</name></name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>MDS1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>MDS2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>MDS3</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>MDS4</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD2</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>MD1</name><index>[<expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>twofish_encrypt</name><parameter_list>(<parameter><decl><type><name>AVTWOFISH</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>P</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>RR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">8</literal></expr>]</index></name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">9</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>RR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">10</literal></expr>]</index></name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">11</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>twofish_decrypt</name><parameter_list>(<parameter><decl><type><name>AVTWOFISH</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>P</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>^</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">15</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name> <operator>-=</operator> <literal type="number">2</literal></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">8</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>RR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">9</literal></expr>]</index></name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <call><name>MDS_mul</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>LR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">6</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>RR</name><argument_list>(<argument><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>t0</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>t1</name> <operator>+</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">7</literal></expr>]</index></name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>iv</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>iv</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>iv</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>iv</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>iv</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>av_cold</name> <name>int</name></type> <name>av_twofish_init</name><parameter_list>(<parameter><decl><type><name>AVTWOFISH</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>key_bits</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>keypad</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>Key</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>Me</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>Mo</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>A</name></decl>, <decl><type ref="prev"/><name>B</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>rho</name> <init>= <expr><literal type="number">0x01010101</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>key_bits</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>key_bits</name> <operator>&lt;=</operator> <literal type="number">128</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>key_bits</name> <operator>&lt;=</operator> <literal type="number">192</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>keypad</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>keypad</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>key_bits</name> <operator>&lt;=</operator> <literal type="number">256</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>keypad</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>key_bits</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>keypad</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal> <operator>*</operator> <name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>Key</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>AV_RL32</name><argument_list>(<argument><expr><name>keypad</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>Me</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>Key</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>Mo</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>Key</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>S</name><index>[<expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name> <operator>-</operator> <name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>tf_RS</name><argument_list>(<argument><expr><name><name>Me</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>Mo</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>precomputeMDS</name><argument_list>(<argument><expr><name>cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>A</name> <operator>=</operator> <call><name>tf_h</name><argument_list>(<argument><expr><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>i</name><operator>)</operator> <operator>*</operator> <name>rho</name></expr></argument>, <argument><expr><name>Me</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>B</name> <operator>=</operator> <call><name>tf_h</name><argument_list>(<argument><expr><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name>rho</name></expr></argument>, <argument><expr><name>Mo</name></expr></argument>, <argument><expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>B</name> <operator>=</operator> <call><name>LR</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <name>A</name> <operator>+</operator> <name>B</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>K</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>LR</name><argument_list>(<argument><expr><operator>(</operator><name>A</name> <operator>+</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>B</name><operator>)</operator><operator>)</operator></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name><name>cs</name><operator>-&gt;</operator><name>ksize</name></name> <operator>&lt;&lt;</operator> <literal type="number">6</literal> <operator>!=</operator> <name>key_bits</name></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if> <else>else <block>{<block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>av_twofish_crypt</name><parameter_list>(<parameter><decl><type><name>AVTWOFISH</name> <modifier>*</modifier></type><name>cs</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>decrypt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<while>while <condition>(<expr><name>count</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>decrypt</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>twofish_decrypt</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>iv</name></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^</operator> <name><name>iv</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>twofish_encrypt</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>iv</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>twofish_encrypt</name><argument_list>(<argument><expr><name>cs</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src</name> <operator>+</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

</unit>
