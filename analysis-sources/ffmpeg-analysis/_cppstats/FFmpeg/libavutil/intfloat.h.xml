<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\intfloat.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"attributes.h"</cpp:file></cpp:include>

<union>union <name>av_intfloat32</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>f</name></decl>;</decl_stmt>

}</block>;</union>

<union>union <name>av_intfloat64</name> <block>{

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>f</name></decl>;</decl_stmt>

}</block>;</union>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>float</name></type> <name>av_int2float</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>i</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>union</name> <name>av_intfloat32</name></name></type> <name>v</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>v</name><operator>.</operator><name>i</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<return>return <expr><name><name>v</name><operator>.</operator><name>f</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>uint32_t</name></type> <name>av_float2int</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>f</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>union</name> <name>av_intfloat32</name></name></type> <name>v</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>v</name><operator>.</operator><name>f</name></name> <operator>=</operator> <name>f</name></expr>;</expr_stmt>

<return>return <expr><name><name>v</name><operator>.</operator><name>i</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>double</name></type> <name>av_int2double</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>i</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>union</name> <name>av_intfloat64</name></name></type> <name>v</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>v</name><operator>.</operator><name>i</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<return>return <expr><name><name>v</name><operator>.</operator><name>f</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>uint64_t</name></type> <name>av_double2int</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>f</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>union</name> <name>av_intfloat64</name></name></type> <name>v</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>v</name><operator>.</operator><name>f</name></name> <operator>=</operator> <name>f</name></expr>;</expr_stmt>

<return>return <expr><name><name>v</name><operator>.</operator><name>i</name></name></expr>;</return>

</block_content>}</block></function>

</unit>
