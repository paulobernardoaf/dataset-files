<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\colorspace.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALEBITS</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONE_HALF</name></cpp:macro> <cpp:value>(1 &lt;&lt; (SCALEBITS - 1))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FIX</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int) ((x) * (1&lt;&lt;SCALEBITS) + 0.5))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YUV_TO_RGB1_CCIR</name><parameter_list>(<parameter><type><name>cb1</name></type></parameter>, <parameter><type><name>cr1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>{cb = (cb1) - 128;cr = (cr1) - 128;r_add = FIX(1.40200*255.0/224.0) * cr + ONE_HALF;g_add = - FIX(0.34414*255.0/224.0) * cb - FIX(0.71414*255.0/224.0) * cr + ONE_HALF;b_add = FIX(1.77200*255.0/224.0) * cb + ONE_HALF;}</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YUV_TO_RGB1_CCIR_BT709</name><parameter_list>(<parameter><type><name>cb1</name></type></parameter>, <parameter><type><name>cr1</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ cb = (cb1) - 128; cr = (cr1) - 128; r_add = ONE_HALF + FIX(1.5747 * 255.0 / 224.0) * cr; g_add = ONE_HALF - FIX(0.1873 * 255.0 / 224.0) * cb - FIX(0.4682 * 255.0 / 224.0) * cr; b_add = ONE_HALF + FIX(1.8556 * 255.0 / 224.0) * cb; }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YUV_TO_RGB2_CCIR</name><parameter_list>(<parameter><type><name>r</name></type></parameter>, <parameter><type><name>g</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>y1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>{y = ((y1) - 16) * FIX(255.0/219.0);r = cm[(y + r_add) &gt;&gt; SCALEBITS];g = cm[(y + g_add) &gt;&gt; SCALEBITS];b = cm[(y + b_add) &gt;&gt; SCALEBITS];}</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YUV_TO_RGB1</name><parameter_list>(<parameter><type><name>cb1</name></type></parameter>, <parameter><type><name>cr1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>{cb = (cb1) - 128;cr = (cr1) - 128;r_add = FIX(1.40200) * cr + ONE_HALF;g_add = - FIX(0.34414) * cb - FIX(0.71414) * cr + ONE_HALF;b_add = FIX(1.77200) * cb + ONE_HALF;}</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YUV_TO_RGB2</name><parameter_list>(<parameter><type><name>r</name></type></parameter>, <parameter><type><name>g</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>y1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>{y = (y1) &lt;&lt; SCALEBITS;r = cm[(y + r_add) &gt;&gt; SCALEBITS];g = cm[(y + g_add) &gt;&gt; SCALEBITS];b = cm[(y + b_add) &gt;&gt; SCALEBITS];}</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Y_CCIR_TO_JPEG</name><parameter_list>(<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>cm[((y) * FIX(255.0/219.0) + (ONE_HALF - 16 * FIX(255.0/219.0))) &gt;&gt; SCALEBITS]</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Y_JPEG_TO_CCIR</name><parameter_list>(<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((y) * FIX(219.0/255.0) + (ONE_HALF + (16 &lt;&lt; SCALEBITS))) &gt;&gt; SCALEBITS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C_CCIR_TO_JPEG</name><parameter_list>(<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>cm[(((y) - 128) * FIX(127.0/112.0) + (ONE_HALF + (128 &lt;&lt; SCALEBITS))) &gt;&gt; SCALEBITS]</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>C_JPEG_TO_CCIR</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>y</name> <operator>-</operator> <literal type="number">128</literal><operator>)</operator> <operator>*</operator> <call><name>FIX</name><argument_list>(<argument><expr><literal type="number">112.0</literal><operator>/</operator><literal type="number">127.0</literal></expr></argument>)</argument_list></call> <operator>+</operator> <operator>(</operator><name>ONE_HALF</name> <operator>+</operator> <operator>(</operator><literal type="number">128</literal> <operator>&lt;&lt;</operator> <name>SCALEBITS</name><operator>)</operator><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <name>SCALEBITS</name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>y</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>y</name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>y</name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_Y_CCIR</name><parameter_list>(<parameter><type><name>r</name></type></parameter>, <parameter><type><name>g</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((FIX(0.29900*219.0/255.0) * (r) + FIX(0.58700*219.0/255.0) * (g) + FIX(0.11400*219.0/255.0) * (b) + (ONE_HALF + (16 &lt;&lt; SCALEBITS))) &gt;&gt; SCALEBITS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_U_CCIR</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>, <parameter><type><name>shift</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((- FIX(0.16874*224.0/255.0) * r1 - FIX(0.33126*224.0/255.0) * g1 + FIX(0.50000*224.0/255.0) * b1 + (ONE_HALF &lt;&lt; shift) - 1) &gt;&gt; (SCALEBITS + shift)) + 128)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_V_CCIR</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>, <parameter><type><name>shift</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((FIX(0.50000*224.0/255.0) * r1 - FIX(0.41869*224.0/255.0) * g1 - FIX(0.08131*224.0/255.0) * b1 + (ONE_HALF &lt;&lt; shift) - 1) &gt;&gt; (SCALEBITS + shift)) + 128)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_Y_JPEG</name><parameter_list>(<parameter><type><name>r</name></type></parameter>, <parameter><type><name>g</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(FFMIN((FIX(0.29900) * (r) + FIX(0.58700) * (g) + FIX(0.11400) * (b) + (ONE_HALF)) &gt;&gt; SCALEBITS, 255))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_U_JPEG</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((- FIX(0.16874) * r1 - FIX(0.33126) * g1 + FIX(0.50000) * b1 + (ONE_HALF) - 1) &gt;&gt; (SCALEBITS)) + 128)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_V_JPEG</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((FIX(0.50000) * r1 - FIX(0.41869) * g1 - FIX(0.08131) * b1 + (ONE_HALF) - 1) &gt;&gt; (SCALEBITS)) + 128)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_Y_BT709</name><parameter_list>(<parameter><type><name>r</name></type></parameter>, <parameter><type><name>g</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((FIX(0.21260*219.0/255.0) * (r) + FIX(0.71520*219.0/255.0) * (g) + FIX(0.07220*219.0/255.0) * (b) + (ONE_HALF + (16 &lt;&lt; SCALEBITS))) &gt;&gt; SCALEBITS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_U_BT709</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>, <parameter><type><name>shift</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((- FIX(0.11457*224.0/255.0) * r1 - FIX(0.38543*224.0/255.0) * g1 + FIX(0.50000*224.0/255.0) * b1 + (ONE_HALF &lt;&lt; shift) - 1) &gt;&gt; (SCALEBITS + shift)) + 128)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_V_BT709</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>, <parameter><type><name>shift</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((FIX(0.50000*224.0/255.0) * r1 - FIX(0.45415*224.0/255.0) * g1 - FIX(0.04585*224.0/255.0) * b1 + (ONE_HALF &lt;&lt; shift) - 1) &gt;&gt; (SCALEBITS + shift)) + 128)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_Y_BT709_FULL</name><parameter_list>(<parameter><type><name>r</name></type></parameter>, <parameter><type><name>g</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(FFMIN((FIX(0.21260) * (r) + FIX(0.71520) * (g) + FIX(0.07220) * (b) + (ONE_HALF)) &gt;&gt; SCALEBITS, 255))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_U_BT709_FULL</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((- FIX(0.11457) * r1 - FIX(0.38543) * g1 + FIX(0.50000) * b1 + (ONE_HALF) - 1) &gt;&gt; (SCALEBITS)) + 128)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RGB_TO_V_BT709_FULL</name><parameter_list>(<parameter><type><name>r1</name></type></parameter>, <parameter><type><name>g1</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>(((FIX(0.50000) * r1 - FIX(0.45415) * g1 - FIX(0.04585) * b1 + (ONE_HALF) - 1) &gt;&gt; (SCALEBITS)) + 128)</cpp:value></cpp:define>

</unit>
