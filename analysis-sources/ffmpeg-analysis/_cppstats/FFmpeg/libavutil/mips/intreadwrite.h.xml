<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\mips\intreadwrite.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ARCH_MIPS64</name> <operator>&amp;&amp;</operator> <name>HAVE_INLINE_ASM</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>HAVE_MIPS64R6</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_RN32</name></cpp:macro> <cpp:value>AV_RN32</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>uint32_t</name></type> <name>AV_RN32</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<struct>struct <macro><name>__attribute__</name><argument_list>(<argument>(packed)</argument>)</argument_list></macro> <name>u32</name> <block>{ <decl_stmt><decl><type><name>uint32_t</name></type> <name>v</name></decl>;</decl_stmt> }</block>;</struct>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>q</name> <init>= <expr><name>p</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>u32</name></name> <modifier>*</modifier></type><name>pl</name> <init>= <expr><operator>(</operator><specifier>const</specifier> struct <name>u32</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>q</name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <operator>!</operator><name>HAVE_BIGENDIAN</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>u32</name></name> <modifier>*</modifier></type><name>pr</name> <init>= <expr><operator>(</operator><specifier>const</specifier> struct <name>u32</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>q</name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>HAVE_BIGENDIAN</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>v</name></decl>;</decl_stmt>

<asm>__asm__ ("lwl %0, %1 \n\t"

"lwr %0, %2 \n\t"

: "=&amp;r"(v)

: "m"(*pl), "m"(*pr));</asm>

<return>return <expr><name>v</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
