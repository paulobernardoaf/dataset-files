<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\dynarray.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"log.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mem.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_DYNARRAY_ADD</name><parameter_list>(<parameter><type><name>av_size_max</name></type></parameter>, <parameter><type><name>av_elt_size</name></type></parameter>, <parameter><type><name>av_array</name></type></parameter>, <parameter><type><name>av_size</name></type></parameter>, <parameter><type><name>av_success</name></type></parameter>, <parameter><type><name>av_failure</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { size_t av_size_new = (av_size); if (!((av_size) &amp; ((av_size) - 1))) { av_size_new = (av_size) ? (av_size) &lt;&lt; 1 : 1; if (av_size_new &gt; (av_size_max) / (av_elt_size)) { av_size_new = 0; } else { void *av_array_new = av_realloc((av_array), av_size_new * (av_elt_size)); if (!av_array_new) av_size_new = 0; else (av_array) = av_array_new; } } if (av_size_new) { { av_success } (av_size)++; } else { av_failure } } while (0)</cpp:value></cpp:define>

</unit>
