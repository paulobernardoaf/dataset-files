<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\cpu_internal.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cpu.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT_SUFFIX</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>suffix</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(HAVE_ ##cpuext ##suffix &amp;&amp; ((flags) &amp; AV_CPU_FLAG_ ##cpuext))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT_SUFFIX_FAST2</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>suffix</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>, <parameter><type><name>slow_cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(HAVE_ ##cpuext ##suffix &amp;&amp; ((flags) &amp; AV_CPU_FLAG_ ##cpuext) &amp;&amp; !((flags) &amp; AV_CPU_FLAG_ ##slow_cpuext ##SLOW))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT_SUFFIX_SLOW2</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>suffix</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>, <parameter><type><name>slow_cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(HAVE_ ##cpuext ##suffix &amp;&amp; ((flags) &amp; AV_CPU_FLAG_ ##cpuext) &amp;&amp; ((flags) &amp; AV_CPU_FLAG_ ##slow_cpuext ##SLOW))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT_SUFFIX_FAST</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>suffix</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CPUEXT_SUFFIX_FAST2(flags, suffix, cpuext, cpuext)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT_SUFFIX_SLOW</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>suffix</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CPUEXT_SUFFIX_SLOW2(flags, suffix, cpuext, cpuext)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CPUEXT_SUFFIX(flags, , cpuext)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT_FAST</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CPUEXT_SUFFIX_FAST(flags, , cpuext)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPUEXT_SLOW</name><parameter_list>(<parameter><type><name>flags</name></type></parameter>, <parameter><type><name>cpuext</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CPUEXT_SUFFIX_SLOW(flags, , cpuext)</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>ff_get_cpu_flags_aarch64</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_get_cpu_flags_arm</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_get_cpu_flags_ppc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_get_cpu_flags_x86</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>ff_get_cpu_max_align_aarch64</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>ff_get_cpu_max_align_arm</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>ff_get_cpu_max_align_ppc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>ff_get_cpu_max_align_x86</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
