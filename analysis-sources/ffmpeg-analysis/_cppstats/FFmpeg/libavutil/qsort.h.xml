<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\qsort.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_QSORT</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>num</name></type></parameter>, <parameter><type><name>type</name></type></parameter>, <parameter><type><name>cmp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do {void *stack[64][2];int sp= 1;stack[0][0] = p;stack[0][1] = (p)+(num)-1;while(sp){type *start= stack[--sp][0];type *end = stack[ sp][1];while(start &lt; end){if(start &lt; end-1) {int checksort=0;type *right = end-2;type *left = start+1;type *mid = start + ((end-start)&gt;&gt;1);if(cmp(start, end) &gt; 0) {if(cmp( end, mid) &gt; 0) FFSWAP(type, *start, *mid);else FFSWAP(type, *start, *end);}else{if(cmp(start, mid) &gt; 0) FFSWAP(type, *start, *mid);else checksort= 1;}if(cmp(mid, end) &gt; 0){ FFSWAP(type, *mid, *end);checksort=0;}if(start == end-2) break;FFSWAP(type, end[-1], *mid);while(left &lt;= right){while(left&lt;=right &amp;&amp; cmp(left, end-1) &lt; 0)left++;while(left&lt;=right &amp;&amp; cmp(right, end-1) &gt; 0)right--;if(left &lt;= right){FFSWAP(type, *left, *right);left++;right--;}}FFSWAP(type, end[-1], *left);if(checksort &amp;&amp; (mid == left-1 || mid == left)){mid= start;while(mid&lt;end &amp;&amp; cmp(mid, mid+1) &lt;= 0)mid++;if(mid==end)break;}if(end-left &lt; left-start){stack[sp ][0]= start;stack[sp++][1]= right;start = left+1;}else{stack[sp ][0]= left+1;stack[sp++][1]= end;end = right;}}else{if(cmp(start, end) &gt; 0)FFSWAP(type, *start, *end);break;}}}} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_MSORT</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>tmp</name></type></parameter>, <parameter><type><name>num</name></type></parameter>, <parameter><type><name>type</name></type></parameter>, <parameter><type><name>cmp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do {unsigned i, j, step;for(step=1; step&lt;(num); step+=step){for(i=0; i&lt;(num); i+=2*step){unsigned a[2] = {i, i+step};unsigned end = FFMIN(i+2*step, (num));for(j=i; a[0]&lt;i+step &amp;&amp; a[1]&lt;end; j++){int idx= cmp(p+a[0], p+a[1]) &gt; 0;tmp[j] = p[ a[idx]++ ];}if(a[0]&gt;=i+step) a[0] = a[1];for(; j&lt;end; j++){tmp[j] = p[ a[0]++ ];}}FFSWAP(type*, p, tmp);}} while (0)</cpp:value></cpp:define>

</unit>
