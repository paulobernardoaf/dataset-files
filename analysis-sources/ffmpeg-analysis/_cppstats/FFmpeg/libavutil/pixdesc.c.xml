<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavutil\pixdesc.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avassert.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avstring.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pixfmt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pixdesc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"intreadwrite.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>av_read_image_line2</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>read_pal_component</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dst_element_size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>AVComponentDescriptor</name></type> <name>comp</name> <init>= <expr><name><name>desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>c</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>plane</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>plane</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>depth</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>depth</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>mask</name> <init>= <expr><operator>(</operator><literal type="number">1ULL</literal> <operator>&lt;&lt;</operator> <name>depth</name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>shift</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>shift</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>step</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>step</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name> <init>= <expr><name><name>desc</name><operator>-&gt;</operator><name>flags</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>dst16</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>dst32</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>skip</name> <init>= <expr><name>x</name> <operator>*</operator> <name>step</name> <operator>+</operator> <name><name>comp</name><operator>.</operator><name>offset</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>data</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator> <name>y</name> <operator>*</operator> <name><name>linesize</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator> <operator>(</operator><name>skip</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>shift</name> <init>= <expr><literal type="number">8</literal> <operator>-</operator> <name>depth</name> <operator>-</operator> <operator>(</operator><name>skip</name> <operator>&amp;</operator> <literal type="number">7</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name>w</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>val</name> <init>= <expr><operator>(</operator><operator>*</operator><name>p</name> <operator>&gt;&gt;</operator> <name>shift</name><operator>)</operator> <operator>&amp;</operator> <name>mask</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>read_pal_component</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>val</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">4</literal><operator>*</operator><name>val</name> <operator>+</operator> <name>c</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>shift</name> <operator>-=</operator> <name>step</name></expr>;</expr_stmt>

<expr_stmt><expr><name>p</name> <operator>-=</operator> <name>shift</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>shift</name> <operator>&amp;=</operator> <literal type="number">7</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>dst_element_size</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>dst32</name><operator>++</operator> <operator>=</operator> <name>val</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>dst16</name><operator>++</operator> <operator>=</operator> <name>val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></while>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>data</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator> <name>y</name> <operator>*</operator> <name><name>linesize</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator>

<name>x</name> <operator>*</operator> <name>step</name> <operator>+</operator> <name><name>comp</name><operator>.</operator><name>offset</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>is_8bit</name> <init>= <expr><name>shift</name> <operator>+</operator> <name>depth</name> <operator>&lt;=</operator> <literal type="number">8</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>is_16bit</name><init>= <expr><name>shift</name> <operator>+</operator> <name>depth</name> <operator>&lt;=</operator><literal type="number">16</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>is_8bit</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>p</name> <operator>+=</operator> <operator>!</operator><operator>!</operator><operator>(</operator><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BE</name><operator>)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<while>while <condition>(<expr><name>w</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>val</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>is_8bit</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>val</name> <operator>=</operator> <operator>*</operator><name>p</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>(<expr><name>is_16bit</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>val</name> <operator>=</operator> <ternary><condition><expr><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr> ?</condition><then> <expr><call><name>AV_RB16</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>AV_RL16</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>val</name> <operator>=</operator> <ternary><condition><expr><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr> ?</condition><then> <expr><call><name>AV_RB32</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>AV_RL32</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>val</name> <operator>=</operator> <operator>(</operator><name>val</name> <operator>&gt;&gt;</operator> <name>shift</name><operator>)</operator> <operator>&amp;</operator> <name>mask</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>read_pal_component</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>val</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">4</literal> <operator>*</operator> <name>val</name> <operator>+</operator> <name>c</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>step</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>dst_element_size</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>dst32</name><operator>++</operator> <operator>=</operator> <name>val</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>dst16</name><operator>++</operator> <operator>=</operator> <name>val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></while>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>av_read_image_line</name><parameter_list>(<parameter><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>read_pal_component</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>av_read_image_line2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>,<argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>w</name></expr></argument>,

<argument><expr><name>read_pal_component</name></expr></argument>,

<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>av_write_image_line2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_element_size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>AVComponentDescriptor</name></type> <name>comp</name> <init>= <expr><name><name>desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>c</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>plane</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>plane</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>depth</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>depth</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>step</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>step</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name> <init>= <expr><name><name>desc</name><operator>-&gt;</operator><name>flags</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>src32</name> <init>= <expr><name>src</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier></type><name>src16</name> <init>= <expr><name>src</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>skip</name> <init>= <expr><name>x</name> <operator>*</operator> <name>step</name> <operator>+</operator> <name><name>comp</name><operator>.</operator><name>offset</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>data</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator> <name>y</name> <operator>*</operator> <name><name>linesize</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator> <operator>(</operator><name>skip</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>shift</name> <init>= <expr><literal type="number">8</literal> <operator>-</operator> <name>depth</name> <operator>-</operator> <operator>(</operator><name>skip</name> <operator>&amp;</operator> <literal type="number">7</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name>w</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>p</name> <operator>|=</operator> <operator>(</operator><ternary><condition><expr><name>src_element_size</name> <operator>==</operator> <literal type="number">4</literal></expr> ?</condition><then> <expr><operator>*</operator><name>src32</name><operator>++</operator></expr> </then><else>: <expr><operator>*</operator><name>src16</name><operator>++</operator></expr></else></ternary><operator>)</operator> <operator>&lt;&lt;</operator> <name>shift</name></expr>;</expr_stmt>

<expr_stmt><expr><name>shift</name> <operator>-=</operator> <name>step</name></expr>;</expr_stmt>

<expr_stmt><expr><name>p</name> <operator>-=</operator> <name>shift</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>shift</name> <operator>&amp;=</operator> <literal type="number">7</literal></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>shift</name> <init>= <expr><name><name>comp</name><operator>.</operator><name>shift</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>data</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator> <name>y</name> <operator>*</operator> <name><name>linesize</name><index>[<expr><name>plane</name></expr>]</index></name> <operator>+</operator>

<name>x</name> <operator>*</operator> <name>step</name> <operator>+</operator> <name><name>comp</name><operator>.</operator><name>offset</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>shift</name> <operator>+</operator> <name>depth</name> <operator>&lt;=</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>p</name> <operator>+=</operator> <operator>!</operator><operator>!</operator><operator>(</operator><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BE</name><operator>)</operator></expr>;</expr_stmt>

<while>while <condition>(<expr><name>w</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>p</name> <operator>|=</operator> <operator>(</operator><operator>(</operator><ternary><condition><expr><name>src_element_size</name> <operator>==</operator> <literal type="number">4</literal></expr> ?</condition><then> <expr><operator>*</operator><name>src32</name><operator>++</operator></expr> </then><else>: <expr><operator>*</operator><name>src16</name><operator>++</operator></expr></else></ternary><operator>)</operator> <operator>&lt;&lt;</operator> <name>shift</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>step</name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></if> <else>else <block>{<block_content>

<while>while <condition>(<expr><name>w</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>s</name> <init>= <expr><operator>(</operator><ternary><condition><expr><name>src_element_size</name> <operator>==</operator> <literal type="number">4</literal></expr> ?</condition><then> <expr><operator>*</operator><name>src32</name><operator>++</operator></expr> </then><else>: <expr><operator>*</operator><name>src16</name><operator>++</operator></expr></else></ternary><operator>)</operator></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>shift</name> <operator>+</operator> <name>depth</name> <operator>&lt;=</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>val</name> <init>= <expr><call><name>AV_RB16</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call> <operator>|</operator> <operator>(</operator><name>s</name> <operator>&lt;&lt;</operator> <name>shift</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AV_WB16</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>val</name> <init>= <expr><call><name>AV_RL16</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call> <operator>|</operator> <operator>(</operator><name>s</name> <operator>&lt;&lt;</operator> <name>shift</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AV_WL16</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>val</name> <init>= <expr><call><name>AV_RB32</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call> <operator>|</operator> <operator>(</operator><name>s</name> <operator>&lt;&lt;</operator> <name>shift</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AV_WB32</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>val</name> <init>= <expr><call><name>AV_RL32</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call> <operator>|</operator> <operator>(</operator><name>s</name> <operator>&lt;&lt;</operator> <name>shift</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AV_WL32</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>step</name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>av_write_image_line</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>av_write_image_line2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PLUS1_MINUS1</name></expr></cpp:if>

<decl_stmt><decl><type><name>FF_DISABLE_DEPRECATION_WARNINGS</name>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<specifier>static</specifier> <specifier>const</specifier> <name>AVPixFmtDescriptor</name></type> <name><name>av_pix_fmt_descriptors</name><index>[<expr><name>AV_PIX_FMT_NB</name></expr>]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUYV422</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuyv422"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

}</block></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YVYU422</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yvyu422"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_Y210LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"y210le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

}</block></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_Y210BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"y210be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB24</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb24"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR24</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr24"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV410P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv410p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV411P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv411p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVJ411P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuvj411p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>FF_PSEUDOPAL</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"gray8,y8"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_MONOWHITE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"monow"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_MONOBLACK</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"monob"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_PAL8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"pal8"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PAL</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVJ420P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuvj420p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVJ422P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuvj422p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVJ444P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuvj444p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_XVMC</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"xvmc"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_UYVY422</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"uyvy422"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_UYYVYY411</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"uyyvyy411"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

}</block></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr8"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>FF_PSEUDOPAL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR4</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr4"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR4_BYTE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr4_byte"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>FF_PSEUDOPAL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb8"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>FF_PSEUDOPAL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB4</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb4"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB4_BYTE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb4_byte"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>FF_PSEUDOPAL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_NV12</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nv12"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_NV21</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nv21"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_ARGB</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"argb"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGBA</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgba"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_ABGR</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"abgr"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGRA</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgra"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_0RGB</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"0rgb"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name><operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB0</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb0"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name><operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_0BGR</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"0bgr"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name><operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR0</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr0"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name><operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name><operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y9be"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y9le"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y10be"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y10le"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y12be"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y12le"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY14BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray14be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y14be"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY14LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray14le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y14le"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y16be"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAY16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gray16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"y16le"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV440P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv440p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVJ440P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuvj440p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV440P10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv440p10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV440P10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv440p10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV440P12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv440p12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV440P12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv440p12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA420P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva420p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA420P9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva420p9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA420P9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva420p9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA420P10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva420p10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA420P10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva420p10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA420P16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva420p16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA420P16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva420p16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB48BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb48be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB48LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb48le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGBA64BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgba64be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGBA64LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgba64le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB565BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb565be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB565LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb565le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB555BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb555be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB555LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb555le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB444BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb444be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_RGB444LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rgb444le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR48BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr48be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR48LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr48le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGRA64BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgra64be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGRA64LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgra64le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR565BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr565be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR565LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr565le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR555BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr555be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR555LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr555le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR444BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr444be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BGR444LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bgr444le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_VAAPI</name></expr></cpp:if>

<expr><index>[<expr><name>AV_PIX_FMT_VAAPI_MOCO</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vaapi_moco"</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_VAAPI_IDCT</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vaapi_idct"</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_VAAPI_VLD</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vaapi_vld"</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr><index>[<expr><name>AV_PIX_FMT_VAAPI</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vaapi"</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P14LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p14le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P14BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p14be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV420P16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv420p16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P14LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p14le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P14BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p14be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV422P16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv422p16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P14LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p14le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUV444P14BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv444p14be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_D3D11VA_VLD</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"d3d11va_vld"</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_DXVA2_VLD</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"dxva2_vld"</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YA8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"ya8"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"gray8a"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YA16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"ya16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YA16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"ya16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_VIDEOTOOLBOX</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"videotoolbox_vld"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP9LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp9le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP9BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp9be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP14LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp14le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP14BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp14be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRP16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrp16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAP</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrap"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAP16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrap16le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAP16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrap16be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_VDPAU</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vdpau"</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_XYZ12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"xyz12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

}</block></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_XYZ12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"xyz12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

}</block></expr>,

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BAYER8_DESC_COMMON</name></cpp:macro> <cpp:value>.nb_components= 3, .log2_chroma_w= 0, .log2_chroma_h= 0, .comp = { {0,1,0,0,2,0,1,1},{0,1,0,0,4,0,3,1},{0,1,0,0,2,0,1,1},},</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BAYER16_DESC_COMMON</name></cpp:macro> <cpp:value>.nb_components= 3, .log2_chroma_w= 0, .log2_chroma_h= 0, .comp = { {0,2,0,0,4,1,3,1},{0,2,0,0,8,1,7,1},{0,2,0,0,4,1,3,1},},</cpp:value></cpp:define> 

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_BGGR8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_bggr8"</literal></expr>,

<expr><name><name>BAYER8_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_BGGR16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_bggr16le"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_BGGR16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_bggr16be"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_RGGB8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_rggb8"</literal></expr>,

<expr><name><name>BAYER8_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_RGGB16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_rggb16le"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_RGGB16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_rggb16be"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_GBRG8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_gbrg8"</literal></expr>,

<expr><name><name>BAYER8_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_GBRG16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_gbrg16le"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_GBRG16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_gbrg16be"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_GRBG8</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_grbg8"</literal></expr>,

<expr><name><name>BAYER8_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_GRBG16LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_grbg16le"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_BAYER_GRBG16BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"bayer_grbg16be"</literal></expr>,

<expr><name><name>BAYER16_DESC_COMMON</name>

<operator>.</operator><name>flags</name></name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_NV16</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nv16"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_NV20LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nv20le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_NV20BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nv20be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_QSV</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"qsv"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_MEDIACODEC</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"mediacodec"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_MMAL</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"mmal"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_CUDA</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"cuda"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_AYUV64LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"ayuv64le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_AYUV64BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"ayuv64be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_P010LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"p010le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_P010BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"p010be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_P016LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"p016le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_P016BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"p016be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_BE</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAP12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrap12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAP12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrap12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAP10LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrap10le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAP10BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrap10be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_D3D11</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"d3d11"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRPF32BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrpf32be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_FLOAT</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRPF32LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrpf32le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_FLOAT</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAPF32BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrapf32be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_ALPHA</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_FLOAT</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GBRAPF32LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"gbrapf32le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name> <operator>|</operator>

<name>AV_PIX_FMT_FLAG_RGB</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_FLOAT</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_DRM_PRIME</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"drm_prime"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_OPENCL</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"opencl"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAYF32BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"grayf32be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_FLOAT</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"yf32be"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_GRAYF32LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"grayf32le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_FLOAT</name></expr>,

<expr><operator>.</operator><name>alias</name> <operator>=</operator> <literal type="string">"yf32le"</literal></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA422P12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva422p12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P12BE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p12be"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_BE</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_YUVA444P12LE</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuva444p12le"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">4</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name> <operator>|</operator> <name>AV_PIX_FMT_FLAG_ALPHA</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_NV24</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nv24"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_NV42</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nv42"</literal></expr>,

<expr><operator>.</operator><name>nb_components</name> <operator>=</operator> <literal type="number">3</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_w</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>log2_chroma_h</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>comp</name> <operator>=</operator> <block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, 

}</block></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_PLANAR</name></expr>,

}</block></expr>,

<expr><index>[<expr><name>AV_PIX_FMT_VULKAN</name></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vulkan"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name></expr>,

}</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PLUS1_MINUS1</name></expr></cpp:if>

<decl_stmt><decl><type><name>FF_ENABLE_DEPRECATION_WARNINGS</name>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>color_range_names</name><index>[]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>AVCOL_RANGE_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <literal type="string">"unknown"</literal></expr>,

<expr><index>[<expr><name>AVCOL_RANGE_MPEG</name></expr>]</index> <operator>=</operator> <literal type="string">"tv"</literal></expr>,

<expr><index>[<expr><name>AVCOL_RANGE_JPEG</name></expr>]</index> <operator>=</operator> <literal type="string">"pc"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>color_primaries_names</name><index>[<expr><name>AVCOL_PRI_NB</name></expr>]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>AVCOL_PRI_RESERVED0</name></expr>]</index> <operator>=</operator> <literal type="string">"reserved"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_BT709</name></expr>]</index> <operator>=</operator> <literal type="string">"bt709"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <literal type="string">"unknown"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_RESERVED</name></expr>]</index> <operator>=</operator> <literal type="string">"reserved"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_BT470M</name></expr>]</index> <operator>=</operator> <literal type="string">"bt470m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_BT470BG</name></expr>]</index> <operator>=</operator> <literal type="string">"bt470bg"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_SMPTE170M</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte170m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_SMPTE240M</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte240m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_FILM</name></expr>]</index> <operator>=</operator> <literal type="string">"film"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_BT2020</name></expr>]</index> <operator>=</operator> <literal type="string">"bt2020"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_SMPTE428</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte428"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_SMPTE431</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte431"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_SMPTE432</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte432"</literal></expr>,

<expr><index>[<expr><name>AVCOL_PRI_EBU3213</name></expr>]</index> <operator>=</operator> <literal type="string">"ebu3213"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>color_transfer_names</name><index>[]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>AVCOL_TRC_RESERVED0</name></expr>]</index> <operator>=</operator> <literal type="string">"reserved"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_BT709</name></expr>]</index> <operator>=</operator> <literal type="string">"bt709"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <literal type="string">"unknown"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_RESERVED</name></expr>]</index> <operator>=</operator> <literal type="string">"reserved"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_GAMMA22</name></expr>]</index> <operator>=</operator> <literal type="string">"bt470m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_GAMMA28</name></expr>]</index> <operator>=</operator> <literal type="string">"bt470bg"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_SMPTE170M</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte170m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_SMPTE240M</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte240m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_LINEAR</name></expr>]</index> <operator>=</operator> <literal type="string">"linear"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_LOG</name></expr>]</index> <operator>=</operator> <literal type="string">"log100"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_LOG_SQRT</name></expr>]</index> <operator>=</operator> <literal type="string">"log316"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_IEC61966_2_4</name></expr>]</index> <operator>=</operator> <literal type="string">"iec61966-2-4"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_BT1361_ECG</name></expr>]</index> <operator>=</operator> <literal type="string">"bt1361e"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_IEC61966_2_1</name></expr>]</index> <operator>=</operator> <literal type="string">"iec61966-2-1"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_BT2020_10</name></expr>]</index> <operator>=</operator> <literal type="string">"bt2020-10"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_BT2020_12</name></expr>]</index> <operator>=</operator> <literal type="string">"bt2020-12"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_SMPTE2084</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte2084"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_SMPTE428</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte428"</literal></expr>,

<expr><index>[<expr><name>AVCOL_TRC_ARIB_STD_B67</name></expr>]</index> <operator>=</operator> <literal type="string">"arib-std-b67"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>color_space_names</name><index>[]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>AVCOL_SPC_RGB</name></expr>]</index> <operator>=</operator> <literal type="string">"gbr"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_BT709</name></expr>]</index> <operator>=</operator> <literal type="string">"bt709"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <literal type="string">"unknown"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_RESERVED</name></expr>]</index> <operator>=</operator> <literal type="string">"reserved"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_FCC</name></expr>]</index> <operator>=</operator> <literal type="string">"fcc"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_BT470BG</name></expr>]</index> <operator>=</operator> <literal type="string">"bt470bg"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_SMPTE170M</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte170m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_SMPTE240M</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte240m"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_YCGCO</name></expr>]</index> <operator>=</operator> <literal type="string">"ycgco"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_BT2020_NCL</name></expr>]</index> <operator>=</operator> <literal type="string">"bt2020nc"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_BT2020_CL</name></expr>]</index> <operator>=</operator> <literal type="string">"bt2020c"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_SMPTE2085</name></expr>]</index> <operator>=</operator> <literal type="string">"smpte2085"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_CHROMA_DERIVED_NCL</name></expr>]</index> <operator>=</operator> <literal type="string">"chroma-derived-nc"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_CHROMA_DERIVED_CL</name></expr>]</index> <operator>=</operator> <literal type="string">"chroma-derived-c"</literal></expr>,

<expr><index>[<expr><name>AVCOL_SPC_ICTCP</name></expr>]</index> <operator>=</operator> <literal type="string">"ictcp"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>chroma_location_names</name><index>[]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>AVCHROMA_LOC_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <literal type="string">"unspecified"</literal></expr>,

<expr><index>[<expr><name>AVCHROMA_LOC_LEFT</name></expr>]</index> <operator>=</operator> <literal type="string">"left"</literal></expr>,

<expr><index>[<expr><name>AVCHROMA_LOC_CENTER</name></expr>]</index> <operator>=</operator> <literal type="string">"center"</literal></expr>,

<expr><index>[<expr><name>AVCHROMA_LOC_TOPLEFT</name></expr>]</index> <operator>=</operator> <literal type="string">"topleft"</literal></expr>,

<expr><index>[<expr><name>AVCHROMA_LOC_TOP</name></expr>]</index> <operator>=</operator> <literal type="string">"top"</literal></expr>,

<expr><index>[<expr><name>AVCHROMA_LOC_BOTTOMLEFT</name></expr>]</index> <operator>=</operator> <literal type="string">"bottomleft"</literal></expr>,

<expr><index>[<expr><name>AVCHROMA_LOC_BOTTOM</name></expr>]</index> <operator>=</operator> <literal type="string">"bottom"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>get_pix_fmt_internal</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>pix_fmt</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>pix_fmt</name> <operator>&lt;</operator> <name>AV_PIX_FMT_NB</name></expr>;</condition> <incr><expr><name>pix_fmt</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><name><name>av_pix_fmt_descriptors</name><index>[<expr><name>pix_fmt</name></expr>]</index></name><operator>.</operator><name>name</name> <operator>&amp;&amp;</operator>

<operator>(</operator><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name><name>av_pix_fmt_descriptors</name><index>[<expr><name>pix_fmt</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>||</operator>

<call><name>av_match_name</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name><name>av_pix_fmt_descriptors</name><index>[<expr><name>pix_fmt</name></expr>]</index></name><operator>.</operator><name>alias</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>pix_fmt</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

<return>return <expr><name>AV_PIX_FMT_NONE</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_get_pix_fmt_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>unsigned</name><operator>)</operator><name>pix_fmt</name> <operator>&lt;</operator> <name>AV_PIX_FMT_NB</name></expr> ?</condition><then>

<expr><name><name>av_pix_fmt_descriptors</name><index>[<expr><name>pix_fmt</name></expr>]</index></name><operator>.</operator><name>name</name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_BIGENDIAN</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>X_NE</name><parameter_list>(<parameter><type><name>be</name></type></parameter>, <parameter><type><name>le</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>be</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>X_NE</name><parameter_list>(<parameter><type><name>be</name></type></parameter>, <parameter><type><name>le</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>le</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_get_pix_fmt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"rgb32"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>name</name> <operator>=</operator> <call><name>X_NE</name><argument_list>(<argument><expr><literal type="string">"argb"</literal></expr></argument>, <argument><expr><literal type="string">"bgra"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"bgr32"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>name</name> <operator>=</operator> <call><name>X_NE</name><argument_list>(<argument><expr><literal type="string">"abgr"</literal></expr></argument>, <argument><expr><literal type="string">"rgba"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>pix_fmt</name> <operator>=</operator> <call><name>get_pix_fmt_internal</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pix_fmt</name> <operator>==</operator> <name>AV_PIX_FMT_NONE</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>char</name></type> <name><name>name2</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>name2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>name2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%s%s"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><call><name>X_NE</name><argument_list>(<argument><expr><literal type="string">"be"</literal></expr></argument>, <argument><expr><literal type="string">"le"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>pix_fmt</name> <operator>=</operator> <call><name>get_pix_fmt_internal</name><argument_list>(<argument><expr><name>name2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_VAAPI</name></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><name>pix_fmt</name> <operator>==</operator> <name>AV_PIX_FMT_NONE</name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"vaapi"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>pix_fmt</name> <operator>=</operator> <name>AV_PIX_FMT_VAAPI</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>pix_fmt</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_get_bits_per_pixel</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>pixdesc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>c</name></decl>, <decl><type ref="prev"/><name>bits</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>log2_pixels</name> <init>= <expr><name><name>pixdesc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>+</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>c</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>c</name> <operator>&lt;</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>nb_components</name></name></expr>;</condition> <incr><expr><name>c</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>s</name> <init>= <expr><ternary><condition><expr><name>c</name> <operator>==</operator> <literal type="number">1</literal> <operator>||</operator> <name>c</name> <operator>==</operator> <literal type="number">2</literal></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name>log2_pixels</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>bits</name> <operator>+=</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>c</name></expr>]</index></name><operator>.</operator><name>depth</name> <operator>&lt;&lt;</operator> <name>s</name></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>bits</name> <operator>&gt;&gt;</operator> <name>log2_pixels</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_get_padded_bits_per_pixel</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>pixdesc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>c</name></decl>, <decl><type ref="prev"/><name>bits</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>log2_pixels</name> <init>= <expr><name><name>pixdesc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>+</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>steps</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>c</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>c</name> <operator>&lt;</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>nb_components</name></name></expr>;</condition> <incr><expr><name>c</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVComponentDescriptor</name> <modifier>*</modifier></type><name>comp</name> <init>= <expr><operator>&amp;</operator><name><name>pixdesc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>c</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>s</name> <init>= <expr><ternary><condition><expr><name>c</name> <operator>==</operator> <literal type="number">1</literal> <operator>||</operator> <name>c</name> <operator>==</operator> <literal type="number">2</literal></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name>log2_pixels</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>steps</name><index>[<expr><name><name>comp</name><operator>-&gt;</operator><name>plane</name></name></expr>]</index></name> <operator>=</operator> <name><name>comp</name><operator>-&gt;</operator><name>step</name></name> <operator>&lt;&lt;</operator> <name>s</name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>c</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>c</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>c</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>bits</name> <operator>+=</operator> <name><name>steps</name><index>[<expr><name>c</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><name><name>pixdesc</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>bits</name> <operator>*=</operator> <literal type="number">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>bits</name> <operator>&gt;&gt;</operator> <name>log2_pixels</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>char</name> <modifier>*</modifier></type><name>av_get_pix_fmt_string</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>pix_fmt</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>snprintf</name> <argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>buf_size</name></expr></argument>, <argument><expr><literal type="string">"name"</literal> <literal type="string">" nb_components"</literal> <literal type="string">" nb_bits"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>pixdesc</name> <init>= <expr><operator>&amp;</operator><name><name>av_pix_fmt_descriptors</name><index>[<expr><name>pix_fmt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>buf_size</name></expr></argument>, <argument><expr><literal type="string">"%-11s %7d %10d"</literal></expr></argument>, <argument><expr><name><name>pixdesc</name><operator>-&gt;</operator><name>name</name></name></expr></argument>,

<argument><expr><name><name>pixdesc</name><operator>-&gt;</operator><name>nb_components</name></name></expr></argument>, <argument><expr><call><name>av_get_bits_per_pixel</name><argument_list>(<argument><expr><name>pixdesc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<return>return <expr><name>buf</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>av_pix_fmt_desc_get</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>pix_fmt</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>pix_fmt</name> <operator>&gt;=</operator> <name>AV_PIX_FMT_NB</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><operator>&amp;</operator><name><name>av_pix_fmt_descriptors</name><index>[<expr><name>pix_fmt</name></expr>]</index></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>av_pix_fmt_desc_next</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>prev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>prev</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>&amp;</operator><name><name>av_pix_fmt_descriptors</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>

<while>while <condition>(<expr><name>prev</name> <operator>-</operator> <name>av_pix_fmt_descriptors</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>av_pix_fmt_descriptors</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>prev</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>prev</name><operator>-&gt;</operator><name>name</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>prev</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></while>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_pix_fmt_desc_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>desc</name> <operator>&lt;</operator> <name>av_pix_fmt_descriptors</name> <operator>||</operator>

<name>desc</name> <operator>&gt;=</operator> <name>av_pix_fmt_descriptors</name> <operator>+</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>av_pix_fmt_descriptors</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AV_PIX_FMT_NONE</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>desc</name> <operator>-</operator> <name>av_pix_fmt_descriptors</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_pix_fmt_get_chroma_sub_sample</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>h_shift</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>v_shift</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>h_shift</name> <operator>=</operator> <name><name>desc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>v_shift</name> <operator>=</operator> <name><name>desc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_pix_fmt_count_planes</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name><name>planes</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>desc</name><operator>-&gt;</operator><name>nb_components</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>planes</name><index>[<expr><name><name>desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>plane</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>planes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>ret</name> <operator>+=</operator> <name><name>planes</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_check_pixfmt_descriptors</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list><block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>av_pix_fmt_descriptors</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>&amp;</operator><name><name>av_pix_fmt_descriptors</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>fill</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">8</literal><operator>+</operator><literal type="number">6</literal><operator>+</operator><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{<expr><name><name>fill</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>fill</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>, <expr><name><name>fill</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>, <expr><name><name>fill</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>d</name><operator>-&gt;</operator><name>name</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>d</name><operator>-&gt;</operator><name>nb_components</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>d</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>d</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>d</name><operator>-&gt;</operator><name>flags</name></name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>&lt;=</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>&lt;=</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>nb_components</name></name> <operator>&lt;=</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>name</name></name> <operator>&amp;&amp;</operator> <name><name>d</name><operator>-&gt;</operator><name>name</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_assert2</name><argument_list>(<argument><expr><call><name>av_get_pix_fmt</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name><operator>&lt;</operator><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>comp</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVComponentDescriptor</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>j</name><operator>&gt;=</operator><name><name>d</name><operator>-&gt;</operator><name>nb_components</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><operator>!</operator><name><name>c</name><operator>-&gt;</operator><name>plane</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>c</name><operator>-&gt;</operator><name>step</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>c</name><operator>-&gt;</operator><name>offset</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>c</name><operator>-&gt;</operator><name>shift</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>c</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BITSTREAM</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>step</name></name> <operator>&gt;=</operator> <name><name>c</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><literal type="number">8</literal><operator>*</operator><name><name>c</name><operator>-&gt;</operator><name>step</name></name> <operator>&gt;=</operator> <name><name>c</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_BAYER</name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>av_read_image_line</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>data</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>j</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name><name>c</name><operator>-&gt;</operator><name>depth</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_write_image_line</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>j</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_pix_fmt_swap_endianness</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name> <operator>||</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AV_PIX_FMT_NONE</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>av_strlcpy</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><literal type="string">"be"</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>strcmp</name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><literal type="string">"le"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AV_PIX_FMT_NONE</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>name</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^=</operator> <literal type="char">'b'</literal> <operator>^</operator> <literal type="char">'l'</literal></expr>;</expr_stmt>

<return>return <expr><call><name>get_pix_fmt_internal</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_COLOR_NA</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_COLOR_RGB</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_COLOR_GRAY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_COLOR_YUV</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_COLOR_YUV_JPEG</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_COLOR_XYZ</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pixdesc_has_alpha</name><parameter_list>(<parameter><type><name>pixdesc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((pixdesc)-&gt;flags &amp; AV_PIX_FMT_FLAG_ALPHA)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>get_color_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_PAL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FF_COLOR_RGB</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>nb_components</name></name> <operator>==</operator> <literal type="number">1</literal> <operator>||</operator> <name><name>desc</name><operator>-&gt;</operator><name>nb_components</name></name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FF_COLOR_GRAY</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><literal type="string">"yuvj"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FF_COLOR_YUV_JPEG</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><literal type="string">"xyz"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FF_COLOR_XYZ</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_RGB</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FF_COLOR_RGB</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>nb_components</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FF_COLOR_NA</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>FF_COLOR_YUV</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>get_pix_fmt_depth</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>min</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>max</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc</name> <operator>||</operator> <operator>!</operator><name><name>desc</name><operator>-&gt;</operator><name>nb_components</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>min</name> <operator>=</operator> <operator>*</operator><name>max</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>min</name> <operator>=</operator> <name>INT_MAX</name></expr><operator>,</operator> <expr><operator>*</operator><name>max</name> <operator>=</operator> <operator>-</operator><name>INT_MAX</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>desc</name><operator>-&gt;</operator><name>nb_components</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>min</name> <operator>=</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>depth</name></expr></argument>, <argument><expr><operator>*</operator><name>min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>max</name> <operator>=</operator> <call><name>FFMAX</name><argument_list>(<argument><expr><name><name>desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>depth</name></expr></argument>, <argument><expr><operator>*</operator><name>max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>get_pix_fmt_score</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>src_pix_fmt</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>lossp</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>consider</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>src_desc</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>src_pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>dst_desc</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>dst_pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>src_color</name></decl>, <decl><type ref="prev"/><name>dst_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>src_min_depth</name></decl>, <decl><type ref="prev"/><name>src_max_depth</name></decl>, <decl><type ref="prev"/><name>dst_min_depth</name></decl>, <decl><type ref="prev"/><name>dst_max_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>, <decl><type ref="prev"/><name>loss</name></decl>, <decl><type ref="prev"/><name>i</name></decl>, <decl><type ref="prev"/><name>nb_components</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>score</name> <init>= <expr><name>INT_MAX</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>src_desc</name> <operator>||</operator> <operator>!</operator><name>dst_desc</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">4</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>src_desc</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name><operator>)</operator> <operator>||</operator>

<operator>(</operator><name><name>dst_desc</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_PIX_FMT_FLAG_HWACCEL</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>dst_pix_fmt</name> <operator>==</operator> <name>src_pix_fmt</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">2</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>lossp</name> <operator>=</operator> <name>loss</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>dst_pix_fmt</name> <operator>==</operator> <name>src_pix_fmt</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>INT_MAX</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>get_pix_fmt_depth</name><argument_list>(<argument><expr><operator>&amp;</operator><name>src_min_depth</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>src_max_depth</name></expr></argument>, <argument><expr><name>src_pix_fmt</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">3</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>get_pix_fmt_depth</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dst_min_depth</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dst_max_depth</name></expr></argument>, <argument><expr><name>dst_pix_fmt</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">3</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>src_color</name> <operator>=</operator> <call><name>get_color_type</name><argument_list>(<argument><expr><name>src_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_color</name> <operator>=</operator> <call><name>get_color_type</name><argument_list>(<argument><expr><name>dst_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>dst_pix_fmt</name> <operator>==</operator> <name>AV_PIX_FMT_PAL8</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>nb_components</name> <operator>=</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name><name>src_desc</name><operator>-&gt;</operator><name>nb_components</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>nb_components</name> <operator>=</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name><name>src_desc</name><operator>-&gt;</operator><name>nb_components</name></name></expr></argument>, <argument><expr><name><name>dst_desc</name><operator>-&gt;</operator><name>nb_components</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>nb_components</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>depth_minus1</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>dst_pix_fmt</name> <operator>==</operator> <name>AV_PIX_FMT_PAL8</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">7</literal><operator>/</operator><name>nb_components</name></expr> </then><else>: <expr><operator>(</operator><name><name>dst_desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>depth</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>src_desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>depth</name> <operator>-</operator> <literal type="number">1</literal> <operator>&gt;</operator> <name>depth_minus1</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>consider</name> <operator>&amp;</operator> <name>FF_LOSS_DEPTH</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_DEPTH</name></expr>;</expr_stmt>

<expr_stmt><expr><name>score</name> <operator>-=</operator> <literal type="number">65536</literal> <operator>&gt;&gt;</operator> <name>depth_minus1</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>consider</name> <operator>&amp;</operator> <name>FF_LOSS_RESOLUTION</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>dst_desc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>&gt;</operator> <name><name>src_desc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_RESOLUTION</name></expr>;</expr_stmt>

<expr_stmt><expr><name>score</name> <operator>-=</operator> <literal type="number">256</literal> <operator>&lt;&lt;</operator> <name><name>dst_desc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst_desc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>&gt;</operator> <name><name>src_desc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_RESOLUTION</name></expr>;</expr_stmt>

<expr_stmt><expr><name>score</name> <operator>-=</operator> <literal type="number">256</literal> <operator>&lt;&lt;</operator> <name><name>dst_desc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst_desc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>src_desc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<name><name>dst_desc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>src_desc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content>

<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">512</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>consider</name> <operator>&amp;</operator> <name>FF_LOSS_COLORSPACE</name></expr>)</condition><block type="pseudo"><block_content>

<switch>switch<condition>(<expr><name>dst_color</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>FF_COLOR_RGB</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name>src_color</name> <operator>!=</operator> <name>FF_COLOR_RGB</name> <operator>&amp;&amp;</operator>

<name>src_color</name> <operator>!=</operator> <name>FF_COLOR_GRAY</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_COLORSPACE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>FF_COLOR_GRAY</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name>src_color</name> <operator>!=</operator> <name>FF_COLOR_GRAY</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_COLORSPACE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>FF_COLOR_YUV</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name>src_color</name> <operator>!=</operator> <name>FF_COLOR_YUV</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_COLORSPACE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>FF_COLOR_YUV_JPEG</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name>src_color</name> <operator>!=</operator> <name>FF_COLOR_YUV_JPEG</name> <operator>&amp;&amp;</operator>

<name>src_color</name> <operator>!=</operator> <name>FF_COLOR_YUV</name> <operator>&amp;&amp;</operator>

<name>src_color</name> <operator>!=</operator> <name>FF_COLOR_GRAY</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_COLORSPACE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<default>default:</default>

<if_stmt><if>if <condition>(<expr><name>src_color</name> <operator>!=</operator> <name>dst_color</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_COLORSPACE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

</block_content>}</block></switch></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>loss</name> <operator>&amp;</operator> <name>FF_LOSS_COLORSPACE</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>score</name> <operator>-=</operator> <operator>(</operator><name>nb_components</name> <operator>*</operator> <literal type="number">65536</literal><operator>)</operator> <operator>&gt;&gt;</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name><name>dst_desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>depth</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name><name>src_desc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>depth</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>dst_color</name> <operator>==</operator> <name>FF_COLOR_GRAY</name> <operator>&amp;&amp;</operator>

<name>src_color</name> <operator>!=</operator> <name>FF_COLOR_GRAY</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>consider</name> <operator>&amp;</operator> <name>FF_LOSS_CHROMA</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_CHROMA</name></expr>;</expr_stmt>

<expr_stmt><expr><name>score</name> <operator>-=</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">65536</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>pixdesc_has_alpha</name><argument_list>(<argument><expr><name>dst_desc</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>pixdesc_has_alpha</name><argument_list>(<argument><expr><name>src_desc</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name>consider</name> <operator>&amp;</operator> <name>FF_LOSS_ALPHA</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_ALPHA</name></expr>;</expr_stmt>

<expr_stmt><expr><name>score</name> <operator>-=</operator> <literal type="number">65536</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>dst_pix_fmt</name> <operator>==</operator> <name>AV_PIX_FMT_PAL8</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>consider</name> <operator>&amp;</operator> <name>FF_LOSS_COLORQUANT</name><operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><name>src_pix_fmt</name> <operator>!=</operator> <name>AV_PIX_FMT_PAL8</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>src_color</name> <operator>!=</operator> <name>FF_COLOR_GRAY</name> <operator>||</operator> <operator>(</operator><call><name>pixdesc_has_alpha</name><argument_list>(<argument><expr><name>src_desc</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name>consider</name> <operator>&amp;</operator> <name>FF_LOSS_ALPHA</name><operator>)</operator><operator>)</operator><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loss</name> <operator>|=</operator> <name>FF_LOSS_COLORQUANT</name></expr>;</expr_stmt>

<expr_stmt><expr><name>score</name> <operator>-=</operator> <literal type="number">65536</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>lossp</name> <operator>=</operator> <name>loss</name></expr>;</expr_stmt>

<return>return <expr><name>score</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_get_pix_fmt_loss</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>src_pix_fmt</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>has_alpha</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>loss</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>get_pix_fmt_score</name><argument_list>(<argument><expr><name>dst_pix_fmt</name></expr></argument>, <argument><expr><name>src_pix_fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>loss</name></expr></argument>, <argument><expr><ternary><condition><expr><name>has_alpha</name></expr> ?</condition><then> <expr><operator>~</operator><literal type="number">0</literal></expr> </then><else>: <expr><operator>~</operator><name>FF_LOSS_ALPHA</name></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>loss</name></expr>;</return>

</block_content>}</block></function>

<function><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_find_best_pix_fmt_of_2</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt1</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt2</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>src_pix_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>has_alpha</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>loss_ptr</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>loss1</name></decl>, <decl><type ref="prev"/><name>loss2</name></decl>, <decl><type ref="prev"/><name>loss_mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc1</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>dst_pix_fmt1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc2</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name>dst_pix_fmt2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>score1</name></decl>, <decl><type ref="prev"/><name>score2</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>desc1</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>dst_pix_fmt</name> <operator>=</operator> <name>dst_pix_fmt2</name></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>!</operator><name>desc2</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>dst_pix_fmt</name> <operator>=</operator> <name>dst_pix_fmt1</name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>loss_mask</name><operator>=</operator> <ternary><condition><expr><name>loss_ptr</name></expr>?</condition><then><expr><operator>~</operator><operator>*</operator><name>loss_ptr</name></expr></then><else>:<expr><operator>~</operator><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt> 

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>has_alpha</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>loss_mask</name> <operator>&amp;=</operator> <operator>~</operator><name>FF_LOSS_ALPHA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>score1</name> <operator>=</operator> <call><name>get_pix_fmt_score</name><argument_list>(<argument><expr><name>dst_pix_fmt1</name></expr></argument>, <argument><expr><name>src_pix_fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>loss1</name></expr></argument>, <argument><expr><name>loss_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>score2</name> <operator>=</operator> <call><name>get_pix_fmt_score</name><argument_list>(<argument><expr><name>dst_pix_fmt2</name></expr></argument>, <argument><expr><name>src_pix_fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>loss2</name></expr></argument>, <argument><expr><name>loss_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>score1</name> <operator>==</operator> <name>score2</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><call><name>av_get_padded_bits_per_pixel</name><argument_list>(<argument><expr><name>desc2</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>av_get_padded_bits_per_pixel</name><argument_list>(<argument><expr><name>desc1</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>dst_pix_fmt</name> <operator>=</operator> <ternary><condition><expr><call><name>av_get_padded_bits_per_pixel</name><argument_list>(<argument><expr><name>desc2</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <call><name>av_get_padded_bits_per_pixel</name><argument_list>(<argument><expr><name>desc1</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>dst_pix_fmt2</name></expr> </then><else>: <expr><name>dst_pix_fmt1</name></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>dst_pix_fmt</name> <operator>=</operator> <ternary><condition><expr><name><name>desc2</name><operator>-&gt;</operator><name>nb_components</name></name> <operator>&lt;</operator> <name><name>desc1</name><operator>-&gt;</operator><name>nb_components</name></name></expr> ?</condition><then> <expr><name>dst_pix_fmt2</name></expr> </then><else>: <expr><name>dst_pix_fmt1</name></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>dst_pix_fmt</name> <operator>=</operator> <ternary><condition><expr><name>score1</name> <operator>&lt;</operator> <name>score2</name></expr> ?</condition><then> <expr><name>dst_pix_fmt2</name></expr> </then><else>: <expr><name>dst_pix_fmt1</name></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>loss_ptr</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>loss_ptr</name> <operator>=</operator> <call><name>av_get_pix_fmt_loss</name><argument_list>(<argument><expr><name>dst_pix_fmt</name></expr></argument>, <argument><expr><name>src_pix_fmt</name></expr></argument>, <argument><expr><name>has_alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>dst_pix_fmt</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_range_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorRange</name></name></type> <name>range</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>unsigned</name><operator>)</operator> <name>range</name> <operator>&lt;</operator> <name>AVCOL_RANGE_NB</name></expr> ?</condition><then>

<expr><name><name>color_range_names</name><index>[<expr><name>range</name></expr>]</index></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_color_range_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>color_range_names</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>len</name> <init>= <expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>color_range_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>color_range_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_primaries_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorPrimaries</name></name></type> <name>primaries</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>unsigned</name><operator>)</operator> <name>primaries</name> <operator>&lt;</operator> <name>AVCOL_PRI_NB</name></expr> ?</condition><then>

<expr><name><name>color_primaries_names</name><index>[<expr><name>primaries</name></expr>]</index></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_color_primaries_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>color_primaries_names</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>color_primaries_names</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>color_primaries_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>color_primaries_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_transfer_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorTransferCharacteristic</name></name></type> <name>transfer</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>unsigned</name><operator>)</operator> <name>transfer</name> <operator>&lt;</operator> <name>AVCOL_TRC_NB</name></expr> ?</condition><then>

<expr><name><name>color_transfer_names</name><index>[<expr><name>transfer</name></expr>]</index></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_color_transfer_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>color_transfer_names</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>color_transfer_names</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>color_transfer_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>color_transfer_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_space_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorSpace</name></name></type> <name>space</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>unsigned</name><operator>)</operator> <name>space</name> <operator>&lt;</operator> <name>AVCOL_SPC_NB</name></expr> ?</condition><then>

<expr><name><name>color_space_names</name><index>[<expr><name>space</name></expr>]</index></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_color_space_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>color_space_names</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>color_space_names</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>color_space_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>color_space_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_chroma_location_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVChromaLocation</name></name></type> <name>location</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>unsigned</name><operator>)</operator> <name>location</name> <operator>&lt;</operator> <name>AVCHROMA_LOC_NB</name></expr> ?</condition><then>

<expr><name><name>chroma_location_names</name><index>[<expr><name>location</name></expr>]</index></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_chroma_location_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>chroma_location_names</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>chroma_location_names</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>chroma_location_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>chroma_location_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

</unit>
