<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\framerate.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"scene_sad.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BLEND_FUNC_PARAMS</name></cpp:macro> <cpp:value>const uint8_t *src1, ptrdiff_t src1_linesize, const uint8_t *src2, ptrdiff_t src2_linesize, uint8_t *dst, ptrdiff_t dst_linesize, ptrdiff_t width, ptrdiff_t height, int factor1, int factor2, int half</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BLEND_FACTOR_DEPTH</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(n-1)</cpp:value></cpp:define>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>blend_func</name>)<parameter_list>(<parameter><decl><type><name>BLEND_FUNC_PARAMS</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>FrameRateContext</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>dest_frame_rate</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>double</name></type> <name>scene_score</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>interp_start</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>interp_end</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>line_size</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>height</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>vsub</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>srce_time_base</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVRational</name></type> <name>dest_time_base</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ff_scene_sad_fn</name></type> <name>sad</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>double</name></type> <name>prev_mafd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>blend_factor_max</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bitdepth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>work</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>f0</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>f1</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts0</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts1</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>delta</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>double</name></type> <name>score</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>flush</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_pts</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>n</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>blend_func</name></type> <name>blend</name></decl>;</decl_stmt>

}</block></struct></type> <name>FrameRateContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_framerate_init</name><parameter_list>(<parameter><decl><type><name>FrameRateContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_framerate_init_x86</name><parameter_list>(<parameter><decl><type><name>FrameRateContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
