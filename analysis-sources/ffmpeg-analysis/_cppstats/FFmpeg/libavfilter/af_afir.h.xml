<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\af_afir.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/float_dsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avfft.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"audio.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"formats.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>AudioFIRSegment</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>nb_partitions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>part_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>block_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fft_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>coeff_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>input_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>input_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>output_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>part_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>sum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>block</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>coeff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>output</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RDFTContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>rdft</name></decl>, <modifier>*</modifier><modifier>*</modifier><name>irdft</name>;</decl_stmt>

}</block></struct></type> <name>AudioFIRSegment</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AudioFIRDSPContext</name> <block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>fcmul_add</name>)<parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>sum</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>c</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>AudioFIRDSPContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AudioFIRContext</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>wet_gain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>dry_gain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>gtype</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>ir_gain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ir_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>max_ir_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>response</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>, <name>h</name>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>frame_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ir_channel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>minp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>maxp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_irs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>selir</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>gain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>eof_coeffs</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>have_coeffs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_taps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_channels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_coef_channels</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>one2many</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AudioFIRSegment</name></type> <name><name>seg</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_segments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>in</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name><name>ir</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>video</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_part_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AudioFIRDSPContext</name></type> <name>afirdsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFloatDSPContext</name> <modifier>*</modifier></type><name>fdsp</name></decl>;</decl_stmt>

}</block></struct></type> <name>AudioFIRContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_afir_init</name><parameter_list>(<parameter><decl><type><name>AudioFIRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_afir_init_x86</name><parameter_list>(<parameter><decl><type><name>AudioFIRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
