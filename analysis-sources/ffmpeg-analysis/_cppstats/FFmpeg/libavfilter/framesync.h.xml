<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\framesync.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bufferqueue.h"</cpp:file></cpp:include>

<enum>enum <name>EOFAction</name> <block>{

<decl><name>EOF_ACTION_REPEAT</name></decl>,

<decl><name>EOF_ACTION_ENDALL</name></decl>,

<decl><name>EOF_ACTION_PASS</name></decl>

}</block>;</enum>

<enum>enum <name>FFFrameSyncExtMode</name> <block>{

<decl><name>EXT_STOP</name></decl>,

<decl><name>EXT_NULL</name></decl>,

<decl><name>EXT_INFINITY</name></decl>,

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>FFFrameSyncIn</name> <block>{

<decl_stmt><decl><type><name><name>enum</name> <name>FFFrameSyncExtMode</name></name></type> <name>before</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>FFFrameSyncExtMode</name></name></type> <name>after</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>time_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame_next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts_next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>have_next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>state</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>sync</name></decl>;</decl_stmt>

}</block></struct></type> <name>FFFrameSyncIn</name>;</typedef>

<typedef>typedef <type><struct>struct <name>FFFrameSync</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>nb_in</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>time_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>on_event</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>FFFrameSync</name></name> <modifier>*</modifier></type><name>fs</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>in_request</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>sync_level</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_ready</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>eof</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFFrameSyncIn</name> <modifier>*</modifier></type><name>in</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>opt_repeatlast</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>opt_shortest</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>opt_eof_action</name></decl>;</decl_stmt>

}</block></struct></type> <name>FFFrameSync</name>;</typedef>

<function_decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>ff_framesync_get_class</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_framesync_preinit</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_framesync_init</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>nb_in</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_framesync_configure</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_framesync_uninit</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_framesync_get_frame</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>rframe</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>get</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_framesync_activate</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_framesync_init_dualinput</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_framesync_dualinput_get</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>f0</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>f1</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_framesync_dualinput_get_writable</name><parameter_list>(<parameter><decl><type><name>FFFrameSync</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>f0</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>f1</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FRAMESYNC_DEFINE_CLASS</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>context</name></type></parameter>, <parameter><type><name>field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static int name##_framesync_preinit(AVFilterContext *ctx) { context *s = ctx-&gt;priv; ff_framesync_preinit(&amp;s-&gt;field); return 0; } static const AVClass *name##_child_class_next(const AVClass *prev) { return prev ? NULL : ff_framesync_get_class(); } static void *name##_child_next(void *obj, void *prev) { context *s = obj; s-&gt;fs.class = ff_framesync_get_class(); return prev ? NULL : &amp;s-&gt;field; } static const AVClass name##_class = { .class_name = #name, .item_name = av_default_item_name, .option = name##_options, .version = LIBAVUTIL_VERSION_INT, .category = AV_CLASS_CATEGORY_FILTER, .child_class_next = name##_child_class_next, .child_next = name##_child_next, }</cpp:value></cpp:define>

</unit>
