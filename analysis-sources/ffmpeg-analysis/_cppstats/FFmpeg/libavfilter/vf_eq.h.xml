<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\vf_eq.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/eval.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>var_names</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="string">"n"</literal></expr>, 

<expr><literal type="string">"pos"</literal></expr>, 

<expr><literal type="string">"r"</literal></expr>, 

<expr><literal type="string">"t"</literal></expr>, 

<expr><name>NULL</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<enum>enum <name>var_name</name> <block>{

<decl><name>VAR_N</name></decl>,

<decl><name>VAR_POS</name></decl>,

<decl><name>VAR_R</name></decl>,

<decl><name>VAR_T</name></decl>,

<decl><name>VAR_NB</name></decl>

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>EQParameters</name> <block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>adjust</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>EQParameters</name></name> <modifier>*</modifier></type><name>eq</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>lut</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>brightness</name></decl>, <name>contrast</name>, <name>gamma</name>, <name>gamma_weight</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>lut_clean</name></decl>;</decl_stmt>

}</block></struct></type> <name>EQParameters</name>;</typedef>

<typedef>typedef <type><struct>struct <name>EQContext</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>EQParameters</name></type> <name><name>param</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>contrast_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>contrast_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>contrast</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>brightness_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>brightness_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>brightness</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>saturation_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>saturation_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>saturation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gamma_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>gamma_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>gamma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gamma_weight_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>gamma_weight_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>gamma_weight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gamma_r_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>gamma_r_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>gamma_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gamma_g_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>gamma_g_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>gamma_g</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gamma_b_expr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>gamma_b_pexpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>gamma_b</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name><name>var_values</name><index>[<expr><name>VAR_NB</name></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>process</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>EQParameters</name></name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>EvalMode</name> <block>{ <decl><name>EVAL_MODE_INIT</name></decl>, <decl><name>EVAL_MODE_FRAME</name></decl>, <decl><name>EVAL_MODE_NB</name></decl> }</block> <decl><name>eval_mode</name></decl>;</enum>

}</block></struct></type> <name>EQContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_eq_init</name><parameter_list>(<parameter><decl><type><name>EQContext</name> <modifier>*</modifier></type><name>eq</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_eq_init_x86</name><parameter_list>(<parameter><decl><type><name>EQContext</name> <modifier>*</modifier></type><name>eq</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
