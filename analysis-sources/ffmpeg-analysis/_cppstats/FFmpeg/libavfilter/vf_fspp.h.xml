<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\vf_fspp.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BLOCKSZ</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_LEVEL</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCTSIZE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCTSIZE_S</name></cpp:macro> <cpp:value>"8"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FIX</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((x) * (1 &lt;&lt; s) + 0.5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MULTIPLY16H</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>k</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((x) * (k)) &gt;&gt; 16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>THRESHOLD</name><parameter_list>(<parameter><type><name>r</name></type></parameter>,<parameter><type><name>x</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>if(((unsigned)((x) + t)) &gt; t * 2) r = (x); else r = 0;</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DESCALE</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((x) + (1 &lt;&lt; ((n) - 1))) &gt;&gt; n)</cpp:value></cpp:define>

<typedef>typedef <type><name>int32_t</name></type> <name>int_simd16_t</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_0_382683433</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.382683433</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_0_541196100</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.541196100</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_0_707106781</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><name>M_SQRT1_2</name></expr></argument> , <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_1_306562965</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.306562965</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_1_414213562_A</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><name>M_SQRT2</name></expr></argument> , <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_1_847759065</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.847759065</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_2_613125930</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">2.613125930</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_1_414213562</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><name>M_SQRT2</name></expr></argument> , <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name>FIX_1_082392200</name> <init>= <expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.082392200</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<typedef>typedef <type><struct>struct <name>FSPPContext</name> <block>{

<decl_stmt><decl><type><name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>threshold_mtx_noq</name><index>[<expr><literal type="number">8</literal> <operator>*</operator> <literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>threshold_mtx</name><index>[<expr><literal type="number">8</literal> <operator>*</operator> <literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>log2_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>strength</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>hsub</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vsub</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>temp_stride</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>qp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>qscale_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>prev_q</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>temp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>non_b_qp_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>non_b_qp_alloc_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_bframe_qp</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>store_slice</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>log2_scale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>store_slice2</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>log2_scale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>mul_thrmat</name>)<parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>thr_adr_noq</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>thr_adr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>q</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>column_fidct</name>)<parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>thr_adr</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cnt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>row_idct</name>)<parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>workspace</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>output_adr</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>output_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cnt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>row_fdct</name>)<parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>pixels</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>line_size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cnt</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>FSPPContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_fspp_init_x86</name><parameter_list>(<parameter><decl><type><name>FSPPContext</name> <modifier>*</modifier></type><name>fspp</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
