<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\lswsutils.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/imgutils.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lswsutils.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>ff_scale_image</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>dst_data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name><name>dst_linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dst_w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_h</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>src_data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name><name>src_linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>src_w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_h</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>src_pix_fmt</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>sws_ctx</name> <init>= <expr><call><name>sws_getContext</name><argument_list>(<argument><expr><name>src_w</name></expr></argument>, <argument><expr><name>src_h</name></expr></argument>, <argument><expr><name>src_pix_fmt</name></expr></argument>,

<argument><expr><name>dst_w</name></expr></argument>, <argument><expr><name>dst_h</name></expr></argument>, <argument><expr><name>dst_pix_fmt</name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sws_ctx</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>log_ctx</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>,

<argument><expr><literal type="string">"Impossible to create scale context for the conversion "</literal>

<literal type="string">"fmt:%s s:%dx%d -&gt; fmt:%s s:%dx%d\n"</literal></expr></argument>,

<argument><expr><call><name>av_get_pix_fmt_name</name><argument_list>(<argument><expr><name>src_pix_fmt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>src_w</name></expr></argument>, <argument><expr><name>src_h</name></expr></argument>,

<argument><expr><call><name>av_get_pix_fmt_name</name><argument_list>(<argument><expr><name>dst_pix_fmt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>dst_w</name></expr></argument>, <argument><expr><name>dst_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>end</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>av_image_alloc</name><argument_list>(<argument><expr><name>dst_data</name></expr></argument>, <argument><expr><name>dst_linesize</name></expr></argument>, <argument><expr><name>dst_w</name></expr></argument>, <argument><expr><name>dst_h</name></expr></argument>, <argument><expr><name>dst_pix_fmt</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>end</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>sws_scale</name><argument_list>(<argument><expr><name>sws_ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>uint8_t</name> <operator>*</operator> <specifier>const</specifier><operator>*</operator><operator>)</operator><name>src_data</name></expr></argument>, <argument><expr><name>src_linesize</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src_h</name></expr></argument>, <argument><expr><name>dst_data</name></expr></argument>, <argument><expr><name>dst_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>end</name>:</label>

<expr_stmt><expr><call><name>sws_freeContext</name><argument_list>(<argument><expr><name>sws_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

</unit>
