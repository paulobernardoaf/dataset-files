<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\x86\vf_blend_init.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavfilter/blend.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BLEND_FUNC</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_blend_##name##_##opt(const uint8_t *top, ptrdiff_t top_linesize, const uint8_t *bottom, ptrdiff_t bottom_linesize, uint8_t *dst, ptrdiff_t dst_linesize, ptrdiff_t width, ptrdiff_t height, struct FilterParams *param, double *values, int starty);</cpp:value></cpp:define>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>addition</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>addition</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainmerge</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainmerge</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>average</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>average</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>and</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>and</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>darken</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>darken</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainextract</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainextract</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>multiply</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>multiply</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>screen</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>screen</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>hardmix</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>hardmix</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>divide</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>lighten</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>lighten</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>or</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>or</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>phoenix</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>phoenix</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>subtract</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>subtract</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>xor</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>xor</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>difference</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>difference</argument>, <argument>ssse3</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>difference</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>extremity</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>extremity</argument>, <argument>ssse3</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>extremity</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>negation</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>negation</argument>, <argument>ssse3</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>negation</argument>, <argument>avx2</argument>)</argument_list></macro>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ARCH_X86_64</name></expr></cpp:if>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>addition_16</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>addition_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainmerge_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainmerge_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>average_16</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>average_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>and_16</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>and_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>darken_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>darken_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainextract_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>grainextract_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>difference_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>difference_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>extremity_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>extremity_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>negation_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>negation_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>lighten_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>lighten_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>or_16</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>or_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>phoenix_16</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>phoenix_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>subtract_16</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>subtract_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>xor_16</argument>, <argument>sse2</argument>)</argument_list></macro>

<macro><name>BLEND_FUNC</name><argument_list>(<argument>xor_16</argument>, <argument>avx2</argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_blend_init_x86</name><parameter_list>(<parameter><decl><type><name>FilterParams</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>depth</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>depth</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>param</name><operator>-&gt;</operator><name>opacity</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name><name>param</name><operator>-&gt;</operator><name>mode</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>BLEND_ADDITION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_addition_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_GRAINMERGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainmerge_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AND</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_and_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AVERAGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_average_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DARKEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_darken_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_GRAINEXTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainextract_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DIVIDE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_divide_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_HARDMIX</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_hardmix_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_LIGHTEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_lighten_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_MULTIPLY</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_multiply_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_OR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_or_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_PHOENIX</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_phoenix_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_SCREEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_screen_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_SUBTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_subtract_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_XOR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_xor_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DIFFERENCE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_difference_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_EXTREMITY</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_extremity_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_NEGATION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_negation_sse2</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>param</name><operator>-&gt;</operator><name>opacity</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name><name>param</name><operator>-&gt;</operator><name>mode</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>BLEND_DIFFERENCE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_difference_ssse3</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_EXTREMITY</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_extremity_ssse3</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_NEGATION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_negation_ssse3</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>param</name><operator>-&gt;</operator><name>opacity</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name><name>param</name><operator>-&gt;</operator><name>mode</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>BLEND_ADDITION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_addition_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_GRAINMERGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainmerge_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AND</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_and_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AVERAGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_average_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DARKEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_darken_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_GRAINEXTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainextract_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_HARDMIX</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_hardmix_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_LIGHTEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_lighten_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_MULTIPLY</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_multiply_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_OR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_or_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_PHOENIX</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_phoenix_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_SCREEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_screen_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_SUBTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_subtract_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_XOR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_xor_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DIFFERENCE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_difference_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_EXTREMITY</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_extremity_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_NEGATION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_negation_avx2</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>depth</name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ARCH_X86_64</name></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>param</name><operator>-&gt;</operator><name>opacity</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name><name>param</name><operator>-&gt;</operator><name>mode</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>BLEND_ADDITION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_addition_16_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AND</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_and_16_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AVERAGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_average_16_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_OR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_or_16_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_SUBTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_subtract_16_sse2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_XOR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_xor_16_sse2</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE4</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>param</name><operator>-&gt;</operator><name>opacity</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name><name>param</name><operator>-&gt;</operator><name>mode</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>BLEND_GRAINMERGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainmerge_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DARKEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_darken_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_GRAINEXTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainextract_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DIFFERENCE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_difference_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_EXTREMITY</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_extremity_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_NEGATION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_negation_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_LIGHTEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_lighten_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_PHOENIX</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_phoenix_16_sse4</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>param</name><operator>-&gt;</operator><name>opacity</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name><name>param</name><operator>-&gt;</operator><name>mode</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>BLEND_ADDITION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_addition_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_GRAINMERGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainmerge_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AND</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_and_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_AVERAGE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_average_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DARKEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_darken_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_GRAINEXTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_grainextract_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_DIFFERENCE</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_difference_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_EXTREMITY</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_extremity_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_NEGATION</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_negation_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_LIGHTEN</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_lighten_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_OR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_or_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_PHOENIX</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_phoenix_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_SUBTRACT</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_subtract_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>BLEND_XOR</name></expr>:</case> <expr_stmt><expr><name><name>param</name><operator>-&gt;</operator><name>blend</name></name> <operator>=</operator> <name>ff_blend_xor_16_avx2</name></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

</unit>
