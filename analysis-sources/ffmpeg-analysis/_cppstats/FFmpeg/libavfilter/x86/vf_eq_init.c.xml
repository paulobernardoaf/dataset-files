<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\x86\vf_eq_init.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/asm.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavfilter/vf_eq.h"</cpp:file></cpp:include>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>ff_process_one_line_mmxext</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>contrast</name></decl></parameter>,

<parameter><decl><type><name>short</name></type> <name>brightness</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>ff_process_one_line_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>contrast</name></decl></parameter>,

<parameter><decl><type><name>short</name></type> <name>brightness</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_X86ASM</name></expr></cpp:if>

<function><type><specifier>static</specifier> <name>void</name></type> <name>process_mmxext</name><parameter_list>(<parameter><decl><type><name>EQParameters</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>short</name></type> <name>contrast</name> <init>= <expr><operator>(</operator><name>short</name><operator>)</operator> <operator>(</operator><name><name>param</name><operator>-&gt;</operator><name>contrast</name></name> <operator>*</operator> <literal type="number">256</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name>brightness</name> <init>= <expr><operator>(</operator><operator>(</operator><name>short</name><operator>)</operator> <operator>(</operator><literal type="number">100.0</literal> <operator>*</operator> <name><name>param</name><operator>-&gt;</operator><name>brightness</name></name> <operator>+</operator> <literal type="number">100.0</literal><operator>)</operator> <operator>*</operator> <literal type="number">511</literal><operator>)</operator>

<operator>/</operator> <literal type="number">200</literal> <operator>-</operator> <literal type="number">128</literal> <operator>-</operator> <name>contrast</name> <operator>/</operator> <literal type="number">32</literal></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name>h</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ff_process_one_line_mmxext</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>contrast</name></expr></argument>, <argument><expr><name>brightness</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>emms_c</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>process_sse2</name><parameter_list>(<parameter><decl><type><name>EQParameters</name> <modifier>*</modifier></type><name>param</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>short</name></type> <name>contrast</name> <init>= <expr><operator>(</operator><name>short</name><operator>)</operator> <operator>(</operator><name><name>param</name><operator>-&gt;</operator><name>contrast</name></name> <operator>*</operator> <literal type="number">256</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name>brightness</name> <init>= <expr><operator>(</operator><operator>(</operator><name>short</name><operator>)</operator> <operator>(</operator><literal type="number">100.0</literal> <operator>*</operator> <name><name>param</name><operator>-&gt;</operator><name>brightness</name></name> <operator>+</operator> <literal type="number">100.0</literal><operator>)</operator> <operator>*</operator> <literal type="number">511</literal><operator>)</operator>

<operator>/</operator> <literal type="number">200</literal> <operator>-</operator> <literal type="number">128</literal> <operator>-</operator> <name>contrast</name> <operator>/</operator> <literal type="number">32</literal></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name>h</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ff_process_one_line_sse2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>contrast</name></expr></argument>, <argument><expr><name>brightness</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_eq_init_x86</name><parameter_list>(<parameter><decl><type><name>EQContext</name> <modifier>*</modifier></type><name>eq</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_X86ASM</name></expr></cpp:if>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>eq</name><operator>-&gt;</operator><name>process</name></name> <operator>=</operator> <name>process_mmxext</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>eq</name><operator>-&gt;</operator><name>process</name></name> <operator>=</operator> <name>process_sse2</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

</unit>
