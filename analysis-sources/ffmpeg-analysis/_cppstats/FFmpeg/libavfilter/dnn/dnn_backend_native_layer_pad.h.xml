<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\dnn\dnn_backend_native_layer_pad.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dnn_backend_native.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <block>{<decl><name>LPMP_CONSTANT</name></decl>, <decl><name>LPMP_REFLECT</name></decl>, <decl><name>LPMP_SYMMETRIC</name></decl>}</block></enum></type> <name>LayerPadModeParam</name>;</typedef>

<typedef>typedef <type><struct>struct <name>LayerPadParams</name><block>{

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>paddings</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LayerPadModeParam</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>constant_values</name></decl>;</decl_stmt>

}</block></struct></type> <name>LayerPadParams</name>;</typedef>

<function_decl><type><name>int</name></type> <name>dnn_load_layer_pad</name><parameter_list>(<parameter><decl><type><name>Layer</name> <modifier>*</modifier></type><name>layer</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>model_file_context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>file_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>dnn_execute_layer_pad</name><parameter_list>(<parameter><decl><type><name>DnnOperand</name> <modifier>*</modifier></type><name>operands</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>input_operand_indexes</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>output_operand_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>parameters</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
