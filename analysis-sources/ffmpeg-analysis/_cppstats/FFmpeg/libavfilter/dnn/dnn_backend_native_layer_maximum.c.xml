<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavfilter\dnn\dnn_backend_native_layer_maximum.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dnn_backend_native.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avassert.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dnn_backend_native_layer_maximum.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>dnn_load_layer_maximum</name><parameter_list>(<parameter><decl><type><name>Layer</name> <modifier>*</modifier></type><name>layer</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>model_file_context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>file_size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>DnnLayerMaximumParams</name> <modifier>*</modifier></type><name>params</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>dnn_size</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>params</name> <operator>=</operator> <call><name>av_malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>params</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>params</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>params</name><operator>-&gt;</operator><name>val</name><operator>.</operator><name>u32</name></name> <operator>=</operator> <call><name>avio_rl32</name><argument_list>(<argument><expr><name>model_file_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dnn_size</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>layer</name><operator>-&gt;</operator><name>params</name></name> <operator>=</operator> <name>params</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>layer</name><operator>-&gt;</operator><name>input_operand_indexes</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>int32_t</name><operator>)</operator><call><name>avio_rl32</name><argument_list>(<argument><expr><name>model_file_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>layer</name><operator>-&gt;</operator><name>output_operand_index</name></name> <operator>=</operator> <operator>(</operator><name>int32_t</name><operator>)</operator><call><name>avio_rl32</name><argument_list>(<argument><expr><name>model_file_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dnn_size</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<return>return <expr><name>dnn_size</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>dnn_execute_layer_maximum</name><parameter_list>(<parameter><decl><type><name>DnnOperand</name> <modifier>*</modifier></type><name>operands</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>input_operand_indexes</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>output_operand_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>parameters</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>DnnOperand</name> <modifier>*</modifier></type><name>input</name> <init>= <expr><operator>&amp;</operator><name><name>operands</name><index>[<expr><name><name>input_operand_indexes</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DnnOperand</name> <modifier>*</modifier></type><name>output</name> <init>= <expr><operator>&amp;</operator><name><name>operands</name><index>[<expr><name>output_operand_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>DnnLayerMaximumParams</name> <modifier>*</modifier></type><name>params</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>DnnLayerMaximumParams</name> <operator>*</operator><operator>)</operator><name>parameters</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>dims_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>src</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type><name>dst</name></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>output</name><operator>-&gt;</operator><name>dims</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>input</name><operator>-&gt;</operator><name>dims</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name><name>output</name><operator>-&gt;</operator><name>data_type</name></name> <operator>=</operator> <name><name>input</name><operator>-&gt;</operator><name>data_type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>output</name><operator>-&gt;</operator><name>length</name></name> <operator>=</operator> <call><name>calculate_operand_data_length</name><argument_list>(<argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>output</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <call><name>av_realloc</name><argument_list>(<argument><expr><name><name>output</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>output</name><operator>-&gt;</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>output</name><operator>-&gt;</operator><name>data</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>DNN_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>dims_count</name> <operator>=</operator> <call><name>calculate_operand_dims_count</name><argument_list>(<argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>=</operator> <name><name>input</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>=</operator> <name><name>output</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>dims_count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>FFMAX</name><argument_list>(<argument><expr><name><name>src</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>params</name><operator>-&gt;</operator><name>val</name><operator>.</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
