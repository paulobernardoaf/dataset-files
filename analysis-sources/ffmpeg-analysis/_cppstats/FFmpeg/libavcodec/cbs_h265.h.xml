<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\cbs_h265.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbs_h2645.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hevc.h"</cpp:file></cpp:include>

<enum>enum <block>{

<decl><name>H265_MAX_SEI_PAYLOADS</name> <init>= <expr><literal type="number">64</literal></expr></init></decl>,

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>H265RawNALUnitHeader</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nal_unit_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nuh_layer_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nuh_temporal_id_plus1</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawNALUnitHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawProfileTierLevel</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_profile_space</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_tier_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_profile_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>general_profile_compatibility_flag</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_progressive_source_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_interlaced_source_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_non_packed_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_frame_only_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_max_12bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_max_10bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_max_8bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_max_422chroma_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_max_420chroma_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_max_monochrome_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_intra_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_one_picture_only_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_lower_bit_rate_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_max_14bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_inbld_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>general_level_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_profile_present_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_level_present_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_profile_space</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_tier_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_profile_idc</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_profile_compatibility_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_progressive_source_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_interlaced_source_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_non_packed_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_frame_only_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_max_12bit_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_max_10bit_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_max_8bit_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_max_422chroma_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_max_420chroma_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_max_monochrome_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_intra_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_one_picture_only_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_lower_bit_rate_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_max_14bit_constraint_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_inbld_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_level_idc</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawProfileTierLevel</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSubLayerHRDParameters</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>bit_rate_value_minus1</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>cpb_size_value_minus1</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>cpb_size_du_value_minus1</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>bit_rate_du_value_minus1</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cbr_flag</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSubLayerHRDParameters</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawHRDParameters</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nal_hrd_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vcl_hrd_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sub_pic_hrd_params_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>tick_divisor_minus2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>du_cpb_removal_delay_increment_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sub_pic_cpb_params_in_pic_timing_sei_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dpb_output_delay_du_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_rate_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cpb_size_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cpb_size_du_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>initial_cpb_removal_delay_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>au_cpb_removal_delay_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dpb_output_delay_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>fixed_pic_rate_general_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>fixed_pic_rate_within_cvs_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>elemental_duration_in_tc_minus1</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>low_delay_hrd_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cpb_cnt_minus1</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSubLayerHRDParameters</name></type> <name><name>nal_sub_layer_hrd_parameters</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSubLayerHRDParameters</name></type> <name><name>vcl_sub_layer_hrd_parameters</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawHRDParameters</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawVUI</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>aspect_ratio_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>aspect_ratio_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>sar_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>sar_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>overscan_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>overscan_appropriate_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>video_signal_type_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>video_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>video_full_range_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_description_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_primaries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transfer_characteristics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>matrix_coefficients</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_loc_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_sample_loc_type_top_field</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_sample_loc_type_bottom_field</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>neutral_chroma_indication_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>field_seq_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_field_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>default_display_window_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>def_disp_win_left_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>def_disp_win_right_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>def_disp_win_top_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>def_disp_win_bottom_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vui_timing_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vui_num_units_in_tick</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vui_time_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vui_poc_proportional_to_timing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vui_num_ticks_poc_diff_one_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vui_hrd_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawHRDParameters</name></type> <name>hrd_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bitstream_restriction_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>tiles_fixed_structure_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>motion_vectors_over_pic_boundaries_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>restricted_ref_pic_lists_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>min_spatial_segmentation_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_bytes_per_pic_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_bits_per_min_cu_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_mv_length_horizontal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_mv_length_vertical</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawVUI</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawPSExtensionData</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>bit_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawPSExtensionData</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawVPS</name> <block>{

<decl_stmt><decl><type><name>H265RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_video_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_base_layer_internal_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_base_layer_available_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_max_layers_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_max_sub_layers_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_temporal_id_nesting_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawProfileTierLevel</name></type> <name>profile_tier_level</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_sub_layer_ordering_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>vps_max_dec_pic_buffering_minus1</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>vps_max_num_reorder_pics</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>vps_max_latency_increase_plus1</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_max_layer_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>vps_num_layer_sets_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>layer_id_included_flag</name><index>[<expr><name>HEVC_MAX_LAYER_SETS</name></expr>]</index><index>[<expr><name>HEVC_MAX_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_timing_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vps_num_units_in_tick</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vps_time_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_poc_proportional_to_timing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vps_num_ticks_poc_diff_one_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>vps_num_hrd_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>hrd_layer_set_idx</name><index>[<expr><name>HEVC_MAX_LAYER_SETS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cprms_present_flag</name><index>[<expr><name>HEVC_MAX_LAYER_SETS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawHRDParameters</name></type> <name><name>hrd_parameters</name><index>[<expr><name>HEVC_MAX_LAYER_SETS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawPSExtensionData</name></type> <name>extension_data</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawVPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSTRefPicSet</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>inter_ref_pic_set_prediction_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_idx_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_rps_sign</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>abs_delta_rps_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used_by_curr_pic_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>use_delta_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_negative_pics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_positive_pics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>delta_poc_s0_minus1</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used_by_curr_pic_s0_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>delta_poc_s1_minus1</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used_by_curr_pic_s1_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSTRefPicSet</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawScalingList</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>scaling_list_pred_mode_flag</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>scaling_list_pred_matrix_id_delta</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>scaling_list_dc_coef_minus8</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>scaling_list_delta_coeff</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawScalingList</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSPS</name> <block>{

<decl_stmt><decl><type><name>H265RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_video_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_max_sub_layers_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_temporal_id_nesting_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawProfileTierLevel</name></type> <name>profile_tier_level</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_seq_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_format_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>separate_colour_plane_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pic_width_in_luma_samples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pic_height_in_luma_samples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>conformance_window_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>conf_win_left_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>conf_win_right_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>conf_win_top_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>conf_win_bottom_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_depth_luma_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_depth_chroma_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_pic_order_cnt_lsb_minus4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_sub_layer_ordering_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sps_max_dec_pic_buffering_minus1</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sps_max_num_reorder_pics</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>sps_max_latency_increase_plus1</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_min_luma_coding_block_size_minus3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_diff_max_min_luma_coding_block_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_min_luma_transform_block_size_minus2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_diff_max_min_luma_transform_block_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_transform_hierarchy_depth_inter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_transform_hierarchy_depth_intra</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>scaling_list_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_scaling_list_data_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawScalingList</name></type> <name>scaling_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>amp_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sample_adaptive_offset_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pcm_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pcm_sample_bit_depth_luma_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pcm_sample_bit_depth_chroma_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_min_pcm_luma_coding_block_size_minus3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_diff_max_min_pcm_luma_coding_block_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pcm_loop_filter_disabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_short_term_ref_pic_sets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSTRefPicSet</name></type> <name><name>st_ref_pic_set</name><index>[<expr><name>HEVC_MAX_SHORT_TERM_REF_PIC_SETS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>long_term_ref_pics_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_long_term_ref_pics_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>lt_ref_pic_poc_lsb_sps</name><index>[<expr><name>HEVC_MAX_LONG_TERM_REF_PICS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used_by_curr_pic_lt_sps_flag</name><index>[<expr><name>HEVC_MAX_LONG_TERM_REF_PICS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_temporal_mvp_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>strong_intra_smoothing_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vui_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawVUI</name></type> <name>vui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_extension_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_range_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_multilayer_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_3d_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_scc_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_extension_4bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawPSExtensionData</name></type> <name>extension_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transform_skip_rotation_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transform_skip_context_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>implicit_rdpcm_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>explicit_rdpcm_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>extended_precision_processing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>intra_smoothing_disabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>high_precision_offsets_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>persistent_rice_adaptation_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cabac_bypass_alignment_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_curr_pic_ref_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>palette_mode_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>palette_max_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_palette_max_predictor_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_palette_predictor_initializer_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_num_palette_predictor_initializer_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>sps_palette_predictor_initializers</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>motion_vector_resolution_control_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>intra_boundary_filtering_disable_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawPPS</name> <block>{

<decl_stmt><decl><type><name>H265RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_pic_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_seq_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dependent_slice_segments_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>output_flag_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_extra_slice_header_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sign_data_hiding_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cabac_init_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l0_default_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l1_default_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>init_qp_minus26</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constrained_intra_pred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transform_skip_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cu_qp_delta_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>diff_cu_qp_delta_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pps_cb_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pps_cr_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_slice_chroma_qp_offsets_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_pred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_bipred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transquant_bypass_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>tiles_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>entropy_coding_sync_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_tile_columns_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_tile_rows_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>uniform_spacing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>column_width_minus1</name><index>[<expr><name>HEVC_MAX_TILE_COLUMNS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>row_height_minus1</name><index>[<expr><name>HEVC_MAX_TILE_ROWS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>loop_filter_across_tiles_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_loop_filter_across_slices_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>deblocking_filter_control_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>deblocking_filter_override_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_deblocking_filter_disabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pps_beta_offset_div2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pps_tc_offset_div2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_scaling_list_data_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawScalingList</name></type> <name>scaling_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>lists_modification_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_parallel_merge_level_minus2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_segment_header_extension_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_extension_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_range_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_multilayer_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_3d_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_scc_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_extension_4bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawPSExtensionData</name></type> <name>extension_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_transform_skip_block_size_minus2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cross_component_prediction_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_qp_offset_list_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>diff_cu_chroma_qp_offset_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_qp_offset_list_len_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>cb_qp_offset_list</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>cr_qp_offset_list</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_sao_offset_scale_luma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_sao_offset_scale_chroma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_curr_pic_ref_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>residual_adaptive_colour_transform_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_slice_act_qp_offsets_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pps_act_y_qp_offset_plus5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pps_act_cb_qp_offset_plus5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pps_act_cr_qp_offset_plus3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_palette_predictor_initializer_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_num_palette_predictor_initializer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>monochrome_palette_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>luma_bit_depth_entry_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_bit_depth_entry_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>pps_palette_predictor_initializers</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawPPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawAUD</name> <block>{

<decl_stmt><decl><type><name>H265RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_type</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawAUD</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSliceHeader</name> <block>{

<decl_stmt><decl><type><name>H265RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>first_slice_segment_in_pic_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>no_output_of_prior_pics_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_pic_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dependent_slice_segment_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>slice_segment_address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>slice_reserved_flag</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_output_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_plane_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>slice_pic_order_cnt_lsb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>short_term_ref_pic_set_sps_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSTRefPicSet</name></type> <name>short_term_ref_pic_set</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>short_term_ref_pic_set_idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_long_term_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_long_term_pics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>lt_idx_sps</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>poc_lsb_lt</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used_by_curr_pic_lt_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>delta_poc_msb_present_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>delta_poc_msb_cycle_lt</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_temporal_mvp_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_sao_luma_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_sao_chroma_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_active_override_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l0_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l1_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ref_pic_list_modification_flag_l0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>list_entry_l0</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ref_pic_list_modification_flag_l1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>list_entry_l1</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>mvd_l1_zero_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cabac_init_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>collocated_from_l0_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>collocated_ref_idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>luma_log2_weight_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>delta_chroma_log2_weight_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>luma_weight_l0_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>chroma_weight_l0_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>delta_luma_weight_l0</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>luma_offset_l0</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>delta_chroma_weight_l0</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>chroma_offset_l0</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>luma_weight_l1_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>chroma_weight_l1_flag</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>delta_luma_weight_l1</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>luma_offset_l1</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>delta_chroma_weight_l1</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>chroma_offset_l1</name><index>[<expr><name>HEVC_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>five_minus_max_num_merge_cand</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>use_integer_mv_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_qp_delta</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_cb_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_cr_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_act_y_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_act_cb_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_act_cr_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cu_chroma_qp_offset_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>deblocking_filter_override_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_deblocking_filter_disabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_beta_offset_div2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_tc_offset_div2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_loop_filter_across_slices_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>num_entry_point_offsets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>offset_len_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>entry_point_offset_minus1</name><index>[<expr><name>HEVC_MAX_ENTRY_POINT_OFFSETS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>slice_segment_header_extension_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>slice_segment_header_extension_data_byte</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSliceHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSlice</name> <block>{

<decl_stmt><decl><type><name>H265RawSliceHeader</name></type> <name>header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>data_bit_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSlice</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIBufferingPeriod</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bp_seq_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>irap_cpb_params_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>cpb_delay_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>dpb_delay_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>concatenation_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>au_cpb_removal_delay_delta_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>nal_initial_cpb_removal_delay</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>nal_initial_cpb_removal_offset</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>nal_initial_alt_cpb_removal_delay</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>nal_initial_alt_cpb_removal_offset</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>vcl_initial_cpb_removal_delay</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>vcl_initial_cpb_removal_offset</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>vcl_initial_alt_cpb_removal_delay</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>vcl_initial_alt_cpb_removal_offset</name><index>[<expr><name>HEVC_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>use_alt_cpb_params_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIBufferingPeriod</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIPicTiming</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_struct</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>source_scan_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>duplicate_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>au_cpb_removal_delay_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>pic_dpb_output_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>pic_dpb_output_du_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>num_decoding_units_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>du_common_cpb_removal_delay_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>du_common_cpb_removal_delay_increment_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>num_nalus_in_du_minus1</name><index>[<expr><name>HEVC_MAX_SLICE_SEGMENTS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>du_cpb_removal_delay_increment_minus1</name><index>[<expr><name>HEVC_MAX_SLICE_SEGMENTS</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIPicTiming</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIPanScanRect</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>pan_scan_rect_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pan_scan_rect_cancel_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pan_scan_cnt_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_left_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_right_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_top_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_bottom_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pan_scan_rect_persistence_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIPanScanRect</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIUserDataRegistered</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>itu_t_t35_country_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>itu_t_t35_country_code_extension_byte</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIUserDataRegistered</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIUserDataUnregistered</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>uuid_iso_iec_11578</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIUserDataUnregistered</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIRecoveryPoint</name> <block>{

<decl_stmt><decl><type><name>int16_t</name></type> <name>recovery_poc_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>exact_match_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>broken_link_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIRecoveryPoint</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIDisplayOrientation</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>display_orientation_cancel_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>hor_flip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ver_flip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>anticlockwise_rotation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>display_orientation_repetition_period</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>display_orientation_persistence_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIDisplayOrientation</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIActiveParameterSets</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>active_video_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>self_contained_cvs_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>no_parameter_set_update_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_sps_ids_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>active_seq_parameter_set_id</name><index>[<expr><name>HEVC_MAX_SPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>layer_sps_idx</name><index>[<expr><name>HEVC_MAX_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIActiveParameterSets</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIDecodedPictureHash</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>hash_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>picture_md5</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>picture_crc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>picture_checksum</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIDecodedPictureHash</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEITimeCode</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_clock_ts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>clock_timestamp_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>units_field_based_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>counting_type</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>full_timestamp_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>discontinuity_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cnt_dropped_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>n_frames</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>seconds_value</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>minutes_value</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>hours_value</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>seconds_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>minutes_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>hours_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>time_offset_length</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>time_offset_value</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEITimeCode</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIMasteringDisplayColourVolume</name> <block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>display_primaries_x</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>display_primaries_y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>white_point_x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>white_point_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>max_display_mastering_luminance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>min_display_mastering_luminance</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIMasteringDisplayColourVolume</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIContentLightLevelInfo</name> <block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name>max_content_light_level</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>max_pic_average_light_level</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIContentLightLevelInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIAlternativeTransferCharacteristics</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>preferred_transfer_characteristics</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIAlternativeTransferCharacteristics</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIAlphaChannelInfo</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>alpha_channel_cancel_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>alpha_channel_use_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>alpha_channel_bit_depth_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>alpha_transparent_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>alpha_opaque_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>alpha_channel_incr_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>alpha_channel_clip_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>alpha_channel_clip_type_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEIAlphaChannelInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEIPayload</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>payload_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>payload_size</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>H265RawSEIBufferingPeriod</name></type> <name>buffering_period</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIPicTiming</name></type> <name>pic_timing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIPanScanRect</name></type> <name>pan_scan_rect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIUserDataRegistered</name></type> <name>user_data_registered</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIUserDataUnregistered</name></type> <name>user_data_unregistered</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIRecoveryPoint</name></type> <name>recovery_point</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIDisplayOrientation</name></type> <name>display_orientation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIActiveParameterSets</name></type> <name>active_parameter_sets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIDecodedPictureHash</name></type> <name>decoded_picture_hash</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEITimeCode</name></type> <name>time_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIMasteringDisplayColourVolume</name></type> <name>mastering_display</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIContentLightLevelInfo</name></type> <name>content_light_level</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIAlternativeTransferCharacteristics</name></type>

<name>alternative_transfer_characteristics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIAlphaChannelInfo</name></type> <name>alpha_channel_info</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block> <decl><name>other</name></decl>;</struct>

}</block> <decl><name>payload</name></decl>;</union>

}</block></struct></type> <name>H265RawSEIPayload</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H265RawSEI</name> <block>{

<decl_stmt><decl><type><name>H265RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSEIPayload</name></type> <name><name>payload</name><index>[<expr><name>H265_MAX_SEI_PAYLOADS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>payload_count</name></decl>;</decl_stmt>

}</block></struct></type> <name>H265RawSEI</name>;</typedef>

<typedef>typedef <type><struct>struct <name>CodedBitstreamH265Context</name> <block>{

<decl_stmt><decl><type><name>CodedBitstreamH2645Context</name></type> <name>common</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>vps_ref</name><index>[<expr><name>HEVC_MAX_VPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>sps_ref</name><index>[<expr><name>HEVC_MAX_SPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>pps_ref</name><index>[<expr><name>HEVC_MAX_PPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawVPS</name> <modifier>*</modifier></type><name><name>vps</name><index>[<expr><name>HEVC_MAX_VPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawSPS</name> <modifier>*</modifier></type><name><name>sps</name><index>[<expr><name>HEVC_MAX_SPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H265RawPPS</name> <modifier>*</modifier></type><name><name>pps</name><index>[<expr><name>HEVC_MAX_PPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>H265RawVPS</name> <modifier>*</modifier></type><name>active_vps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>H265RawSPS</name> <modifier>*</modifier></type><name>active_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>H265RawPPS</name> <modifier>*</modifier></type><name>active_pps</name></decl>;</decl_stmt>

}</block></struct></type> <name>CodedBitstreamH265Context</name>;</typedef>

</unit>
