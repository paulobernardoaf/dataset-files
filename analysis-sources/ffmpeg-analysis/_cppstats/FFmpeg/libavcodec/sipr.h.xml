<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\sipr.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"acelp_pitch_delay.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LP_FILTER_ORDER_16k</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>L_SUBFR_16k</name></cpp:macro> <cpp:value>80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PITCH_MIN</name></cpp:macro> <cpp:value>30</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PITCH_MAX</name></cpp:macro> <cpp:value>281</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LSFQ_DIFF_MIN</name></cpp:macro> <cpp:value>(0.0125 * M_PI)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LP_FILTER_ORDER</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>L_INTERPOL</name></cpp:macro> <cpp:value>(LP_FILTER_ORDER + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBFR_SIZE</name></cpp:macro> <cpp:value>48</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBFRAME_COUNT_16k</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <block>{

<decl><name>MODE_16k</name></decl>,

<decl><name>MODE_8k5</name></decl>,

<decl><name>MODE_6k5</name></decl>,

<decl><name>MODE_5k0</name></decl>,

<decl><name>MODE_COUNT</name></decl>

}</block></enum></type> <name>SiprMode</name>;</typedef>

<typedef>typedef <type><struct>struct <name>SiprParameters</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>ma_pred_switch</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>vq_indexes</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>pitch_delay</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>gp_index</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>fc_indexes</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>gc_index</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>SiprParameters</name>;</typedef>

<typedef>typedef <type><struct>struct <name>SiprContext</name> <block>{

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>SiprMode</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>past_pitch_gain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>lsf_history</name><index>[<expr><name>LP_FILTER_ORDER_16k</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>excitation</name><index>[<expr><name>L_INTERPOL</name> <operator>+</operator> <name>PITCH_MAX</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>L_SUBFR_16k</name></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>float</name></expr></argument>, <argument><expr><name>synth_buf</name></expr></argument>)</argument_list></call><index>[<expr><name>LP_FILTER_ORDER</name> <operator>+</operator> <literal type="number">5</literal><operator>*</operator><name>SUBFR_SIZE</name> <operator>+</operator> <literal type="number">6</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>lsp_history</name><index>[<expr><name>LP_FILTER_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>gain_mem</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>energy_history</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>highpass_filt_mem</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>postfilter_mem</name><index>[<expr><name>PITCH_DELAY_MAX</name> <operator>+</operator> <name>LP_FILTER_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>tilt_mem</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>postfilter_agc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>postfilter_mem5k0</name><index>[<expr><name>PITCH_DELAY_MAX</name> <operator>+</operator> <name>LP_FILTER_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>postfilter_syn5k0</name><index>[<expr><name>LP_FILTER_ORDER</name> <operator>+</operator> <name>SUBFR_SIZE</name><operator>*</operator><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pitch_lag_prev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>iir_mem</name><index>[<expr><name>LP_FILTER_ORDER_16k</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>filt_buf</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>LP_FILTER_ORDER_16k</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type><name><name>filt_mem</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>mem_preemph</name><index>[<expr><name>LP_FILTER_ORDER_16k</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>synth</name><index>[<expr><name>LP_FILTER_ORDER_16k</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name><name>lsp_history_16k</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>decode_frame</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SiprContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>SiprParameters</name> <modifier>*</modifier></type><name>params</name></decl></parameter>,

<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out_data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>SiprContext</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>float</name></type> <name><name>ff_pow_0_5</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>ff_sipr_init_16k</name><parameter_list>(<parameter><decl><type><name>SiprContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_sipr_decode_frame_16k</name><parameter_list>(<parameter><decl><type><name>SiprContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>SiprParameters</name> <modifier>*</modifier></type><name>params</name></decl></parameter>,

<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out_data</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
