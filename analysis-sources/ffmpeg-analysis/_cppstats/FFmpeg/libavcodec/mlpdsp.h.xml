<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\mlpdsp.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mlp.h"</cpp:file></cpp:include>

<function_decl><type><name>void</name></type> <name>ff_mlp_rematrix_channel</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>bypassed_lsbs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>noise_buffer</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>dest_ch</name></decl></parameter>,

<parameter><decl><type><name>uint16_t</name></type> <name>blockpos</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>maxchan</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>matrix_noise_shift</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>access_unit_size_pow2</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>int32_t</name></type> <name>ff_mlp_pack_output</name><argument_list>(<argument><expr><name>int32_t</name> <name>lossless_check_data</name></expr></argument>,

<argument><expr><name>uint16_t</name> <name>blockpos</name></expr></argument>,

<argument><expr><call><name>int32_t</name> <argument_list>(<argument><expr><operator>*</operator><name>sample_buffer</name></expr></argument>)</argument_list></call><index>[<expr><name>MAX_CHANNELS</name></expr>]</index></expr></argument>,

<argument><expr><name>void</name> <operator>*</operator><name>data</name></expr></argument>,

<argument><expr><name>uint8_t</name> <operator>*</operator><name>ch_assign</name></expr></argument>,

<argument><expr><name>int8_t</name> <operator>*</operator><name>output_shift</name></expr></argument>,

<argument><expr><name>uint8_t</name> <name>max_matrix_channel</name></expr></argument>,

<argument><expr><name>int</name> <name>is32</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<typedef>typedef <type><struct>struct <name>MLPDSPContext</name> <block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>mlp_filter_channel</name>)<parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>state</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>coeff</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>firorder</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>iirorder</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>filter_shift</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>mask</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>blocksize</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>sample_buffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>mlp_rematrix_channel</name>)<parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>bypassed_lsbs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>noise_buffer</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>dest_ch</name></decl></parameter>,

<parameter><decl><type><name>uint16_t</name></type> <name>blockpos</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>maxchan</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>matrix_noise_shift</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>access_unit_size_pow2</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><call><call><name>int32_t</name> <argument_list>(<argument><expr><operator>*</operator><operator>(</operator><operator>*</operator><name>mlp_select_pack_output</name><operator>)</operator><operator>(</operator><name>uint8_t</name> <operator>*</operator><name>ch_assign</name><operator>,</operator>

<name>int8_t</name> <operator>*</operator><name>output_shift</name><operator>,</operator>

<name>uint8_t</name> <name>max_matrix_channel</name><operator>,</operator>

<name>int</name> <name>is32</name><operator>)</operator></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>int32_t</name></expr></argument>, <argument><expr><name>uint16_t</name></expr></argument>, <argument><expr><call><name>int32_t</name> <argument_list>(<argument><expr><operator>*</operator></expr></argument>)</argument_list></call><index>[]</index></expr></argument>, <argument><expr><name>void</name> <operator>*</operator></expr></argument>, <argument><expr><name>uint8_t</name><operator>*</operator></expr></argument>, <argument><expr><name>int8_t</name> <operator>*</operator></expr></argument>, <argument><expr><name>uint8_t</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>int32_t</name> <argument_list>(<argument>*mlp_pack_output</argument>)</argument_list></macro><expr_stmt><expr><operator>(</operator><name>int32_t</name> <name>lossless_check_data</name><operator>,</operator>

<name>uint16_t</name> <name>blockpos</name><operator>,</operator>

<call><name>int32_t</name> <argument_list>(<argument><expr><operator>*</operator><name>sample_buffer</name></expr></argument>)</argument_list></call><index>[<expr><name>MAX_CHANNELS</name></expr>]</index><operator>,</operator>

<name>void</name> <operator>*</operator><name>data</name><operator>,</operator>

<name>uint8_t</name> <operator>*</operator><name>ch_assign</name><operator>,</operator>

<name>int8_t</name> <operator>*</operator><name>output_shift</name><operator>,</operator>

<name>uint8_t</name> <name>max_matrix_channel</name><operator>,</operator>

<name>int</name> <name>is32</name><operator>)</operator></expr>;</expr_stmt>

}</block></struct></type> <name>MLPDSPContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_mlpdsp_init</name><parameter_list>(<parameter><decl><type><name>MLPDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mlpdsp_init_arm</name><parameter_list>(<parameter><decl><type><name>MLPDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mlpdsp_init_x86</name><parameter_list>(<parameter><decl><type><name>MLPDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
