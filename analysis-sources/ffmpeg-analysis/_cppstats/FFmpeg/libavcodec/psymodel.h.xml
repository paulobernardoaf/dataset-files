<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\psymodel.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PSY_MAX_BANDS</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PSY_MAX_CHANS</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AAC_CUTOFF_FROM_BITRATE</name><parameter_list>(<parameter><type><name>bit_rate</name></type></parameter>,<parameter><type><name>channels</name></type></parameter>,<parameter><type><name>sample_rate</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(bit_rate ? FFMIN3(FFMIN3( FFMAX(bit_rate/channels/5, bit_rate/channels*15/32 - 5500), 3000 + bit_rate/channels/4, 12000 + bit_rate/channels/16), 22000, sample_rate / 2): (sample_rate / 2))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AAC_CUTOFF</name><parameter_list>(<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( (s-&gt;flags &amp; AV_CODEC_FLAG_QSCALE) ? s-&gt;sample_rate / 2 : AAC_CUTOFF_FROM_BITRATE(s-&gt;bit_rate, s-&gt;channels, s-&gt;sample_rate) )</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>FFPsyBand</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>energy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>threshold</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>spread</name></decl>;</decl_stmt> 

}</block></struct></type> <name>FFPsyBand</name>;</typedef>

<typedef>typedef <type><struct>struct <name>FFPsyChannel</name> <block>{

<decl_stmt><decl><type><name>FFPsyBand</name></type> <name><name>psy_bands</name><index>[<expr><name>PSY_MAX_BANDS</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name>entropy</name></decl>;</decl_stmt> 

}</block></struct></type> <name>FFPsyChannel</name>;</typedef>

<typedef>typedef <type><struct>struct <name>FFPsyChannelGroup</name> <block>{

<decl_stmt><decl><type><name>FFPsyChannel</name> <modifier>*</modifier></type><name><name>ch</name><index>[<expr><name>PSY_MAX_CHANS</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ch</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>coupling</name><index>[<expr><name>PSY_MAX_BANDS</name></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>FFPsyChannelGroup</name>;</typedef>

<typedef>typedef <type><struct>struct <name>FFPsyWindowInfo</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name><name>window_type</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>window_shape</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_windows</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>grouping</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name><name>clipping</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>window_sizes</name></decl>;</decl_stmt> 

}</block></struct></type> <name>FFPsyWindowInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>FFPsyContext</name> <block>{

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>FFPsyModel</name></name> <modifier>*</modifier></type><name>model</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>FFPsyChannel</name> <modifier>*</modifier></type><name>ch</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>FFPsyChannelGroup</name> <modifier>*</modifier></type><name>group</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_groups</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>cutoff</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>bands</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>num_bands</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_lens</name></decl>;</decl_stmt> 

<struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>alloc</name></decl>;</decl_stmt> 

}</block> <decl><name>bitres</name></decl>;</struct>

<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>model_priv_data</name></decl>;</decl_stmt> 

}</block></struct></type> <name>FFPsyContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>FFPsyModel</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>) <parameter_list>(<parameter><decl><type><name>FFPsyContext</name> <modifier>*</modifier></type><name>apc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>FFPsyWindowInfo</name></type> (<modifier>*</modifier><name>window</name>)<parameter_list>(<parameter><decl><type><name>FFPsyContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>audio</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>la</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channel</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prev_type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>analyze</name>)<parameter_list>(<parameter><decl><type><name>FFPsyContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channel</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>FFPsyWindowInfo</name> <modifier>*</modifier></type><name>wi</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>end</name>) <parameter_list>(<parameter><decl><type><name>FFPsyContext</name> <modifier>*</modifier></type><name>apc</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>FFPsyModel</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_psy_init</name><parameter_list>(<parameter><decl><type><name>FFPsyContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_lens</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>bands</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>num_bands</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>num_groups</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>group_map</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>FFPsyChannelGroup</name> <modifier>*</modifier></type><name>ff_psy_find_group</name><parameter_list>(<parameter><decl><type><name>FFPsyContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channel</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_psy_end</name><parameter_list>(<parameter><decl><type><name>FFPsyContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>FFPsyPreprocessContext</name>;</struct_decl>

<function_decl><type><name><name>struct</name> <name>FFPsyPreprocessContext</name></name> <modifier>*</modifier></type><name>ff_psy_preprocess_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_psy_preprocess</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>FFPsyPreprocessContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>audio</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channels</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_psy_preprocess_end</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>FFPsyPreprocessContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
