<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\vdpau_vc1.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vdpau/vdpau.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hwaccel.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vc1.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vdpau.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vdpau_internal.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vdpau_vc1_start_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VC1Context</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>v</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Picture</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vdpau_picture_context</name></name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VdpPictureInfoVC1</name> <modifier>*</modifier></type><name>info</name> <init>= <expr><operator>&amp;</operator><name><name>pic_ctx</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>vc1</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VdpVideoSurface</name></type> <name>ref</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>forward_reference</name></name> <operator>=</operator> <name>VDP_INVALID_HANDLE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>backward_reference</name></name> <operator>=</operator> <name>VDP_INVALID_HANDLE</name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AV_PICTURE_TYPE_B</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>next_picture_ptr</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>ref</name> <operator>=</operator> <call><name>ff_vdpau_get_surface_id</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>ref</name> <operator>!=</operator> <name>VDP_INVALID_HANDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>backward_reference</name></name> <operator>=</operator> <name>ref</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<case>case <expr><name>AV_PICTURE_TYPE_P</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>last_picture_ptr</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>ref</name> <operator>=</operator> <call><name>ff_vdpau_get_surface_id</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>ref</name> <operator>!=</operator> <name>VDP_INVALID_HANDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>forward_reference</name></name> <operator>=</operator> <name>ref</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></switch>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>slice_count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>bi_type</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>picture_type</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>picture_type</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>-</operator> <literal type="number">1</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>/</operator> <literal type="number">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>frame_coding_mode</name></name> <operator>=</operator> <ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name></expr> ?</condition><then> <expr><operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>postprocflag</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>postprocflag</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>pulldown</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>broadcast</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>interlace</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>interlace</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>tfcntrflag</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>tfcntrflag</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>finterpflag</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>finterpflag</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>psf</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>psf</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>dquant</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>dquant</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>panscan_flag</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>panscanflag</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>refdist_flag</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>refdist_flag</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>quantizer</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>quantizer_mode</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>extended_mv</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>extended_mv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>extended_dmv</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>extended_dmv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>overlap</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>overlap</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>vstransform</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>vstransform</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>loopfilter</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>loop_filter</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>fastuvmc</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>fastuvmc</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>range_mapy_flag</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>range_mapy_flag</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>range_mapy</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>range_mapy</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>range_mapuv_flag</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>range_mapuv_flag</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>range_mapuv</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>range_mapuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>multires</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>multires</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>syncmarker</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>resync_marker</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>rangered</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>rangered</name></name> <operator>|</operator> <operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>maxbframes</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>max_b_frames</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>deblockEnable</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>postprocflag</name></name> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>pquant</name></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>pq</name></name></expr>;</expr_stmt>

<return>return <expr><call><name>ff_vdpau_common_start_frame</name><argument_list>(<argument><expr><name>pic_ctx</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vdpau_vc1_decode_slice</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VC1Context</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>v</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Picture</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vdpau_picture_context</name></name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>val</name></decl>;</decl_stmt>

<expr_stmt><expr><name>val</name> <operator>=</operator> <call><name>ff_vdpau_add_buffer</name><argument_list>(<argument><expr><name>pic_ctx</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>val</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>val</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>vc1</name><operator>.</operator><name>slice_count</name></name><operator>++</operator></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vdpau_vc1_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VdpDecoderProfile</name></type> <name>profile</name></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name><name>avctx</name><operator>-&gt;</operator><name>profile</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>FF_PROFILE_VC1_SIMPLE</name></expr>:</case>

<expr_stmt><expr><name>profile</name> <operator>=</operator> <name>VDP_DECODER_PROFILE_VC1_SIMPLE</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FF_PROFILE_VC1_MAIN</name></expr>:</case>

<expr_stmt><expr><name>profile</name> <operator>=</operator> <name>VDP_DECODER_PROFILE_VC1_MAIN</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FF_PROFILE_VC1_ADVANCED</name></expr>:</case>

<expr_stmt><expr><name>profile</name> <operator>=</operator> <name>VDP_DECODER_PROFILE_VC1_ADVANCED</name></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><call><name>ff_vdpau_common_init</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>profile</name></expr></argument>, <argument><expr><name><name>avctx</name><operator>-&gt;</operator><name>level</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_WMV3_VDPAU_HWACCEL</name></expr></cpp:if>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVHWAccel</name></type> <name>ff_wmv3_vdpau_hwaccel</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"wm3_vdpau"</literal></expr>,

<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_WMV3</name></expr>,

<expr><operator>.</operator><name>pix_fmt</name> <operator>=</operator> <name>AV_PIX_FMT_VDPAU</name></expr>,

<expr><operator>.</operator><name>start_frame</name> <operator>=</operator> <name>vdpau_vc1_start_frame</name></expr>,

<expr><operator>.</operator><name>end_frame</name> <operator>=</operator> <name>ff_vdpau_mpeg_end_frame</name></expr>,

<expr><operator>.</operator><name>decode_slice</name> <operator>=</operator> <name>vdpau_vc1_decode_slice</name></expr>,

<expr><operator>.</operator><name>frame_priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>vdpau_picture_context</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>vdpau_vc1_init</name></expr>,

<expr><operator>.</operator><name>uninit</name> <operator>=</operator> <name>ff_vdpau_common_uninit</name></expr>,

<expr><operator>.</operator><name>frame_params</name> <operator>=</operator> <name>ff_vdpau_common_frame_params</name></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>VDPAUContext</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>caps_internal</name> <operator>=</operator> <name>HWACCEL_CAP_ASYNC_SAFE</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVHWAccel</name></type> <name>ff_vc1_vdpau_hwaccel</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vc1_vdpau"</literal></expr>,

<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_VC1</name></expr>,

<expr><operator>.</operator><name>pix_fmt</name> <operator>=</operator> <name>AV_PIX_FMT_VDPAU</name></expr>,

<expr><operator>.</operator><name>start_frame</name> <operator>=</operator> <name>vdpau_vc1_start_frame</name></expr>,

<expr><operator>.</operator><name>end_frame</name> <operator>=</operator> <name>ff_vdpau_mpeg_end_frame</name></expr>,

<expr><operator>.</operator><name>decode_slice</name> <operator>=</operator> <name>vdpau_vc1_decode_slice</name></expr>,

<expr><operator>.</operator><name>frame_priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>vdpau_picture_context</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>vdpau_vc1_init</name></expr>,

<expr><operator>.</operator><name>uninit</name> <operator>=</operator> <name>ff_vdpau_common_uninit</name></expr>,

<expr><operator>.</operator><name>frame_params</name> <operator>=</operator> <name>ff_vdpau_common_frame_params</name></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>VDPAUContext</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>caps_internal</name> <operator>=</operator> <name>HWACCEL_CAP_ASYNC_SAFE</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
