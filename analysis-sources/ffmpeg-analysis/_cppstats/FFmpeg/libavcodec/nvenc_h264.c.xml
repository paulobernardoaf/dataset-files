<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\nvenc_h264.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvenc.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(NvencContext, x)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VE</name></cpp:macro> <cpp:value>AV_OPT_FLAG_VIDEO_PARAM | AV_OPT_FLAG_ENCODING_PARAM</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>options</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">"preset"</literal></expr>, <expr><literal type="string">"Set the encoding preset"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>preset</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_MEDIUM</name></expr> }</block></expr>, <expr><name>PRESET_DEFAULT</name></expr>, <expr><name>PRESET_LOSSLESS_HP</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"default"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"slow"</literal></expr>, <expr><literal type="string">"hq 2 passes"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_SLOW</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"medium"</literal></expr>, <expr><literal type="string">"hq 1 pass"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_MEDIUM</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"fast"</literal></expr>, <expr><literal type="string">"hp 1 pass"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_FAST</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"hp"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_HP</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"hq"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_HQ</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bd"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_BD</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ll"</literal></expr>, <expr><literal type="string">"low latency"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_LOW_LATENCY_DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"llhq"</literal></expr>, <expr><literal type="string">"low latency hq"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_LOW_LATENCY_HQ</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"llhp"</literal></expr>, <expr><literal type="string">"low latency hp"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_LOW_LATENCY_HP</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lossless"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_LOSSLESS_DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"losslesshp"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PRESET_LOSSLESS_HP</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"profile"</literal></expr>, <expr><literal type="string">"Set the encoding profile"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>profile</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_PROFILE_MAIN</name></expr> }</block></expr>, <expr><name>NV_ENC_H264_PROFILE_BASELINE</name></expr>, <expr><name>NV_ENC_H264_PROFILE_HIGH_444P</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"profile"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"baseline"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_PROFILE_BASELINE</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"profile"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"main"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_PROFILE_MAIN</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"profile"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"high"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_PROFILE_HIGH</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"profile"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"high444p"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_PROFILE_HIGH_444P</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"profile"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"level"</literal></expr>, <expr><literal type="string">"Set the encoding level restriction"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_AUTOSELECT</name></expr> }</block></expr>, <expr><name>NV_ENC_LEVEL_AUTOSELECT</name></expr>, <expr><name>NV_ENC_LEVEL_H264_51</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"auto"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_AUTOSELECT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"1"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_1</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"1.0"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_1</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"1b"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_1b</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"1.0b"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_1b</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"1.1"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_11</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"1.2"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_12</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"1.3"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_13</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"2"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_2</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"2.0"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_2</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"2.1"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_21</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"2.2"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_22</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"3"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_3</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"3.0"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_3</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"3.1"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_31</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"3.2"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_32</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"4"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_4</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"4.0"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_4</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"4.1"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_41</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"4.2"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_42</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"5"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_5</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"5.0"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_5</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"5.1"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_LEVEL_H264_51</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"level"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rc"</literal></expr>, <expr><literal type="string">"Override the preset rate-control"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"constqp"</literal></expr>, <expr><literal type="string">"Constant QP mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_PARAMS_RC_CONSTQP</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"vbr"</literal></expr>, <expr><literal type="string">"Variable bitrate mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_PARAMS_RC_VBR</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cbr"</literal></expr>, <expr><literal type="string">"Constant bitrate mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_PARAMS_RC_CBR</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"vbr_minqp"</literal></expr>, <expr><literal type="string">"Variable bitrate mode with MinQP (deprecated)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>RCD</name><argument_list>(<argument>NV_ENC_PARAMS_RC_VBR_MINQP</argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ll_2pass_quality"</literal></expr>, <expr><literal type="string">"Multi-pass optimized for image quality (deprecated)"</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>RCD</name><argument_list>(<argument>NV_ENC_PARAMS_RC_2_PASS_QUALITY</argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ll_2pass_size"</literal></expr>, <expr><literal type="string">"Multi-pass optimized for constant frame size (deprecated)"</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>RCD</name><argument_list>(<argument>NV_ENC_PARAMS_RC_2_PASS_FRAMESIZE_CAP</argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"vbr_2pass"</literal></expr>, <expr><literal type="string">"Multi-pass variable bitrate mode (deprecated)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>RCD</name><argument_list>(<argument>NV_ENC_PARAMS_RC_2_PASS_VBR</argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cbr_ld_hq"</literal></expr>, <expr><literal type="string">"Constant bitrate low delay high quality mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_PARAMS_RC_CBR_LOWDELAY_HQ</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cbr_hq"</literal></expr>, <expr><literal type="string">"Constant bitrate high quality mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_PARAMS_RC_CBR_HQ</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"vbr_hq"</literal></expr>, <expr><literal type="string">"Variable bitrate high quality mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_PARAMS_RC_VBR_HQ</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"rc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rc-lookahead"</literal></expr>, <expr><literal type="string">"Number of frames to look ahead for rate-control"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_lookahead</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"surfaces"</literal></expr>, <expr><literal type="string">"Number of concurrent surfaces"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>nb_surfaces</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>MAX_REGISTERED_FRAMES</name></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cbr"</literal></expr>, <expr><literal type="string">"Use cbr encoding mode"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cbr</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"2pass"</literal></expr>, <expr><literal type="string">"Use 2pass encoding mode"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>twopass</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"gpu"</literal></expr>, <expr><literal type="string">"Selects which NVENC capable GPU to use. First GPU is 0, second is 1, and so on."</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>device</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>ANY_DEVICE</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"gpu"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"any"</literal></expr>, <expr><literal type="string">"Pick the first device available"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>ANY_DEVICE</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"gpu"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"list"</literal></expr>, <expr><literal type="string">"List the available devices"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>LIST_DEVICES</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"gpu"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"delay"</literal></expr>, <expr><literal type="string">"Delay frame output by the given amount of frames"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>async_depth</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>INT_MAX</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"no-scenecut"</literal></expr>, <expr><literal type="string">"When lookahead is enabled, set this to 1 to disable adaptive I-frame insertion at scene cuts"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>no_scenecut</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"forced-idr"</literal></expr>, <expr><literal type="string">"If forcing keyframes, force them as IDR frames."</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>forced_idr</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"b_adapt"</literal></expr>, <expr><literal type="string">"When lookahead is enabled, set this to 0 to disable adaptive B-frame decision"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>b_adapt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"spatial-aq"</literal></expr>, <expr><literal type="string">"set to 1 to enable Spatial AQ"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>aq</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"temporal-aq"</literal></expr>, <expr><literal type="string">"set to 1 to enable Temporal AQ"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>temporal_aq</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"zerolatency"</literal></expr>, <expr><literal type="string">"Set 1 to indicate zero latency operation (no reordering delay)"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>zerolatency</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"nonref_p"</literal></expr>, <expr><literal type="string">"Set this to 1 to enable automatic insertion of non-reference P-frames"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>nonref_p</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"strict_gop"</literal></expr>, <expr><literal type="string">"Set 1 to minimize GOP-to-GOP rate fluctuations"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>strict_gop</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"aq-strength"</literal></expr>, <expr><literal type="string">"When Spatial AQ is enabled, this field is used to specify AQ strength. AQ strength scale is from 1 (low) - 15 (aggressive)"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>aq_strength</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">8</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cq"</literal></expr>, <expr><literal type="string">"Set target quality level (0 to 51, 0 means automatic) for constant quality mode in VBR rate control"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>quality</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0.</literal></expr>}</block></expr>, <expr><literal type="number">0.</literal></expr>, <expr><literal type="number">51.</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"aud"</literal></expr>, <expr><literal type="string">"Use access unit delimiters"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>aud</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bluray-compat"</literal></expr>, <expr><literal type="string">"Bluray compatibility workarounds"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>bluray_compat</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"init_qpP"</literal></expr>, <expr><literal type="string">"Initial QP value for P frame"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>init_qp_p</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"init_qpB"</literal></expr>, <expr><literal type="string">"Initial QP value for B frame"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>init_qp_b</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"init_qpI"</literal></expr>, <expr><literal type="string">"Initial QP value for I frame"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>init_qp_i</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"qp"</literal></expr>, <expr><literal type="string">"Constant quantization parameter rate control method"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cqp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"weighted_pred"</literal></expr>,<expr><literal type="string">"Set 1 to enable weighted prediction"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>weighted_pred</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"coder"</literal></expr>, <expr><literal type="string">"Coder type"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>coder</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"coder"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"default"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"coder"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"auto"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_ENTROPY_CODING_MODE_AUTOSELECT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"coder"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cabac"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_ENTROPY_CODING_MODE_CABAC</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"coder"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cavlc"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_ENTROPY_CODING_MODE_CAVLC</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"coder"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ac"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_ENTROPY_CODING_MODE_CABAC</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"coder"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"vlc"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_H264_ENTROPY_CODING_MODE_CAVLC</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"coder"</literal></expr> }</block></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>NVENC_HAVE_BFRAME_REF_MODE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr><block>{ <expr><literal type="string">"b_ref_mode"</literal></expr>, <expr><literal type="string">"Use B frames as references"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>b_ref_mode</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_BFRAME_REF_MODE_DISABLED</name></expr> }</block></expr>, <expr><name>NV_ENC_BFRAME_REF_MODE_DISABLED</name></expr>, <expr><name>NV_ENC_BFRAME_REF_MODE_MIDDLE</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"disabled"</literal></expr>, <expr><literal type="string">"B frames will not be used for reference"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_BFRAME_REF_MODE_DISABLED</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"each"</literal></expr>, <expr><literal type="string">"Each B frame will be used for reference"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_BFRAME_REF_MODE_EACH</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"middle"</literal></expr>, <expr><literal type="string">"Only (number of B frames)/2 will be used for reference"</literal></expr>, <expr><literal type="number">0</literal></expr>,<expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>NV_ENC_BFRAME_REF_MODE_MIDDLE</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr><block>{ <expr><literal type="string">"b_ref_mode"</literal></expr>, <expr><literal type="string">"(not supported)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>b_ref_mode</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"disabled"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"each"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"middle"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"b_ref_mode"</literal></expr> }</block></expr>,

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><block>{ <expr><literal type="string">"a53cc"</literal></expr>, <expr><literal type="string">"Use A53 Closed Captions (if available)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>a53_cc</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"dpb_size"</literal></expr>, <expr><literal type="string">"Specifies the DPB size used for encoding (0 means automatic)"</literal></expr>,

<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dpb_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVCodecDefault</name></type> <name><name>defaults</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">"b"</literal></expr>, <expr><literal type="string">"2M"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"qmin"</literal></expr>, <expr><literal type="string">"-1"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"qmax"</literal></expr>, <expr><literal type="string">"-1"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"qdiff"</literal></expr>, <expr><literal type="string">"-1"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"qblur"</literal></expr>, <expr><literal type="string">"-1"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"qcomp"</literal></expr>, <expr><literal type="string">"-1"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"g"</literal></expr>, <expr><literal type="string">"250"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bf"</literal></expr>, <expr><literal type="string">"0"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"refs"</literal></expr>, <expr><literal type="string">"0"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_NVENC_OLD_NAME</name></expr></cpp:if>

<function><type><specifier>static</specifier> <name>av_cold</name> <name>int</name></type> <name>nvenc_old_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>, <argument><expr><literal type="string">"This encoder is deprecated, use 'h264_nvenc' instead\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>ff_nvenc_encode_init</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_NVENC_ENCODER</name></expr></cpp:if>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>nvenc_class</name> <init>= <expr><block>{

<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"nvenc"</literal></expr>,

<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,

<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,

<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name></type> <name>ff_nvenc_encoder</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nvenc"</literal></expr>,

<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"NVIDIA NVENC H.264 encoder"</literal></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_H264</name></expr>,

<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>nvenc_old_init</name></expr>,

<expr><operator>.</operator><name>send_frame</name> <operator>=</operator> <name>ff_nvenc_send_frame</name></expr>,

<expr><operator>.</operator><name>receive_packet</name> <operator>=</operator> <name>ff_nvenc_receive_packet</name></expr>,

<expr><operator>.</operator><name>encode2</name> <operator>=</operator> <name>ff_nvenc_encode_frame</name></expr>,

<expr><operator>.</operator><name>close</name> <operator>=</operator> <name>ff_nvenc_encode_close</name></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>NvencContext</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>nvenc_class</name></expr>,

<expr><operator>.</operator><name>defaults</name> <operator>=</operator> <name>defaults</name></expr>,

<expr><operator>.</operator><name>capabilities</name> <operator>=</operator> <name>AV_CODEC_CAP_DELAY</name> <operator>|</operator> <name>AV_CODEC_CAP_HARDWARE</name></expr>,

<expr><operator>.</operator><name>caps_internal</name> <operator>=</operator> <name>FF_CODEC_CAP_INIT_CLEANUP</name></expr>,

<expr><operator>.</operator><name>pix_fmts</name> <operator>=</operator> <name>ff_nvenc_pix_fmts</name></expr>,

<expr><operator>.</operator><name>wrapper_name</name> <operator>=</operator> <literal type="string">"nvenc"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_NVENC_H264_ENCODER</name></expr></cpp:if>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>nvenc_h264_class</name> <init>= <expr><block>{

<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"nvenc_h264"</literal></expr>,

<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,

<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,

<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name></type> <name>ff_nvenc_h264_encoder</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"nvenc_h264"</literal></expr>,

<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"NVIDIA NVENC H.264 encoder"</literal></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_H264</name></expr>,

<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>nvenc_old_init</name></expr>,

<expr><operator>.</operator><name>send_frame</name> <operator>=</operator> <name>ff_nvenc_send_frame</name></expr>,

<expr><operator>.</operator><name>receive_packet</name> <operator>=</operator> <name>ff_nvenc_receive_packet</name></expr>,

<expr><operator>.</operator><name>encode2</name> <operator>=</operator> <name>ff_nvenc_encode_frame</name></expr>,

<expr><operator>.</operator><name>close</name> <operator>=</operator> <name>ff_nvenc_encode_close</name></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>NvencContext</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>nvenc_h264_class</name></expr>,

<expr><operator>.</operator><name>defaults</name> <operator>=</operator> <name>defaults</name></expr>,

<expr><operator>.</operator><name>capabilities</name> <operator>=</operator> <name>AV_CODEC_CAP_DELAY</name> <operator>|</operator> <name>AV_CODEC_CAP_HARDWARE</name></expr>,

<expr><operator>.</operator><name>caps_internal</name> <operator>=</operator> <name>FF_CODEC_CAP_INIT_CLEANUP</name></expr>,

<expr><operator>.</operator><name>pix_fmts</name> <operator>=</operator> <name>ff_nvenc_pix_fmts</name></expr>,

<expr><operator>.</operator><name>wrapper_name</name> <operator>=</operator> <literal type="string">"nvenc"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>h264_nvenc_class</name> <init>= <expr><block>{

<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"h264_nvenc"</literal></expr>,

<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,

<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,

<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name></type> <name>ff_h264_nvenc_encoder</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"h264_nvenc"</literal></expr>,

<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"NVIDIA NVENC H.264 encoder"</literal></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_H264</name></expr>,

<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>ff_nvenc_encode_init</name></expr>,

<expr><operator>.</operator><name>send_frame</name> <operator>=</operator> <name>ff_nvenc_send_frame</name></expr>,

<expr><operator>.</operator><name>receive_packet</name> <operator>=</operator> <name>ff_nvenc_receive_packet</name></expr>,

<expr><operator>.</operator><name>encode2</name> <operator>=</operator> <name>ff_nvenc_encode_frame</name></expr>,

<expr><operator>.</operator><name>close</name> <operator>=</operator> <name>ff_nvenc_encode_close</name></expr>,

<expr><operator>.</operator><name>flush</name> <operator>=</operator> <name>ff_nvenc_encode_flush</name></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>NvencContext</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>h264_nvenc_class</name></expr>,

<expr><operator>.</operator><name>defaults</name> <operator>=</operator> <name>defaults</name></expr>,

<expr><operator>.</operator><name>capabilities</name> <operator>=</operator> <name>AV_CODEC_CAP_DELAY</name> <operator>|</operator> <name>AV_CODEC_CAP_HARDWARE</name></expr>,

<expr><operator>.</operator><name>caps_internal</name> <operator>=</operator> <name>FF_CODEC_CAP_INIT_CLEANUP</name></expr>,

<expr><operator>.</operator><name>pix_fmts</name> <operator>=</operator> <name>ff_nvenc_pix_fmts</name></expr>,

<expr><operator>.</operator><name>wrapper_name</name> <operator>=</operator> <literal type="string">"nvenc"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
