<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\nvdec_vp9.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixdesc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvdec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"decode.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vp9shared.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>int</name></type> <name>nvdec_vp9_start_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VP9SharedContext</name> <modifier>*</modifier></type><name>h</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>pixdesc</name> <init>= <expr><call><name>av_pix_fmt_desc_get</name><argument_list>(<argument><expr><name><name>avctx</name><operator>-&gt;</operator><name>sw_pix_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>NVDECContext</name> <modifier>*</modifier></type><name>ctx</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>internal</name><operator>-&gt;</operator><name>hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CUVIDPICPARAMS</name> <modifier>*</modifier></type><name>pp</name> <init>= <expr><operator>&amp;</operator><name><name>ctx</name><operator>-&gt;</operator><name>pic_params</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CUVIDVP9PICPARAMS</name> <modifier>*</modifier></type><name>ppc</name> <init>= <expr><operator>&amp;</operator><name><name>pp</name><operator>-&gt;</operator><name>CodecSpecific</name><operator>.</operator><name>vp9</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FrameDecodeData</name> <modifier>*</modifier></type><name>fdd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>NVDECFrame</name> <modifier>*</modifier></type><name>cf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>cur_frame</name> <init>= <expr><name><name>h</name><operator>-&gt;</operator><name>frames</name><index>[<expr><name>CUR_FRAME</name></expr>]</index></name><operator>.</operator><name><name>tf</name><operator>.</operator><name>f</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_nvdec_start_frame</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>fdd</name> <operator>=</operator> <operator>(</operator><name>FrameDecodeData</name><operator>*</operator><operator>)</operator><name><name>cur_frame</name><operator>-&gt;</operator><name>private_ref</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>cf</name> <operator>=</operator> <operator>(</operator><name>NVDECFrame</name><operator>*</operator><operator>)</operator><name><name>fdd</name><operator>-&gt;</operator><name>hwaccel_priv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>pp</name> <operator>=</operator> <operator>(</operator><name>CUVIDPICPARAMS</name><operator>)</operator> <block>{

<expr><operator>.</operator><name>PicWidthInMbs</name> <operator>=</operator> <operator>(</operator><name><name>cur_frame</name><operator>-&gt;</operator><name>width</name></name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr>,

<expr><operator>.</operator><name>FrameHeightInMbs</name> <operator>=</operator> <operator>(</operator><name><name>cur_frame</name><operator>-&gt;</operator><name>height</name></name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr>,

<expr><operator>.</operator><name>CurrPicIdx</name> <operator>=</operator> <name><name>cf</name><operator>-&gt;</operator><name>idx</name></name></expr>,

<expr><operator>.</operator><name><name>CodecSpecific</name><operator>.</operator><name>vp9</name></name> <operator>=</operator> <block>{

<expr><operator>.</operator><name>width</name> <operator>=</operator> <name><name>cur_frame</name><operator>-&gt;</operator><name>width</name></name></expr>,

<expr><operator>.</operator><name>height</name> <operator>=</operator> <name><name>cur_frame</name><operator>-&gt;</operator><name>height</name></name></expr>,

<expr><operator>.</operator><name>LastRefIdx</name> <operator>=</operator> <call><name>ff_nvdec_get_ref_idx</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>refs</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>refidx</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>GoldenRefIdx</name> <operator>=</operator> <call><name>ff_nvdec_get_ref_idx</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>refs</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>refidx</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>AltRefIdx</name> <operator>=</operator> <call><name>ff_nvdec_get_ref_idx</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>refs</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>refidx</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>profile</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>profile</name></name></expr>,

<expr><operator>.</operator><name>frameContextIdx</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>framectxid</name></name></expr>,

<expr><operator>.</operator><name>frameType</name> <operator>=</operator> <operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>keyframe</name></name></expr>,

<expr><operator>.</operator><name>showFrame</name> <operator>=</operator> <operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>invisible</name></name></expr>,

<expr><operator>.</operator><name>errorResilient</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>errorres</name></name></expr>,

<expr><operator>.</operator><name>frameParallelDecoding</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>parallelmode</name></name></expr>,

<expr><operator>.</operator><name>subSamplingX</name> <operator>=</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>log2_chroma_w</name></name></expr>,

<expr><operator>.</operator><name>subSamplingY</name> <operator>=</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>log2_chroma_h</name></name></expr>,

<expr><operator>.</operator><name>intraOnly</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>intraonly</name></name></expr>,

<expr><operator>.</operator><name>allow_high_precision_mv</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>keyframe</name></name> <operator>?</operator> <literal type="number">0</literal> <operator>:</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>highprecisionmvs</name></name></expr>,

<expr><operator>.</operator><name>refreshEntropyProbs</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>refreshctx</name></name></expr>,

<expr><operator>.</operator><name>bitDepthMinus8Luma</name> <operator>=</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>depth</name> <operator>-</operator> <literal type="number">8</literal></expr>,

<expr><operator>.</operator><name>bitDepthMinus8Chroma</name> <operator>=</operator> <name><name>pixdesc</name><operator>-&gt;</operator><name>comp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>depth</name> <operator>-</operator> <literal type="number">8</literal></expr>,

<expr><operator>.</operator><name>loopFilterLevel</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>filter</name><operator>.</operator><name>level</name></name></expr>,

<expr><operator>.</operator><name>loopFilterSharpness</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>filter</name><operator>.</operator><name>sharpness</name></name></expr>,

<expr><operator>.</operator><name>modeRefLfEnabled</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>lf_delta</name><operator>.</operator><name>enabled</name></name></expr>,

<expr><operator>.</operator><name>log2_tile_columns</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>tiling</name><operator>.</operator><name>log2_tile_cols</name></name></expr>,

<expr><operator>.</operator><name>log2_tile_rows</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>tiling</name><operator>.</operator><name>log2_tile_rows</name></name></expr>,

<expr><operator>.</operator><name>segmentEnabled</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>enabled</name></name></expr>,

<expr><operator>.</operator><name>segmentMapUpdate</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>update_map</name></name></expr>,

<expr><operator>.</operator><name>segmentMapTemporalUpdate</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>temporal</name></name></expr>,

<expr><operator>.</operator><name>segmentFeatureMode</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>absolute_vals</name></name></expr>,

<expr><operator>.</operator><name>qpYAc</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>yac_qi</name></name></expr>,

<expr><operator>.</operator><name>qpYDc</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>ydc_qdelta</name></name></expr>,

<expr><operator>.</operator><name>qpChDc</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>uvdc_qdelta</name></name></expr>,

<expr><operator>.</operator><name>qpChAc</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>uvac_qdelta</name></name></expr>,

<expr><operator>.</operator><name>resetFrameContext</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>resetctx</name></name></expr>,

<expr><operator>.</operator><name>mcomp_filter_type</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>filtermode</name></name> <operator>^</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>filtermode</name></name> <operator>&lt;=</operator> <literal type="number">1</literal><operator>)</operator></expr>,

<expr><operator>.</operator><name>frameTagSize</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>uncompressed_header_size</name></name></expr>,

<expr><operator>.</operator><name>offsetToDctParts</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>compressed_header_size</name></name></expr>,

<expr><operator>.</operator><name><name>refFrameSignBias</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>,

}</block></expr>

}</block></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>mbModeLfDelta</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>lf_delta</name><operator>.</operator><name>mode</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>mbRefLfDelta</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>lf_delta</name><operator>.</operator><name>ref</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">7</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>mb_segment_tree_probs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>prob</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>activeRefIdx</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>refidx</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segment_pred_probs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>pred_prob</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>refFrameSignBias</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>signbias</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureEnable</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>feat</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>q_enabled</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureEnable</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>feat</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>lf_enabled</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureEnable</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>feat</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>ref_enabled</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureEnable</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>feat</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>skip_enabled</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureData</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>feat</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>q_val</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureData</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>feat</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>lf_val</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureData</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>segmentation</name><operator>.</operator><name>feat</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>ref_val</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>segmentFeatureData</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<switch>switch <condition>(<expr><name><name>avctx</name><operator>-&gt;</operator><name>colorspace</name></name></expr>)</condition> <block>{<block_content>

<default>default:</default>

<case>case <expr><name>AVCOL_SPC_UNSPECIFIED</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_SPC_BT470BG</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_SPC_BT709</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_SPC_SMPTE170M</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_SPC_SMPTE240M</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_SPC_BT2020_NCL</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">5</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_SPC_RESERVED</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_SPC_RGB</name></expr>:</case>

<expr_stmt><expr><name><name>ppc</name><operator>-&gt;</operator><name>colorSpace</name></name> <operator>=</operator> <literal type="number">7</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>nvdec_vp9_frame_params</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>ff_nvdec_frame_params</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>hw_frames_ctx</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVHWAccel</name></type> <name>ff_vp9_nvdec_hwaccel</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"vp9_nvdec"</literal></expr>,

<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_VP9</name></expr>,

<expr><operator>.</operator><name>pix_fmt</name> <operator>=</operator> <name>AV_PIX_FMT_CUDA</name></expr>,

<expr><operator>.</operator><name>start_frame</name> <operator>=</operator> <name>nvdec_vp9_start_frame</name></expr>,

<expr><operator>.</operator><name>end_frame</name> <operator>=</operator> <name>ff_nvdec_simple_end_frame</name></expr>,

<expr><operator>.</operator><name>decode_slice</name> <operator>=</operator> <name>ff_nvdec_simple_decode_slice</name></expr>,

<expr><operator>.</operator><name>frame_params</name> <operator>=</operator> <name>nvdec_vp9_frame_params</name></expr>,

<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>ff_nvdec_decode_init</name></expr>,

<expr><operator>.</operator><name>uninit</name> <operator>=</operator> <name>ff_nvdec_decode_uninit</name></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>NVDECContext</name></expr></argument>)</argument_list></sizeof></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
