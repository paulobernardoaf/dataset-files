<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\huffyuv.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bswapdsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"huffyuvdsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"huffyuvencdsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"put_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lossless_videodsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lossless_videoencdsp.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_BITS</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_BITS</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_N</name></cpp:macro> <cpp:value>(1&lt;&lt;MAX_BITS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_VLC_N</name></cpp:macro> <cpp:value>16384</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <name>Predictor</name> <block>{

<decl><name>LEFT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>PLANE</name></decl>,

<decl><name>MEDIAN</name></decl>,

}</block></enum></type> <name>Predictor</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HYuvContext</name> <block>{

<decl_stmt><decl><type><name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Predictor</name></type> <name>predictor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GetBitContext</name></type> <name>gb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PutBitContext</name></type> <name>pb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interlaced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>decorrelate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bitstream_bpp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>yuy2</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>bgr32</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>bps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>vlc_n</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>alpha</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>yuv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma_h_shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma_v_shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <name>height</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>context</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>picture_number</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>last_slice_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>temp</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name><name>temp16</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>stats</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><name>MAX_VLC_N</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>len</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><name>MAX_VLC_N</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>bits</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><name>MAX_VLC_N</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>pix_bgr_map</name><index>[<expr><literal type="number">1</literal><operator>&lt;&lt;</operator><name>VLC_BITS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name><name>vlc</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>bitstream_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bitstream_buffer_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>BswapDSPContext</name></type> <name>bdsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HuffYUVDSPContext</name></type> <name>hdsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HuffYUVEncDSPContext</name></type> <name>hencdsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LLVidDSPContext</name></type> <name>llviddsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LLVidEncDSPContext</name></type> <name>llvidencdsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>non_determ</name></decl>;</decl_stmt> 

}</block></struct></type> <name>HYuvContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_huffyuv_common_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_huffyuv_common_end</name><parameter_list>(<parameter><decl><type><name>HYuvContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_huffyuv_alloc_temp</name><parameter_list>(<parameter><decl><type><name>HYuvContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_huffyuv_generate_bits_table</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>len_table</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
