<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\ppc\fft_vsx.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/ppc/util_altivec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/fft.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/fft-internal.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_VSX</name></expr></cpp:if>

<function_decl><type><name>void</name></type> <name>ff_fft_calc_interleave_vsx</name><parameter_list>(<parameter><decl><type><name>FFTContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_fft_calc_vsx</name><parameter_list>(<parameter><decl><type><name>FFTContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>byte_2complex</name></cpp:macro> <cpp:value>(2*sizeof(FFTComplex))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>byte_4complex</name></cpp:macro> <cpp:value>(4*sizeof(FFTComplex))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>byte_6complex</name></cpp:macro> <cpp:value>(6*sizeof(FFTComplex))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>byte_8complex</name></cpp:macro> <cpp:value>(8*sizeof(FFTComplex))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>byte_10complex</name></cpp:macro> <cpp:value>(10*sizeof(FFTComplex))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>byte_12complex</name></cpp:macro> <cpp:value>(12*sizeof(FFTComplex))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>byte_14complex</name></cpp:macro> <cpp:value>(14*sizeof(FFTComplex))</cpp:value></cpp:define>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>pass_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>FFTSample</name> <modifier>*</modifier></type><name>wre</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>o1</name> <init>= <expr><name>n</name><operator>&lt;&lt;</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>o2</name> <init>= <expr><name>n</name><operator>&lt;&lt;</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>o3</name> <init>= <expr><name>o1</name><operator>+</operator><name>o2</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i1</name></decl>, <decl><type ref="prev"/><name>i2</name></decl>, <decl><type ref="prev"/><name>i3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFTSample</name><modifier>*</modifier></type> <name>out</name> <init>= <expr><operator>(</operator><name>FFTSample</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>FFTSample</name> <modifier>*</modifier></type><name>wim</name> <init>= <expr><name>wre</name><operator>+</operator><name>o1</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz0</name></decl>, <decl><type ref="prev"/><name>vzo1</name></decl>, <decl><type ref="prev"/><name>vzo2</name></decl>, <decl><type ref="prev"/><name>vzo3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x0</name></decl>, <decl><type ref="prev"/><name>x1</name></decl>, <decl><type ref="prev"/><name>x2</name></decl>, <decl><type ref="prev"/><name>x3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x4</name></decl>, <decl><type ref="prev"/><name>x5</name></decl>, <decl><type ref="prev"/><name>x6</name></decl>, <decl><type ref="prev"/><name>x7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x8</name></decl>, <decl><type ref="prev"/><name>x9</name></decl>, <decl><type ref="prev"/><name>x10</name></decl>, <decl><type ref="prev"/><name>x11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x12</name></decl>, <decl><type ref="prev"/><name>x13</name></decl>, <decl><type ref="prev"/><name>x14</name></decl>, <decl><type ref="prev"/><name>x15</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x16</name></decl>, <decl><type ref="prev"/><name>x17</name></decl>, <decl><type ref="prev"/><name>x18</name></decl>, <decl><type ref="prev"/><name>x19</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x20</name></decl>, <decl><type ref="prev"/><name>x21</name></decl>, <decl><type ref="prev"/><name>x22</name></decl>, <decl><type ref="prev"/><name>x23</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz0plus1</name></decl>, <decl><type ref="prev"/><name>vzo1plus1</name></decl>, <decl><type ref="prev"/><name>vzo2plus1</name></decl>, <decl><type ref="prev"/><name>vzo3plus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>y0</name></decl>, <decl><type ref="prev"/><name>y1</name></decl>, <decl><type ref="prev"/><name>y2</name></decl>, <decl><type ref="prev"/><name>y3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>y4</name></decl>, <decl><type ref="prev"/><name>y5</name></decl>, <decl><type ref="prev"/><name>y8</name></decl>, <decl><type ref="prev"/><name>y9</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>y10</name></decl>, <decl><type ref="prev"/><name>y13</name></decl>, <decl><type ref="prev"/><name>y14</name></decl>, <decl><type ref="prev"/><name>y15</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>y16</name></decl>, <decl><type ref="prev"/><name>y17</name></decl>, <decl><type ref="prev"/><name>y18</name></decl>, <decl><type ref="prev"/><name>y19</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>y20</name></decl>, <decl><type ref="prev"/><name>y21</name></decl>, <decl><type ref="prev"/><name>y22</name></decl>, <decl><type ref="prev"/><name>y23</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>wr1</name></decl>, <decl><type ref="prev"/><name>wi1</name></decl>, <decl><type ref="prev"/><name>wr0</name></decl>, <decl><type ref="prev"/><name>wi0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>wr2</name></decl>, <decl><type ref="prev"/><name>wi2</name></decl>, <decl><type ref="prev"/><name>wr3</name></decl>, <decl><type ref="prev"/><name>wi3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>xmulwi0</name></decl>, <decl><type ref="prev"/><name>xmulwi1</name></decl>, <decl><type ref="prev"/><name>ymulwi2</name></decl>, <decl><type ref="prev"/><name>ymulwi3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>n</name> <operator>=</operator> <name>n</name><operator>-</operator><literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i1</name> <operator>=</operator> <name>o1</name><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name>i2</name> <operator>=</operator> <name>o2</name><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name>i3</name> <operator>=</operator> <name>o3</name><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name>vzo2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vzo2plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vzo3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vzo3plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vz0plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vzo1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vzo1plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo2</name></expr></argument>, <argument><expr><name>vzo3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo2</name></expr></argument>, <argument><expr><name>vzo3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo2plus1</name></expr></argument>, <argument><expr><name>vzo3plus1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo2plus1</name></expr></argument>, <argument><expr><name>vzo3plus1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wr1</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wre</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wi1</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wi2</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wi3</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wr2</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wre</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wr3</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wre</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x3</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y2</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y3</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ymulwi2</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>y4</name></expr></argument>, <argument><expr><name>wi2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ymulwi3</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>y5</name></expr></argument>, <argument><expr><name>wi3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x4</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x2</name></expr></argument>, <argument><expr><name>wr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x5</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x3</name></expr></argument>, <argument><expr><name>wi1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y8</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>y2</name></expr></argument>, <argument><expr><name>wr2</name></expr></argument>, <argument><expr><name>ymulwi2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y9</name> <operator>=</operator> <call><name>vec_msub</name><argument_list>(<argument><expr><name>y2</name></expr></argument>, <argument><expr><name>wr2</name></expr></argument>, <argument><expr><name>ymulwi2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x6</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x4</name></expr></argument>, <argument><expr><name>x5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x7</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x4</name></expr></argument>, <argument><expr><name>x5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y13</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>y3</name></expr></argument>, <argument><expr><name>wr3</name></expr></argument>, <argument><expr><name>ymulwi3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y14</name> <operator>=</operator> <call><name>vec_msub</name><argument_list>(<argument><expr><name>y3</name></expr></argument>, <argument><expr><name>wr3</name></expr></argument>, <argument><expr><name>ymulwi3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x8</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x6</name></expr></argument>, <argument><expr><name>x7</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y8</name></expr></argument>, <argument><expr><name>y9</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y15</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y13</name></expr></argument>, <argument><expr><name>y14</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x9</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x8</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x1</name></expr></argument>, <argument><expr><name>x8</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y16</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y10</name></expr></argument>, <argument><expr><name>y15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y17</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y10</name></expr></argument>, <argument><expr><name>y15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x11</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>x9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x12</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>x9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x13</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo1</name></expr></argument>, <argument><expr><name>x10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x14</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo1</name></expr></argument>, <argument><expr><name>x10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y18</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz0plus1</name></expr></argument>, <argument><expr><name>y16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y19</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz0plus1</name></expr></argument>, <argument><expr><name>y16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y20</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo1plus1</name></expr></argument>, <argument><expr><name>y17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y21</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo1plus1</name></expr></argument>, <argument><expr><name>y17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x15</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x13</name></expr></argument>, <argument><expr><name>x14</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x16</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x13</name></expr></argument>, <argument><expr><name>x14</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y22</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y20</name></expr></argument>, <argument><expr><name>y21</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y23</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y20</name></expr></argument>, <argument><expr><name>y21</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x11</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y18</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x15</name></expr></argument>, <argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y22</name></expr></argument>, <argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x12</name></expr></argument>, <argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y19</name></expr></argument>, <argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x16</name></expr></argument>, <argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y23</name></expr></argument>, <argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<do>do <block>{<block_content>

<expr_stmt><expr><name>out</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>wre</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>wim</name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>wr0</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wre</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wr1</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wre</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wi0</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wim</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wi1</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wr2</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wre</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wr3</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wre</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wi2</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>wi3</name> <operator>=</operator> <call><name>vec_splats</name><argument_list>(<argument><expr><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vzo2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vzo2plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vzo3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vzo3plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vz0plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vzo1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>vzo1plus1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo2</name></expr></argument>, <argument><expr><name>vzo3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo2</name></expr></argument>, <argument><expr><name>vzo3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo2plus1</name></expr></argument>, <argument><expr><name>vzo3plus1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo2plus1</name></expr></argument>, <argument><expr><name>vzo3plus1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x3</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y2</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y3</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>xmulwi0</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x4</name></expr></argument>, <argument><expr><name>wi0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>xmulwi1</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x5</name></expr></argument>, <argument><expr><name>wi1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y0</name></expr></argument>, <argument><expr><name>y1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x8</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>x2</name></expr></argument>, <argument><expr><name>wr0</name></expr></argument>, <argument><expr><name>xmulwi0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x9</name> <operator>=</operator> <call><name>vec_msub</name><argument_list>(<argument><expr><name>x2</name></expr></argument>, <argument><expr><name>wr0</name></expr></argument>, <argument><expr><name>xmulwi0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ymulwi2</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>y4</name></expr></argument>, <argument><expr><name>wi2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ymulwi3</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>y5</name></expr></argument>, <argument><expr><name>wi3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x13</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>x3</name></expr></argument>, <argument><expr><name>wr1</name></expr></argument>, <argument><expr><name>xmulwi1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x14</name> <operator>=</operator> <call><name>vec_msub</name><argument_list>(<argument><expr><name>x3</name></expr></argument>, <argument><expr><name>wr1</name></expr></argument>, <argument><expr><name>xmulwi1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y8</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>y2</name></expr></argument>, <argument><expr><name>wr2</name></expr></argument>, <argument><expr><name>ymulwi2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y9</name> <operator>=</operator> <call><name>vec_msub</name><argument_list>(<argument><expr><name>y2</name></expr></argument>, <argument><expr><name>wr2</name></expr></argument>, <argument><expr><name>ymulwi2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y13</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>y3</name></expr></argument>, <argument><expr><name>wr3</name></expr></argument>, <argument><expr><name>ymulwi3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y14</name> <operator>=</operator> <call><name>vec_msub</name><argument_list>(<argument><expr><name>y3</name></expr></argument>, <argument><expr><name>wr3</name></expr></argument>, <argument><expr><name>ymulwi3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x8</name></expr></argument>, <argument><expr><name>x9</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x15</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x13</name></expr></argument>, <argument><expr><name>x14</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y8</name></expr></argument>, <argument><expr><name>y9</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y15</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y13</name></expr></argument>, <argument><expr><name>y14</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x16</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x10</name></expr></argument>, <argument><expr><name>x15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x17</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x10</name></expr></argument>, <argument><expr><name>x15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y16</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y10</name></expr></argument>, <argument><expr><name>y15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y17</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y10</name></expr></argument>, <argument><expr><name>y15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x18</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>x16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x19</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>x16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x20</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo1</name></expr></argument>, <argument><expr><name>x17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x21</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo1</name></expr></argument>, <argument><expr><name>x17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y18</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz0plus1</name></expr></argument>, <argument><expr><name>y16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y19</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz0plus1</name></expr></argument>, <argument><expr><name>y16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y20</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vzo1plus1</name></expr></argument>, <argument><expr><name>y17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y21</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vzo1plus1</name></expr></argument>, <argument><expr><name>y17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x22</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x20</name></expr></argument>, <argument><expr><name>x21</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x23</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x20</name></expr></argument>, <argument><expr><name>x21</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y22</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y20</name></expr></argument>, <argument><expr><name>y21</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y23</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>y20</name></expr></argument>, <argument><expr><name>y21</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x18</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y18</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x22</name></expr></argument>, <argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y22</name></expr></argument>, <argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x19</name></expr></argument>, <argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y19</name></expr></argument>, <argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x23</name></expr></argument>, <argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>y23</name></expr></argument>, <argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block> while <condition>(<expr><name>n</name><operator>-=</operator><literal type="number">2</literal></expr>)</condition>;</do>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>fft2_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FFTSample</name></type> <name>r1</name></decl>, <decl><type ref="prev"/><name>i1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>r1</name> <operator>=</operator> <name><name>z</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>-</operator> <name><name>z</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>re</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>z</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>+=</operator> <name><name>z</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>re</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>z</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>=</operator> <name>r1</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i1</name> <operator>=</operator> <name><name>z</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>-</operator> <name><name>z</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>im</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>z</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>+=</operator> <name><name>z</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>im</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>z</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>=</operator> <name>i1</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>fft4_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vec_f</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name><modifier>*</modifier></type> <name>out</name><init>= <expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>fft8_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz0</name></decl>, <decl><type ref="prev"/><name>vz1</name></decl>, <decl><type ref="prev"/><name>vz2</name></decl>, <decl><type ref="prev"/><name>vz3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x0</name></decl>, <decl><type ref="prev"/><name>x1</name></decl>, <decl><type ref="prev"/><name>x2</name></decl>, <decl><type ref="prev"/><name>x3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x4</name></decl>, <decl><type ref="prev"/><name>x5</name></decl>, <decl><type ref="prev"/><name>x6</name></decl>, <decl><type ref="prev"/><name>x7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x8</name></decl>, <decl><type ref="prev"/><name>x9</name></decl>, <decl><type ref="prev"/><name>x10</name></decl>, <decl><type ref="prev"/><name>x11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x12</name></decl>, <decl><type ref="prev"/><name>x13</name></decl>, <decl><type ref="prev"/><name>x14</name></decl>, <decl><type ref="prev"/><name>x15</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x16</name></decl>, <decl><type ref="prev"/><name>x17</name></decl>, <decl><type ref="prev"/><name>x18</name></decl>, <decl><type ref="prev"/><name>x19</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x20</name></decl>, <decl><type ref="prev"/><name>x21</name></decl>, <decl><type ref="prev"/><name>x22</name></decl>, <decl><type ref="prev"/><name>x23</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x24</name></decl>, <decl><type ref="prev"/><name>x25</name></decl>, <decl><type ref="prev"/><name>x26</name></decl>, <decl><type ref="prev"/><name>x27</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x28</name></decl>, <decl><type ref="prev"/><name>x29</name></decl>, <decl><type ref="prev"/><name>x30</name></decl>, <decl><type ref="prev"/><name>x31</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x32</name></decl>, <decl><type ref="prev"/><name>x33</name></decl>, <decl><type ref="prev"/><name>x34</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name><modifier>*</modifier></type> <name>out</name><init>= <expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc1</name> <init>= <expr><block>{<expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x0</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x3</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x4</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x5</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x6</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x2</name></expr></argument>, <argument><expr><name>x3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x7</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x2</name></expr></argument>, <argument><expr><name>x3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x8</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x4</name></expr></argument>, <argument><expr><name>x5</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x9</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x4</name></expr></argument>, <argument><expr><name>x5</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x6</name></expr></argument>, <argument><expr><name>x7</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x11</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x6</name></expr></argument>, <argument><expr><name>x7</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x12</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x8</name></expr></argument>, <argument><expr><name>x9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x13</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x8</name></expr></argument>, <argument><expr><name>x9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x14</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x10</name></expr></argument>, <argument><expr><name>x11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x15</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x10</name></expr></argument>, <argument><expr><name>x11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x16</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x12</name></expr></argument>, <argument><expr><name>x13</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x17</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x14</name></expr></argument>, <argument><expr><name>x15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x18</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x16</name></expr></argument>, <argument><expr><name>x17</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x19</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x16</name></expr></argument>, <argument><expr><name>x18</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x20</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x16</name></expr></argument>, <argument><expr><name>x18</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x21</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x12</name></expr></argument>, <argument><expr><name>x13</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x22</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x14</name></expr></argument>, <argument><expr><name>x15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x23</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x14</name></expr></argument>, <argument><expr><name>x15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x24</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x22</name></expr></argument>, <argument><expr><name>x23</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x25</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x22</name></expr></argument>, <argument><expr><name>x23</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x26</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>( <argument><expr><call><name>vec_perm</name><argument_list>(<argument><expr><name>x24</name></expr></argument>, <argument><expr><name>x25</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>vc1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x27</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x21</name></expr></argument>, <argument><expr><name>x26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x28</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x21</name></expr></argument>, <argument><expr><name>x26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x29</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x19</name></expr></argument>, <argument><expr><name>x27</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x30</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x19</name></expr></argument>, <argument><expr><name>x27</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x31</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x20</name></expr></argument>, <argument><expr><name>x28</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x32</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x20</name></expr></argument>, <argument><expr><name>x28</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x33</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x30</name></expr></argument>, <argument><expr><name>x32</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x34</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x30</name></expr></argument>, <argument><expr><name>x32</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x29</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x33</name></expr></argument>, <argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x31</name></expr></argument>, <argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x34</name></expr></argument>, <argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>fft16_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>float</name><modifier>*</modifier></type> <name>out</name><init>= <expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc0</name> <init>= <expr><block>{<expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc1</name> <init>= <expr><block>{<expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>, <expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>, <expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>, <expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc2</name> <init>= <expr><block>{<expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>, <expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>, <expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>, <expr><name><name>ff_cos_16</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz0</name></decl>, <decl><type ref="prev"/><name>vz1</name></decl>, <decl><type ref="prev"/><name>vz2</name></decl>, <decl><type ref="prev"/><name>vz3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz4</name></decl>, <decl><type ref="prev"/><name>vz5</name></decl>, <decl><type ref="prev"/><name>vz6</name></decl>, <decl><type ref="prev"/><name>vz7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x0</name></decl>, <decl><type ref="prev"/><name>x1</name></decl>, <decl><type ref="prev"/><name>x2</name></decl>, <decl><type ref="prev"/><name>x3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x4</name></decl>, <decl><type ref="prev"/><name>x5</name></decl>, <decl><type ref="prev"/><name>x6</name></decl>, <decl><type ref="prev"/><name>x7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x8</name></decl>, <decl><type ref="prev"/><name>x9</name></decl>, <decl><type ref="prev"/><name>x10</name></decl>, <decl><type ref="prev"/><name>x11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x12</name></decl>, <decl><type ref="prev"/><name>x13</name></decl>, <decl><type ref="prev"/><name>x14</name></decl>, <decl><type ref="prev"/><name>x15</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x16</name></decl>, <decl><type ref="prev"/><name>x17</name></decl>, <decl><type ref="prev"/><name>x18</name></decl>, <decl><type ref="prev"/><name>x19</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x20</name></decl>, <decl><type ref="prev"/><name>x21</name></decl>, <decl><type ref="prev"/><name>x22</name></decl>, <decl><type ref="prev"/><name>x23</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x24</name></decl>, <decl><type ref="prev"/><name>x25</name></decl>, <decl><type ref="prev"/><name>x26</name></decl>, <decl><type ref="prev"/><name>x27</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x28</name></decl>, <decl><type ref="prev"/><name>x29</name></decl>, <decl><type ref="prev"/><name>x30</name></decl>, <decl><type ref="prev"/><name>x31</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x32</name></decl>, <decl><type ref="prev"/><name>x33</name></decl>, <decl><type ref="prev"/><name>x34</name></decl>, <decl><type ref="prev"/><name>x35</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x36</name></decl>, <decl><type ref="prev"/><name>x37</name></decl>, <decl><type ref="prev"/><name>x38</name></decl>, <decl><type ref="prev"/><name>x39</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x40</name></decl>, <decl><type ref="prev"/><name>x41</name></decl>, <decl><type ref="prev"/><name>x42</name></decl>, <decl><type ref="prev"/><name>x43</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x44</name></decl>, <decl><type ref="prev"/><name>x45</name></decl>, <decl><type ref="prev"/><name>x46</name></decl>, <decl><type ref="prev"/><name>x47</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x48</name></decl>, <decl><type ref="prev"/><name>x49</name></decl>, <decl><type ref="prev"/><name>x50</name></decl>, <decl><type ref="prev"/><name>x51</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x52</name></decl>, <decl><type ref="prev"/><name>x53</name></decl>, <decl><type ref="prev"/><name>x54</name></decl>, <decl><type ref="prev"/><name>x55</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x56</name></decl>, <decl><type ref="prev"/><name>x57</name></decl>, <decl><type ref="prev"/><name>x58</name></decl>, <decl><type ref="prev"/><name>x59</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x60</name></decl>, <decl><type ref="prev"/><name>x61</name></decl>, <decl><type ref="prev"/><name>x62</name></decl>, <decl><type ref="prev"/><name>x63</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x64</name></decl>, <decl><type ref="prev"/><name>x65</name></decl>, <decl><type ref="prev"/><name>x66</name></decl>, <decl><type ref="prev"/><name>x67</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x68</name></decl>, <decl><type ref="prev"/><name>x69</name></decl>, <decl><type ref="prev"/><name>x70</name></decl>, <decl><type ref="prev"/><name>x71</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x72</name></decl>, <decl><type ref="prev"/><name>x73</name></decl>, <decl><type ref="prev"/><name>x74</name></decl>, <decl><type ref="prev"/><name>x75</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x76</name></decl>, <decl><type ref="prev"/><name>x77</name></decl>, <decl><type ref="prev"/><name>x78</name></decl>, <decl><type ref="prev"/><name>x79</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x80</name></decl>, <decl><type ref="prev"/><name>x81</name></decl>, <decl><type ref="prev"/><name>x82</name></decl>, <decl><type ref="prev"/><name>x83</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>x84</name></decl>, <decl><type ref="prev"/><name>x85</name></decl>, <decl><type ref="prev"/><name>x86</name></decl>;</decl_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_8complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_10complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_12complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_14complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x0</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x1</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x2</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x3</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x6</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x7</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x8</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x9</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x0</name></expr></argument>, <argument><expr><name>x1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x10</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x2</name></expr></argument>, <argument><expr><name>x3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x11</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x2</name></expr></argument>, <argument><expr><name>x3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x12</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x4</name></expr></argument>, <argument><expr><name>x5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x13</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x4</name></expr></argument>, <argument><expr><name>x5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x14</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x6</name></expr></argument>, <argument><expr><name>x7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x15</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x6</name></expr></argument>, <argument><expr><name>x7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x16</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x8</name></expr></argument>, <argument><expr><name>x9</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x17</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x8</name></expr></argument>, <argument><expr><name>x9</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x18</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x10</name></expr></argument>, <argument><expr><name>x11</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x19</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x10</name></expr></argument>, <argument><expr><name>x11</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x20</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x12</name></expr></argument>, <argument><expr><name>x14</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x21</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x12</name></expr></argument>, <argument><expr><name>x14</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x22</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x13</name></expr></argument>, <argument><expr><name>x15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x23</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x13</name></expr></argument>, <argument><expr><name>x15</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x24</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x16</name></expr></argument>, <argument><expr><name>x17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x25</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x16</name></expr></argument>, <argument><expr><name>x17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x26</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x18</name></expr></argument>, <argument><expr><name>x19</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x27</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x18</name></expr></argument>, <argument><expr><name>x19</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x28</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x20</name></expr></argument>, <argument><expr><name>x21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x29</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x20</name></expr></argument>, <argument><expr><name>x21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x30</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x22</name></expr></argument>, <argument><expr><name>x23</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x31</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x22</name></expr></argument>, <argument><expr><name>x23</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x32</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x24</name></expr></argument>, <argument><expr><name>x26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x33</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x24</name></expr></argument>, <argument><expr><name>x26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x34</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x32</name></expr></argument>, <argument><expr><name>x33</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x35</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x28</name></expr></argument>, <argument><expr><name>x29</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x36</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x28</name></expr></argument>, <argument><expr><name>x29</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x37</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x35</name></expr></argument>, <argument><expr><name>x36</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x38</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x35</name></expr></argument>, <argument><expr><name>x36</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x39</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x37</name></expr></argument>, <argument><expr><name>x38</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x40</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x27</name></expr></argument>, <argument><expr><name>x38</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x41</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x26</name></expr></argument>, <argument><expr><name>x37</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x42</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x40</name></expr></argument>, <argument><expr><name>x41</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x43</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x40</name></expr></argument>, <argument><expr><name>x41</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x44</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x42</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x45</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x43</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x46</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x34</name></expr></argument>, <argument><expr><name>x39</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x47</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x34</name></expr></argument>, <argument><expr><name>x39</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x48</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x30</name></expr></argument>, <argument><expr><name>x31</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x49</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x30</name></expr></argument>, <argument><expr><name>x31</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x50</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x48</name></expr></argument>, <argument><expr><name>x49</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x51</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x48</name></expr></argument>, <argument><expr><name>x49</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x52</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x50</name></expr></argument>, <argument><expr><name>vc1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x53</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x50</name></expr></argument>, <argument><expr><name>vc2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x54</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x51</name></expr></argument>, <argument><expr><name>vc1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x55</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>x51</name></expr></argument>, <argument><expr><name>vc2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x56</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x24</name></expr></argument>, <argument><expr><name>x25</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x57</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x44</name></expr></argument>, <argument><expr><name>x45</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x58</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x56</name></expr></argument>, <argument><expr><name>x57</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x59</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x56</name></expr></argument>, <argument><expr><name>x57</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x60</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x54</name></expr></argument>, <argument><expr><name>x55</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x61</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x54</name></expr></argument>, <argument><expr><name>x55</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x62</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x52</name></expr></argument>, <argument><expr><name>x61</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x63</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x52</name></expr></argument>, <argument><expr><name>x61</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x64</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x60</name></expr></argument>, <argument><expr><name>x53</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x65</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x60</name></expr></argument>, <argument><expr><name>x53</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x66</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x62</name></expr></argument>, <argument><expr><name>x64</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x67</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x63</name></expr></argument>, <argument><expr><name>x65</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x68</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x58</name></expr></argument>, <argument><expr><name>x66</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x69</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x58</name></expr></argument>, <argument><expr><name>x66</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x70</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x59</name></expr></argument>, <argument><expr><name>x67</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x71</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x59</name></expr></argument>, <argument><expr><name>x67</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x72</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x25</name></expr></argument>, <argument><expr><name>x27</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x73</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x25</name></expr></argument>, <argument><expr><name>x72</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x74</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x25</name></expr></argument>, <argument><expr><name>x72</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x75</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x73</name></expr></argument>, <argument><expr><name>x74</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x76</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x44</name></expr></argument>, <argument><expr><name>x45</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x77</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>x75</name></expr></argument>, <argument><expr><name>x76</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x78</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>x75</name></expr></argument>, <argument><expr><name>x76</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x79</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x46</name></expr></argument>, <argument><expr><name>x68</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x80</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x77</name></expr></argument>, <argument><expr><name>x68</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x81</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x46</name></expr></argument>, <argument><expr><name>x70</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x82</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x71</name></expr></argument>, <argument><expr><name>x77</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x79</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x80</name></expr></argument>, <argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x81</name></expr></argument>, <argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x82</name></expr></argument>, <argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x83</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x47</name></expr></argument>, <argument><expr><name>x69</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x84</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x78</name></expr></argument>, <argument><expr><name>x69</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x85</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x47</name></expr></argument>, <argument><expr><name>x71</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>x86</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>x70</name></expr></argument>, <argument><expr><name>x78</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x83</name></expr></argument>, <argument><expr><name>byte_8complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x84</name></expr></argument>, <argument><expr><name>byte_10complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x85</name></expr></argument>, <argument><expr><name>byte_12complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>x86</name></expr></argument>, <argument><expr><name>byte_14complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>fft4_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vec_f</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name><modifier>*</modifier></type> <name>out</name><init>= <expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>fft8_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz0</name></decl>, <decl><type ref="prev"/><name>vz1</name></decl>, <decl><type ref="prev"/><name>vz2</name></decl>, <decl><type ref="prev"/><name>vz3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz4</name></decl>, <decl><type ref="prev"/><name>vz5</name></decl>, <decl><type ref="prev"/><name>vz6</name></decl>, <decl><type ref="prev"/><name>vz7</name></decl>, <decl><type ref="prev"/><name>vz8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name><modifier>*</modifier></type> <name>out</name><init>= <expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc0</name> <init>= <expr><block>{<expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc1</name> <init>= <expr><block>{<expr><operator>-</operator><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><operator>-</operator><name>sqrthalf</name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc2</name> <init>= <expr><block>{<expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz8</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>vc1</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz8</name></expr></argument>, <argument><expr><name>vc2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz5</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz5</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz1</name></expr></argument>, <argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>fft16_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>float</name><modifier>*</modifier></type> <name>out</name><init>= <expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc0</name> <init>= <expr><block>{<expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc1</name> <init>= <expr><block>{<expr><operator>-</operator><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><operator>-</operator><name>sqrthalf</name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc2</name> <init>= <expr><block>{<expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>, <expr><name>sqrthalf</name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc3</name> <init>= <expr><block>{<expr><literal type="number">1.0</literal></expr>, <expr><literal type="number">0.92387953</literal></expr>, <expr><name>sqrthalf</name></expr>, <expr><literal type="number">0.38268343</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc4</name> <init>= <expr><block>{<expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.38268343</literal></expr>, <expr><name>sqrthalf</name></expr>, <expr><literal type="number">0.92387953</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vc5</name> <init>= <expr><block>{<expr><operator>-</operator><literal type="number">0.0</literal></expr>, <expr><operator>-</operator><literal type="number">0.38268343</literal></expr>, <expr><operator>-</operator><name>sqrthalf</name></expr>, <expr><operator>-</operator><literal type="number">0.92387953</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz0</name></decl>, <decl><type ref="prev"/><name>vz1</name></decl>, <decl><type ref="prev"/><name>vz2</name></decl>, <decl><type ref="prev"/><name>vz3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz4</name></decl>, <decl><type ref="prev"/><name>vz5</name></decl>, <decl><type ref="prev"/><name>vz6</name></decl>, <decl><type ref="prev"/><name>vz7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz8</name></decl>, <decl><type ref="prev"/><name>vz9</name></decl>, <decl><type ref="prev"/><name>vz10</name></decl>, <decl><type ref="prev"/><name>vz11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>vz12</name></decl>, <decl><type ref="prev"/><name>vz13</name></decl>;</decl_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_8complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_10complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_12complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_14complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name><operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vz5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vz7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz11</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz8</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz9</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz10</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz10</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz12</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz8</name></expr></argument>, <argument><expr><name>vz9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz8</name></expr></argument>, <argument><expr><name>vz9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>vc1</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz12</name></expr></argument>, <argument><expr><name>vc2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz8</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz9</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s3</name></expr></argument>,<argument><expr><name>s0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz11</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz8</name></expr></argument>, <argument><expr><name>vz9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz8</name></expr></argument>, <argument><expr><name>vz9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz10</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz10</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz8</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz9</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz1</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s2</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz10</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>s1</name></expr></argument>,<argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz11</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz3</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><name>s0</name></expr></argument>,<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz8</name></expr></argument>, <argument><expr><name>vz10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz9</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz8</name></expr></argument>, <argument><expr><name>vz10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz9</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz8</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vc3</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz9</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz5</name></expr></argument>, <argument><expr><name>vc3</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz10</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vc3</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz11</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz7</name></expr></argument>, <argument><expr><name>vc3</name></expr></argument>, <argument><expr><name>vc0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz8</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz5</name></expr></argument>, <argument><expr><name>vc4</name></expr></argument>, <argument><expr><name>vz8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz9</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>vc5</name></expr></argument>, <argument><expr><name>vz9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz10</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz7</name></expr></argument>, <argument><expr><name>vc5</name></expr></argument>, <argument><expr><name>vz10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz11</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>vc4</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz12</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz10</name></expr></argument>, <argument><expr><name>vz8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz10</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz10</name></expr></argument>, <argument><expr><name>vz8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz13</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz9</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz11</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz9</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz4</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><name>vz10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz7</name><operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>vz12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz3</name><operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>vz12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz5</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz1</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz1</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz1</name></expr></argument>, <argument><expr><name>vz11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz6</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vz2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>vz13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz1</name></expr></argument>, <argument><expr><name>byte_2complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz2</name></expr></argument>, <argument><expr><name>byte_4complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz3</name></expr></argument>, <argument><expr><name>byte_6complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz4</name></expr></argument>, <argument><expr><name>byte_8complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz5</name></expr></argument>, <argument><expr><name>byte_10complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz6</name></expr></argument>, <argument><expr><name>byte_12complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>vz7</name></expr></argument>, <argument><expr><name>byte_14complex</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></function>

<function><type><specifier>inline</specifier> <specifier>static</specifier> <name>void</name></type> <name>pass_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type> <name>z</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>FFTSample</name> <modifier>*</modifier></type> <name>wre</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>o1</name> <init>= <expr><name>n</name><operator>&lt;&lt;</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>o2</name> <init>= <expr><name>n</name><operator>&lt;&lt;</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>o3</name> <init>= <expr><name>o1</name><operator>+</operator><name>o2</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i1</name></decl>, <decl><type ref="prev"/><name>i2</name></decl>, <decl><type ref="prev"/><name>i3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFTSample</name><modifier>*</modifier></type> <name>out</name> <init>= <expr><operator>(</operator><name>FFTSample</name><operator>*</operator><operator>)</operator><name>z</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>FFTSample</name> <modifier>*</modifier></type><name>wim</name> <init>= <expr><name>wre</name><operator>+</operator><name>o1</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>v0</name></decl>, <decl><type ref="prev"/><name>v1</name></decl>, <decl><type ref="prev"/><name>v2</name></decl>, <decl><type ref="prev"/><name>v3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>v4</name></decl>, <decl><type ref="prev"/><name>v5</name></decl>, <decl><type ref="prev"/><name>v6</name></decl>, <decl><type ref="prev"/><name>v7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>v8</name></decl>, <decl><type ref="prev"/><name>v9</name></decl>, <decl><type ref="prev"/><name>v10</name></decl>, <decl><type ref="prev"/><name>v11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vec_f</name></type> <name>v12</name></decl>, <decl><type ref="prev"/><name>v13</name></decl>;</decl_stmt>

<expr_stmt><expr><name>n</name> <operator>=</operator> <name>n</name><operator>-</operator><literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i1</name> <operator>=</operator> <name>o1</name><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name>i2</name> <operator>=</operator> <name>o2</name><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name>i3</name> <operator>=</operator> <name>o3</name><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name>v8</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>wre</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v10</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>wim</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v9</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">4</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v9</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v4</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v5</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v6</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v7</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v10</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v4</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v11</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v5</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v12</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v6</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v13</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v7</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v10</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>v5</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v11</name> <operator>=</operator> <call><name>vec_nmsub</name><argument_list>(<argument><expr><name>v4</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v12</name> <operator>=</operator> <call><name>vec_nmsub</name><argument_list>(<argument><expr><name>v7</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v13</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>v6</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v8</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v12</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v12</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v12</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v9</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v11</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v13</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v11</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v4</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v0</name></expr></argument>, <argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v0</name></expr></argument>, <argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v7</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v3</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v3</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v3</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v3</name></expr></argument>, <argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v4</name></expr></argument>, <argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v7</name></expr></argument>, <argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v5</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v1</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v1</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v1</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v6</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v2</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v2</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v1</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v2</name></expr></argument>, <argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v5</name></expr></argument>, <argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v6</name></expr></argument>, <argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<do>do <block>{<block_content>

<expr_stmt><expr><name>out</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>wre</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>wim</name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>v8</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>wre</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v10</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>wim</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v9</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>wim</name><index>[<expr><operator>-</operator><literal type="number">4</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v9</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>, <argument><expr><call><name>vcprm</name><argument_list>(<argument><expr><name>s0</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v4</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v5</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v6</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v7</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v10</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v4</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v11</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v5</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v12</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v6</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v13</name> <operator>=</operator> <call><name>vec_mul</name><argument_list>(<argument><expr><name>v7</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v0</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v3</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v10</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>v5</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v11</name> <operator>=</operator> <call><name>vec_nmsub</name><argument_list>(<argument><expr><name>v4</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v12</name> <operator>=</operator> <call><name>vec_nmsub</name><argument_list>(<argument><expr><name>v7</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v13</name> <operator>=</operator> <call><name>vec_madd</name><argument_list>(<argument><expr><name>v6</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v1</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v2</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v8</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v12</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v12</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v12</name></expr></argument>, <argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v9</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v11</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v13</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v11</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v4</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v0</name></expr></argument>, <argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v0</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v0</name></expr></argument>, <argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v7</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v3</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v3</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v3</name></expr></argument>, <argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v3</name></expr></argument>, <argument><expr><name>i1</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v4</name></expr></argument>, <argument><expr><name>i2</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v7</name></expr></argument>, <argument><expr><name>i3</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v5</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v1</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v1</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v1</name></expr></argument>, <argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v6</name> <operator>=</operator> <call><name>vec_sub</name><argument_list>(<argument><expr><name>v2</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v2</name> <operator>=</operator> <call><name>vec_add</name><argument_list>(<argument><expr><name>v2</name></expr></argument>, <argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v1</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v2</name></expr></argument>, <argument><expr><name>i1</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v5</name></expr></argument>, <argument><expr><name>i2</name><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>v6</name></expr></argument>, <argument><expr><name>i3</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

</block_content>}</block> while <condition>(<expr><name>n</name><operator>-=</operator><literal type="number">2</literal></expr>)</condition>;</do>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
