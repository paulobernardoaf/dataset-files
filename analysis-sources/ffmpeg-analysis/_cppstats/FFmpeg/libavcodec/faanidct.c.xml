<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\faanidct.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"faanidct.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>

<typedef>typedef <type><name>float</name></type> <name>FLOAT</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B0</name></cpp:macro> <cpp:value>1.0000000000000000000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B1</name></cpp:macro> <cpp:value>1.3870398453221474618216</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B2</name></cpp:macro> <cpp:value>1.3065629648763765278566</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B3</name></cpp:macro> <cpp:value>1.1758756024193587169745</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B4</name></cpp:macro> <cpp:value>1.0000000000000000000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B5</name></cpp:macro> <cpp:value>0.7856949583871021812779</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B6</name></cpp:macro> <cpp:value>0.5411961001461969843997</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B7</name></cpp:macro> <cpp:value>0.2758993792829430123360</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A4</name></cpp:macro> <cpp:value>0.70710678118654752438</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A2</name></cpp:macro> <cpp:value>0.92387953251128675613</cpp:value></cpp:define> 

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>FLOAT</name></type> <name><name>prescale</name><index>[<expr><literal type="number">64</literal></expr>]</index></name><init>=<expr><block>{

<expr><name>B0</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B0</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B0</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B0</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B0</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B0</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B0</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B0</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

<expr><name>B1</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B1</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B1</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B1</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B1</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B1</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B1</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B1</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

<expr><name>B2</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B2</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B2</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B2</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B2</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B2</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B2</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B2</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

<expr><name>B3</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B3</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B3</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B3</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B3</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B3</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B3</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B3</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

<expr><name>B4</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B4</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B4</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B4</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B4</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B4</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B4</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B4</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

<expr><name>B5</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B5</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B5</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B5</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B5</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B5</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B5</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B5</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

<expr><name>B6</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B6</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B6</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B6</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B6</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B6</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B6</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B6</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

<expr><name>B7</name><operator>*</operator><name>B0</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B7</name><operator>*</operator><name>B1</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B7</name><operator>*</operator><name>B2</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B7</name><operator>*</operator><name>B3</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B7</name><operator>*</operator><name>B4</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B7</name><operator>*</operator><name>B5</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B7</name><operator>*</operator><name>B6</name><operator>/</operator><literal type="number">8</literal></expr>, <expr><name>B7</name><operator>*</operator><name>B7</name><operator>/</operator><literal type="number">8</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>p8idct</name><parameter_list>(<parameter><decl><type><name>int16_t</name></type> <name><name>data</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>FLOAT</name></type> <name><name>temp</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>s04</name></decl>, <decl><type ref="prev"/><name>d04</name></decl>, <decl><type ref="prev"/><name>s17</name></decl>, <decl><type ref="prev"/><name>d17</name></decl>, <decl><type ref="prev"/><name>s26</name></decl>, <decl><type ref="prev"/><name>d26</name></decl>, <decl><type ref="prev"/><name>s53</name></decl>, <decl><type ref="prev"/><name>d53</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>os07</name></decl>, <decl><type ref="prev"/><name>os16</name></decl>, <decl><type ref="prev"/><name>os25</name></decl>, <decl><type ref="prev"/><name>os34</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>od07</name></decl>, <decl><type ref="prev"/><name>od16</name></decl>, <decl><type ref="prev"/><name>od25</name></decl>, <decl><type ref="prev"/><name>od34</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>y</name><operator>*</operator><literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>+=</operator><name>y</name></expr></incr>)</control><block>{<block_content>

<expr_stmt><expr><name>s17</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">1</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">7</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>d17</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">1</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">7</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>s53</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">5</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">3</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>d53</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">5</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">3</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>od07</name><operator>=</operator> <name>s17</name> <operator>+</operator> <name>s53</name></expr>;</expr_stmt>

<expr_stmt><expr><name>od25</name><operator>=</operator> <operator>(</operator><name>s17</name> <operator>-</operator> <name>s53</name><operator>)</operator><operator>*</operator><operator>(</operator><literal type="number">2</literal><operator>*</operator><name>A4</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>od34</name><operator>=</operator> <name>d17</name><operator>*</operator><operator>(</operator><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>B6</name><operator>-</operator><name>A2</name><operator>)</operator><operator>)</operator> <operator>-</operator> <name>d53</name><operator>*</operator><operator>(</operator><literal type="number">2</literal><operator>*</operator><name>A2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>od16</name><operator>=</operator> <name>d53</name><operator>*</operator><operator>(</operator><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>A2</name><operator>-</operator><name>B2</name><operator>)</operator><operator>)</operator> <operator>+</operator> <name>d17</name><operator>*</operator><operator>(</operator><literal type="number">2</literal><operator>*</operator><name>A2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>od16</name> <operator>-=</operator> <name>od07</name></expr>;</expr_stmt>

<expr_stmt><expr><name>od25</name> <operator>-=</operator> <name>od16</name></expr>;</expr_stmt>

<expr_stmt><expr><name>od34</name> <operator>+=</operator> <name>od25</name></expr>;</expr_stmt>

<expr_stmt><expr><name>s26</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>d26</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>d26</name><operator>*=</operator> <literal type="number">2</literal><operator>*</operator><name>A4</name></expr>;</expr_stmt>

<expr_stmt><expr><name>d26</name><operator>-=</operator> <name>s26</name></expr>;</expr_stmt>

<expr_stmt><expr><name>s04</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">0</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">4</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>d04</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">0</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">4</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>os07</name><operator>=</operator> <name>s04</name> <operator>+</operator> <name>s26</name></expr>;</expr_stmt>

<expr_stmt><expr><name>os34</name><operator>=</operator> <name>s04</name> <operator>-</operator> <name>s26</name></expr>;</expr_stmt>

<expr_stmt><expr><name>os16</name><operator>=</operator> <name>d04</name> <operator>+</operator> <name>d26</name></expr>;</expr_stmt>

<expr_stmt><expr><name>os25</name><operator>=</operator> <name>d04</name> <operator>-</operator> <name>d26</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>type</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">0</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os07</name> <operator>+</operator> <name>od07</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">7</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os07</name> <operator>-</operator> <name>od07</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">1</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os16</name> <operator>+</operator> <name>od16</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os16</name> <operator>-</operator> <name>od16</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os25</name> <operator>+</operator> <name>od25</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">5</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os25</name> <operator>-</operator> <name>od25</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">3</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os34</name> <operator>-</operator> <name>od34</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">4</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>os34</name> <operator>+</operator> <name>od34</name></expr>;</expr_stmt>

</block_content>}</block></if><if type="elseif">else if<condition>(<expr><name>type</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">0</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os07</name> <operator>+</operator> <name>od07</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">7</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os07</name> <operator>-</operator> <name>od07</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">1</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os16</name> <operator>+</operator> <name>od16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os16</name> <operator>-</operator> <name>od16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os25</name> <operator>+</operator> <name>od25</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">5</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os25</name> <operator>-</operator> <name>od25</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">3</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os34</name> <operator>-</operator> <name>od34</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">4</literal><operator>*</operator><name>x</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os34</name> <operator>+</operator> <name>od34</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if><if type="elseif">else if<condition>(<expr><name>type</name><operator>==</operator><literal type="number">2</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">0</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">0</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os07</name> <operator>+</operator> <name>od07</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">7</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">7</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os07</name> <operator>-</operator> <name>od07</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">1</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">1</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os16</name> <operator>+</operator> <name>od16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os16</name> <operator>-</operator> <name>od16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os25</name> <operator>+</operator> <name>od25</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">5</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">5</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os25</name> <operator>-</operator> <name>od25</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">3</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">3</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os34</name> <operator>-</operator> <name>od34</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">4</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>dest</name><index>[<expr><literal type="number">4</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>)</operator> <operator>+</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name>os34</name> <operator>+</operator> <name>od34</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if><else>else<block>{<block_content>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">0</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os07</name> <operator>+</operator> <name>od07</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">7</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os07</name> <operator>-</operator> <name>od07</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">1</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os16</name> <operator>+</operator> <name>od16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os16</name> <operator>-</operator> <name>od16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os25</name> <operator>+</operator> <name>od25</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">5</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os25</name> <operator>-</operator> <name>od25</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">3</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os34</name> <operator>-</operator> <name>od34</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest</name><index>[<expr><literal type="number">4</literal><operator>*</operator><name>stride</name> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>av_clip_uint8</name><argument_list>(<argument><expr><call><name>lrintf</name><argument_list>(<argument><expr><name>os34</name> <operator>+</operator> <name>od34</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_faanidct</name><parameter_list>(<parameter><decl><type><name>int16_t</name></type> <name><name>block</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>)</parameter_list><block>{<block_content>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>temp</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>emms_c</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">64</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>temp</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>block</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <name><name>prescale</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>p8idct</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>temp</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>p8idct</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>temp</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_faanidct_add</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>line_size</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name><name>block</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>temp</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>emms_c</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">64</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>temp</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>block</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <name><name>prescale</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>p8idct</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>temp</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>p8idct</name><argument_list>(<argument><expr><name>NULL</name></expr></argument> , <argument><expr><name>temp</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>line_size</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_faanidct_put</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>line_size</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name><name>block</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>temp</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>emms_c</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">64</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>temp</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>block</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <name><name>prescale</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>p8idct</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>temp</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>p8idct</name><argument_list>(<argument><expr><name>NULL</name></expr></argument> , <argument><expr><name>temp</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>line_size</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
