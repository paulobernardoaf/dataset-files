<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\hevc_ps.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/buffer.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixfmt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/rational.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hevc.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>ShortTermRPS</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>num_negative_pics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_delta_pocs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rps_idx_num_delta_pocs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>delta_poc</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>ShortTermRPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>LongTermRPS</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name><name>poc</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nb_refs</name></decl>;</decl_stmt>

}</block></struct></type> <name>LongTermRPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>SliceHeader</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>pps_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>slice_segment_addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>slice_addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>HEVCSliceType</name></name></type> <name>slice_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pic_order_cnt_lsb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>first_slice_in_pic_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dependent_slice_segment_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_output_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_plane_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>short_term_ref_pic_set_sps_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>short_term_ref_pic_set_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ShortTermRPS</name></type> <name>slice_rps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ShortTermRPS</name> <modifier>*</modifier></type><name>short_term_rps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>long_term_ref_pic_set_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LongTermRPS</name></type> <name>long_term_rps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>list_entry_lx</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>rpl_modification_flag</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>no_output_of_prior_pics_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_temporal_mvp_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>nb_refs</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>slice_sample_adaptive_offset_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>mvd_l1_zero_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cabac_init_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>disable_deblocking_filter_flag</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_loop_filter_across_slices_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>collocated_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>collocated_ref_idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slice_qp_delta</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slice_cb_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slice_cr_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cu_chroma_qp_offset_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>beta_offset</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>tc_offset</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>max_num_merge_cand</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>entry_point_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_entry_point_offsets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_qp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>luma_log2_weight_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name>chroma_log2_weight_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>luma_weight_l0</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>chroma_weight_l0</name><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>chroma_weight_l1</name><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>luma_weight_l1</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>luma_offset_l0</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>chroma_offset_l0</name><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>luma_offset_l1</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>chroma_offset_l1</name><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slice_ctb_addr_rs</name></decl>;</decl_stmt>

}</block></struct></type> <name>SliceHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HEVCWindow</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>left_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>right_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>top_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bottom_offset</name></decl>;</decl_stmt>

}</block></struct></type> <name>HEVCWindow</name>;</typedef>

<typedef>typedef <type><struct>struct <name>VUI</name> <block>{

<decl_stmt><decl><type><name>AVRational</name></type> <name>sar</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>overscan_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>overscan_appropriate_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>video_signal_type_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>video_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>video_full_range_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>colour_description_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_primaries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transfer_characteristic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>matrix_coeffs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma_loc_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma_sample_loc_type_top_field</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma_sample_loc_type_bottom_field</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>neutra_chroma_indication_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>field_seq_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frame_field_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>default_display_window_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HEVCWindow</name></type> <name>def_disp_win</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vui_timing_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vui_num_units_in_tick</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vui_time_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vui_poc_proportional_to_timing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vui_num_ticks_poc_diff_one_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vui_hrd_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bitstream_restriction_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>tiles_fixed_structure_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>motion_vectors_over_pic_boundaries_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>restricted_ref_pic_lists_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_spatial_segmentation_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_bytes_per_pic_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_bits_per_min_cu_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>log2_max_mv_length_horizontal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>log2_max_mv_length_vertical</name></decl>;</decl_stmt>

}</block></struct></type> <name>VUI</name>;</typedef>

<typedef>typedef <type><struct>struct <name>PTLCommon</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>profile_space</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>tier_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>profile_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>profile_compatibility_flag</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>progressive_source_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>interlaced_source_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>non_packed_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_only_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_12bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_10bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_8bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_422chroma_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_420chroma_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_monochrome_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>intra_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>one_picture_only_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>lower_bit_rate_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_14bit_constraint_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>inbld_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>level_idc</name></decl>;</decl_stmt>

}</block></struct></type> <name>PTLCommon</name>;</typedef>

<typedef>typedef <type><struct>struct <name>PTL</name> <block>{

<decl_stmt><decl><type><name>PTLCommon</name></type> <name>general_ptl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PTLCommon</name></type> <name><name>sub_layer_ptl</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_profile_present_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sub_layer_level_present_flag</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>PTL</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HEVCVPS</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_temporal_id_nesting_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vps_max_layers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vps_max_sub_layers</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>PTL</name></type> <name>ptl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vps_sub_layer_ordering_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>vps_max_dec_pic_buffering</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>vps_num_reorder_pics</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>vps_max_latency_increase</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vps_max_layer_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vps_num_layer_sets</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_timing_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vps_num_units_in_tick</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>vps_time_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vps_poc_proportional_to_timing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vps_num_ticks_poc_diff_one</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>vps_num_hrd_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>data</name><index>[<expr><literal type="number">4096</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>data_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>HEVCVPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ScalingList</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sl</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sl_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>ScalingList</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HEVCSPS</name> <block>{

<decl_stmt><decl><type><name>unsigned</name></type> <name>vps_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma_format_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>separate_colour_plane_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HEVCWindow</name></type> <name>output_window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HEVCWindow</name></type> <name>pic_conf_win</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bit_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bit_depth_chroma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pixel_shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_max_poc_lsb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pcm_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_sub_layers</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>max_dec_pic_buffering</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_reorder_pics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_latency_increase</name></decl>;</decl_stmt>

}</block> <decl><name><name>temporal_layer</name><index>[<expr><name>HEVC_MAX_SUB_LAYERS</name></expr>]</index></name></decl>;</struct>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>temporal_id_nesting_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VUI</name></type> <name>vui</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PTL</name></type> <name>ptl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>scaling_list_enable_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ScalingList</name></type> <name>scaling_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nb_st_rps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ShortTermRPS</name></type> <name><name>st_rps</name><index>[<expr><name>HEVC_MAX_SHORT_TERM_REF_PIC_SETS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>amp_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sao_enabled</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>long_term_ref_pics_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>lt_ref_pic_poc_lsb_sps</name><index>[<expr><name>HEVC_MAX_LONG_TERM_REF_PICS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>used_by_curr_pic_lt_sps_flag</name><index>[<expr><name>HEVC_MAX_LONG_TERM_REF_PICS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_long_term_ref_pics_sps</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_depth_chroma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_min_pcm_cb_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_max_pcm_cb_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>loop_filter_disable_flag</name></decl>;</decl_stmt>

}</block> <decl><name>pcm</name></decl>;</struct>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_temporal_mvp_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sps_strong_intra_smoothing_enable_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_min_cb_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_diff_max_min_coding_block_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_min_tb_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_max_trafo_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_ctb_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>log2_min_pu_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_transform_hierarchy_depth_inter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_transform_hierarchy_depth_intra</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sps_range_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>transform_skip_rotation_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>transform_skip_context_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>implicit_rdpcm_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>explicit_rdpcm_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>extended_precision_processing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>intra_smoothing_disabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>high_precision_offsets_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>persistent_rice_adaptation_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cabac_bypass_alignment_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ctb_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ctb_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ctb_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_cb_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_cb_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_tb_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_tb_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_pu_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_pu_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>tb_mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>hshift</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>vshift</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>qp_bd_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>data</name><index>[<expr><literal type="number">4096</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>data_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>HEVCSPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HEVCPPS</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>sps_id</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sign_data_hiding_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cabac_init_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_ref_idx_l0_default_active</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_ref_idx_l1_default_active</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>pic_init_qp_minus26</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constrained_intra_pred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transform_skip_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cu_qp_delta_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>diff_cu_qp_delta_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cb_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cr_qp_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_slice_level_chroma_qp_offsets_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_pred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_bipred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>output_flag_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transquant_bypass_enable_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dependent_slice_segments_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>tiles_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>entropy_coding_sync_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>num_tile_columns</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name></type> <name>num_tile_rows</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>uniform_spacing_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>loop_filter_across_tiles_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_loop_filter_across_slices_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>deblocking_filter_control_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>deblocking_filter_override_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>disable_dbf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>beta_offset</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>tc_offset</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>scaling_list_data_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ScalingList</name></type> <name>scaling_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>lists_modification_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>log2_parallel_merge_level</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_extra_slice_header_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_header_extension_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_transform_skip_block_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pps_range_extensions_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cross_component_prediction_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_qp_offset_list_enabled_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>diff_cu_chroma_qp_offset_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_qp_offset_list_len_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>cb_qp_offset_list</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>cr_qp_offset_list</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_sao_offset_scale_luma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_sao_offset_scale_chroma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>column_width</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>row_height</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>col_bd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>row_bd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>col_idxX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>ctb_addr_rs_to_ts</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>ctb_addr_ts_to_rs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>tile_id</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>tile_pos_rs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>min_tb_addr_zs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>min_tb_addr_zs_tab</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>data</name><index>[<expr><literal type="number">4096</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>data_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>HEVCPPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HEVCParamSets</name> <block>{

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>vps_list</name><index>[<expr><name>HEVC_MAX_VPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>sps_list</name><index>[<expr><name>HEVC_MAX_SPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>pps_list</name><index>[<expr><name>HEVC_MAX_PPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>HEVCVPS</name> <modifier>*</modifier></type><name>vps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>HEVCSPS</name> <modifier>*</modifier></type><name>sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>HEVCPPS</name> <modifier>*</modifier></type><name>pps</name></decl>;</decl_stmt>

}</block></struct></type> <name>HEVCParamSets</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_hevc_parse_sps</name><parameter_list>(<parameter><decl><type><name>HEVCSPS</name> <modifier>*</modifier></type><name>sps</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>sps_id</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>apply_defdispwin</name></decl></parameter>, <parameter><decl><type><name>AVBufferRef</name> <modifier>*</modifier><modifier>*</modifier></type><name>vps_list</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_hevc_decode_nal_vps</name><parameter_list>(<parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>HEVCParamSets</name> <modifier>*</modifier></type><name>ps</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_hevc_decode_nal_sps</name><parameter_list>(<parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>HEVCParamSets</name> <modifier>*</modifier></type><name>ps</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>apply_defdispwin</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_hevc_decode_nal_pps</name><parameter_list>(<parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>HEVCParamSets</name> <modifier>*</modifier></type><name>ps</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_ps_uninit</name><parameter_list>(<parameter><decl><type><name>HEVCParamSets</name> <modifier>*</modifier></type><name>ps</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_hevc_decode_short_term_rps</name><parameter_list>(<parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>ShortTermRPS</name> <modifier>*</modifier></type><name>rps</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>HEVCSPS</name> <modifier>*</modifier></type><name>sps</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>is_slice_header</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_hevc_encode_nal_vps</name><parameter_list>(<parameter><decl><type><name>HEVCVPS</name> <modifier>*</modifier></type><name>vps</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>id</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_hevc_compute_poc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>HEVCSPS</name> <modifier>*</modifier></type><name>sps</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pocTid0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>poc_lsb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nal_unit_type</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
