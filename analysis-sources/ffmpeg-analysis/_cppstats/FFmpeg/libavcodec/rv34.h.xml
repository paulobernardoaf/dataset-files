<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\rv34.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegvideo.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264pred.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rv34dsp.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MB_TYPE_SEPARATE_DC</name></cpp:macro> <cpp:value>0x01000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IS_SEPARATE_DC</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((a) &amp; MB_TYPE_SEPARATE_DC)</cpp:value></cpp:define>

<enum>enum <name>RV40BlockTypes</name><block>{

<decl><name>RV34_MB_TYPE_INTRA</name></decl>, 

<decl><name>RV34_MB_TYPE_INTRA16x16</name></decl>, 

<decl><name>RV34_MB_P_16x16</name></decl>, 

<decl><name>RV34_MB_P_8x8</name></decl>, 

<decl><name>RV34_MB_B_FORWARD</name></decl>, 

<decl><name>RV34_MB_B_BACKWARD</name></decl>, 

<decl><name>RV34_MB_SKIP</name></decl>, 

<decl><name>RV34_MB_B_DIRECT</name></decl>, 

<decl><name>RV34_MB_P_16x8</name></decl>, 

<decl><name>RV34_MB_P_8x16</name></decl>, 

<decl><name>RV34_MB_B_BIDIR</name></decl>, 

<decl><name>RV34_MB_P_MIX16x16</name></decl>, 

<decl><name>RV34_MB_TYPES</name></decl>

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>RV34VLC</name><block>{

<decl_stmt><decl><type><name>VLC</name></type> <name><name>cbppattern</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>VLC</name></type> <name><name>cbp</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>VLC</name></type> <name><name>first_pattern</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>VLC</name></type> <name><name>second_pattern</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>VLC</name></type> <name><name>third_pattern</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>VLC</name></type> <name>coefficient</name></decl>;</decl_stmt> 

}</block></struct></type><name>RV34VLC</name>;</typedef>

<typedef>typedef <type><struct>struct <name>SliceInfo</name><block>{

<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>quant</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>vlc_set</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>start</name></decl>, <name>end</name>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>pts</name></decl>;</decl_stmt> 

}</block></struct></type><name>SliceInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>RV34DecContext</name><block>{

<decl_stmt><decl><type><name>MpegEncContext</name></type> <name>s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RV34DSPContext</name></type> <name>rdsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name> <modifier>*</modifier></type><name>intra_types_hist</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name> <modifier>*</modifier></type><name>intra_types</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>intra_types_stride</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>luma_dc_quant_i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>luma_dc_quant_p</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RV34VLC</name> <modifier>*</modifier></type><name>cur_vlcs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>H264PredContext</name></type> <name>h</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>SliceInfo</name></type> <name>si</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>mb_type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>block_type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>luma_vlc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>chroma_vlc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is16</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>dmv</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>rv30</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>max_rpr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cur_pts</name></decl>, <name>last_pts</name>, <name>next_pts</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>scaled_weight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>weight1</name></decl>, <name>weight2</name>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>mv_weight1</name></decl>, <name>mv_weight2</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>orig_width</name></decl>, <name>orig_height</name>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>cbp_luma</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>cbp_chroma</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>deblock_coefs</name></decl>;</decl_stmt> 

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument>, <argument><expr><name>avail_cache</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">3</literal><operator>*</operator><literal type="number">4</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>tmp_b_block_y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>tmp_b_block_uv</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>tmp_b_block_base</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>parse_slice_header</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>RV34DecContext</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>SliceInfo</name> <modifier>*</modifier></type><name>si</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>decode_mb_info</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>RV34DecContext</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>decode_intra_types</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>RV34DecContext</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>int8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>loop_filter</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>RV34DecContext</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>row</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type><name>RV34DecContext</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_rv34_get_start_offset</name><parameter_list>(<parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>blocks</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_rv34_decode_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_rv34_decode_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>got_frame</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>avpkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_rv34_decode_end</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_rv34_decode_init_thread_copy</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_rv34_decode_update_thread_context</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVCodecContext</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
