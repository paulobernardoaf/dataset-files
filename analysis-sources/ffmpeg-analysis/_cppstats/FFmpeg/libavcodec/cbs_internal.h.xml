<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\cbs_internal.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"put_bits.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>CodedBitstreamType</name> <block>{

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>codec_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>priv_data_size</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>split_fragment</name>)<parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><name>CodedBitstreamFragment</name> <modifier>*</modifier></type><name>frag</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>header</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_unit</name>)<parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><name>CodedBitstreamUnit</name> <modifier>*</modifier></type><name>unit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_unit</name>)<parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><name>CodedBitstreamUnit</name> <modifier>*</modifier></type><name>unit</name></decl></parameter>,

<parameter><decl><type><name>PutBitContext</name> <modifier>*</modifier></type><name>pbc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>assemble_fragment</name>)<parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><name>CodedBitstreamFragment</name> <modifier>*</modifier></type><name>frag</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>close</name>)<parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>CodedBitstreamType</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_cbs_trace_header</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_cbs_trace_syntax_element</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>subscripts</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>bitstring</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_cbs_read_unsigned</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gbc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>subscripts</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>write_to</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>range_min</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>range_max</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_cbs_write_unsigned</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>PutBitContext</name> <modifier>*</modifier></type><name>pbc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>subscripts</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>value</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>range_min</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>range_max</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_cbs_read_signed</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gbc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>subscripts</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>write_to</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>range_min</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>range_max</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_cbs_write_signed</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>PutBitContext</name> <modifier>*</modifier></type><name>pbc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>subscripts</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>value</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>range_min</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>range_max</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_UINT_BITS</name><parameter_list>(<parameter><type><name>length</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((UINT64_C(1) &lt;&lt; (length)) - 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_INT_BITS</name><parameter_list>(<parameter><type><name>length</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((INT64_C(1) &lt;&lt; ((length) - 1)) - 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIN_INT_BITS</name><parameter_list>(<parameter><type><name>length</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(-(INT64_C(1) &lt;&lt; ((length) - 1)))</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>CodedBitstreamType</name></type> <name>ff_cbs_type_av1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>CodedBitstreamType</name></type> <name>ff_cbs_type_h264</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>CodedBitstreamType</name></type> <name>ff_cbs_type_h265</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>CodedBitstreamType</name></type> <name>ff_cbs_type_jpeg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>CodedBitstreamType</name></type> <name>ff_cbs_type_mpeg2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>CodedBitstreamType</name></type> <name>ff_cbs_type_vp9</name></decl>;</decl_stmt>

</unit>
