<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\faandct.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"faandct.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/libm.h"</cpp:file></cpp:include>

<typedef>typedef <type><name>float</name></type> <name>FLOAT</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B0</name></cpp:macro> <cpp:value>1.000000000000000000000000000000000000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B1</name></cpp:macro> <cpp:value>0.720959822006947913789091890943021267</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B2</name></cpp:macro> <cpp:value>0.765366864730179543456919968060797734</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B3</name></cpp:macro> <cpp:value>0.850430094767256448766702844371412325</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B4</name></cpp:macro> <cpp:value>1.000000000000000000000000000000000000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B5</name></cpp:macro> <cpp:value>1.272758580572833938461007018281767032</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B6</name></cpp:macro> <cpp:value>1.847759065022573512256366378793576574</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>B7</name></cpp:macro> <cpp:value>3.624509785411551372409941227504289587</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A1</name></cpp:macro> <cpp:value>M_SQRT1_2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A2</name></cpp:macro> <cpp:value>0.54119610014619698435</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A5</name></cpp:macro> <cpp:value>0.38268343236508977170</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A4</name></cpp:macro> <cpp:value>1.30656296487637652774</cpp:value></cpp:define> 

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>FLOAT</name></type> <name><name>postscale</name><index>[<expr><literal type="number">64</literal></expr>]</index></name><init>=<expr><block>{

<expr><name>B0</name><operator>*</operator><name>B0</name></expr>, <expr><name>B0</name><operator>*</operator><name>B1</name></expr>, <expr><name>B0</name><operator>*</operator><name>B2</name></expr>, <expr><name>B0</name><operator>*</operator><name>B3</name></expr>, <expr><name>B0</name><operator>*</operator><name>B4</name></expr>, <expr><name>B0</name><operator>*</operator><name>B5</name></expr>, <expr><name>B0</name><operator>*</operator><name>B6</name></expr>, <expr><name>B0</name><operator>*</operator><name>B7</name></expr>,

<expr><name>B1</name><operator>*</operator><name>B0</name></expr>, <expr><name>B1</name><operator>*</operator><name>B1</name></expr>, <expr><name>B1</name><operator>*</operator><name>B2</name></expr>, <expr><name>B1</name><operator>*</operator><name>B3</name></expr>, <expr><name>B1</name><operator>*</operator><name>B4</name></expr>, <expr><name>B1</name><operator>*</operator><name>B5</name></expr>, <expr><name>B1</name><operator>*</operator><name>B6</name></expr>, <expr><name>B1</name><operator>*</operator><name>B7</name></expr>,

<expr><name>B2</name><operator>*</operator><name>B0</name></expr>, <expr><name>B2</name><operator>*</operator><name>B1</name></expr>, <expr><name>B2</name><operator>*</operator><name>B2</name></expr>, <expr><name>B2</name><operator>*</operator><name>B3</name></expr>, <expr><name>B2</name><operator>*</operator><name>B4</name></expr>, <expr><name>B2</name><operator>*</operator><name>B5</name></expr>, <expr><name>B2</name><operator>*</operator><name>B6</name></expr>, <expr><name>B2</name><operator>*</operator><name>B7</name></expr>,

<expr><name>B3</name><operator>*</operator><name>B0</name></expr>, <expr><name>B3</name><operator>*</operator><name>B1</name></expr>, <expr><name>B3</name><operator>*</operator><name>B2</name></expr>, <expr><name>B3</name><operator>*</operator><name>B3</name></expr>, <expr><name>B3</name><operator>*</operator><name>B4</name></expr>, <expr><name>B3</name><operator>*</operator><name>B5</name></expr>, <expr><name>B3</name><operator>*</operator><name>B6</name></expr>, <expr><name>B3</name><operator>*</operator><name>B7</name></expr>,

<expr><name>B4</name><operator>*</operator><name>B0</name></expr>, <expr><name>B4</name><operator>*</operator><name>B1</name></expr>, <expr><name>B4</name><operator>*</operator><name>B2</name></expr>, <expr><name>B4</name><operator>*</operator><name>B3</name></expr>, <expr><name>B4</name><operator>*</operator><name>B4</name></expr>, <expr><name>B4</name><operator>*</operator><name>B5</name></expr>, <expr><name>B4</name><operator>*</operator><name>B6</name></expr>, <expr><name>B4</name><operator>*</operator><name>B7</name></expr>,

<expr><name>B5</name><operator>*</operator><name>B0</name></expr>, <expr><name>B5</name><operator>*</operator><name>B1</name></expr>, <expr><name>B5</name><operator>*</operator><name>B2</name></expr>, <expr><name>B5</name><operator>*</operator><name>B3</name></expr>, <expr><name>B5</name><operator>*</operator><name>B4</name></expr>, <expr><name>B5</name><operator>*</operator><name>B5</name></expr>, <expr><name>B5</name><operator>*</operator><name>B6</name></expr>, <expr><name>B5</name><operator>*</operator><name>B7</name></expr>,

<expr><name>B6</name><operator>*</operator><name>B0</name></expr>, <expr><name>B6</name><operator>*</operator><name>B1</name></expr>, <expr><name>B6</name><operator>*</operator><name>B2</name></expr>, <expr><name>B6</name><operator>*</operator><name>B3</name></expr>, <expr><name>B6</name><operator>*</operator><name>B4</name></expr>, <expr><name>B6</name><operator>*</operator><name>B5</name></expr>, <expr><name>B6</name><operator>*</operator><name>B6</name></expr>, <expr><name>B6</name><operator>*</operator><name>B7</name></expr>,

<expr><name>B7</name><operator>*</operator><name>B0</name></expr>, <expr><name>B7</name><operator>*</operator><name>B1</name></expr>, <expr><name>B7</name><operator>*</operator><name>B2</name></expr>, <expr><name>B7</name><operator>*</operator><name>B3</name></expr>, <expr><name>B7</name><operator>*</operator><name>B4</name></expr>, <expr><name>B7</name><operator>*</operator><name>B5</name></expr>, <expr><name>B7</name><operator>*</operator><name>B6</name></expr>, <expr><name>B7</name><operator>*</operator><name>B7</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>row_fdct</name><parameter_list>(<parameter><decl><type><name>FLOAT</name></type> <name><name>temp</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>tmp10</name></decl>, <decl><type ref="prev"/><name>tmp11</name></decl>, <decl><type ref="prev"/><name>tmp12</name></decl>, <decl><type ref="prev"/><name>tmp13</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>z2</name></decl>, <decl><type ref="prev"/><name>z4</name></decl>, <decl><type ref="prev"/><name>z11</name></decl>, <decl><type ref="prev"/><name>z13</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">8</literal><operator>*</operator><literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>+=</operator><literal type="number">8</literal></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>tmp0</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>data</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp7</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>data</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp1</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>data</name><index>[<expr><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp6</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>data</name><index>[<expr><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>data</name><index>[<expr><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>data</name><index>[<expr><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp3</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>data</name><index>[<expr><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp4</name><operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>data</name><index>[<expr><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp10</name><operator>=</operator> <name>tmp0</name> <operator>+</operator> <name>tmp3</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp13</name><operator>=</operator> <name>tmp0</name> <operator>-</operator> <name>tmp3</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp11</name><operator>=</operator> <name>tmp1</name> <operator>+</operator> <name>tmp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name><operator>=</operator> <name>tmp1</name> <operator>-</operator> <name>tmp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>tmp10</name> <operator>+</operator> <name>tmp11</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>tmp10</name> <operator>-</operator> <name>tmp11</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>+=</operator> <name>tmp13</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>*=</operator> <name>A1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>tmp13</name> <operator>+</operator> <name>tmp12</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>tmp13</name> <operator>-</operator> <name>tmp12</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp4</name> <operator>+=</operator> <name>tmp5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name> <operator>+=</operator> <name>tmp6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp6</name> <operator>+=</operator> <name>tmp7</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z2</name><operator>=</operator> <name>tmp4</name><operator>*</operator><operator>(</operator><name>A2</name><operator>+</operator><name>A5</name><operator>)</operator> <operator>-</operator> <name>tmp6</name><operator>*</operator><name>A5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z4</name><operator>=</operator> <name>tmp6</name><operator>*</operator><operator>(</operator><name>A4</name><operator>-</operator><name>A5</name><operator>)</operator> <operator>+</operator> <name>tmp4</name><operator>*</operator><name>A5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name><operator>*=</operator><name>A1</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z11</name><operator>=</operator> <name>tmp7</name> <operator>+</operator> <name>tmp5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z13</name><operator>=</operator> <name>tmp7</name> <operator>-</operator> <name>tmp5</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>z13</name> <operator>+</operator> <name>z2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>z13</name> <operator>-</operator> <name>z2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>z11</name> <operator>+</operator> <name>z4</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>temp</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <name>z11</name> <operator>-</operator> <name>z4</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_faandct</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>tmp10</name></decl>, <decl><type ref="prev"/><name>tmp11</name></decl>, <decl><type ref="prev"/><name>tmp12</name></decl>, <decl><type ref="prev"/><name>tmp13</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>z2</name></decl>, <decl><type ref="prev"/><name>z4</name></decl>, <decl><type ref="prev"/><name>z11</name></decl>, <decl><type ref="prev"/><name>z13</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>temp</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>emms_c</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>row_fdct</name><argument_list>(<argument><expr><name>temp</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>tmp0</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp7</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp1</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp6</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp3</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp4</name><operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp10</name><operator>=</operator> <name>tmp0</name> <operator>+</operator> <name>tmp3</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp13</name><operator>=</operator> <name>tmp0</name> <operator>-</operator> <name>tmp3</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp11</name><operator>=</operator> <name>tmp1</name> <operator>+</operator> <name>tmp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name><operator>=</operator> <name>tmp1</name> <operator>-</operator> <name>tmp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp10</name> <operator>+</operator> <name>tmp11</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp10</name> <operator>-</operator> <name>tmp11</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>+=</operator> <name>tmp13</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>*=</operator> <name>A1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp13</name> <operator>+</operator> <name>tmp12</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp13</name> <operator>-</operator> <name>tmp12</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp4</name> <operator>+=</operator> <name>tmp5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name> <operator>+=</operator> <name>tmp6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp6</name> <operator>+=</operator> <name>tmp7</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z2</name><operator>=</operator> <name>tmp4</name><operator>*</operator><operator>(</operator><name>A2</name><operator>+</operator><name>A5</name><operator>)</operator> <operator>-</operator> <name>tmp6</name><operator>*</operator><name>A5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z4</name><operator>=</operator> <name>tmp6</name><operator>*</operator><operator>(</operator><name>A4</name><operator>-</operator><name>A5</name><operator>)</operator> <operator>+</operator> <name>tmp4</name><operator>*</operator><name>A5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name><operator>*=</operator><name>A1</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z11</name><operator>=</operator> <name>tmp7</name> <operator>+</operator> <name>tmp5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>z13</name><operator>=</operator> <name>tmp7</name> <operator>-</operator> <name>tmp5</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>z13</name> <operator>+</operator> <name>z2</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>z13</name> <operator>-</operator> <name>z2</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>z11</name> <operator>+</operator> <name>z4</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name><operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>z11</name> <operator>-</operator> <name>z4</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_faandct248</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>tmp10</name></decl>, <decl><type ref="prev"/><name>tmp11</name></decl>, <decl><type ref="prev"/><name>tmp12</name></decl>, <decl><type ref="prev"/><name>tmp13</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>temp</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>emms_c</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>row_fdct</name><argument_list>(<argument><expr><name>temp</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>+</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp4</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp6</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp7</name> <operator>=</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>-</operator> <name><name>temp</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp10</name> <operator>=</operator> <name>tmp0</name> <operator>+</operator> <name>tmp3</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp11</name> <operator>=</operator> <name>tmp1</name> <operator>+</operator> <name>tmp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>=</operator> <name>tmp1</name> <operator>-</operator> <name>tmp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp13</name> <operator>=</operator> <name>tmp0</name> <operator>-</operator> <name>tmp3</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp10</name> <operator>+</operator> <name>tmp11</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp10</name> <operator>-</operator> <name>tmp11</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>+=</operator> <name>tmp13</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>*=</operator> <name>A1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp13</name> <operator>+</operator> <name>tmp12</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp13</name> <operator>-</operator> <name>tmp12</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp10</name> <operator>=</operator> <name>tmp4</name> <operator>+</operator> <name>tmp7</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp11</name> <operator>=</operator> <name>tmp5</name> <operator>+</operator> <name>tmp6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>=</operator> <name>tmp5</name> <operator>-</operator> <name>tmp6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp13</name> <operator>=</operator> <name>tmp4</name> <operator>-</operator> <name>tmp7</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">0</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp10</name> <operator>+</operator> <name>tmp11</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">5</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp10</name> <operator>-</operator> <name>tmp11</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>+=</operator> <name>tmp13</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp12</name> <operator>*=</operator> <name>A1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp13</name> <operator>+</operator> <name>tmp12</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>data</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">7</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>lrintf</name><argument_list>(<argument><expr><name><name>postscale</name><index>[<expr><literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>tmp13</name> <operator>-</operator> <name>tmp12</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

</unit>
