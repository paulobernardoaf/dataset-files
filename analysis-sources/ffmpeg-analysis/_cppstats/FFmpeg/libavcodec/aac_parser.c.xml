<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\aac_parser.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parser.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"aac_ac3_parser.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"adts_header.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"adts_parser.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpeg4audio.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>int</name></type> <name>aac_sync</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>state</name></decl></parameter>, <parameter><decl><type><name>AACAC3ParseContext</name> <modifier>*</modifier></type><name>hdr_info</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>need_next_header</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>new_frame_start</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GetBitContext</name></type> <name>bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AACADTSHeaderInfo</name></type> <name>hdr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>uint64_t</name></type> <name>u64</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>u8</name><index>[<expr><literal type="number">8</literal> <operator>+</operator> <name>AV_INPUT_BUFFER_PADDING_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name>tmp</name></decl>;</union>

<expr_stmt><expr><name><name>tmp</name><operator>.</operator><name>u64</name></name> <operator>=</operator> <call><name>av_be2ne64</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>bits</name></expr></argument>, <argument><expr><name><name>tmp</name><operator>.</operator><name>u8</name></name> <operator>+</operator> <literal type="number">8</literal> <operator>-</operator> <name>AV_AAC_ADTS_HEADER_SIZE</name></expr></argument>,

<argument><expr><name>AV_AAC_ADTS_HEADER_SIZE</name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>size</name> <operator>=</operator> <call><name>ff_adts_header_parse</name><argument_list>(<argument><expr><operator>&amp;</operator><name>bits</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>hdr</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>need_next_header</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>new_frame_start</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>hdr_info</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <name><name>hdr</name><operator>.</operator><name>sample_rate</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>hdr_info</name><operator>-&gt;</operator><name>channels</name></name> <operator>=</operator> <name><name>ff_mpeg4audio_channels</name><index>[<expr><name><name>hdr</name><operator>.</operator><name>chan_config</name></name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>hdr_info</name><operator>-&gt;</operator><name>samples</name></name> <operator>=</operator> <name><name>hdr</name><operator>.</operator><name>samples</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>hdr_info</name><operator>-&gt;</operator><name>bit_rate</name></name> <operator>=</operator> <name><name>hdr</name><operator>.</operator><name>bit_rate</name></name></expr>;</expr_stmt>

<return>return <expr><name>size</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_cold</name> <name>int</name></type> <name>aac_parse_init</name><parameter_list>(<parameter><decl><type><name>AVCodecParserContext</name> <modifier>*</modifier></type><name>s1</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>AACAC3ParseContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>s1</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>header_size</name></name> <operator>=</operator> <name>AV_AAC_ADTS_HEADER_SIZE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>sync</name></name> <operator>=</operator> <name>aac_sync</name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name>AVCodecParser</name></type> <name>ff_aac_parser</name> <init>= <expr><block>{

<expr><operator>.</operator><name>codec_ids</name> <operator>=</operator> <block>{ <expr><name>AV_CODEC_ID_AAC</name></expr> }</block></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>AACAC3ParseContext</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>parser_init</name> <operator>=</operator> <name>aac_parse_init</name></expr>,

<expr><operator>.</operator><name>parser_parse</name> <operator>=</operator> <name>ff_aac_ac3_parse</name></expr>,

<expr><operator>.</operator><name>parser_close</name> <operator>=</operator> <name>ff_parse_close</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
