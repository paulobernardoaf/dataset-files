<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\dcahuff.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dcahuff.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TMODE_COUNT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tmode_vlc_bits</name><index>[<expr><name>TMODE_COUNT</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>tmode_codes</name><index>[<expr><name>TMODE_COUNT</name></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0007</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0000</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0003</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tmode_bits</name><index>[<expr><name>TMODE_COUNT</name></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITALLOC_12_VLC_BITS</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_12_vlc_bits</name><index>[<expr><name>DCA_BITALLOC_12_COUNT</name></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_12_codes</name><index>[<expr><name>DCA_BITALLOC_12_COUNT</name></expr>]</index><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x003E</literal></expr>, <expr><literal type="number">0x00FF</literal></expr>, <expr><literal type="number">0x00FE</literal></expr>,

<expr><literal type="number">0x01FB</literal></expr>, <expr><literal type="number">0x01FA</literal></expr>, <expr><literal type="number">0x01F9</literal></expr>, <expr><literal type="number">0x01F8</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0039</literal></expr>, <expr><literal type="number">0x0038</literal></expr>,

<expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0039</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x003E</literal></expr>,

<expr><literal type="number">0x007E</literal></expr>, <expr><literal type="number">0x00FE</literal></expr>, <expr><literal type="number">0x01FF</literal></expr>, <expr><literal type="number">0x01FE</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x007C</literal></expr>,

<expr><literal type="number">0x0079</literal></expr>, <expr><literal type="number">0x0078</literal></expr>, <expr><literal type="number">0x00FB</literal></expr>, <expr><literal type="number">0x00FA</literal></expr>, }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_12_bits</name><index>[<expr><name>DCA_BITALLOC_12_COUNT</name></expr>]</index><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALES_COUNT</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALES_VLC_BITS</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>scales_codes</name><index>[<expr><name>SCALES_COUNT</name></expr>]</index><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">0x3AB0</literal></expr>, <expr><literal type="number">0x3AB2</literal></expr>, <expr><literal type="number">0x3AB4</literal></expr>, <expr><literal type="number">0x3AB6</literal></expr>, <expr><literal type="number">0x3AB8</literal></expr>, <expr><literal type="number">0x3ABA</literal></expr>, <expr><literal type="number">0x3ABC</literal></expr>, <expr><literal type="number">0x3ABE</literal></expr>,

<expr><literal type="number">0x3AC0</literal></expr>, <expr><literal type="number">0x3AC2</literal></expr>, <expr><literal type="number">0x3AC4</literal></expr>, <expr><literal type="number">0x3AC6</literal></expr>, <expr><literal type="number">0x3AC8</literal></expr>, <expr><literal type="number">0x3ACA</literal></expr>, <expr><literal type="number">0x3ACC</literal></expr>, <expr><literal type="number">0x3ACE</literal></expr>,

<expr><literal type="number">0x3AD0</literal></expr>, <expr><literal type="number">0x3AD2</literal></expr>, <expr><literal type="number">0x3AD4</literal></expr>, <expr><literal type="number">0x3AD6</literal></expr>, <expr><literal type="number">0x3AD8</literal></expr>, <expr><literal type="number">0x3ADA</literal></expr>, <expr><literal type="number">0x3ADC</literal></expr>, <expr><literal type="number">0x3ADE</literal></expr>,

<expr><literal type="number">0x3AE0</literal></expr>, <expr><literal type="number">0x3AE2</literal></expr>, <expr><literal type="number">0x3AE4</literal></expr>, <expr><literal type="number">0x3AE6</literal></expr>, <expr><literal type="number">0x3AE8</literal></expr>, <expr><literal type="number">0x3AEA</literal></expr>, <expr><literal type="number">0x3AEC</literal></expr>, <expr><literal type="number">0x3AEE</literal></expr>,

<expr><literal type="number">0x3AF0</literal></expr>, <expr><literal type="number">0x3AF2</literal></expr>, <expr><literal type="number">0x3AF4</literal></expr>, <expr><literal type="number">0x3AF6</literal></expr>, <expr><literal type="number">0x3AF8</literal></expr>, <expr><literal type="number">0x3AFA</literal></expr>, <expr><literal type="number">0x3AFC</literal></expr>, <expr><literal type="number">0x3AFE</literal></expr>,

<expr><literal type="number">0x0540</literal></expr>, <expr><literal type="number">0x0542</literal></expr>, <expr><literal type="number">0x0544</literal></expr>, <expr><literal type="number">0x0546</literal></expr>, <expr><literal type="number">0x0548</literal></expr>, <expr><literal type="number">0x054A</literal></expr>, <expr><literal type="number">0x054C</literal></expr>, <expr><literal type="number">0x054E</literal></expr>,

<expr><literal type="number">0x0558</literal></expr>, <expr><literal type="number">0x055E</literal></expr>, <expr><literal type="number">0x02AD</literal></expr>, <expr><literal type="number">0x0154</literal></expr>, <expr><literal type="number">0x0754</literal></expr>, <expr><literal type="number">0x03A8</literal></expr>, <expr><literal type="number">0x0056</literal></expr>, <expr><literal type="number">0x0028</literal></expr>,

<expr><literal type="number">0x00E8</literal></expr>, <expr><literal type="number">0x004A</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x004B</literal></expr>,

<expr><literal type="number">0x00E9</literal></expr>, <expr><literal type="number">0x0029</literal></expr>, <expr><literal type="number">0x0057</literal></expr>, <expr><literal type="number">0x03A9</literal></expr>, <expr><literal type="number">0x0755</literal></expr>, <expr><literal type="number">0x0155</literal></expr>, <expr><literal type="number">0x02AE</literal></expr>, <expr><literal type="number">0x055F</literal></expr>,

<expr><literal type="number">0x0559</literal></expr>, <expr><literal type="number">0x054F</literal></expr>, <expr><literal type="number">0x054D</literal></expr>, <expr><literal type="number">0x054B</literal></expr>, <expr><literal type="number">0x0549</literal></expr>, <expr><literal type="number">0x0547</literal></expr>, <expr><literal type="number">0x0545</literal></expr>, <expr><literal type="number">0x0543</literal></expr>,

<expr><literal type="number">0x0541</literal></expr>, <expr><literal type="number">0x3AFF</literal></expr>, <expr><literal type="number">0x3AFD</literal></expr>, <expr><literal type="number">0x3AFB</literal></expr>, <expr><literal type="number">0x3AF9</literal></expr>, <expr><literal type="number">0x3AF7</literal></expr>, <expr><literal type="number">0x3AF5</literal></expr>, <expr><literal type="number">0x3AF3</literal></expr>,

<expr><literal type="number">0x3AF1</literal></expr>, <expr><literal type="number">0x3AEF</literal></expr>, <expr><literal type="number">0x3AED</literal></expr>, <expr><literal type="number">0x3AEB</literal></expr>, <expr><literal type="number">0x3AE9</literal></expr>, <expr><literal type="number">0x3AE7</literal></expr>, <expr><literal type="number">0x3AE5</literal></expr>, <expr><literal type="number">0x3AE3</literal></expr>,

<expr><literal type="number">0x3AE1</literal></expr>, <expr><literal type="number">0x3ADF</literal></expr>, <expr><literal type="number">0x3ADD</literal></expr>, <expr><literal type="number">0x3ADB</literal></expr>, <expr><literal type="number">0x3AD9</literal></expr>, <expr><literal type="number">0x3AD7</literal></expr>, <expr><literal type="number">0x3AD5</literal></expr>, <expr><literal type="number">0x3AD3</literal></expr>,

<expr><literal type="number">0x3AD1</literal></expr>, <expr><literal type="number">0x3ACF</literal></expr>, <expr><literal type="number">0x3ACD</literal></expr>, <expr><literal type="number">0x3ACB</literal></expr>, <expr><literal type="number">0x3AC9</literal></expr>, <expr><literal type="number">0x3AC7</literal></expr>, <expr><literal type="number">0x3AC5</literal></expr>, <expr><literal type="number">0x3AC3</literal></expr>,

<expr><literal type="number">0x3AC1</literal></expr>, <expr><literal type="number">0x3ABF</literal></expr>, <expr><literal type="number">0x3ABD</literal></expr>, <expr><literal type="number">0x3ABB</literal></expr>, <expr><literal type="number">0x3AB9</literal></expr>, <expr><literal type="number">0x3AB7</literal></expr>, <expr><literal type="number">0x3AB5</literal></expr>, <expr><literal type="number">0x3AB3</literal></expr>,

<expr><literal type="number">0x3AB1</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0x0F60</literal></expr>, <expr><literal type="number">0x0F62</literal></expr>, <expr><literal type="number">0x0F64</literal></expr>, <expr><literal type="number">0x0F66</literal></expr>, <expr><literal type="number">0x0F68</literal></expr>, <expr><literal type="number">0x0F6A</literal></expr>, <expr><literal type="number">0x0F6C</literal></expr>, <expr><literal type="number">0x0F6E</literal></expr>,

<expr><literal type="number">0x0F70</literal></expr>, <expr><literal type="number">0x0F72</literal></expr>, <expr><literal type="number">0x0F74</literal></expr>, <expr><literal type="number">0x0F76</literal></expr>, <expr><literal type="number">0x0F78</literal></expr>, <expr><literal type="number">0x0F7A</literal></expr>, <expr><literal type="number">0x0F7C</literal></expr>, <expr><literal type="number">0x0F7E</literal></expr>,

<expr><literal type="number">0x0F80</literal></expr>, <expr><literal type="number">0x0F82</literal></expr>, <expr><literal type="number">0x0F84</literal></expr>, <expr><literal type="number">0x0F86</literal></expr>, <expr><literal type="number">0x0F88</literal></expr>, <expr><literal type="number">0x0F8A</literal></expr>, <expr><literal type="number">0x0F8C</literal></expr>, <expr><literal type="number">0x0F8E</literal></expr>,

<expr><literal type="number">0x0F90</literal></expr>, <expr><literal type="number">0x0F92</literal></expr>, <expr><literal type="number">0x0F94</literal></expr>, <expr><literal type="number">0x0F96</literal></expr>, <expr><literal type="number">0x0F98</literal></expr>, <expr><literal type="number">0x0F9A</literal></expr>, <expr><literal type="number">0x0F9C</literal></expr>, <expr><literal type="number">0x0F9E</literal></expr>,

<expr><literal type="number">0x0FA0</literal></expr>, <expr><literal type="number">0x0FA2</literal></expr>, <expr><literal type="number">0x0FA4</literal></expr>, <expr><literal type="number">0x0FA6</literal></expr>, <expr><literal type="number">0x0FA8</literal></expr>, <expr><literal type="number">0x0FAA</literal></expr>, <expr><literal type="number">0x0FAC</literal></expr>, <expr><literal type="number">0x0FAE</literal></expr>,

<expr><literal type="number">0x0FB0</literal></expr>, <expr><literal type="number">0x0FB2</literal></expr>, <expr><literal type="number">0x0FB4</literal></expr>, <expr><literal type="number">0x0FB6</literal></expr>, <expr><literal type="number">0x0FB8</literal></expr>, <expr><literal type="number">0x0FBA</literal></expr>, <expr><literal type="number">0x0FBC</literal></expr>, <expr><literal type="number">0x0FBE</literal></expr>,

<expr><literal type="number">0x07A0</literal></expr>, <expr><literal type="number">0x07A2</literal></expr>, <expr><literal type="number">0x03D2</literal></expr>, <expr><literal type="number">0x01EA</literal></expr>, <expr><literal type="number">0x00FC</literal></expr>, <expr><literal type="number">0x007F</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x000C</literal></expr>,

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0001</literal></expr>,

<expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0035</literal></expr>,

<expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x00FD</literal></expr>, <expr><literal type="number">0x01EB</literal></expr>, <expr><literal type="number">0x03D3</literal></expr>, <expr><literal type="number">0x07A3</literal></expr>,

<expr><literal type="number">0x07A1</literal></expr>, <expr><literal type="number">0x0FBF</literal></expr>, <expr><literal type="number">0x0FBD</literal></expr>, <expr><literal type="number">0x0FBB</literal></expr>, <expr><literal type="number">0x0FB9</literal></expr>, <expr><literal type="number">0x0FB7</literal></expr>, <expr><literal type="number">0x0FB5</literal></expr>, <expr><literal type="number">0x0FB3</literal></expr>,

<expr><literal type="number">0x0FB1</literal></expr>, <expr><literal type="number">0x0FAF</literal></expr>, <expr><literal type="number">0x0FAD</literal></expr>, <expr><literal type="number">0x0FAB</literal></expr>, <expr><literal type="number">0x0FA9</literal></expr>, <expr><literal type="number">0x0FA7</literal></expr>, <expr><literal type="number">0x0FA5</literal></expr>, <expr><literal type="number">0x0FA3</literal></expr>,

<expr><literal type="number">0x0FA1</literal></expr>, <expr><literal type="number">0x0F9F</literal></expr>, <expr><literal type="number">0x0F9D</literal></expr>, <expr><literal type="number">0x0F9B</literal></expr>, <expr><literal type="number">0x0F99</literal></expr>, <expr><literal type="number">0x0F97</literal></expr>, <expr><literal type="number">0x0F95</literal></expr>, <expr><literal type="number">0x0F93</literal></expr>,

<expr><literal type="number">0x0F91</literal></expr>, <expr><literal type="number">0x0F8F</literal></expr>, <expr><literal type="number">0x0F8D</literal></expr>, <expr><literal type="number">0x0F8B</literal></expr>, <expr><literal type="number">0x0F89</literal></expr>, <expr><literal type="number">0x0F87</literal></expr>, <expr><literal type="number">0x0F85</literal></expr>, <expr><literal type="number">0x0F83</literal></expr>,

<expr><literal type="number">0x0F81</literal></expr>, <expr><literal type="number">0x0F7F</literal></expr>, <expr><literal type="number">0x0F7D</literal></expr>, <expr><literal type="number">0x0F7B</literal></expr>, <expr><literal type="number">0x0F79</literal></expr>, <expr><literal type="number">0x0F77</literal></expr>, <expr><literal type="number">0x0F75</literal></expr>, <expr><literal type="number">0x0F73</literal></expr>,

<expr><literal type="number">0x0F71</literal></expr>, <expr><literal type="number">0x0F6F</literal></expr>, <expr><literal type="number">0x0F6D</literal></expr>, <expr><literal type="number">0x0F6B</literal></expr>, <expr><literal type="number">0x0F69</literal></expr>, <expr><literal type="number">0x0F67</literal></expr>, <expr><literal type="number">0x0F65</literal></expr>, <expr><literal type="number">0x0F63</literal></expr>,

<expr><literal type="number">0x0F61</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0x51D0</literal></expr>, <expr><literal type="number">0x51D2</literal></expr>, <expr><literal type="number">0x51D4</literal></expr>, <expr><literal type="number">0x51D6</literal></expr>, <expr><literal type="number">0x51D8</literal></expr>, <expr><literal type="number">0x51DA</literal></expr>, <expr><literal type="number">0x51DC</literal></expr>, <expr><literal type="number">0x51DE</literal></expr>,

<expr><literal type="number">0x51E0</literal></expr>, <expr><literal type="number">0x51E2</literal></expr>, <expr><literal type="number">0x51E4</literal></expr>, <expr><literal type="number">0x51E6</literal></expr>, <expr><literal type="number">0x51E8</literal></expr>, <expr><literal type="number">0x51EA</literal></expr>, <expr><literal type="number">0x51EC</literal></expr>, <expr><literal type="number">0x51EE</literal></expr>,

<expr><literal type="number">0x51F0</literal></expr>, <expr><literal type="number">0x51F2</literal></expr>, <expr><literal type="number">0x51F4</literal></expr>, <expr><literal type="number">0x51F6</literal></expr>, <expr><literal type="number">0x51F8</literal></expr>, <expr><literal type="number">0x51FA</literal></expr>, <expr><literal type="number">0x51FC</literal></expr>, <expr><literal type="number">0x51FE</literal></expr>,

<expr><literal type="number">0x70C0</literal></expr>, <expr><literal type="number">0x70C2</literal></expr>, <expr><literal type="number">0x70C4</literal></expr>, <expr><literal type="number">0x70C6</literal></expr>, <expr><literal type="number">0x70C8</literal></expr>, <expr><literal type="number">0x70CA</literal></expr>, <expr><literal type="number">0x70CC</literal></expr>, <expr><literal type="number">0x70CE</literal></expr>,

<expr><literal type="number">0x70EC</literal></expr>, <expr><literal type="number">0x10EA</literal></expr>, <expr><literal type="number">0x3868</literal></expr>, <expr><literal type="number">0x3877</literal></expr>, <expr><literal type="number">0x0876</literal></expr>, <expr><literal type="number">0x1C35</literal></expr>, <expr><literal type="number">0x0434</literal></expr>, <expr><literal type="number">0x0A34</literal></expr>,

<expr><literal type="number">0x0E1B</literal></expr>, <expr><literal type="number">0x021B</literal></expr>, <expr><literal type="number">0x051B</literal></expr>, <expr><literal type="number">0x070F</literal></expr>, <expr><literal type="number">0x010F</literal></expr>, <expr><literal type="number">0x0380</literal></expr>, <expr><literal type="number">0x0080</literal></expr>, <expr><literal type="number">0x0140</literal></expr>,

<expr><literal type="number">0x01C1</literal></expr>, <expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x00A1</literal></expr>, <expr><literal type="number">0x00E2</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x0052</literal></expr>, <expr><literal type="number">0x0072</literal></expr>, <expr><literal type="number">0x0012</literal></expr>,

<expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0000</literal></expr>,

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>,

<expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x00E3</literal></expr>, <expr><literal type="number">0x00A2</literal></expr>, <expr><literal type="number">0x0042</literal></expr>,

<expr><literal type="number">0x01C2</literal></expr>, <expr><literal type="number">0x0141</literal></expr>, <expr><literal type="number">0x0081</literal></expr>, <expr><literal type="number">0x0381</literal></expr>, <expr><literal type="number">0x028C</literal></expr>, <expr><literal type="number">0x010C</literal></expr>, <expr><literal type="number">0x051C</literal></expr>, <expr><literal type="number">0x021C</literal></expr>,

<expr><literal type="number">0x0E1C</literal></expr>, <expr><literal type="number">0x0A35</literal></expr>, <expr><literal type="number">0x0435</literal></expr>, <expr><literal type="number">0x1C3A</literal></expr>, <expr><literal type="number">0x0877</literal></expr>, <expr><literal type="number">0x0874</literal></expr>, <expr><literal type="number">0x3869</literal></expr>, <expr><literal type="number">0x10EB</literal></expr>,

<expr><literal type="number">0x70ED</literal></expr>, <expr><literal type="number">0x70CF</literal></expr>, <expr><literal type="number">0x70CD</literal></expr>, <expr><literal type="number">0x70CB</literal></expr>, <expr><literal type="number">0x70C9</literal></expr>, <expr><literal type="number">0x70C7</literal></expr>, <expr><literal type="number">0x70C5</literal></expr>, <expr><literal type="number">0x70C3</literal></expr>,

<expr><literal type="number">0x70C1</literal></expr>, <expr><literal type="number">0x51FF</literal></expr>, <expr><literal type="number">0x51FD</literal></expr>, <expr><literal type="number">0x51FB</literal></expr>, <expr><literal type="number">0x51F9</literal></expr>, <expr><literal type="number">0x51F7</literal></expr>, <expr><literal type="number">0x51F5</literal></expr>, <expr><literal type="number">0x51F3</literal></expr>,

<expr><literal type="number">0x51F1</literal></expr>, <expr><literal type="number">0x51EF</literal></expr>, <expr><literal type="number">0x51ED</literal></expr>, <expr><literal type="number">0x51EB</literal></expr>, <expr><literal type="number">0x51E9</literal></expr>, <expr><literal type="number">0x51E7</literal></expr>, <expr><literal type="number">0x51E5</literal></expr>, <expr><literal type="number">0x51E3</literal></expr>,

<expr><literal type="number">0x51E1</literal></expr>, <expr><literal type="number">0x51DF</literal></expr>, <expr><literal type="number">0x51DD</literal></expr>, <expr><literal type="number">0x51DB</literal></expr>, <expr><literal type="number">0x51D9</literal></expr>, <expr><literal type="number">0x51D7</literal></expr>, <expr><literal type="number">0x51D5</literal></expr>, <expr><literal type="number">0x51D3</literal></expr>,

<expr><literal type="number">0x51D1</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0x6F64</literal></expr>, <expr><literal type="number">0x6F66</literal></expr>, <expr><literal type="number">0x6F68</literal></expr>, <expr><literal type="number">0x6F6A</literal></expr>, <expr><literal type="number">0x6F6C</literal></expr>, <expr><literal type="number">0x6F6E</literal></expr>, <expr><literal type="number">0x6F70</literal></expr>, <expr><literal type="number">0x6F72</literal></expr>,

<expr><literal type="number">0x6F74</literal></expr>, <expr><literal type="number">0x6F76</literal></expr>, <expr><literal type="number">0x6F78</literal></expr>, <expr><literal type="number">0x6F7A</literal></expr>, <expr><literal type="number">0x6F7C</literal></expr>, <expr><literal type="number">0x6F7E</literal></expr>, <expr><literal type="number">0x6F80</literal></expr>, <expr><literal type="number">0x6F82</literal></expr>,

<expr><literal type="number">0x6F84</literal></expr>, <expr><literal type="number">0x6F86</literal></expr>, <expr><literal type="number">0x6F88</literal></expr>, <expr><literal type="number">0x6F8A</literal></expr>, <expr><literal type="number">0x6F8C</literal></expr>, <expr><literal type="number">0x6F8E</literal></expr>, <expr><literal type="number">0x6F90</literal></expr>, <expr><literal type="number">0x6F92</literal></expr>,

<expr><literal type="number">0x6F94</literal></expr>, <expr><literal type="number">0x6F96</literal></expr>, <expr><literal type="number">0x6F98</literal></expr>, <expr><literal type="number">0x6F9A</literal></expr>, <expr><literal type="number">0x6F9C</literal></expr>, <expr><literal type="number">0x6F9E</literal></expr>, <expr><literal type="number">0x6FA0</literal></expr>, <expr><literal type="number">0x6FA2</literal></expr>,

<expr><literal type="number">0x6FA4</literal></expr>, <expr><literal type="number">0x6FA6</literal></expr>, <expr><literal type="number">0x6FA8</literal></expr>, <expr><literal type="number">0x6FAA</literal></expr>, <expr><literal type="number">0x6FAC</literal></expr>, <expr><literal type="number">0x6FAE</literal></expr>, <expr><literal type="number">0x6FB0</literal></expr>, <expr><literal type="number">0x6FB2</literal></expr>,

<expr><literal type="number">0x6FB4</literal></expr>, <expr><literal type="number">0x6FB6</literal></expr>, <expr><literal type="number">0x17B4</literal></expr>, <expr><literal type="number">0x37DC</literal></expr>, <expr><literal type="number">0x0BDB</literal></expr>, <expr><literal type="number">0x1BEF</literal></expr>, <expr><literal type="number">0x05EE</literal></expr>, <expr><literal type="number">0x0DF8</literal></expr>,

<expr><literal type="number">0x02F8</literal></expr>, <expr><literal type="number">0x06FD</literal></expr>, <expr><literal type="number">0x017D</literal></expr>, <expr><literal type="number">0x037F</literal></expr>, <expr><literal type="number">0x00BF</literal></expr>, <expr><literal type="number">0x0040</literal></expr>, <expr><literal type="number">0x00C0</literal></expr>, <expr><literal type="number">0x0021</literal></expr>,

<expr><literal type="number">0x0061</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x0016</literal></expr>,

<expr><literal type="number">0x006E</literal></expr>, <expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x00C1</literal></expr>, <expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x01BC</literal></expr>, <expr><literal type="number">0x00BC</literal></expr>, <expr><literal type="number">0x037A</literal></expr>, <expr><literal type="number">0x017A</literal></expr>,

<expr><literal type="number">0x02F9</literal></expr>, <expr><literal type="number">0x0DF9</literal></expr>, <expr><literal type="number">0x05EF</literal></expr>, <expr><literal type="number">0x05EC</literal></expr>, <expr><literal type="number">0x1BD8</literal></expr>, <expr><literal type="number">0x37DD</literal></expr>, <expr><literal type="number">0x17B5</literal></expr>, <expr><literal type="number">0x6FB7</literal></expr>,

<expr><literal type="number">0x6FB5</literal></expr>, <expr><literal type="number">0x6FB3</literal></expr>, <expr><literal type="number">0x6FB1</literal></expr>, <expr><literal type="number">0x6FAF</literal></expr>, <expr><literal type="number">0x6FAD</literal></expr>, <expr><literal type="number">0x6FAB</literal></expr>, <expr><literal type="number">0x6FA9</literal></expr>, <expr><literal type="number">0x6FA7</literal></expr>,

<expr><literal type="number">0x6FA5</literal></expr>, <expr><literal type="number">0x6FA3</literal></expr>, <expr><literal type="number">0x6FA1</literal></expr>, <expr><literal type="number">0x6F9F</literal></expr>, <expr><literal type="number">0x6F9D</literal></expr>, <expr><literal type="number">0x6F9B</literal></expr>, <expr><literal type="number">0x6F99</literal></expr>, <expr><literal type="number">0x6F97</literal></expr>,

<expr><literal type="number">0x6F95</literal></expr>, <expr><literal type="number">0x6F93</literal></expr>, <expr><literal type="number">0x6F91</literal></expr>, <expr><literal type="number">0x6F8F</literal></expr>, <expr><literal type="number">0x6F8D</literal></expr>, <expr><literal type="number">0x6F8B</literal></expr>, <expr><literal type="number">0x6F89</literal></expr>, <expr><literal type="number">0x6F87</literal></expr>,

<expr><literal type="number">0x6F85</literal></expr>, <expr><literal type="number">0x6F83</literal></expr>, <expr><literal type="number">0x6F81</literal></expr>, <expr><literal type="number">0x6F7F</literal></expr>, <expr><literal type="number">0x6F7D</literal></expr>, <expr><literal type="number">0x6F7B</literal></expr>, <expr><literal type="number">0x6F79</literal></expr>, <expr><literal type="number">0x6F77</literal></expr>,

<expr><literal type="number">0x6F75</literal></expr>, <expr><literal type="number">0x6F73</literal></expr>, <expr><literal type="number">0x6F71</literal></expr>, <expr><literal type="number">0x6F6F</literal></expr>, <expr><literal type="number">0x6F6D</literal></expr>, <expr><literal type="number">0x6F6B</literal></expr>, <expr><literal type="number">0x6F69</literal></expr>, <expr><literal type="number">0x6F67</literal></expr>,

<expr><literal type="number">0x6F65</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">0xDF54</literal></expr>, <expr><literal type="number">0xDF56</literal></expr>, <expr><literal type="number">0xDFC8</literal></expr>, <expr><literal type="number">0xDFCA</literal></expr>, <expr><literal type="number">0xDFCC</literal></expr>, <expr><literal type="number">0xDFCE</literal></expr>, <expr><literal type="number">0xDFD0</literal></expr>, <expr><literal type="number">0xDFD2</literal></expr>,

<expr><literal type="number">0xDFD4</literal></expr>, <expr><literal type="number">0xDFD6</literal></expr>, <expr><literal type="number">0xDFD8</literal></expr>, <expr><literal type="number">0xDFDA</literal></expr>, <expr><literal type="number">0xDFDC</literal></expr>, <expr><literal type="number">0xDFDE</literal></expr>, <expr><literal type="number">0xDFE0</literal></expr>, <expr><literal type="number">0xDFE2</literal></expr>,

<expr><literal type="number">0x0FE8</literal></expr>, <expr><literal type="number">0x2FEA</literal></expr>, <expr><literal type="number">0x6FA8</literal></expr>, <expr><literal type="number">0x6FF6</literal></expr>, <expr><literal type="number">0x07F5</literal></expr>, <expr><literal type="number">0x07F7</literal></expr>, <expr><literal type="number">0x37D2</literal></expr>, <expr><literal type="number">0x37F9</literal></expr>,

<expr><literal type="number">0x03F8</literal></expr>, <expr><literal type="number">0x0BF8</literal></expr>, <expr><literal type="number">0x0BFB</literal></expr>, <expr><literal type="number">0x1BEB</literal></expr>, <expr><literal type="number">0x01FA</literal></expr>, <expr><literal type="number">0x05FA</literal></expr>, <expr><literal type="number">0x09FA</literal></expr>, <expr><literal type="number">0x0DFA</literal></expr>,

<expr><literal type="number">0x0DFF</literal></expr>, <expr><literal type="number">0x00FF</literal></expr>, <expr><literal type="number">0x02FF</literal></expr>, <expr><literal type="number">0x06FB</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x017C</literal></expr>, <expr><literal type="number">0x027C</literal></expr>, <expr><literal type="number">0x027F</literal></expr>,

<expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x00BC</literal></expr>, <expr><literal type="number">0x013C</literal></expr>, <expr><literal type="number">0x01BC</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x005C</literal></expr>, <expr><literal type="number">0x009C</literal></expr>, <expr><literal type="number">0x00DC</literal></expr>,

<expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x004C</literal></expr>, <expr><literal type="number">0x006C</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0034</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000A</literal></expr>,

<expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0009</literal></expr>,

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x0025</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x006D</literal></expr>, <expr><literal type="number">0x004D</literal></expr>, <expr><literal type="number">0x002D</literal></expr>,

<expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x00DD</literal></expr>, <expr><literal type="number">0x009D</literal></expr>, <expr><literal type="number">0x005D</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x01BD</literal></expr>, <expr><literal type="number">0x013D</literal></expr>, <expr><literal type="number">0x00BD</literal></expr>,

<expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x037C</literal></expr>, <expr><literal type="number">0x027D</literal></expr>, <expr><literal type="number">0x017D</literal></expr>, <expr><literal type="number">0x007D</literal></expr>, <expr><literal type="number">0x06FC</literal></expr>, <expr><literal type="number">0x04FC</literal></expr>, <expr><literal type="number">0x02FC</literal></expr>,

<expr><literal type="number">0x00FC</literal></expr>, <expr><literal type="number">0x0DFB</literal></expr>, <expr><literal type="number">0x09FB</literal></expr>, <expr><literal type="number">0x05FB</literal></expr>, <expr><literal type="number">0x01FB</literal></expr>, <expr><literal type="number">0x1BF8</literal></expr>, <expr><literal type="number">0x1BE8</literal></expr>, <expr><literal type="number">0x0BF9</literal></expr>,

<expr><literal type="number">0x03F9</literal></expr>, <expr><literal type="number">0x37FA</literal></expr>, <expr><literal type="number">0x37D3</literal></expr>, <expr><literal type="number">0x17F4</literal></expr>, <expr><literal type="number">0x07F6</literal></expr>, <expr><literal type="number">0x6FF7</literal></expr>, <expr><literal type="number">0x6FA9</literal></expr>, <expr><literal type="number">0x2FEB</literal></expr>,

<expr><literal type="number">0x0FE9</literal></expr>, <expr><literal type="number">0xDFE3</literal></expr>, <expr><literal type="number">0xDFE1</literal></expr>, <expr><literal type="number">0xDFDF</literal></expr>, <expr><literal type="number">0xDFDD</literal></expr>, <expr><literal type="number">0xDFDB</literal></expr>, <expr><literal type="number">0xDFD9</literal></expr>, <expr><literal type="number">0xDFD7</literal></expr>,

<expr><literal type="number">0xDFD5</literal></expr>, <expr><literal type="number">0xDFD3</literal></expr>, <expr><literal type="number">0xDFD1</literal></expr>, <expr><literal type="number">0xDFCF</literal></expr>, <expr><literal type="number">0xDFCD</literal></expr>, <expr><literal type="number">0xDFCB</literal></expr>, <expr><literal type="number">0xDFC9</literal></expr>, <expr><literal type="number">0xDF57</literal></expr>,

<expr><literal type="number">0xDF55</literal></expr>, }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>scales_bits</name><index>[<expr><name>SCALES_COUNT</name></expr>]</index><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, }</block></expr>,

<expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">16</literal></expr>,

}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_3_codes</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_3_bits</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_5_codes_a</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000E</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_5_codes_b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_5_codes_c</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_5_bits_a</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_5_bits_b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_5_bits_c</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_7_codes_a</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x001F</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_7_codes_b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0015</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_7_codes_c</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0001</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_7_bits_a</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_7_bits_b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_7_bits_c</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_9_codes_a</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0008</literal></expr>,

<expr><literal type="number">0x0031</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_9_codes_b</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x001B</literal></expr>,

<expr><literal type="number">0x0019</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_9_codes_c</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x001D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_9_bits_a</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">6</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_9_bits_b</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_9_bits_c</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">6</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_13_codes_a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0070</literal></expr>, <expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x0039</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x0071</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_13_codes_b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0039</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_13_codes_c</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_13_bits_a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_13_bits_b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_13_bits_c</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_17_codes_a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0154</literal></expr>, <expr><literal type="number">0x00AB</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0054</literal></expr>,

<expr><literal type="number">0x0155</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_17_codes_b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0018</literal></expr>,

<expr><literal type="number">0x007D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_17_codes_c</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0003</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x002D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_17_codes_d</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0100</literal></expr>, <expr><literal type="number">0x0102</literal></expr>, <expr><literal type="number">0x0082</literal></expr>, <expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x0043</literal></expr>, <expr><literal type="number">0x0083</literal></expr>, <expr><literal type="number">0x0103</literal></expr>,

<expr><literal type="number">0x0101</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_17_codes_e</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00E8</literal></expr>, <expr><literal type="number">0x00F6</literal></expr>, <expr><literal type="number">0x0075</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x00F7</literal></expr>,

<expr><literal type="number">0x00E9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_17_codes_f</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0000</literal></expr>,

<expr><literal type="number">0x0005</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_17_codes_g</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0060</literal></expr>, <expr><literal type="number">0x007E</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x003E</literal></expr>, <expr><literal type="number">0x007F</literal></expr>,

<expr><literal type="number">0x0061</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_17_bits_a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">12</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_17_bits_b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">8</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_17_bits_c</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">7</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_17_bits_d</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_17_bits_e</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_17_bits_f</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">8</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_17_bits_g</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_25_codes_a</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x2854</literal></expr>, <expr><literal type="number">0x142B</literal></expr>, <expr><literal type="number">0x050B</literal></expr>, <expr><literal type="number">0x0143</literal></expr>, <expr><literal type="number">0x00A2</literal></expr>, <expr><literal type="number">0x0052</literal></expr>, <expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x0015</literal></expr>,

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x000F</literal></expr>,

<expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x00A3</literal></expr>, <expr><literal type="number">0x00A0</literal></expr>, <expr><literal type="number">0x0284</literal></expr>, <expr><literal type="number">0x0A14</literal></expr>,

<expr><literal type="number">0x2855</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_25_codes_b</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0019</literal></expr>,

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0009</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x001D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_25_codes_c</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x004C</literal></expr>, <expr><literal type="number">0x0027</literal></expr>, <expr><literal type="number">0x006D</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0000</literal></expr>,

<expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0009</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0029</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x006C</literal></expr>,

<expr><literal type="number">0x004D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_25_codes_d</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0780</literal></expr>, <expr><literal type="number">0x0782</literal></expr>, <expr><literal type="number">0x03C2</literal></expr>, <expr><literal type="number">0x01E2</literal></expr>, <expr><literal type="number">0x00FE</literal></expr>, <expr><literal type="number">0x0079</literal></expr>, <expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x001C</literal></expr>,

<expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

<expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x003E</literal></expr>, <expr><literal type="number">0x007E</literal></expr>, <expr><literal type="number">0x00FF</literal></expr>, <expr><literal type="number">0x01E3</literal></expr>, <expr><literal type="number">0x03C3</literal></expr>, <expr><literal type="number">0x0783</literal></expr>,

<expr><literal type="number">0x0781</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_25_codes_e</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x0092</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x004E</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0025</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0001</literal></expr>,

<expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x004F</literal></expr>, <expr><literal type="number">0x0048</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0093</literal></expr>,

<expr><literal type="number">0x003D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_25_codes_f</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0324</literal></expr>, <expr><literal type="number">0x0193</literal></expr>, <expr><literal type="number">0x00CE</literal></expr>, <expr><literal type="number">0x0065</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x000B</literal></expr>,

<expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0025</literal></expr>, <expr><literal type="number">0x0066</literal></expr>, <expr><literal type="number">0x00CF</literal></expr>, <expr><literal type="number">0x00C8</literal></expr>,

<expr><literal type="number">0x0325</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_25_codes_g</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x03A8</literal></expr>, <expr><literal type="number">0x03AE</literal></expr>, <expr><literal type="number">0x01D5</literal></expr>, <expr><literal type="number">0x0094</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x004B</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>,

<expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0008</literal></expr>,

<expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0074</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0095</literal></expr>, <expr><literal type="number">0x01D6</literal></expr>, <expr><literal type="number">0x03AF</literal></expr>,

<expr><literal type="number">0x03A9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_25_bits_a</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">14</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_25_bits_b</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_25_bits_c</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_25_bits_d</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_25_bits_e</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_25_bits_f</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">10</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_25_bits_g</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_33_codes_a</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x1580</literal></expr>, <expr><literal type="number">0x1582</literal></expr>, <expr><literal type="number">0x0AC2</literal></expr>, <expr><literal type="number">0x0562</literal></expr>, <expr><literal type="number">0x02B2</literal></expr>, <expr><literal type="number">0x015E</literal></expr>, <expr><literal type="number">0x00AD</literal></expr>, <expr><literal type="number">0x0054</literal></expr>,

<expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0000</literal></expr>,

<expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x003D</literal></expr>,

<expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0055</literal></expr>, <expr><literal type="number">0x00AE</literal></expr>, <expr><literal type="number">0x015F</literal></expr>, <expr><literal type="number">0x02B3</literal></expr>, <expr><literal type="number">0x0563</literal></expr>, <expr><literal type="number">0x0AC3</literal></expr>, <expr><literal type="number">0x1583</literal></expr>,

<expr><literal type="number">0x1581</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_33_codes_b</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x030C</literal></expr>, <expr><literal type="number">0x0187</literal></expr>, <expr><literal type="number">0x006D</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0066</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0031</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x000E</literal></expr>,

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x000C</literal></expr>,

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0032</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0067</literal></expr>, <expr><literal type="number">0x0060</literal></expr>, <expr><literal type="number">0x0029</literal></expr>, <expr><literal type="number">0x00C2</literal></expr>, <expr><literal type="number">0x006C</literal></expr>,

<expr><literal type="number">0x030D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_33_codes_c</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00CC</literal></expr>, <expr><literal type="number">0x0067</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0070</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0039</literal></expr>, <expr><literal type="number">0x003F</literal></expr>,

<expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000A</literal></expr>,

<expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0013</literal></expr>,

<expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x003E</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x0071</literal></expr>, <expr><literal type="number">0x0032</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x00CD</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_33_codes_d</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x3AF8</literal></expr>, <expr><literal type="number">0x3AFA</literal></expr>, <expr><literal type="number">0x1D7E</literal></expr>, <expr><literal type="number">0x0EBC</literal></expr>, <expr><literal type="number">0x075C</literal></expr>, <expr><literal type="number">0x03AC</literal></expr>, <expr><literal type="number">0x01D4</literal></expr>, <expr><literal type="number">0x0094</literal></expr>,

<expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x004B</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0074</literal></expr>,

<expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0095</literal></expr>, <expr><literal type="number">0x01D5</literal></expr>, <expr><literal type="number">0x03AD</literal></expr>, <expr><literal type="number">0x075D</literal></expr>, <expr><literal type="number">0x0EBD</literal></expr>, <expr><literal type="number">0x1D7F</literal></expr>, <expr><literal type="number">0x3AFB</literal></expr>,

<expr><literal type="number">0x3AF9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_33_codes_e</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x01C8</literal></expr>, <expr><literal type="number">0x01E6</literal></expr>, <expr><literal type="number">0x0064</literal></expr>, <expr><literal type="number">0x00E2</literal></expr>, <expr><literal type="number">0x00E5</literal></expr>, <expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0033</literal></expr>, <expr><literal type="number">0x0073</literal></expr>,

<expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0001</literal></expr>,

<expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x001B</literal></expr>,

<expr><literal type="number">0x007B</literal></expr>, <expr><literal type="number">0x0078</literal></expr>, <expr><literal type="number">0x0070</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x00F2</literal></expr>, <expr><literal type="number">0x00E3</literal></expr>, <expr><literal type="number">0x0065</literal></expr>, <expr><literal type="number">0x01E7</literal></expr>,

<expr><literal type="number">0x01C9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_33_codes_f</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0724</literal></expr>, <expr><literal type="number">0x0393</literal></expr>, <expr><literal type="number">0x01CE</literal></expr>, <expr><literal type="number">0x00E5</literal></expr>, <expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x003E</literal></expr>,

<expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000B</literal></expr>,

<expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0015</literal></expr>,

<expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x00E6</literal></expr>, <expr><literal type="number">0x01CF</literal></expr>, <expr><literal type="number">0x01C8</literal></expr>,

<expr><literal type="number">0x0725</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_33_codes_g</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0284</literal></expr>, <expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x0140</literal></expr>, <expr><literal type="number">0x0143</literal></expr>, <expr><literal type="number">0x003E</literal></expr>, <expr><literal type="number">0x00BE</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0051</literal></expr>,

<expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0029</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0002</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x002E</literal></expr>,

<expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x005E</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x00BF</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0020</literal></expr>, <expr><literal type="number">0x0141</literal></expr>, <expr><literal type="number">0x0043</literal></expr>,

<expr><literal type="number">0x0285</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_33_bits_a</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_33_bits_b</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">10</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_33_bits_c</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_33_bits_d</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_33_bits_e</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_33_bits_f</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">11</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_33_bits_g</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">10</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_65_codes_a</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x9E5C</literal></expr>, <expr><literal type="number">0x9E5E</literal></expr>, <expr><literal type="number">0x4F2C</literal></expr>, <expr><literal type="number">0x2794</literal></expr>, <expr><literal type="number">0x13C4</literal></expr>, <expr><literal type="number">0x1E44</literal></expr>, <expr><literal type="number">0x09E3</literal></expr>, <expr><literal type="number">0x0F23</literal></expr>,

<expr><literal type="number">0x04F3</literal></expr>, <expr><literal type="number">0x0792</literal></expr>, <expr><literal type="number">0x027E</literal></expr>, <expr><literal type="number">0x03CE</literal></expr>, <expr><literal type="number">0x013D</literal></expr>, <expr><literal type="number">0x01E5</literal></expr>, <expr><literal type="number">0x009C</literal></expr>, <expr><literal type="number">0x00CC</literal></expr>,

<expr><literal type="number">0x0040</literal></expr>, <expr><literal type="number">0x0058</literal></expr>, <expr><literal type="number">0x0067</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0021</literal></expr>, <expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x0007</literal></expr>,

<expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x0015</literal></expr>,

<expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0032</literal></expr>, <expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0078</literal></expr>, <expr><literal type="number">0x0059</literal></expr>,

<expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x00CD</literal></expr>, <expr><literal type="number">0x009D</literal></expr>, <expr><literal type="number">0x01E6</literal></expr>, <expr><literal type="number">0x013E</literal></expr>, <expr><literal type="number">0x03CF</literal></expr>, <expr><literal type="number">0x027F</literal></expr>, <expr><literal type="number">0x0793</literal></expr>,

<expr><literal type="number">0x0790</literal></expr>, <expr><literal type="number">0x04F0</literal></expr>, <expr><literal type="number">0x09E4</literal></expr>, <expr><literal type="number">0x1E45</literal></expr>, <expr><literal type="number">0x13C5</literal></expr>, <expr><literal type="number">0x2795</literal></expr>, <expr><literal type="number">0x4F2D</literal></expr>, <expr><literal type="number">0x9E5F</literal></expr>,

<expr><literal type="number">0x9E5D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_65_codes_b</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0A8C</literal></expr>, <expr><literal type="number">0x0547</literal></expr>, <expr><literal type="number">0x01B5</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x00DB</literal></expr>, <expr><literal type="number">0x0152</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000B</literal></expr>,

<expr><literal type="number">0x008E</literal></expr>, <expr><literal type="number">0x00AE</literal></expr>, <expr><literal type="number">0x00E4</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0039</literal></expr>, <expr><literal type="number">0x0055</literal></expr>, <expr><literal type="number">0x006C</literal></expr>,

<expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x003E</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0001</literal></expr>,

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x000C</literal></expr>,

<expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0029</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0014</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x006D</literal></expr>, <expr><literal type="number">0x0056</literal></expr>, <expr><literal type="number">0x0046</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x00E5</literal></expr>, <expr><literal type="number">0x00AF</literal></expr>,

<expr><literal type="number">0x008F</literal></expr>, <expr><literal type="number">0x006C</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0153</literal></expr>, <expr><literal type="number">0x0150</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x02A2</literal></expr>, <expr><literal type="number">0x01B4</literal></expr>,

<expr><literal type="number">0x0A8D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_65_codes_c</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x045C</literal></expr>, <expr><literal type="number">0x022F</literal></expr>, <expr><literal type="number">0x03F5</literal></expr>, <expr><literal type="number">0x01BC</literal></expr>, <expr><literal type="number">0x01FB</literal></expr>, <expr><literal type="number">0x0059</literal></expr>, <expr><literal type="number">0x00D0</literal></expr>, <expr><literal type="number">0x00DF</literal></expr>,

<expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x0052</literal></expr>, <expr><literal type="number">0x0069</literal></expr>, <expr><literal type="number">0x0078</literal></expr>, <expr><literal type="number">0x007F</literal></expr>, <expr><literal type="number">0x000A</literal></expr>,

<expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x0000</literal></expr>,

<expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0018</literal></expr>,

<expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0007</literal></expr>,

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x003E</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x001D</literal></expr>,

<expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0079</literal></expr>, <expr><literal type="number">0x006E</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x0044</literal></expr>, <expr><literal type="number">0x002E</literal></expr>,

<expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x00FC</literal></expr>, <expr><literal type="number">0x00D1</literal></expr>, <expr><literal type="number">0x008A</literal></expr>, <expr><literal type="number">0x0058</literal></expr>, <expr><literal type="number">0x01BD</literal></expr>, <expr><literal type="number">0x0116</literal></expr>, <expr><literal type="number">0x03F4</literal></expr>,

<expr><literal type="number">0x045D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_65_codes_d</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x70B0</literal></expr>, <expr><literal type="number">0x70B2</literal></expr>, <expr><literal type="number">0x70B4</literal></expr>, <expr><literal type="number">0x2852</literal></expr>, <expr><literal type="number">0x385B</literal></expr>, <expr><literal type="number">0x142E</literal></expr>, <expr><literal type="number">0x1C2E</literal></expr>, <expr><literal type="number">0x0A15</literal></expr>,

<expr><literal type="number">0x0E14</literal></expr>, <expr><literal type="number">0x0214</literal></expr>, <expr><literal type="number">0x0704</literal></expr>, <expr><literal type="number">0x0104</literal></expr>, <expr><literal type="number">0x010B</literal></expr>, <expr><literal type="number">0x0383</literal></expr>, <expr><literal type="number">0x0083</literal></expr>, <expr><literal type="number">0x0143</literal></expr>,

<expr><literal type="number">0x01C3</literal></expr>, <expr><literal type="number">0x0043</literal></expr>, <expr><literal type="number">0x00A2</literal></expr>, <expr><literal type="number">0x00E2</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x0052</literal></expr>, <expr><literal type="number">0x0072</literal></expr>, <expr><literal type="number">0x0012</literal></expr>,

<expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0000</literal></expr>,

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>,

<expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x00E3</literal></expr>, <expr><literal type="number">0x00A3</literal></expr>, <expr><literal type="number">0x00A0</literal></expr>,

<expr><literal type="number">0x0040</literal></expr>, <expr><literal type="number">0x01C0</literal></expr>, <expr><literal type="number">0x0084</literal></expr>, <expr><literal type="number">0x0384</literal></expr>, <expr><literal type="number">0x0284</literal></expr>, <expr><literal type="number">0x0105</literal></expr>, <expr><literal type="number">0x0705</literal></expr>, <expr><literal type="number">0x0215</literal></expr>,

<expr><literal type="number">0x0E15</literal></expr>, <expr><literal type="number">0x0A16</literal></expr>, <expr><literal type="number">0x1C2F</literal></expr>, <expr><literal type="number">0x142F</literal></expr>, <expr><literal type="number">0x1428</literal></expr>, <expr><literal type="number">0x2853</literal></expr>, <expr><literal type="number">0x70B5</literal></expr>, <expr><literal type="number">0x70B3</literal></expr>,

<expr><literal type="number">0x70B1</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_65_codes_e</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x032C</literal></expr>, <expr><literal type="number">0x0332</literal></expr>, <expr><literal type="number">0x0378</literal></expr>, <expr><literal type="number">0x037E</literal></expr>, <expr><literal type="number">0x008C</literal></expr>, <expr><literal type="number">0x014A</literal></expr>, <expr><literal type="number">0x0188</literal></expr>, <expr><literal type="number">0x0197</literal></expr>,

<expr><literal type="number">0x019E</literal></expr>, <expr><literal type="number">0x01BD</literal></expr>, <expr><literal type="number">0x0044</literal></expr>, <expr><literal type="number">0x0047</literal></expr>, <expr><literal type="number">0x00AA</literal></expr>, <expr><literal type="number">0x00C5</literal></expr>, <expr><literal type="number">0x00CD</literal></expr>, <expr><literal type="number">0x00DC</literal></expr>,

<expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x0063</literal></expr>, <expr><literal type="number">0x0068</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0017</literal></expr>,

<expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000F</literal></expr>,

<expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0036</literal></expr>,

<expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0069</literal></expr>, <expr><literal type="number">0x0064</literal></expr>, <expr><literal type="number">0x0054</literal></expr>, <expr><literal type="number">0x002D</literal></expr>,

<expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x00DD</literal></expr>, <expr><literal type="number">0x00CE</literal></expr>, <expr><literal type="number">0x00CA</literal></expr>, <expr><literal type="number">0x00AB</literal></expr>, <expr><literal type="number">0x00A4</literal></expr>, <expr><literal type="number">0x0045</literal></expr>, <expr><literal type="number">0x01BE</literal></expr>,

<expr><literal type="number">0x019F</literal></expr>, <expr><literal type="number">0x0198</literal></expr>, <expr><literal type="number">0x0189</literal></expr>, <expr><literal type="number">0x014B</literal></expr>, <expr><literal type="number">0x008D</literal></expr>, <expr><literal type="number">0x037F</literal></expr>, <expr><literal type="number">0x0379</literal></expr>, <expr><literal type="number">0x0333</literal></expr>,

<expr><literal type="number">0x032D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_65_codes_f</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0FE0</literal></expr>, <expr><literal type="number">0x0FE2</literal></expr>, <expr><literal type="number">0x0FE8</literal></expr>, <expr><literal type="number">0x0FEA</literal></expr>, <expr><literal type="number">0x0FEC</literal></expr>, <expr><literal type="number">0x0FEE</literal></expr>, <expr><literal type="number">0x0FF0</literal></expr>, <expr><literal type="number">0x0FF2</literal></expr>,

<expr><literal type="number">0x0FF4</literal></expr>, <expr><literal type="number">0x2FF2</literal></expr>, <expr><literal type="number">0x07F2</literal></expr>, <expr><literal type="number">0x07FB</literal></expr>, <expr><literal type="number">0x03F6</literal></expr>, <expr><literal type="number">0x0BFA</literal></expr>, <expr><literal type="number">0x0BFD</literal></expr>, <expr><literal type="number">0x01FF</literal></expr>,

<expr><literal type="number">0x05FF</literal></expr>, <expr><literal type="number">0x02FC</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x017C</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x00BC</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x005C</literal></expr>,

<expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0002</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x002D</literal></expr>,

<expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x005D</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x00BD</literal></expr>, <expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x017D</literal></expr>, <expr><literal type="number">0x007D</literal></expr>, <expr><literal type="number">0x02FD</literal></expr>,

<expr><literal type="number">0x00FC</literal></expr>, <expr><literal type="number">0x05FC</literal></expr>, <expr><literal type="number">0x01FA</literal></expr>, <expr><literal type="number">0x0BFB</literal></expr>, <expr><literal type="number">0x03F7</literal></expr>, <expr><literal type="number">0x17F8</literal></expr>, <expr><literal type="number">0x07F3</literal></expr>, <expr><literal type="number">0x2FF3</literal></expr>,

<expr><literal type="number">0x0FF5</literal></expr>, <expr><literal type="number">0x0FF3</literal></expr>, <expr><literal type="number">0x0FF1</literal></expr>, <expr><literal type="number">0x0FEF</literal></expr>, <expr><literal type="number">0x0FED</literal></expr>, <expr><literal type="number">0x0FEB</literal></expr>, <expr><literal type="number">0x0FE9</literal></expr>, <expr><literal type="number">0x0FE3</literal></expr>,

<expr><literal type="number">0x0FE1</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_65_codes_g</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x010C</literal></expr>, <expr><literal type="number">0x038A</literal></expr>, <expr><literal type="number">0x0608</literal></expr>, <expr><literal type="number">0x0786</literal></expr>, <expr><literal type="number">0x0084</literal></expr>, <expr><literal type="number">0x0087</literal></expr>, <expr><literal type="number">0x0302</literal></expr>, <expr><literal type="number">0x0305</literal></expr>,

<expr><literal type="number">0x0040</literal></expr>, <expr><literal type="number">0x00E0</literal></expr>, <expr><literal type="number">0x00E3</literal></expr>, <expr><literal type="number">0x0183</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x005E</literal></expr>, <expr><literal type="number">0x009E</literal></expr>, <expr><literal type="number">0x00DE</literal></expr>,

<expr><literal type="number">0x00F1</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0039</literal></expr>, <expr><literal type="number">0x0061</literal></expr>, <expr><literal type="number">0x0079</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0031</literal></expr>,

<expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000A</literal></expr>,

<expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x000A</literal></expr>,

<expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x006E</literal></expr>, <expr><literal type="number">0x004E</literal></expr>, <expr><literal type="number">0x002E</literal></expr>,

<expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x00DF</literal></expr>, <expr><literal type="number">0x009F</literal></expr>, <expr><literal type="number">0x005F</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x01E0</literal></expr>, <expr><literal type="number">0x0180</literal></expr>, <expr><literal type="number">0x00E1</literal></expr>,

<expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x03C2</literal></expr>, <expr><literal type="number">0x0303</literal></expr>, <expr><literal type="number">0x01C4</literal></expr>, <expr><literal type="number">0x0085</literal></expr>, <expr><literal type="number">0x0787</literal></expr>, <expr><literal type="number">0x0609</literal></expr>, <expr><literal type="number">0x038B</literal></expr>,

<expr><literal type="number">0x010D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_65_bits_a</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">16</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_65_bits_b</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">12</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_65_bits_c</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">11</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_65_bits_d</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">15</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_65_bits_e</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">10</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_65_bits_f</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,

<expr><literal type="number">14</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_65_bits_g</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">11</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_129_codes_a</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0660</literal></expr>, <expr><literal type="number">0x0666</literal></expr>, <expr><literal type="number">0x06EC</literal></expr>, <expr><literal type="number">0x0722</literal></expr>, <expr><literal type="number">0x0760</literal></expr>, <expr><literal type="number">0x076E</literal></expr>, <expr><literal type="number">0x004C</literal></expr>, <expr><literal type="number">0x004E</literal></expr>,

<expr><literal type="number">0x00F4</literal></expr>, <expr><literal type="number">0x010A</literal></expr>, <expr><literal type="number">0x0148</literal></expr>, <expr><literal type="number">0x0156</literal></expr>, <expr><literal type="number">0x01D4</literal></expr>, <expr><literal type="number">0x01F2</literal></expr>, <expr><literal type="number">0x0331</literal></expr>, <expr><literal type="number">0x0370</literal></expr>,

<expr><literal type="number">0x0377</literal></expr>, <expr><literal type="number">0x0396</literal></expr>, <expr><literal type="number">0x03B1</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0064</literal></expr>, <expr><literal type="number">0x007B</literal></expr>, <expr><literal type="number">0x008A</literal></expr>, <expr><literal type="number">0x00A5</literal></expr>,

<expr><literal type="number">0x00D4</literal></expr>, <expr><literal type="number">0x00EB</literal></expr>, <expr><literal type="number">0x00FA</literal></expr>, <expr><literal type="number">0x019A</literal></expr>, <expr><literal type="number">0x01B9</literal></expr>, <expr><literal type="number">0x01C9</literal></expr>, <expr><literal type="number">0x01D9</literal></expr>, <expr><literal type="number">0x0010</literal></expr>,

<expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0033</literal></expr>, <expr><literal type="number">0x0043</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x006B</literal></expr>, <expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x00CA</literal></expr>, <expr><literal type="number">0x00D2</literal></expr>,

<expr><literal type="number">0x00DE</literal></expr>, <expr><literal type="number">0x00E6</literal></expr>, <expr><literal type="number">0x00F6</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>,

<expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0067</literal></expr>, <expr><literal type="number">0x0070</literal></expr>, <expr><literal type="number">0x0077</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x001B</literal></expr>,

<expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0009</literal></expr>,

<expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x0036</literal></expr>,

<expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x0071</literal></expr>, <expr><literal type="number">0x0068</literal></expr>,

<expr><literal type="number">0x0064</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x0020</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x00F7</literal></expr>, <expr><literal type="number">0x00E7</literal></expr>,

<expr><literal type="number">0x00DF</literal></expr>, <expr><literal type="number">0x00D3</literal></expr>, <expr><literal type="number">0x00CB</literal></expr>, <expr><literal type="number">0x007B</literal></expr>, <expr><literal type="number">0x0074</literal></expr>, <expr><literal type="number">0x0054</literal></expr>, <expr><literal type="number">0x0044</literal></expr>, <expr><literal type="number">0x003C</literal></expr>,

<expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x01DA</literal></expr>, <expr><literal type="number">0x01CA</literal></expr>, <expr><literal type="number">0x01BA</literal></expr>, <expr><literal type="number">0x019B</literal></expr>, <expr><literal type="number">0x00FB</literal></expr>, <expr><literal type="number">0x00F8</literal></expr>,

<expr><literal type="number">0x00D5</literal></expr>, <expr><literal type="number">0x00AA</literal></expr>, <expr><literal type="number">0x008B</literal></expr>, <expr><literal type="number">0x0084</literal></expr>, <expr><literal type="number">0x0065</literal></expr>, <expr><literal type="number">0x0025</literal></expr>, <expr><literal type="number">0x03B6</literal></expr>, <expr><literal type="number">0x0397</literal></expr>,

<expr><literal type="number">0x0390</literal></expr>, <expr><literal type="number">0x0371</literal></expr>, <expr><literal type="number">0x0332</literal></expr>, <expr><literal type="number">0x01F3</literal></expr>, <expr><literal type="number">0x01D5</literal></expr>, <expr><literal type="number">0x0157</literal></expr>, <expr><literal type="number">0x0149</literal></expr>, <expr><literal type="number">0x010B</literal></expr>,

<expr><literal type="number">0x00F5</literal></expr>, <expr><literal type="number">0x004F</literal></expr>, <expr><literal type="number">0x004D</literal></expr>, <expr><literal type="number">0x076F</literal></expr>, <expr><literal type="number">0x0761</literal></expr>, <expr><literal type="number">0x0723</literal></expr>, <expr><literal type="number">0x06ED</literal></expr>, <expr><literal type="number">0x0667</literal></expr>,

<expr><literal type="number">0x0661</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_129_codes_b</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x29DC</literal></expr>, <expr><literal type="number">0x14EF</literal></expr>, <expr><literal type="number">0x0455</literal></expr>, <expr><literal type="number">0x0E9C</literal></expr>, <expr><literal type="number">0x022B</literal></expr>, <expr><literal type="number">0x0489</literal></expr>, <expr><literal type="number">0x0740</literal></expr>, <expr><literal type="number">0x074F</literal></expr>,

<expr><literal type="number">0x0172</literal></expr>, <expr><literal type="number">0x0245</literal></expr>, <expr><literal type="number">0x0247</literal></expr>, <expr><literal type="number">0x030A</literal></expr>, <expr><literal type="number">0x03A1</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x008B</literal></expr>, <expr><literal type="number">0x00D6</literal></expr>,

<expr><literal type="number">0x010C</literal></expr>, <expr><literal type="number">0x0148</literal></expr>, <expr><literal type="number">0x014F</literal></expr>, <expr><literal type="number">0x0186</literal></expr>, <expr><literal type="number">0x01D1</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0046</literal></expr>,

<expr><literal type="number">0x005D</literal></expr>, <expr><literal type="number">0x0078</literal></expr>, <expr><literal type="number">0x0087</literal></expr>, <expr><literal type="number">0x0096</literal></expr>, <expr><literal type="number">0x00A5</literal></expr>, <expr><literal type="number">0x00BC</literal></expr>, <expr><literal type="number">0x00D8</literal></expr>, <expr><literal type="number">0x00DE</literal></expr>,

<expr><literal type="number">0x00F6</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x003D</literal></expr>, <expr><literal type="number">0x0049</literal></expr>,

<expr><literal type="number">0x0050</literal></expr>, <expr><literal type="number">0x0058</literal></expr>, <expr><literal type="number">0x005F</literal></expr>, <expr><literal type="number">0x0066</literal></expr>, <expr><literal type="number">0x006D</literal></expr>, <expr><literal type="number">0x0075</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x002A</literal></expr>,

<expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x0039</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x0032</literal></expr>,

<expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x0027</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x0020</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0016</literal></expr>,

<expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x007D</literal></expr>, <expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x006E</literal></expr>, <expr><literal type="number">0x0067</literal></expr>, <expr><literal type="number">0x0060</literal></expr>, <expr><literal type="number">0x0059</literal></expr>,

<expr><literal type="number">0x0051</literal></expr>, <expr><literal type="number">0x004A</literal></expr>, <expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x0025</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0006</literal></expr>,

<expr><literal type="number">0x00F7</literal></expr>, <expr><literal type="number">0x00DF</literal></expr>, <expr><literal type="number">0x00D9</literal></expr>, <expr><literal type="number">0x00BD</literal></expr>, <expr><literal type="number">0x00A6</literal></expr>, <expr><literal type="number">0x0097</literal></expr>, <expr><literal type="number">0x0090</literal></expr>, <expr><literal type="number">0x0079</literal></expr>,

<expr><literal type="number">0x006A</literal></expr>, <expr><literal type="number">0x0047</literal></expr>, <expr><literal type="number">0x0044</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x01D2</literal></expr>, <expr><literal type="number">0x0187</literal></expr>, <expr><literal type="number">0x0184</literal></expr>, <expr><literal type="number">0x0149</literal></expr>,

<expr><literal type="number">0x010D</literal></expr>, <expr><literal type="number">0x00D7</literal></expr>, <expr><literal type="number">0x00B8</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x03A6</literal></expr>, <expr><literal type="number">0x030B</literal></expr>, <expr><literal type="number">0x029C</literal></expr>, <expr><literal type="number">0x0246</literal></expr>,

<expr><literal type="number">0x0173</literal></expr>, <expr><literal type="number">0x0114</literal></expr>, <expr><literal type="number">0x0741</literal></expr>, <expr><literal type="number">0x053A</literal></expr>, <expr><literal type="number">0x0488</literal></expr>, <expr><literal type="number">0x0E9D</literal></expr>, <expr><literal type="number">0x0A76</literal></expr>, <expr><literal type="number">0x0454</literal></expr>,

<expr><literal type="number">0x29DD</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_129_codes_c</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0E5C</literal></expr>, <expr><literal type="number">0x072F</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0724</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x010D</literal></expr>, <expr><literal type="number">0x0324</literal></expr>, <expr><literal type="number">0x0393</literal></expr>,

<expr><literal type="number">0x03E9</literal></expr>, <expr><literal type="number">0x0080</literal></expr>, <expr><literal type="number">0x0087</literal></expr>, <expr><literal type="number">0x00FA</literal></expr>, <expr><literal type="number">0x0164</literal></expr>, <expr><literal type="number">0x0193</literal></expr>, <expr><literal type="number">0x01DE</literal></expr>, <expr><literal type="number">0x01F5</literal></expr>,

<expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x0064</literal></expr>, <expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x008E</literal></expr>, <expr><literal type="number">0x00A4</literal></expr>, <expr><literal type="number">0x00B3</literal></expr>,

<expr><literal type="number">0x00D6</literal></expr>, <expr><literal type="number">0x00E5</literal></expr>, <expr><literal type="number">0x00F4</literal></expr>, <expr><literal type="number">0x00FB</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x001E</literal></expr>,

<expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x0033</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x004C</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x005E</literal></expr>,

<expr><literal type="number">0x0065</literal></expr>, <expr><literal type="number">0x0070</literal></expr>, <expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x0078</literal></expr>, <expr><literal type="number">0x007B</literal></expr>, <expr><literal type="number">0x007E</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

<expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x001D</literal></expr>,

<expr><literal type="number">0x0021</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0027</literal></expr>, <expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0033</literal></expr>, <expr><literal type="number">0x0036</literal></expr>,

<expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x0025</literal></expr>,

<expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x000C</literal></expr>,

<expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x007F</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x0079</literal></expr>, <expr><literal type="number">0x0076</literal></expr>, <expr><literal type="number">0x0071</literal></expr>,

<expr><literal type="number">0x006A</literal></expr>, <expr><literal type="number">0x005F</literal></expr>, <expr><literal type="number">0x0058</literal></expr>, <expr><literal type="number">0x004D</literal></expr>, <expr><literal type="number">0x0046</literal></expr>, <expr><literal type="number">0x0040</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x002D</literal></expr>,

<expr><literal type="number">0x0027</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x00F5</literal></expr>, <expr><literal type="number">0x00EE</literal></expr>,

<expr><literal type="number">0x00D7</literal></expr>, <expr><literal type="number">0x00C8</literal></expr>, <expr><literal type="number">0x00A5</literal></expr>, <expr><literal type="number">0x008F</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x0065</literal></expr>, <expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x002B</literal></expr>,

<expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x01DF</literal></expr>, <expr><literal type="number">0x01C8</literal></expr>, <expr><literal type="number">0x0165</literal></expr>, <expr><literal type="number">0x00FB</literal></expr>, <expr><literal type="number">0x00E4</literal></expr>, <expr><literal type="number">0x0081</literal></expr>,

<expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x03E8</literal></expr>, <expr><literal type="number">0x0325</literal></expr>, <expr><literal type="number">0x01CA</literal></expr>, <expr><literal type="number">0x010C</literal></expr>, <expr><literal type="number">0x0725</literal></expr>, <expr><literal type="number">0x0396</literal></expr>, <expr><literal type="number">0x001C</literal></expr>,

<expr><literal type="number">0x0E5D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_129_codes_d</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0xA598</literal></expr>, <expr><literal type="number">0xA59A</literal></expr>, <expr><literal type="number">0xA59C</literal></expr>, <expr><literal type="number">0xA59E</literal></expr>, <expr><literal type="number">0xC598</literal></expr>, <expr><literal type="number">0xE586</literal></expr>, <expr><literal type="number">0x3ACC</literal></expr>, <expr><literal type="number">0x52CA</literal></expr>,

<expr><literal type="number">0x62CD</literal></expr>, <expr><literal type="number">0x0D48</literal></expr>, <expr><literal type="number">0x1D67</literal></expr>, <expr><literal type="number">0x2978</literal></expr>, <expr><literal type="number">0x3167</literal></expr>, <expr><literal type="number">0x3966</literal></expr>, <expr><literal type="number">0x06A5</literal></expr>, <expr><literal type="number">0x0EBC</literal></expr>,

<expr><literal type="number">0x14BD</literal></expr>, <expr><literal type="number">0x1CB1</literal></expr>, <expr><literal type="number">0x0350</literal></expr>, <expr><literal type="number">0x0353</literal></expr>, <expr><literal type="number">0x075F</literal></expr>, <expr><literal type="number">0x0A5F</literal></expr>, <expr><literal type="number">0x0C5E</literal></expr>, <expr><literal type="number">0x0E5E</literal></expr>,

<expr><literal type="number">0x01AE</literal></expr>, <expr><literal type="number">0x03AD</literal></expr>, <expr><literal type="number">0x052D</literal></expr>, <expr><literal type="number">0x062D</literal></expr>, <expr><literal type="number">0x072D</literal></expr>, <expr><literal type="number">0x00D5</literal></expr>, <expr><literal type="number">0x01D4</literal></expr>, <expr><literal type="number">0x0294</literal></expr>,

<expr><literal type="number">0x0314</literal></expr>, <expr><literal type="number">0x0394</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0094</literal></expr>, <expr><literal type="number">0x0114</literal></expr>, <expr><literal type="number">0x0174</literal></expr>, <expr><literal type="number">0x01B4</literal></expr>, <expr><literal type="number">0x01F4</literal></expr>,

<expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x004B</literal></expr>, <expr><literal type="number">0x008B</literal></expr>, <expr><literal type="number">0x00BB</literal></expr>, <expr><literal type="number">0x00DB</literal></expr>, <expr><literal type="number">0x00FB</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>,

<expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x0063</literal></expr>, <expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x0037</literal></expr>,

<expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

<expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x0008</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x006C</literal></expr>,

<expr><literal type="number">0x005C</literal></expr>, <expr><literal type="number">0x0044</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x00E4</literal></expr>, <expr><literal type="number">0x00C4</literal></expr>, <expr><literal type="number">0x00A4</literal></expr>, <expr><literal type="number">0x0074</literal></expr>,

<expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x01F5</literal></expr>, <expr><literal type="number">0x01B5</literal></expr>, <expr><literal type="number">0x0175</literal></expr>, <expr><literal type="number">0x0115</literal></expr>, <expr><literal type="number">0x0095</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0395</literal></expr>,

<expr><literal type="number">0x0315</literal></expr>, <expr><literal type="number">0x0295</literal></expr>, <expr><literal type="number">0x01D5</literal></expr>, <expr><literal type="number">0x00D6</literal></expr>, <expr><literal type="number">0x072E</literal></expr>, <expr><literal type="number">0x062E</literal></expr>, <expr><literal type="number">0x052E</literal></expr>, <expr><literal type="number">0x03AE</literal></expr>,

<expr><literal type="number">0x01AF</literal></expr>, <expr><literal type="number">0x0E5F</literal></expr>, <expr><literal type="number">0x0C5F</literal></expr>, <expr><literal type="number">0x0C58</literal></expr>, <expr><literal type="number">0x0A58</literal></expr>, <expr><literal type="number">0x0758</literal></expr>, <expr><literal type="number">0x0351</literal></expr>, <expr><literal type="number">0x1CB2</literal></expr>,

<expr><literal type="number">0x18B2</literal></expr>, <expr><literal type="number">0x0EBD</literal></expr>, <expr><literal type="number">0x0EB2</literal></expr>, <expr><literal type="number">0x3967</literal></expr>, <expr><literal type="number">0x3960</literal></expr>, <expr><literal type="number">0x2979</literal></expr>, <expr><literal type="number">0x2964</literal></expr>, <expr><literal type="number">0x0D49</literal></expr>,

<expr><literal type="number">0x72C2</literal></expr>, <expr><literal type="number">0x52CB</literal></expr>, <expr><literal type="number">0x3ACD</literal></expr>, <expr><literal type="number">0xE587</literal></expr>, <expr><literal type="number">0xC599</literal></expr>, <expr><literal type="number">0xA59F</literal></expr>, <expr><literal type="number">0xA59D</literal></expr>, <expr><literal type="number">0xA59B</literal></expr>,

<expr><literal type="number">0xA599</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_129_codes_e</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0xA13C</literal></expr>, <expr><literal type="number">0xC720</literal></expr>, <expr><literal type="number">0xA13F</literal></expr>, <expr><literal type="number">0xA13E</literal></expr>, <expr><literal type="number">0xA13D</literal></expr>, <expr><literal type="number">0xE722</literal></expr>, <expr><literal type="number">0x5090</literal></expr>, <expr><literal type="number">0x6393</literal></expr>,

<expr><literal type="number">0x7392</literal></expr>, <expr><literal type="number">0x2849</literal></expr>, <expr><literal type="number">0x31CE</literal></expr>, <expr><literal type="number">0x39CE</literal></expr>, <expr><literal type="number">0x1425</literal></expr>, <expr><literal type="number">0x18E5</literal></expr>, <expr><literal type="number">0x1CE5</literal></expr>, <expr><literal type="number">0x0844</literal></expr>,

<expr><literal type="number">0x0A1C</literal></expr>, <expr><literal type="number">0x0C7C</literal></expr>, <expr><literal type="number">0x036C</literal></expr>, <expr><literal type="number">0x0423</literal></expr>, <expr><literal type="number">0x050F</literal></expr>, <expr><literal type="number">0x063F</literal></expr>, <expr><literal type="number">0x01B7</literal></expr>, <expr><literal type="number">0x0216</literal></expr>,

<expr><literal type="number">0x0285</literal></expr>, <expr><literal type="number">0x031D</literal></expr>, <expr><literal type="number">0x039D</literal></expr>, <expr><literal type="number">0x0109</literal></expr>, <expr><literal type="number">0x0140</literal></expr>, <expr><literal type="number">0x0180</literal></expr>, <expr><literal type="number">0x01C8</literal></expr>, <expr><literal type="number">0x01CF</literal></expr>,

<expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x008A</literal></expr>, <expr><literal type="number">0x00A2</literal></expr>, <expr><literal type="number">0x00C1</literal></expr>, <expr><literal type="number">0x00E5</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0043</literal></expr>,

<expr><literal type="number">0x004E</literal></expr>, <expr><literal type="number">0x0056</literal></expr>, <expr><literal type="number">0x0061</literal></expr>, <expr><literal type="number">0x006C</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x001F</literal></expr>,

<expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x0025</literal></expr>, <expr><literal type="number">0x0029</literal></expr>, <expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x0032</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x0037</literal></expr>,

<expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000A</literal></expr>,

<expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x003D</literal></expr>,

<expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x0033</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x0026</literal></expr>,

<expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0020</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x007D</literal></expr>, <expr><literal type="number">0x006D</literal></expr>, <expr><literal type="number">0x0062</literal></expr>, <expr><literal type="number">0x0057</literal></expr>,

<expr><literal type="number">0x004F</literal></expr>, <expr><literal type="number">0x0044</literal></expr>, <expr><literal type="number">0x003C</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x00E6</literal></expr>, <expr><literal type="number">0x00C6</literal></expr>, <expr><literal type="number">0x00A3</literal></expr>, <expr><literal type="number">0x008B</literal></expr>,

<expr><literal type="number">0x007B</literal></expr>, <expr><literal type="number">0x006C</literal></expr>, <expr><literal type="number">0x01C9</literal></expr>, <expr><literal type="number">0x0181</literal></expr>, <expr><literal type="number">0x0141</literal></expr>, <expr><literal type="number">0x010A</literal></expr>, <expr><literal type="number">0x00DA</literal></expr>, <expr><literal type="number">0x031E</literal></expr>,

<expr><literal type="number">0x0286</literal></expr>, <expr><literal type="number">0x0217</literal></expr>, <expr><literal type="number">0x0210</literal></expr>, <expr><literal type="number">0x0738</literal></expr>, <expr><literal type="number">0x0638</literal></expr>, <expr><literal type="number">0x0508</literal></expr>, <expr><literal type="number">0x036D</literal></expr>, <expr><literal type="number">0x0C7D</literal></expr>,

<expr><literal type="number">0x0A1D</literal></expr>, <expr><literal type="number">0x0845</literal></expr>, <expr><literal type="number">0x1CE6</literal></expr>, <expr><literal type="number">0x18E6</literal></expr>, <expr><literal type="number">0x1426</literal></expr>, <expr><literal type="number">0x39CF</literal></expr>, <expr><literal type="number">0x31CF</literal></expr>, <expr><literal type="number">0x284E</literal></expr>,

<expr><literal type="number">0x7393</literal></expr>, <expr><literal type="number">0x7390</literal></expr>, <expr><literal type="number">0x5091</literal></expr>, <expr><literal type="number">0xE723</literal></expr>, <expr><literal type="number">0xC724</literal></expr>, <expr><literal type="number">0xC725</literal></expr>, <expr><literal type="number">0xC722</literal></expr>, <expr><literal type="number">0xC723</literal></expr>,

<expr><literal type="number">0xC721</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_129_codes_f</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x762C</literal></expr>, <expr><literal type="number">0x3B17</literal></expr>, <expr><literal type="number">0x1555</literal></expr>, <expr><literal type="number">0x0608</literal></expr>, <expr><literal type="number">0x0AAB</literal></expr>, <expr><literal type="number">0x0FF2</literal></expr>, <expr><literal type="number">0x0305</literal></expr>, <expr><literal type="number">0x0307</literal></expr>,

<expr><literal type="number">0x0763</literal></expr>, <expr><literal type="number">0x0046</literal></expr>, <expr><literal type="number">0x010C</literal></expr>, <expr><literal type="number">0x01BC</literal></expr>, <expr><literal type="number">0x02AB</literal></expr>, <expr><literal type="number">0x03B6</literal></expr>, <expr><literal type="number">0x03FD</literal></expr>, <expr><literal type="number">0x0080</literal></expr>,

<expr><literal type="number">0x0087</literal></expr>, <expr><literal type="number">0x00DF</literal></expr>, <expr><literal type="number">0x0156</literal></expr>, <expr><literal type="number">0x01D9</literal></expr>, <expr><literal type="number">0x01F8</literal></expr>, <expr><literal type="number">0x01FF</literal></expr>, <expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x0041</literal></expr>,

<expr><literal type="number">0x0061</literal></expr>, <expr><literal type="number">0x0094</literal></expr>, <expr><literal type="number">0x00D4</literal></expr>, <expr><literal type="number">0x00EA</literal></expr>, <expr><literal type="number">0x00F2</literal></expr>, <expr><literal type="number">0x00FD</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x000B</literal></expr>,

<expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0040</literal></expr>, <expr><literal type="number">0x004B</literal></expr>, <expr><literal type="number">0x006B</literal></expr>, <expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x0077</literal></expr>,

<expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x007C</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000B</literal></expr>, <expr><literal type="number">0x000E</literal></expr>,

<expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x001C</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0021</literal></expr>, <expr><literal type="number">0x0023</literal></expr>,

<expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x002D</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x0031</literal></expr>, <expr><literal type="number">0x0033</literal></expr>, <expr><literal type="number">0x0036</literal></expr>,

<expr><literal type="number">0x0038</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0034</literal></expr>, <expr><literal type="number">0x0032</literal></expr>, <expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x002C</literal></expr>, <expr><literal type="number">0x0029</literal></expr>,

<expr><literal type="number">0x0027</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x0015</literal></expr>,

<expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x007D</literal></expr>,

<expr><literal type="number">0x007B</literal></expr>, <expr><literal type="number">0x0078</literal></expr>, <expr><literal type="number">0x0074</literal></expr>, <expr><literal type="number">0x0072</literal></expr>, <expr><literal type="number">0x0054</literal></expr>, <expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x0027</literal></expr>,

<expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x00FE</literal></expr>, <expr><literal type="number">0x00F3</literal></expr>, <expr><literal type="number">0x00EB</literal></expr>, <expr><literal type="number">0x00D5</literal></expr>, <expr><literal type="number">0x0095</literal></expr>,

<expr><literal type="number">0x006E</literal></expr>, <expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x01F9</literal></expr>, <expr><literal type="number">0x01DA</literal></expr>, <expr><literal type="number">0x0157</literal></expr>, <expr><literal type="number">0x0154</literal></expr>,

<expr><literal type="number">0x00C0</literal></expr>, <expr><literal type="number">0x0081</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x03B7</literal></expr>, <expr><literal type="number">0x03B0</literal></expr>, <expr><literal type="number">0x01BD</literal></expr>, <expr><literal type="number">0x010D</literal></expr>, <expr><literal type="number">0x0047</literal></expr>,

<expr><literal type="number">0x07F8</literal></expr>, <expr><literal type="number">0x0554</literal></expr>, <expr><literal type="number">0x0306</literal></expr>, <expr><literal type="number">0x0FF3</literal></expr>, <expr><literal type="number">0x0EC4</literal></expr>, <expr><literal type="number">0x0609</literal></expr>, <expr><literal type="number">0x1D8A</literal></expr>, <expr><literal type="number">0x1554</literal></expr>,

<expr><literal type="number">0x762D</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bitalloc_129_codes_g</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x1E20</literal></expr>, <expr><literal type="number">0x1E5E</literal></expr>, <expr><literal type="number">0x031C</literal></expr>, <expr><literal type="number">0x051A</literal></expr>, <expr><literal type="number">0x0718</literal></expr>, <expr><literal type="number">0x0916</literal></expr>, <expr><literal type="number">0x0B14</literal></expr>, <expr><literal type="number">0x0D12</literal></expr>,

<expr><literal type="number">0x0F11</literal></expr>, <expr><literal type="number">0x0090</literal></expr>, <expr><literal type="number">0x018F</literal></expr>, <expr><literal type="number">0x028E</literal></expr>, <expr><literal type="number">0x038D</literal></expr>, <expr><literal type="number">0x048C</literal></expr>, <expr><literal type="number">0x058B</literal></expr>, <expr><literal type="number">0x068A</literal></expr>,

<expr><literal type="number">0x0789</literal></expr>, <expr><literal type="number">0x0049</literal></expr>, <expr><literal type="number">0x00C8</literal></expr>, <expr><literal type="number">0x0148</literal></expr>, <expr><literal type="number">0x01C7</literal></expr>, <expr><literal type="number">0x0247</literal></expr>, <expr><literal type="number">0x02C6</literal></expr>, <expr><literal type="number">0x0346</literal></expr>,

<expr><literal type="number">0x03C5</literal></expr>, <expr><literal type="number">0x0025</literal></expr>, <expr><literal type="number">0x0065</literal></expr>, <expr><literal type="number">0x00A5</literal></expr>, <expr><literal type="number">0x00E4</literal></expr>, <expr><literal type="number">0x0124</literal></expr>, <expr><literal type="number">0x0164</literal></expr>, <expr><literal type="number">0x01A4</literal></expr>,

<expr><literal type="number">0x01E3</literal></expr>, <expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0033</literal></expr>, <expr><literal type="number">0x0053</literal></expr>, <expr><literal type="number">0x0073</literal></expr>, <expr><literal type="number">0x0093</literal></expr>, <expr><literal type="number">0x00B3</literal></expr>, <expr><literal type="number">0x00D3</literal></expr>,

<expr><literal type="number">0x00F3</literal></expr>, <expr><literal type="number">0x000A</literal></expr>, <expr><literal type="number">0x001A</literal></expr>, <expr><literal type="number">0x002A</literal></expr>, <expr><literal type="number">0x003A</literal></expr>, <expr><literal type="number">0x004A</literal></expr>, <expr><literal type="number">0x005A</literal></expr>, <expr><literal type="number">0x006A</literal></expr>,

<expr><literal type="number">0x007A</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000E</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x001E</literal></expr>, <expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x002E</literal></expr>, <expr><literal type="number">0x0036</literal></expr>,

<expr><literal type="number">0x003E</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000C</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x001C</literal></expr>,

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x001D</literal></expr>, <expr><literal type="number">0x0019</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0011</literal></expr>, <expr><literal type="number">0x000D</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x0005</literal></expr>,

<expr><literal type="number">0x003F</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x002F</literal></expr>, <expr><literal type="number">0x0027</literal></expr>, <expr><literal type="number">0x001F</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x000F</literal></expr>, <expr><literal type="number">0x0007</literal></expr>,

<expr><literal type="number">0x007B</literal></expr>, <expr><literal type="number">0x006B</literal></expr>, <expr><literal type="number">0x005B</literal></expr>, <expr><literal type="number">0x004B</literal></expr>, <expr><literal type="number">0x003B</literal></expr>, <expr><literal type="number">0x002B</literal></expr>, <expr><literal type="number">0x001B</literal></expr>, <expr><literal type="number">0x000B</literal></expr>,

<expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x00F0</literal></expr>, <expr><literal type="number">0x00D0</literal></expr>, <expr><literal type="number">0x00B0</literal></expr>, <expr><literal type="number">0x0090</literal></expr>, <expr><literal type="number">0x0070</literal></expr>, <expr><literal type="number">0x0050</literal></expr>, <expr><literal type="number">0x0030</literal></expr>,

<expr><literal type="number">0x01E4</literal></expr>, <expr><literal type="number">0x01A5</literal></expr>, <expr><literal type="number">0x0165</literal></expr>, <expr><literal type="number">0x0125</literal></expr>, <expr><literal type="number">0x00E5</literal></expr>, <expr><literal type="number">0x00E2</literal></expr>, <expr><literal type="number">0x00A2</literal></expr>, <expr><literal type="number">0x0062</literal></expr>,

<expr><literal type="number">0x03CA</literal></expr>, <expr><literal type="number">0x0347</literal></expr>, <expr><literal type="number">0x02C7</literal></expr>, <expr><literal type="number">0x02C4</literal></expr>, <expr><literal type="number">0x0244</literal></expr>, <expr><literal type="number">0x0149</literal></expr>, <expr><literal type="number">0x00C9</literal></expr>, <expr><literal type="number">0x00C6</literal></expr>,

<expr><literal type="number">0x0796</literal></expr>, <expr><literal type="number">0x068B</literal></expr>, <expr><literal type="number">0x0688</literal></expr>, <expr><literal type="number">0x048D</literal></expr>, <expr><literal type="number">0x048A</literal></expr>, <expr><literal type="number">0x028F</literal></expr>, <expr><literal type="number">0x028C</literal></expr>, <expr><literal type="number">0x0091</literal></expr>,

<expr><literal type="number">0x0F2E</literal></expr>, <expr><literal type="number">0x0D13</literal></expr>, <expr><literal type="number">0x0B15</literal></expr>, <expr><literal type="number">0x0917</literal></expr>, <expr><literal type="number">0x0719</literal></expr>, <expr><literal type="number">0x051B</literal></expr>, <expr><literal type="number">0x031D</literal></expr>, <expr><literal type="number">0x1E5F</literal></expr>,

<expr><literal type="number">0x1E21</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_129_bits_a</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">11</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_129_bits_b</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">14</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_129_bits_c</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">13</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_129_bits_d</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">16</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_129_bits_e</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">16</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_129_bits_f</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">15</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">15</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_129_bits_g</name><index>[<expr><literal type="number">129</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_sizes</name><index>[<expr><name>DCA_CODE_BOOKS</name></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">129</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int8_t</name></type> <name><name>bitalloc_offsets</name><index>[<expr><name>DCA_CODE_BOOKS</name></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><operator>-</operator><literal type="number">32</literal></expr>, <expr><operator>-</operator><literal type="number">64</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bitalloc_maxbits</name><index>[<expr><name>DCA_CODE_BOOKS</name></expr>]</index><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">2</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>bitalloc_codes</name><index>[<expr><name>DCA_CODE_BOOKS</name></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>bitalloc_3_codes</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_5_codes_a</name></expr>, <expr><name>bitalloc_5_codes_b</name></expr>, <expr><name>bitalloc_5_codes_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_7_codes_a</name></expr>, <expr><name>bitalloc_7_codes_b</name></expr>, <expr><name>bitalloc_7_codes_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_9_codes_a</name></expr>, <expr><name>bitalloc_9_codes_b</name></expr>, <expr><name>bitalloc_9_codes_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_13_codes_a</name></expr>, <expr><name>bitalloc_13_codes_b</name></expr>, <expr><name>bitalloc_13_codes_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_17_codes_a</name></expr>, <expr><name>bitalloc_17_codes_b</name></expr>, <expr><name>bitalloc_17_codes_c</name></expr>, <expr><name>bitalloc_17_codes_d</name></expr>,

<expr><name>bitalloc_17_codes_e</name></expr>, <expr><name>bitalloc_17_codes_f</name></expr>, <expr><name>bitalloc_17_codes_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_25_codes_a</name></expr>, <expr><name>bitalloc_25_codes_b</name></expr>, <expr><name>bitalloc_25_codes_c</name></expr>, <expr><name>bitalloc_25_codes_d</name></expr>,

<expr><name>bitalloc_25_codes_e</name></expr>, <expr><name>bitalloc_25_codes_f</name></expr>, <expr><name>bitalloc_25_codes_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_33_codes_a</name></expr>, <expr><name>bitalloc_33_codes_b</name></expr>, <expr><name>bitalloc_33_codes_c</name></expr>, <expr><name>bitalloc_33_codes_d</name></expr>,

<expr><name>bitalloc_33_codes_e</name></expr>, <expr><name>bitalloc_33_codes_f</name></expr>, <expr><name>bitalloc_33_codes_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_65_codes_a</name></expr>, <expr><name>bitalloc_65_codes_b</name></expr>, <expr><name>bitalloc_65_codes_c</name></expr>, <expr><name>bitalloc_65_codes_d</name></expr>,

<expr><name>bitalloc_65_codes_e</name></expr>, <expr><name>bitalloc_65_codes_f</name></expr>, <expr><name>bitalloc_65_codes_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_129_codes_a</name></expr>, <expr><name>bitalloc_129_codes_b</name></expr>, <expr><name>bitalloc_129_codes_c</name></expr>, <expr><name>bitalloc_129_codes_d</name></expr>,

<expr><name>bitalloc_129_codes_e</name></expr>, <expr><name>bitalloc_129_codes_f</name></expr>, <expr><name>bitalloc_129_codes_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>bitalloc_bits</name><index>[<expr><name>DCA_CODE_BOOKS</name></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>bitalloc_3_bits</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_5_bits_a</name></expr>, <expr><name>bitalloc_5_bits_b</name></expr>, <expr><name>bitalloc_5_bits_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_7_bits_a</name></expr>, <expr><name>bitalloc_7_bits_b</name></expr>, <expr><name>bitalloc_7_bits_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_9_bits_a</name></expr>, <expr><name>bitalloc_9_bits_b</name></expr>, <expr><name>bitalloc_9_bits_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_13_bits_a</name></expr>, <expr><name>bitalloc_13_bits_b</name></expr>, <expr><name>bitalloc_13_bits_c</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_17_bits_a</name></expr>, <expr><name>bitalloc_17_bits_b</name></expr>, <expr><name>bitalloc_17_bits_c</name></expr>, <expr><name>bitalloc_17_bits_d</name></expr>,

<expr><name>bitalloc_17_bits_e</name></expr>, <expr><name>bitalloc_17_bits_f</name></expr>, <expr><name>bitalloc_17_bits_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_25_bits_a</name></expr>, <expr><name>bitalloc_25_bits_b</name></expr>, <expr><name>bitalloc_25_bits_c</name></expr>, <expr><name>bitalloc_25_bits_d</name></expr>,

<expr><name>bitalloc_25_bits_e</name></expr>, <expr><name>bitalloc_25_bits_f</name></expr>, <expr><name>bitalloc_25_bits_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_33_bits_a</name></expr>, <expr><name>bitalloc_33_bits_b</name></expr>, <expr><name>bitalloc_33_bits_c</name></expr>, <expr><name>bitalloc_33_bits_d</name></expr>,

<expr><name>bitalloc_33_bits_e</name></expr>, <expr><name>bitalloc_33_bits_f</name></expr>, <expr><name>bitalloc_33_bits_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_65_bits_a</name></expr>, <expr><name>bitalloc_65_bits_b</name></expr>, <expr><name>bitalloc_65_bits_c</name></expr>, <expr><name>bitalloc_65_bits_d</name></expr>,

<expr><name>bitalloc_65_bits_e</name></expr>, <expr><name>bitalloc_65_bits_f</name></expr>, <expr><name>bitalloc_65_bits_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,

<expr><block>{ <expr><name>bitalloc_129_bits_a</name></expr>, <expr><name>bitalloc_129_bits_b</name></expr>, <expr><name>bitalloc_129_bits_c</name></expr>, <expr><name>bitalloc_129_bits_d</name></expr>,

<expr><name>bitalloc_129_bits_e</name></expr>, <expr><name>bitalloc_129_bits_f</name></expr>, <expr><name>bitalloc_129_bits_g</name></expr>, <expr><name>NULL</name></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>tnl_grp_0_codes</name><index>[<expr><literal type="number">37</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x000a</literal></expr>, <expr><literal type="number">0x000d</literal></expr>,

<expr><literal type="number">0x000e</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0015</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x0025</literal></expr>,

<expr><literal type="number">0x0035</literal></expr>, <expr><literal type="number">0x0076</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x00b6</literal></expr>, <expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x00c2</literal></expr>, <expr><literal type="number">0x0136</literal></expr>,

<expr><literal type="number">0x0182</literal></expr>, <expr><literal type="number">0x01c2</literal></expr>, <expr><literal type="number">0x03c2</literal></expr>, <expr><literal type="number">0x0482</literal></expr>, <expr><literal type="number">0x0682</literal></expr>, <expr><literal type="number">0x0082</literal></expr>, <expr><literal type="number">0x0882</literal></expr>, <expr><literal type="number">0x0a82</literal></expr>,

<expr><literal type="number">0x0282</literal></expr>, <expr><literal type="number">0x2282</literal></expr>, <expr><literal type="number">0x3282</literal></expr>, <expr><literal type="number">0x1282</literal></expr>, <expr><literal type="number">0x5282</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>tnl_grp_1_codes</name><index>[<expr><literal type="number">34</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0007</literal></expr>,

<expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000f</literal></expr>, <expr><literal type="number">0x001a</literal></expr>, <expr><literal type="number">0x001c</literal></expr>, <expr><literal type="number">0x001d</literal></expr>, <expr><literal type="number">0x000a</literal></expr>, <expr><literal type="number">0x002c</literal></expr>, <expr><literal type="number">0x002d</literal></expr>,

<expr><literal type="number">0x000d</literal></expr>, <expr><literal type="number">0x002a</literal></expr>, <expr><literal type="number">0x004c</literal></expr>, <expr><literal type="number">0x004d</literal></expr>, <expr><literal type="number">0x006a</literal></expr>, <expr><literal type="number">0x008c</literal></expr>, <expr><literal type="number">0x00cd</literal></expr>, <expr><literal type="number">0x00ea</literal></expr>,

<expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x010c</literal></expr>, <expr><literal type="number">0x01ea</literal></expr>, <expr><literal type="number">0x020c</literal></expr>, <expr><literal type="number">0x030c</literal></expr>, <expr><literal type="number">0x07ea</literal></expr>, <expr><literal type="number">0x0bea</literal></expr>, <expr><literal type="number">0x03ea</literal></expr>,

<expr><literal type="number">0x13ea</literal></expr>, <expr><literal type="number">0x33ea</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>tnl_grp_2_codes</name><index>[<expr><literal type="number">31</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x0010</literal></expr>,

<expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x001a</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x000a</literal></expr>, <expr><literal type="number">0x0020</literal></expr>, <expr><literal type="number">0x0040</literal></expr>, <expr><literal type="number">0x004a</literal></expr>,

<expr><literal type="number">0x006a</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x002a</literal></expr>, <expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x0082</literal></expr>, <expr><literal type="number">0x00aa</literal></expr>, <expr><literal type="number">0x00e0</literal></expr>, <expr><literal type="number">0x0060</literal></expr>,

<expr><literal type="number">0x00c2</literal></expr>, <expr><literal type="number">0x01c2</literal></expr>, <expr><literal type="number">0x0160</literal></expr>, <expr><literal type="number">0x0360</literal></expr>, <expr><literal type="number">0x0f60</literal></expr>, <expr><literal type="number">0x0760</literal></expr>, <expr><literal type="number">0x1760</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>tnl_grp_3_codes</name><index>[<expr><literal type="number">28</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x001c</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x000a</literal></expr>, <expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x001a</literal></expr>, <expr><literal type="number">0x0020</literal></expr>, <expr><literal type="number">0x002a</literal></expr>, <expr><literal type="number">0x002c</literal></expr>,

<expr><literal type="number">0x0032</literal></expr>, <expr><literal type="number">0x003a</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x0030</literal></expr>, <expr><literal type="number">0x0062</literal></expr>, <expr><literal type="number">0x0064</literal></expr>, <expr><literal type="number">0x0070</literal></expr>, <expr><literal type="number">0x0024</literal></expr>,

<expr><literal type="number">0x00a4</literal></expr>, <expr><literal type="number">0x01a4</literal></expr>, <expr><literal type="number">0x03a4</literal></expr>, <expr><literal type="number">0x07a4</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>tnl_grp_4_codes</name><index>[<expr><literal type="number">23</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x000a</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0012</literal></expr>, <expr><literal type="number">0x001e</literal></expr>, <expr><literal type="number">0x0022</literal></expr>, <expr><literal type="number">0x002e</literal></expr>,

<expr><literal type="number">0x0036</literal></expr>, <expr><literal type="number">0x003e</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0016</literal></expr>, <expr><literal type="number">0x0032</literal></expr>, <expr><literal type="number">0x004e</literal></expr>, <expr><literal type="number">0x0056</literal></expr>, <expr><literal type="number">0x000e</literal></expr>,

<expr><literal type="number">0x0042</literal></expr>, <expr><literal type="number">0x0072</literal></expr>, <expr><literal type="number">0x00c2</literal></expr>, <expr><literal type="number">0x00f2</literal></expr>, <expr><literal type="number">0x008e</literal></expr>, <expr><literal type="number">0x018e</literal></expr>, <expr><literal type="number">0x038e</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>tnl_scf_codes</name><index>[<expr><literal type="number">20</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000b</literal></expr>, <expr><literal type="number">0x000c</literal></expr>,

<expr><literal type="number">0x0013</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0023</literal></expr>, <expr><literal type="number">0x0064</literal></expr>, <expr><literal type="number">0x00a4</literal></expr>, <expr><literal type="number">0x0024</literal></expr>,

<expr><literal type="number">0x0124</literal></expr>, <expr><literal type="number">0x0324</literal></expr>, <expr><literal type="number">0x0724</literal></expr>, <expr><literal type="number">0x0f24</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>damp_codes</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x000e</literal></expr>, <expr><literal type="number">0x001e</literal></expr>, <expr><literal type="number">0x003e</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>dph_codes</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x000d</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0015</literal></expr>,

<expr><literal type="number">0x0035</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>fst_rsd_amp_codes</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0008</literal></expr>,

<expr><literal type="number">0x0009</literal></expr>, <expr><literal type="number">0x000a</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x001a</literal></expr>, <expr><literal type="number">0x001c</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x002c</literal></expr>,

<expr><literal type="number">0x003a</literal></expr>, <expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x003c</literal></expr>, <expr><literal type="number">0x004c</literal></expr>, <expr><literal type="number">0x00fc</literal></expr>, <expr><literal type="number">0x007c</literal></expr>, <expr><literal type="number">0x017c</literal></expr>, <expr><literal type="number">0x037c</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>rsd_apprx_codes</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x000f</literal></expr>, <expr><literal type="number">0x001f</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>rsd_amp_codes</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x000e</literal></expr>, <expr><literal type="number">0x000f</literal></expr>, <expr><literal type="number">0x0016</literal></expr>,

<expr><literal type="number">0x0007</literal></expr>, <expr><literal type="number">0x0027</literal></expr>, <expr><literal type="number">0x0037</literal></expr>, <expr><literal type="number">0x0026</literal></expr>, <expr><literal type="number">0x0066</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0017</literal></expr>, <expr><literal type="number">0x0046</literal></expr>,

<expr><literal type="number">0x0097</literal></expr>, <expr><literal type="number">0x00d7</literal></expr>, <expr><literal type="number">0x0086</literal></expr>, <expr><literal type="number">0x00c6</literal></expr>, <expr><literal type="number">0x01c6</literal></expr>, <expr><literal type="number">0x0157</literal></expr>, <expr><literal type="number">0x0186</literal></expr>, <expr><literal type="number">0x0257</literal></expr>,

<expr><literal type="number">0x0357</literal></expr>, <expr><literal type="number">0x0057</literal></expr>, <expr><literal type="number">0x0786</literal></expr>, <expr><literal type="number">0x0386</literal></expr>, <expr><literal type="number">0x0b86</literal></expr>, <expr><literal type="number">0x0457</literal></expr>, <expr><literal type="number">0x0c57</literal></expr>, <expr><literal type="number">0x1457</literal></expr>,

<expr><literal type="number">0x1c57</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>avg_g3_codes</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x0014</literal></expr>, <expr><literal type="number">0x0018</literal></expr>, <expr><literal type="number">0x0004</literal></expr>,

<expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x0028</literal></expr>, <expr><literal type="number">0x0068</literal></expr>, <expr><literal type="number">0x0024</literal></expr>, <expr><literal type="number">0x00a4</literal></expr>, <expr><literal type="number">0x00e4</literal></expr>, <expr><literal type="number">0x0164</literal></expr>, <expr><literal type="number">0x0064</literal></expr>,

<expr><literal type="number">0x0264</literal></expr>, <expr><literal type="number">0x0664</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>st_grid_codes</name><index>[<expr><literal type="number">22</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x0008</literal></expr>, <expr><literal type="number">0x001c</literal></expr>, <expr><literal type="number">0x004c</literal></expr>, <expr><literal type="number">0x006c</literal></expr>,

<expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x002c</literal></expr>, <expr><literal type="number">0x008c</literal></expr>, <expr><literal type="number">0x00ac</literal></expr>, <expr><literal type="number">0x012c</literal></expr>, <expr><literal type="number">0x018c</literal></expr>, <expr><literal type="number">0x01ac</literal></expr>, <expr><literal type="number">0x038c</literal></expr>,

<expr><literal type="number">0x03ac</literal></expr>, <expr><literal type="number">0x032c</literal></expr>, <expr><literal type="number">0x072c</literal></expr>, <expr><literal type="number">0x0f2c</literal></expr>, <expr><literal type="number">0x172c</literal></expr>, <expr><literal type="number">0x1f2c</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>grid_2_codes</name><index>[<expr><literal type="number">20</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0005</literal></expr>, <expr><literal type="number">0x000d</literal></expr>, <expr><literal type="number">0x003d</literal></expr>, <expr><literal type="number">0x005d</literal></expr>,

<expr><literal type="number">0x009d</literal></expr>, <expr><literal type="number">0x011d</literal></expr>, <expr><literal type="number">0x001d</literal></expr>, <expr><literal type="number">0x061d</literal></expr>, <expr><literal type="number">0x041d</literal></expr>, <expr><literal type="number">0x0c1d</literal></expr>, <expr><literal type="number">0x0a1d</literal></expr>, <expr><literal type="number">0x121d</literal></expr>,

<expr><literal type="number">0x021d</literal></expr>, <expr><literal type="number">0x1a1d</literal></expr>, <expr><literal type="number">0x221d</literal></expr>, <expr><literal type="number">0x3a1d</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>grid_3_codes</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x001c</literal></expr>, <expr><literal type="number">0x007c</literal></expr>, <expr><literal type="number">0x003c</literal></expr>,

<expr><literal type="number">0x01bc</literal></expr>, <expr><literal type="number">0x00bc</literal></expr>, <expr><literal type="number">0x06bc</literal></expr>, <expr><literal type="number">0x02bc</literal></expr>, <expr><literal type="number">0x0abc</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>rsd_codes</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0001</literal></expr>, <expr><literal type="number">0x0003</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0002</literal></expr>, <expr><literal type="number">0x0006</literal></expr>, <expr><literal type="number">0x0004</literal></expr>, <expr><literal type="number">0x000c</literal></expr>, <expr><literal type="number">0x001c</literal></expr>,

<expr><literal type="number">0x003c</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tnl_grp_0_bitvals</name><index>[<expr><literal type="number">74</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">32</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tnl_grp_1_bitvals</name><index>[<expr><literal type="number">68</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">18</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">26</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">33</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tnl_grp_2_bitvals</name><index>[<expr><literal type="number">62</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">18</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">23</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tnl_grp_3_bitvals</name><index>[<expr><literal type="number">56</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">17</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">20</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tnl_grp_4_bitvals</name><index>[<expr><literal type="number">46</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">19</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>tnl_scf_bitvals</name><index>[<expr><literal type="number">40</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>damp_bitvals</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>dph_bitvals</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>fst_rsd_amp_bitvals</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">17</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>rsd_apprx_bitvals</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>rsd_amp_bitvals</name><index>[<expr><literal type="number">66</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">21</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">34</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>avg_g3_bitvals</name><index>[<expr><literal type="number">36</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>st_grid_bitvals</name><index>[<expr><literal type="number">44</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">22</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>grid_2_bitvals</name><index>[<expr><literal type="number">40</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">18</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>grid_3_bitvals</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>rsd_bitvals</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>vlc_offs</name><index>[<expr><literal type="number">80</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">640</literal></expr>, <expr><literal type="number">768</literal></expr>, <expr><literal type="number">1282</literal></expr>, <expr><literal type="number">1794</literal></expr>, <expr><literal type="number">2436</literal></expr>, <expr><literal type="number">3080</literal></expr>, <expr><literal type="number">3770</literal></expr>, <expr><literal type="number">4454</literal></expr>, <expr><literal type="number">5364</literal></expr>,

<expr><literal type="number">5372</literal></expr>, <expr><literal type="number">5380</literal></expr>, <expr><literal type="number">5388</literal></expr>, <expr><literal type="number">5392</literal></expr>, <expr><literal type="number">5396</literal></expr>, <expr><literal type="number">5412</literal></expr>, <expr><literal type="number">5420</literal></expr>, <expr><literal type="number">5428</literal></expr>, <expr><literal type="number">5460</literal></expr>, <expr><literal type="number">5492</literal></expr>, <expr><literal type="number">5508</literal></expr>,

<expr><literal type="number">5572</literal></expr>, <expr><literal type="number">5604</literal></expr>, <expr><literal type="number">5668</literal></expr>, <expr><literal type="number">5796</literal></expr>, <expr><literal type="number">5860</literal></expr>, <expr><literal type="number">5892</literal></expr>, <expr><literal type="number">6412</literal></expr>, <expr><literal type="number">6668</literal></expr>, <expr><literal type="number">6796</literal></expr>, <expr><literal type="number">7308</literal></expr>, <expr><literal type="number">7564</literal></expr>,

<expr><literal type="number">7820</literal></expr>, <expr><literal type="number">8076</literal></expr>, <expr><literal type="number">8620</literal></expr>, <expr><literal type="number">9132</literal></expr>, <expr><literal type="number">9388</literal></expr>, <expr><literal type="number">9910</literal></expr>, <expr><literal type="number">10166</literal></expr>, <expr><literal type="number">10680</literal></expr>, <expr><literal type="number">11196</literal></expr>, <expr><literal type="number">11726</literal></expr>, <expr><literal type="number">12240</literal></expr>,

<expr><literal type="number">12752</literal></expr>, <expr><literal type="number">13298</literal></expr>, <expr><literal type="number">13810</literal></expr>, <expr><literal type="number">14326</literal></expr>, <expr><literal type="number">14840</literal></expr>, <expr><literal type="number">15500</literal></expr>, <expr><literal type="number">16022</literal></expr>, <expr><literal type="number">16540</literal></expr>, <expr><literal type="number">17158</literal></expr>, <expr><literal type="number">17678</literal></expr>, <expr><literal type="number">18264</literal></expr>,

<expr><literal type="number">18796</literal></expr>, <expr><literal type="number">19352</literal></expr>, <expr><literal type="number">19926</literal></expr>, <expr><literal type="number">20468</literal></expr>, <expr><literal type="number">21472</literal></expr>, <expr><literal type="number">22398</literal></expr>, <expr><literal type="number">23014</literal></expr>, <expr><literal type="number">23622</literal></expr>, <expr><literal type="number">24200</literal></expr>, <expr><literal type="number">24748</literal></expr>, <expr><literal type="number">25276</literal></expr>,

<expr><literal type="number">25792</literal></expr>, <expr><literal type="number">26306</literal></expr>, <expr><literal type="number">26826</literal></expr>, <expr><literal type="number">26890</literal></expr>, <expr><literal type="number">26954</literal></expr>, <expr><literal type="number">27468</literal></expr>, <expr><literal type="number">27500</literal></expr>, <expr><literal type="number">28038</literal></expr>, <expr><literal type="number">28554</literal></expr>, <expr><literal type="number">29086</literal></expr>, <expr><literal type="number">29630</literal></expr>,

<expr><literal type="number">30150</literal></expr>, <expr><literal type="number">30214</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DCAVLC</name></type> <name>ff_dca_vlc_bit_allocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DCAVLC</name></type> <name>ff_dca_vlc_transition_mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DCAVLC</name></type> <name>ff_dca_vlc_scale_factor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DCAVLC</name></type> <name><name>ff_dca_vlc_quant_index</name><index>[<expr><name>DCA_CODE_BOOKS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name><name>ff_dca_vlc_tnl_grp</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_tnl_scf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_damp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_dph</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_fst_rsd_amp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_rsd_apprx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_rsd_amp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_avg_g3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_st_grid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_grid_2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_grid_3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>ff_dca_vlc_rsd</name></decl>;</decl_stmt>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_dca_init_vlcs</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <name>VLC_TYPE</name></type> <name><name>dca_table</name><index>[<expr><literal type="number">30214</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>vlcs_initialized</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>, <decl><type ref="prev"/><name>k</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>vlcs_initialized</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_INIT_VLC</name><parameter_list>(<parameter><type><name>vlc</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { vlc.table = &amp;dca_table[vlc_offs[k]]; vlc.table_allocated = vlc_offs[k + 1] - vlc_offs[k]; init_vlc(&amp;vlc, a, b, c, 1, 1, d, 2, 2, INIT_VLC_USE_NEW_STATIC); k++; } while (0)</cpp:value></cpp:define>

<expr_stmt><expr><name><name>ff_dca_vlc_bit_allocation</name><operator>.</operator><name>offset</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ff_dca_vlc_bit_allocation</name><operator>.</operator><name>max_depth</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>DCA_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_bit_allocation</name><operator>.</operator><name>vlc</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>bitalloc_12_vlc_bits</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>,

<argument><expr><name><name>bitalloc_12_bits</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>bitalloc_12_codes</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name><name>ff_dca_vlc_scale_factor</name><operator>.</operator><name>offset</name></name> <operator>=</operator> <operator>-</operator><literal type="number">64</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ff_dca_vlc_scale_factor</name><operator>.</operator><name>max_depth</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>DCA_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_scale_factor</name><operator>.</operator><name>vlc</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>SCALES_VLC_BITS</name></expr></argument>, <argument><expr><literal type="number">129</literal></expr></argument>,

<argument><expr><name><name>scales_bits</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>scales_codes</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name><name>ff_dca_vlc_transition_mode</name><operator>.</operator><name>offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ff_dca_vlc_transition_mode</name><operator>.</operator><name>max_depth</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>DCA_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_transition_mode</name><operator>.</operator><name>vlc</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmode_vlc_bits</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name><name>tmode_bits</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmode_codes</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>DCA_CODE_BOOKS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>ff_dca_vlc_quant_index</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>offset</name> <operator>=</operator> <name><name>bitalloc_offsets</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ff_dca_vlc_quant_index</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>max_depth</name> <operator>=</operator> <literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>i</name> <operator>&gt;</operator> <literal type="number">4</literal><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>bitalloc_codes</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>DCA_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_quant_index</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>vlc</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>bitalloc_maxbits</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>,

<argument><expr><name><name>bitalloc_sizes</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>bitalloc_bits</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>bitalloc_codes</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></for>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LBR_INIT_VLC</name><parameter_list>(<parameter><type><name>vlc</name></type></parameter>, <parameter><type><name>tab</name></type></parameter>, <parameter><type><name>nb_bits</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { vlc.table = &amp;dca_table[vlc_offs[k]]; vlc.table_allocated = vlc_offs[k + 1] - vlc_offs[k]; ff_init_vlc_sparse(&amp;vlc, nb_bits, FF_ARRAY_ELEMS(tab##_codes), &amp;tab##_bitvals[0], 2, 1, tab##_codes, 2, 2, &amp;tab##_bitvals[1], 2, 1, INIT_VLC_LE | INIT_VLC_USE_NEW_STATIC); k++; } while (0)</cpp:value></cpp:define>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_tnl_grp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>tnl_grp_0</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_tnl_grp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>tnl_grp_1</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_tnl_grp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name>tnl_grp_2</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_tnl_grp</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name>tnl_grp_3</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name><name>ff_dca_vlc_tnl_grp</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name>tnl_grp_4</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_tnl_scf</name></expr></argument>, <argument><expr><name>tnl_scf</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_damp</name></expr></argument>, <argument><expr><name>damp</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_dph</name></expr></argument>, <argument><expr><name>dph</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_fst_rsd_amp</name></expr></argument>, <argument><expr><name>fst_rsd_amp</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_rsd_apprx</name></expr></argument>, <argument><expr><name>rsd_apprx</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_rsd_amp</name></expr></argument>, <argument><expr><name>rsd_amp</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_avg_g3</name></expr></argument>, <argument><expr><name>avg_g3</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_st_grid</name></expr></argument>, <argument><expr><name>st_grid</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_grid_2</name></expr></argument>, <argument><expr><name>grid_2</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_grid_3</name></expr></argument>, <argument><expr><name>grid_3</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LBR_INIT_VLC</name><argument_list>(<argument><expr><name>ff_dca_vlc_rsd</name></expr></argument>, <argument><expr><name>rsd</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vlcs_initialized</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>uint32_t</name></type> <name>ff_dca_vlc_calc_quant_bits</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>values</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>sel</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>table</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>values</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>bitalloc_offsets</name><index>[<expr><name>table</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name>id</name> <operator>&lt;</operator> <name><name>bitalloc_sizes</name><index>[<expr><name>table</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>bitalloc_bits</name><index>[<expr><name>table</name></expr>]</index><index>[<expr><name>sel</name></expr>]</index><index>[<expr><name>id</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>sum</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_dca_vlc_enc_quant</name><parameter_list>(<parameter><decl><type><name>PutBitContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>values</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>sel</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>table</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>id</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>values</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>bitalloc_offsets</name><index>[<expr><name>table</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name>id</name> <operator>&lt;</operator> <name><name>bitalloc_sizes</name><index>[<expr><name>table</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>put_bits</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name><name>bitalloc_bits</name><index>[<expr><name>table</name></expr>]</index><index>[<expr><name>sel</name></expr>]</index><index>[<expr><name>id</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>bitalloc_codes</name><index>[<expr><name>table</name></expr>]</index><index>[<expr><name>sel</name></expr>]</index><index>[<expr><name>id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>uint32_t</name></type> <name>ff_dca_vlc_calc_alloc_bits</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>values</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>sel</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>values</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>bitalloc_12_bits</name><index>[<expr><name>sel</name></expr>]</index><index>[<expr><name>id</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>sum</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_dca_vlc_enc_alloc</name><parameter_list>(<parameter><decl><type><name>PutBitContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>values</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>sel</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>id</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>values</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>put_bits</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name><name>bitalloc_12_bits</name><index>[<expr><name>sel</name></expr>]</index><index>[<expr><name>id</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>bitalloc_12_codes</name><index>[<expr><name>sel</name></expr>]</index><index>[<expr><name>id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

</unit>
