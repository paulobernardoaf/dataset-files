<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\cabac.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"put_bits.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_cabac_tables</name><index>[<expr><literal type="number">512</literal> <operator>+</operator> <literal type="number">4</literal><operator>*</operator><literal type="number">2</literal><operator>*</operator><literal type="number">64</literal> <operator>+</operator> <literal type="number">4</literal><operator>*</operator><literal type="number">64</literal> <operator>+</operator> <literal type="number">63</literal></expr>]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_NORM_SHIFT_OFFSET</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_LPS_RANGE_OFFSET</name></cpp:macro> <cpp:value>512</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_MLPS_STATE_OFFSET</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_LAST_COEFF_FLAG_OFFSET_8x8_OFFSET</name></cpp:macro> <cpp:value>1280</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CABAC_BITS</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CABAC_MASK</name></cpp:macro> <cpp:value>((1&lt;&lt;CABAC_BITS)-1)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>CABACContext</name><block>{

<decl_stmt><decl><type><name>int</name></type> <name>low</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>outstanding_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>bytestream_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>bytestream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>bytestream_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PutBitContext</name></type> <name>pb</name></decl>;</decl_stmt>

}</block></struct></type><name>CABACContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_init_cabac_encoder</name><parameter_list>(<parameter><decl><type><name>CABACContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_init_cabac_decoder</name><parameter_list>(<parameter><decl><type><name>CABACContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
