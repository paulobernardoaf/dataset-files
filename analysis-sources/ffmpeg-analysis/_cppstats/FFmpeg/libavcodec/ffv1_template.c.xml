<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\ffv1_template.c"><function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name> <name>RENAME</name></type>(<name>predict</name>)<parameter_list>(<parameter><decl><type><name>TYPE</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>TYPE</name> <modifier>*</modifier></type><name>last</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>LT</name> <init>= <expr><name><name>last</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>T</name> <init>= <expr><name><name>last</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>L</name> <init>= <expr><name><name>src</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>mid_pred</name><argument_list>(<argument><expr><name>L</name></expr></argument>, <argument><expr><name>L</name> <operator>+</operator> <name>T</name> <operator>-</operator> <name>LT</name></expr></argument>, <argument><expr><name>T</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name> <name>RENAME</name></type>(<name>get_context</name>)<parameter_list>(<parameter><decl><type><name>PlaneContext</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>TYPE</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>TYPE</name> <modifier>*</modifier></type><name>last</name></decl></parameter>, <parameter><decl><type><name>TYPE</name> <modifier>*</modifier></type><name>last2</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>LT</name> <init>= <expr><name><name>last</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>T</name> <init>= <expr><name><name>last</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>RT</name> <init>= <expr><name><name>last</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>L</name> <init>= <expr><name><name>src</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">127</literal></expr>]</index></name> <operator>||</operator> <name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">127</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>TT</name> <init>= <expr><name><name>last2</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>LL</name> <init>= <expr><name><name>src</name><index>[<expr><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><operator>(</operator><name>L</name> <operator>-</operator> <name>LT</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>+</operator>

<name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><operator>(</operator><name>LT</name> <operator>-</operator> <name>T</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>+</operator>

<name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><operator>(</operator><name>T</name> <operator>-</operator> <name>RT</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>+</operator>

<name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><operator>(</operator><name>LL</name> <operator>-</operator> <name>L</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>+</operator>

<name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><operator>(</operator><name>TT</name> <operator>-</operator> <name>T</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name></expr>;</return>

</block_content>}</block></if> <else>else<block type="pseudo"><block_content>

<return>return <expr><name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><operator>(</operator><name>L</name> <operator>-</operator> <name>LT</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>+</operator>

<name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><operator>(</operator><name>LT</name> <operator>-</operator> <name>T</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>+</operator>

<name><name>p</name><operator>-&gt;</operator><name>quant_table</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><operator>(</operator><name>T</name> <operator>-</operator> <name>RT</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

</unit>
