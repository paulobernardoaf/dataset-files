<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\vc1_mc.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264chroma.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mathops.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegvideo.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vc1.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>vc1_scale_luma</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcY</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>linesize</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>srcY</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>srcY</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">128</literal></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>linesize</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>vc1_scale_chroma</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcU</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcV</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>uvlinesize</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>srcU</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>srcU</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">128</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>srcV</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>srcV</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">128</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>vc1_lut_scale_luma</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcY</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>lut1</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>lut2</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>linesize</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>srcY</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>lut1</name><index>[<expr><name><name>srcY</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>linesize</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>j</name> <operator>+</operator> <literal type="number">1</literal> <operator>==</operator> <name>k</name></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>srcY</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>lut2</name><index>[<expr><name><name>srcY</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>linesize</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>vc1_lut_scale_chroma</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcU</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcV</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>lut1</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>lut2</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>uvlinesize</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>srcU</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>lut1</name><index>[<expr><name><name>srcU</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>srcV</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>lut1</name><index>[<expr><name><name>srcV</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>j</name> <operator>+</operator> <literal type="number">1</literal> <operator>==</operator> <name>k</name></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>k</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>srcU</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>lut2</name><index>[<expr><name><name>srcU</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>srcV</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>lut2</name><index>[<expr><name><name>srcV</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>popcount4</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>int</name></type> <name>get_luma_mv</name><parameter_list>(<parameter><decl><type><name>VC1Context</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>tx</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>ty</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index></name> <operator>|</operator>

<operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>index2</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>opp_count</name> <init>= <expr><name><name>popcount4</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>opp_count</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case>

<case>case <expr><literal type="number">4</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>tx</name> <operator>=</operator> <call><name>median4</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ty</name> <operator>=</operator> <call><name>median4</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">1</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>tx</name> <operator>=</operator> <call><name>mid_pred</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>idx</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&lt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ty</name> <operator>=</operator> <call><name>mid_pred</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>idx</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&lt;</operator> <literal type="number">8</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>tx</name> <operator>=</operator> <call><name>mid_pred</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>idx</name> <operator>&gt;</operator> <literal type="number">0xd</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0xb</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0x7</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ty</name> <operator>=</operator> <call><name>mid_pred</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>idx</name> <operator>&gt;</operator> <literal type="number">0xd</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0xb</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0x7</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>tx</name> <operator>=</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0xf</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ty</name> <operator>=</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0xf</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>opp_count</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>int</name></type> <name>get_chroma_mv</name><parameter_list>(<parameter><decl><type><name>VC1Context</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>tx</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>ty</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>mb_type</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>|</operator>

<operator>(</operator><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>mb_type</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>mb_type</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator>

<operator>(</operator><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>mb_type</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>index2</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>valid_count</name> <init>= <expr><name><name>popcount4</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>valid_count</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">4</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>tx</name> <operator>=</operator> <call><name>median4</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ty</name> <operator>=</operator> <call><name>median4</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>tx</name> <operator>=</operator> <call><name>mid_pred</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>idx</name> <operator>&gt;</operator> <literal type="number">0xd</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0xb</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0x7</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ty</name> <operator>=</operator> <call><name>mid_pred</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>idx</name> <operator>&gt;</operator> <literal type="number">0xd</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0xb</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">2</literal> <operator>+</operator> <operator>(</operator><name>idx</name> <operator>&gt;</operator> <literal type="number">0x7</literal><operator>)</operator></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>tx</name> <operator>=</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0xf</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ty</name> <operator>=</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>index2</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0xf</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>valid_count</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_vc1_mc_1mv</name><parameter_list>(<parameter><decl><type><name>VC1Context</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264ChromaContext</name> <modifier>*</modifier></type><name>h264chroma</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>h264chroma</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcY</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>srcU</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>srcV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>dxy</name></decl>, <decl><type ref="prev"/><name>mx</name></decl>, <decl><type ref="prev"/><name>my</name></decl>, <decl><type ref="prev"/><name>uvmx</name></decl>, <decl><type ref="prev"/><name>uvmy</name></decl>, <decl><type ref="prev"/><name>src_x</name></decl>, <decl><type ref="prev"/><name>src_y</name></decl>, <decl><type ref="prev"/><name>uvsrc_x</name></decl>, <decl><type ref="prev"/><name>uvsrc_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>v_edge_pos</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>uint8_t</name> <argument_list>(<argument><expr><operator>*</operator><name>luty</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index></expr><operator>,</operator> <expr><operator>(</operator><operator>*</operator><name>lutuv</name><operator>)</operator><index>[<expr><literal type="number">256</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_ic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interlace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>linesize</name></decl>, <decl><type ref="prev"/><name>uvlinesize</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>||</operator>

<operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>&amp;&amp;</operator>

<operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>linesize</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>uvlinesize</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>mx</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>my</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_P</name></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>mx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>my</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <operator>(</operator><name>mx</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <operator>(</operator><name>my</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>luma_mv</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>uvmx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>luma_mv</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>uvmy</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator>

<name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>my</name> <operator>=</operator> <name>my</name> <operator>-</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <name>uvmy</name> <operator>-</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fastuvmc</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>!=</operator> <name>ILACE_FRAME</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <name>uvmx</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>uvmx</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><operator>-</operator><operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <name>uvmy</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>uvmy</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><operator>-</operator><operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dir</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>second_field</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>luty</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>curr_luty</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>curr_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <operator>*</operator><name><name>v</name><operator>-&gt;</operator><name>curr_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>luty</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_luty</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>luty</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_luty</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>srcY</name> <operator>||</operator> <operator>!</operator><name>srcU</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Referenced frame missing.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>mx</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>my</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvmx</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvmy</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>profile</name></name> <operator>!=</operator> <name>PROFILE_ADVANCED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>( <argument><expr><name>src_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>( <argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>( <argument><expr><name>src_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">17</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>==</operator> <name>ILACE_FRAME</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">18</literal> <operator>+</operator> <operator>(</operator><name>src_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>+</operator> <operator>(</operator><name>src_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvsrc_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>uvsrc_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">18</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>src_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>+</operator> <name>src_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>linesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>CONFIG_GRAY</name> <operator>&amp;&amp;</operator> <name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_CODEC_FLAG_GRAY</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">18</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">18</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name> <operator>||</operator> <name>use_ic</name>

<operator>||</operator> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&lt;</operator> <literal type="number">22</literal> <operator>||</operator> <name><name>v_edge_pos</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">22</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator></expr></argument> &gt;</argument_list></name> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>-</operator> <operator>(</operator><name>mx</name><operator>&amp;</operator><literal type="number">3</literal><operator>)</operator> <operator>-</operator> <literal type="number">16</literal> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <literal type="number">3</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>src_y</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&gt;</operator> <name>v_edge_pos</name> <operator>-</operator> <operator>(</operator><name>my</name><operator>&amp;</operator><literal type="number">3</literal><operator>)</operator> <operator>-</operator> <literal type="number">16</literal> <operator>-</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>ubuf</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">19</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>vbuf</name> <init>= <expr><name>ubuf</name> <operator>+</operator> <literal type="number">9</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>k</name> <init>= <expr><literal type="number">17</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>srcY</name> <operator>-=</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>interlace</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name>k</name></expr> </then><else>: <expr><name>k</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <name>linesize</name></expr></argument>,

<argument><expr><name>srcY</name> <operator>+</operator> <name>linesize</name></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><name>k</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if> <else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name>linesize</name></expr></argument>,

<argument><expr><name>linesize</name></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><operator>(</operator><name>k</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr> </then><else>: <expr><name>k</name></expr></else></ternary></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>:

<expr><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>interlace</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>ubuf</name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">9</literal></expr> </then><else>: <expr><literal type="number">5</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>vbuf</name></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">9</literal></expr> </then><else>: <expr><literal type="number">5</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>ubuf</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcU</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>vbuf</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcV</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>ubuf</name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">17</literal></expr> </then><else>: <expr><literal type="number">9</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <name>uvsrc_y</name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><name>uvsrc_y</name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>vbuf</name></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">17</literal></expr> </then><else>: <expr><literal type="number">9</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <name>uvsrc_y</name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><name>uvsrc_y</name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name>ubuf</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name>vbuf</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_scale_luma</name><argument_list>(<argument><expr><name>srcY</name></expr></argument>, <argument><expr><name>k</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vc1_scale_chroma</name><argument_list>(<argument><expr><name>srcU</name></expr></argument>, <argument><expr><name>srcV</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>use_ic</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_lut_scale_luma</name><argument_list>(<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name><name>luty</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name><name>luty</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name>k</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vc1_lut_scale_chroma</name><argument_list>(<argument><expr><name>srcU</name></expr></argument>, <argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <name>uvsrc_y</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name>uvsrc_y</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>dxy</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_vc1_mspel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <name><name>v</name><operator>-&gt;</operator><name>rnd</name></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content> 

<expr_stmt><expr><name>dxy</name> <operator>=</operator> <operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hdsp</name><operator>.</operator><name>put_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hdsp</name><operator>.</operator><name>put_no_rnd_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>CONFIG_GRAY</name> <operator>&amp;&amp;</operator> <name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>put_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>put_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>mb_off</name></name></expr>]</index></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>mb_off</name></name></expr>]</index></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_vc1_mc_4mv_luma</name><parameter_list>(<parameter><decl><type><name>VC1Context</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>avg</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcY</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>dxy</name></decl>, <decl><type ref="prev"/><name>mx</name></decl>, <decl><type ref="prev"/><name>my</name></decl>, <decl><type ref="prev"/><name>src_x</name></decl>, <decl><type ref="prev"/><name>src_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>off</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fieldmv</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>==</operator> <name>ILACE_FRAME</name><operator>)</operator></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>blk_mv_type</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><name>n</name></expr>]</index></name></expr>]</index></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>v_edge_pos</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>uint8_t</name> <argument_list>(<argument><expr><operator>*</operator><name>luty</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_ic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interlace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>linesize</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>||</operator>

<operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>&amp;&amp;</operator>

<operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>linesize</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>mx</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>n</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>my</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name>n</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dir</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>second_field</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>luty</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>curr_luty</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <operator>*</operator><name><name>v</name><operator>-&gt;</operator><name>curr_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>luty</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_luty</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>luty</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_luty</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>srcY</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Referenced frame missing.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>my</name> <operator>=</operator> <name>my</name> <operator>-</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_P</name> <operator>&amp;&amp;</operator> <name>n</name> <operator>==</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>opp_count</name> <init>= <expr><call><name>get_luma_mv</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>, <decl><type ref="prev"/><name>f</name> <init>= <expr><name>opp_count</name> <operator>&gt;</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><name>k</name></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index></name> <operator>=</operator> <name>f</name></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>==</operator> <name>ILACE_FRAME</name></expr>)</condition> <block>{<block_content> 

<decl_stmt><decl><type><name>int</name></type> <name>qx</name></decl>, <decl><type ref="prev"/><name>qy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>height</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_P</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><name>n</name></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>mx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><name>n</name></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>my</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>qx</name> <operator>=</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">16</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>mx</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>qy</name> <operator>=</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">8</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>my</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>qx</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">17</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>mx</name> <operator>-=</operator> <literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>qx</name> <operator>+</operator> <literal type="number">17</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>qx</name> <operator>&gt;</operator> <name>width</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>mx</name> <operator>-=</operator> <literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>qx</name> <operator>-</operator> <name>width</name><operator>)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>qy</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">18</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>my</name> <operator>-=</operator> <literal type="number">8</literal> <operator>*</operator> <operator>(</operator><name>qy</name> <operator>+</operator> <literal type="number">18</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>qy</name> <operator>&gt;</operator> <name>height</name> <operator>+</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>my</name> <operator>-=</operator> <literal type="number">8</literal> <operator>*</operator> <operator>(</operator><name>qy</name> <operator>-</operator> <name>height</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>==</operator> <name>ILACE_FRAME</name><operator>)</operator> <operator>&amp;&amp;</operator> <name>fieldmv</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>off</name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>n</name> <operator>&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr> ?</condition><then> <expr><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator> <operator>+</operator> <operator>(</operator><name>n</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>off</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>*</operator> <literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>n</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>n</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>n</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>mx</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>fieldmv</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>n</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <operator>(</operator><name>my</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>n</name> <operator>&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator> <operator>+</operator> <operator>(</operator><name>my</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>profile</name></name> <operator>!=</operator> <name>PROFILE_ADVANCED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">17</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>==</operator> <name>ILACE_FRAME</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">18</literal> <operator>+</operator> <operator>(</operator><name>src_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>+</operator> <operator>(</operator><name>src_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">18</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>src_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>+</operator> <name>src_x</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>linesize</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name> <operator>||</operator> <name>use_ic</name>

<operator>||</operator> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&lt;</operator> <literal type="number">13</literal> <operator>||</operator> <name><name>v_edge_pos</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">23</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator></expr></argument> &gt;</argument_list></name> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>-</operator> <operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>-</operator> <literal type="number">8</literal> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <literal type="number">2</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>src_y</name> <operator>-</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator><operator>)</operator> <operator>&gt;</operator> <name>v_edge_pos</name> <operator>-</operator> <operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><operator>(</operator><literal type="number">8</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>k</name> <init>= <expr><literal type="number">9</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>srcY</name> <operator>-=</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>interlace</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name>k</name></expr> </then><else>: <expr><operator>(</operator><name>k</name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><name>src_y</name> <operator>-</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name>fieldmv</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <name>linesize</name></expr></argument>,

<argument><expr><name>srcY</name> <operator>+</operator> <name>linesize</name></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><name>k</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if> <else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name>linesize</name></expr></argument>,

<argument><expr><name>linesize</name></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><operator>(</operator><name>k</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr> </then><else>: <expr><name>k</name> <operator>&lt;&lt;</operator> <name>fieldmv</name></expr></else></ternary></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>:

<expr><name>src_y</name> <operator>-</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_scale_luma</name><argument_list>(<argument><expr><name>srcY</name></expr></argument>, <argument><expr><name>k</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>use_ic</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_lut_scale_luma</name><argument_list>(<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name><name>luty</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><operator>(</operator><literal type="number">0</literal><operator>&lt;&lt;</operator><name>fieldmv</name><operator>)</operator><operator>+</operator><name>src_y</name> <operator>-</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name><name>luty</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>fieldmv</name><operator>)</operator><operator>+</operator><name>src_y</name> <operator>-</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name>k</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>dxy</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>avg</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>avg_vc1_mspel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <name><name>v</name><operator>-&gt;</operator><name>rnd</name></name><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_vc1_mspel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <name><name>v</name><operator>-&gt;</operator><name>rnd</name></name><operator>)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content> 

<expr_stmt><expr><name>dxy</name> <operator>=</operator> <operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hdsp</name><operator>.</operator><name>put_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hdsp</name><operator>.</operator><name>put_no_rnd_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_vc1_mc_4mv_chroma</name><parameter_list>(<parameter><decl><type><name>VC1Context</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264ChromaContext</name> <modifier>*</modifier></type><name>h264chroma</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>h264chroma</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcU</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>srcV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>uvmx</name></decl>, <decl><type ref="prev"/><name>uvmy</name></decl>, <decl><type ref="prev"/><name>uvsrc_x</name></decl>, <decl><type ref="prev"/><name>uvsrc_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name>tx</name></decl>, <decl><type ref="prev"/><name>ty</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chroma_ref_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>v_edge_pos</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>uint8_t</name> <argument_list>(<argument><expr><operator>*</operator><name>lutuv</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_ic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interlace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>uvlinesize</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>CONFIG_GRAY</name> <operator>&amp;&amp;</operator> <name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>||</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>numref</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>valid_count</name> <init>= <expr><call><name>get_chroma_mv</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ty</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>valid_count</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>luma_mv</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>luma_mv</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return;</return> 

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>chroma_ref_type</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><name>dir</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>opp_count</name> <init>= <expr><call><name>get_luma_mv</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ty</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>chroma_ref_type</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>^</operator> <operator>(</operator><name>opp_count</name> <operator>&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <name>chroma_ref_type</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>tx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>blocks_off</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ty</name></expr>;</expr_stmt>

<expr_stmt><expr><name>uvlinesize</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <operator>(</operator><name>tx</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>tx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <operator>(</operator><name>ty</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>ty</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>luma_mv</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>uvmx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>luma_mv</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>uvmy</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fastuvmc</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <name>uvmx</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>uvmx</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><operator>-</operator><operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <name>uvmy</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>uvmy</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><operator>-</operator><operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name>chroma_ref_type</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>uvmy</name> <operator>+=</operator> <literal type="number">2</literal> <operator>-</operator> <literal type="number">4</literal> <operator>*</operator> <name>chroma_ref_type</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvmx</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvmy</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>profile</name></name> <operator>!=</operator> <name>PROFILE_ADVANCED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dir</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name>chroma_ref_type</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>second_field</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>curr_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <operator>*</operator><name><name>v</name><operator>-&gt;</operator><name>curr_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>srcU</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Referenced frame missing.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>chroma_ref_type</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name> <operator>||</operator> <name>use_ic</name>

<operator>||</operator> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&lt;</operator> <literal type="number">18</literal> <operator>||</operator> <call><name><name>v_edge_pos</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">18</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name>uvsrc_x</name></expr></argument> &gt;</argument_list></name> <argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">9</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name>uvsrc_y</name> <operator>&gt;</operator> <operator>(</operator><name>v_edge_pos</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <literal type="number">9</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>interlace</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">9</literal></expr> </then><else>: <expr><literal type="number">5</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">9</literal></expr> </then><else>: <expr><literal type="number">5</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcU</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcV</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">17</literal></expr> </then><else>: <expr><literal type="number">9</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <name>uvsrc_y</name> <operator>+</operator> <name>chroma_ref_type</name></expr> </then><else>: <expr><name>uvsrc_y</name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">17</literal></expr> </then><else>: <expr><literal type="number">9</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <name>uvsrc_y</name> <operator>+</operator> <name>chroma_ref_type</name></expr> </then><else>: <expr><name>uvsrc_y</name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_scale_chroma</name><argument_list>(<argument><expr><name>srcU</name></expr></argument>, <argument><expr><name>srcV</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>use_ic</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_lut_scale_chroma</name><argument_list>(<argument><expr><name>srcU</name></expr></argument>, <argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name>chroma_ref_type</name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <name>uvsrc_y</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name>chroma_ref_type</name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name>uvsrc_y</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>put_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>put_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>mb_off</name></name></expr>]</index></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name>chroma_ref_type</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>mv_f</name><index>[<expr><name>dir</name></expr>]</index><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>mb_off</name></name></expr>]</index></name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name>chroma_ref_type</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_vc1_mc_4mv_chroma4</name><parameter_list>(<parameter><decl><type><name>VC1Context</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dir2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>avg</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264ChromaContext</name> <modifier>*</modifier></type><name>h264chroma</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>h264chroma</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcU</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>srcV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>uvsrc_x</name></decl>, <decl><type ref="prev"/><name>uvsrc_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>uvmx_field</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>uvmy_field</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>off</name></decl>, <decl><type ref="prev"/><name>tx</name></decl>, <decl><type ref="prev"/><name>ty</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fieldmv</name> <init>= <expr><name><name>v</name><operator>-&gt;</operator><name>blk_mv_type</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>s_rndtblfield</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>v_dist</name> <init>= <expr><ternary><condition><expr><name>fieldmv</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>v_edge_pos</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_ic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interlace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>uvlinesize</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>uint8_t</name> <argument_list>(<argument><expr><operator>*</operator><name>lutuv</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>CONFIG_GRAY</name> <operator>&amp;&amp;</operator> <name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>uvlinesize</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>d</name> <init>= <expr><ternary><condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr> ?</condition><then> <expr><name>dir</name></expr></then><else>: <expr><name>dir2</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>tx</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>d</name></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>tx</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>tx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>ty</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>d</name></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>fieldmv</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>ty</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <name><name>s_rndtblfield</name><index>[<expr><name>ty</name> <operator>&amp;</operator> <literal type="number">0xF</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>ty</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>ty</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>off</name> <operator>=</operator> <operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator></expr> ?</condition><then> <expr><name>v_dist</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <operator>(</operator><name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator></expr> ?</condition><then> <expr><name>v_dist</name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator> <operator>+</operator> <operator>(</operator><name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>==</operator> <name>ILACE_FRAME</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvsrc_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>uvsrc_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><ternary><condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr> ?</condition><then> <expr><name>dir</name></expr> </then><else>: <expr><name>dir2</name></expr></else></ternary></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>lutuv</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_ic</name> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>last_use_ic</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>srcU</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>use_ic</name>

<operator>||</operator> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&lt;</operator> <literal type="number">10</literal> <operator>||</operator> <name>v_edge_pos</name> <operator>&lt;</operator> <operator>(</operator><literal type="number">5</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name>uvsrc_x</name> <operator>&gt;</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <literal type="number">5</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name>uvsrc_y</name> <operator>&gt;</operator> <name>v_edge_pos</name> <operator>-</operator> <operator>(</operator><literal type="number">5</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>interlace</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">5</literal></expr></argument>,

<argument><expr><operator>(</operator><literal type="number">5</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">5</literal></expr></argument>,

<argument><expr><operator>(</operator><literal type="number">5</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>fieldmv</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcU</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">5</literal></expr></argument>,

<argument><expr><literal type="number">2</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcV</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">5</literal></expr></argument>,

<argument><expr><literal type="number">2</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">5</literal></expr></argument>,

<argument><expr><literal type="number">5</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">5</literal></expr></argument>,

<argument><expr><literal type="number">5</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>use_ic</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_lut_scale_chroma</name><argument_list>(<argument><expr><name>srcU</name></expr></argument>, <argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><operator>(</operator><name>uvsrc_y</name> <operator>+</operator> <operator>(</operator><literal type="number">0</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><operator>(</operator><name>uvsrc_y</name> <operator>+</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>avg</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>avg_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>avg_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>avg_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>avg_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>put_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>put_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>put_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>off</name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>&lt;&lt;</operator> <name>fieldmv</name><operator>,</operator> <literal type="number">4</literal><operator>,</operator> <name><name>uvmx_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>,</operator> <name><name>uvmy_field</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_vc1_interp_mc</name><parameter_list>(<parameter><decl><type><name>VC1Context</name> <modifier>*</modifier></type><name>v</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264ChromaContext</name> <modifier>*</modifier></type><name>h264chroma</name> <init>= <expr><operator>&amp;</operator><name><name>v</name><operator>-&gt;</operator><name>h264chroma</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>srcY</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>srcU</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>srcV</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>dxy</name></decl>, <decl><type ref="prev"/><name>mx</name></decl>, <decl><type ref="prev"/><name>my</name></decl>, <decl><type ref="prev"/><name>uvmx</name></decl>, <decl><type ref="prev"/><name>uvmy</name></decl>, <decl><type ref="prev"/><name>src_x</name></decl>, <decl><type ref="prev"/><name>src_y</name></decl>, <decl><type ref="prev"/><name>uvsrc_x</name></decl>, <decl><type ref="prev"/><name>uvsrc_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>v_edge_pos</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_ic</name> <init>= <expr><name><name>v</name><operator>-&gt;</operator><name>next_use_ic</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interlace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>linesize</name></decl>, <decl><type ref="prev"/><name>uvlinesize</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>s</name><operator>.</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>linesize</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>uvlinesize</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>mx</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>my</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <operator>(</operator><name>mx</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <operator>(</operator><name>my</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name> <operator>!=</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>my</name> <operator>=</operator> <name>my</name> <operator>-</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <name>uvmy</name> <operator>-</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name><name>v</name><operator>-&gt;</operator><name>cur_field_type</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fastuvmc</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <name>uvmx</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>uvmx</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>-</operator><operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <name>uvmy</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>uvmy</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>-</operator><operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>interlace</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>interlaced_frame</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>mx</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>my</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvmx</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvmy</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>profile</name></name> <operator>!=</operator> <name>PROFILE_ADVANCED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>( <argument><expr><name>src_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>( <argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>src_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>( <argument><expr><name>src_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">17</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_x</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_x</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_width</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>fcm</name></name> <operator>==</operator> <name>ILACE_FRAME</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">18</literal> <operator>+</operator> <operator>(</operator><name>src_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>+</operator> <operator>(</operator><name>src_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal> <operator>+</operator> <operator>(</operator><name>uvsrc_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>uvsrc_y</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>src_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">18</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uvsrc_y</name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>uvsrc_y</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>coded_height</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>src_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>+</operator> <name>src_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvsrc_y</name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator> <name>uvsrc_x</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name> <operator>&amp;&amp;</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name>linesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcU</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>+=</operator> <name>uvlinesize</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>CONFIG_GRAY</name> <operator>&amp;&amp;</operator> <name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_CODEC_FLAG_GRAY</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">18</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">18</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name> <operator>||</operator> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&lt;</operator> <literal type="number">22</literal> <operator>||</operator> <name><name>v_edge_pos</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">22</literal> <operator>||</operator> <name>use_ic</name>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>src_x</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></argument> &gt;</argument_list></name> <name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>-</operator> <operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>-</operator> <literal type="number">16</literal> <operator>-</operator> <literal type="number">3</literal>

<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>src_y</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&gt;</operator> <name>v_edge_pos</name> <operator>-</operator> <operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>-</operator> <literal type="number">16</literal> <operator>-</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>ubuf</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <literal type="number">19</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>vbuf</name> <init>= <expr><name>ubuf</name> <operator>+</operator> <literal type="number">9</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>k</name> <init>= <expr><literal type="number">17</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>srcY</name> <operator>-=</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>interlace</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name>k</name></expr> </then><else>: <expr><operator>(</operator><name>k</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name> <operator>+</operator> <name>linesize</name></expr></argument>,

<argument><expr><name>srcY</name> <operator>+</operator> <name>linesize</name></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>linesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><name>k</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if> <else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr></argument>,

<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name>linesize</name></expr></argument>,

<argument><expr><name>linesize</name></expr></argument>,

<argument><expr><name>k</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><operator>(</operator><name>k</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr> </then><else>: <expr><name>k</name></expr></else></ternary></expr></argument>,

<argument><expr><name>src_x</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>:

<expr><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sc</name><operator>.</operator><name>edge_emu_buffer</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>interlace</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>ubuf</name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">9</literal></expr> </then><else>: <expr><literal type="number">5</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>vbuf</name></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">9</literal></expr> </then><else>: <expr><literal type="number">5</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>&gt;&gt;</operator> <operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>ubuf</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcU</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>vbuf</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>srcV</name> <operator>+</operator> <name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name>uvlinesize</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><name>uvsrc_y</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>ubuf</name></expr></argument>,

<argument><expr><name>srcU</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">17</literal></expr> </then><else>: <expr><literal type="number">9</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <name>uvsrc_y</name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><name>uvsrc_y</name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>vdsp</name><operator>.</operator><name>emulated_edge_mc</name></name><argument_list>(<argument><expr><name>vbuf</name></expr></argument>,

<argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><name>uvlinesize</name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">17</literal></expr> </then><else>: <expr><literal type="number">9</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>uvsrc_x</name></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><literal type="number">2</literal> <operator>*</operator> <name>uvsrc_y</name> <operator>+</operator> <name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><name>uvsrc_y</name></expr></else></ternary></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>h_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>s</name><operator>-&gt;</operator><name>v_edge_pos</name></name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>srcU</name> <operator>=</operator> <name>ubuf</name></expr>;</expr_stmt>

<expr_stmt><expr><name>srcV</name> <operator>=</operator> <name>vbuf</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>v</name><operator>-&gt;</operator><name>rangeredfrm</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vc1_scale_luma</name><argument_list>(<argument><expr><name>srcY</name></expr></argument>, <argument><expr><name>k</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vc1_scale_chroma</name><argument_list>(<argument><expr><name>srcU</name></expr></argument>, <argument><expr><name>srcV</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>use_ic</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>uint8_t</name> <argument_list>(<argument><expr><operator>*</operator><name>luty</name></expr></argument> )</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_luty</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>uint8_t</name> <argument_list>(<argument><expr><operator>*</operator><name>lutuv</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index> <operator>=</operator> <name><name>v</name><operator>-&gt;</operator><name>next_lutuv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vc1_lut_scale_luma</name><argument_list>(<argument><expr><name>srcY</name></expr></argument>,

<argument><expr><name><name>luty</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">0</literal><operator>+</operator><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name><name>luty</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">1</literal><operator>+</operator><name>src_y</name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name>k</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vc1_lut_scale_chroma</name><argument_list>(<argument><expr><name>srcU</name></expr></argument>, <argument><expr><name>srcV</name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">0</literal><operator>+</operator><name>uvsrc_y</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><name><name>lutuv</name><index>[<expr><ternary><condition><expr><name><name>v</name><operator>-&gt;</operator><name>field_mode</name></name></expr> ?</condition><then> <expr><name><name>v</name><operator>-&gt;</operator><name>ref_field_type</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><operator>(</operator><operator>(</operator><literal type="number">1</literal><operator>+</operator><name>uvsrc_y</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></else></ternary></expr>]</index></name></expr></argument>,

<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>srcY</name> <operator>+=</operator> <name><name>s</name><operator>-&gt;</operator><name>mspel</name></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>mspel</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>dxy</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>avg_vc1_mspel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <name><name>v</name><operator>-&gt;</operator><name>rnd</name></name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content> 

<expr_stmt><expr><name>dxy</name> <operator>=</operator> <operator>(</operator><name>my</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>mx</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hdsp</name><operator>.</operator><name>avg_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hdsp</name><operator>.</operator><name>avg_no_rnd_pixels_tab</name><index>[<expr><name>dxy</name></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>,</operator> <name>srcY</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name><operator>,</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>CONFIG_GRAY</name> <operator>&amp;&amp;</operator> <name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>AV_CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>uvmx</name> <operator>=</operator> <operator>(</operator><name>uvmx</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>uvmy</name> <operator>=</operator> <operator>(</operator><name>uvmy</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>v</name><operator>-&gt;</operator><name>rnd</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>avg_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h264chroma</name><operator>-&gt;</operator><name>avg_h264_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>avg_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>,</operator> <name>srcU</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v</name><operator>-&gt;</operator><name>vc1dsp</name><operator>.</operator><name>avg_no_rnd_vc1_chroma_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <name>srcV</name><operator>,</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name><operator>,</operator> <literal type="number">8</literal><operator>,</operator> <name>uvmx</name><operator>,</operator> <name>uvmy</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

</unit>
