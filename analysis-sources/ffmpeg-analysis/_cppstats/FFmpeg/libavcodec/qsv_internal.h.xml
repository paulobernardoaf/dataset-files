<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\qsv_internal.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_VAAPI</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_QSV_LINUX_SESSION_HANDLE</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_QSV_LINUX_SESSION_HANDLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_UNISTD_H</name></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;va/va.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;va/va_drm.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/hwcontext_vaapi.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;mfx/mfxvideo.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/frame.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QSV_VERSION_MAJOR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QSV_VERSION_MINOR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASYNC_DEPTH_DEFAULT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QSV_MAX_ENC_PAYLOAD</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QSV_VERSION_ATLEAST</name><parameter_list>(<parameter><type><name>MAJOR</name></type></parameter>, <parameter><type><name>MINOR</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(MFX_VERSION_MAJOR &gt; (MAJOR) || MFX_VERSION_MAJOR == (MAJOR) &amp;&amp; MFX_VERSION_MINOR &gt;= (MINOR))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QSV_RUNTIME_VERSION_ATLEAST</name><parameter_list>(<parameter><type><name>MFX_VERSION</name></type></parameter>, <parameter><type><name>MAJOR</name></type></parameter>, <parameter><type><name>MINOR</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((MFX_VERSION.Major &gt; (MAJOR)) || (MFX_VERSION.Major == (MAJOR) &amp;&amp; MFX_VERSION.Minor &gt;= (MINOR)))</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>QSVMid</name> <block>{

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ref</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxHDL</name></type> <name>handle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>locked_frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>hw_frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxFrameSurface1</name></type> <name>surf</name></decl>;</decl_stmt>

}</block></struct></type> <name>QSVMid</name>;</typedef>

<typedef>typedef <type><struct>struct <name>QSVFrame</name> <block>{

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxFrameSurface1</name></type> <name>surface</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxEncodeCtrl</name></type> <name>enc_ctrl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxExtDecodedFrameInfo</name></type> <name>dec_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mfxExtBuffer</name> <modifier>*</modifier></type><name>ext_param</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>queued</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>used</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>QSVFrame</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

}</block></struct></type> <name>QSVFrame</name>;</typedef>

<typedef>typedef <type><struct>struct <name>QSVSession</name> <block>{

<decl_stmt><decl><type><name>mfxSession</name></type> <name>session</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_QSV_LINUX_SESSION_HANDLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>va_device_ref</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVHWDeviceContext</name> <modifier>*</modifier></type><name>va_device_ctx</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

}</block></struct></type> <name>QSVSession</name>;</typedef>

<typedef>typedef <type><struct>struct <name>QSVFramesContext</name> <block>{

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>logctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>mids_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>QSVMid</name> <modifier>*</modifier></type><name>mids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_mids</name></decl>;</decl_stmt>

}</block></struct></type> <name>QSVFramesContext</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_qsv_print_iopattern</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mfx_iopattern</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>extra_string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_map_error</name><parameter_list>(<parameter><decl><type><name>mfxStatus</name></type> <name>mfx_err</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_print_error</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>, <parameter><decl><type><name>mfxStatus</name></type> <name>err</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>error_string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_print_warning</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>, <parameter><decl><type><name>mfxStatus</name></type> <name>err</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>warning_string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_codec_id_to_mfx</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>codec_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_level_to_mfx</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>codec_id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>level</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>ff_qsv_map_fourcc</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>fourcc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_map_pixfmt</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>fourcc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVPictureType</name></name></type> <name>ff_qsv_map_pictype</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mfx_pic_type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVFieldOrder</name></name></type> <name>ff_qsv_map_picstruct</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mfx_pic_struct</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_init_internal_session</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>QSVSession</name> <modifier>*</modifier></type><name>qs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>load_plugins</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>gpu_copy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_close_internal_session</name><parameter_list>(<parameter><decl><type><name>QSVSession</name> <modifier>*</modifier></type><name>qs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_init_session_device</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>mfxSession</name> <modifier>*</modifier></type><name>psession</name></decl></parameter>,

<parameter><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>device_ref</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>load_plugins</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>gpu_copy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_init_session_frames</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>mfxSession</name> <modifier>*</modifier></type><name>session</name></decl></parameter>,

<parameter><decl><type><name>QSVFramesContext</name> <modifier>*</modifier></type><name>qsv_frames_ctx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>load_plugins</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>opaque</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>gpu_copy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_qsv_find_surface_idx</name><parameter_list>(<parameter><decl><type><name>QSVFramesContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>QSVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
