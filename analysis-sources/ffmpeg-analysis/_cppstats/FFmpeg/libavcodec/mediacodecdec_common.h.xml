<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\mediacodecdec_common.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdatomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/frame.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixfmt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mediacodec_wrapper.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>MediaCodecDecContext</name> <block>{

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>atomic_int</name></type> <name>refcount</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>atomic_int</name></type> <name>hw_buffer_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>codec_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFAMediaFormat</name> <modifier>*</modifier></type><name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>surface</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>started</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>draining</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flushing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>eos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stride</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slice_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>color_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_top</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_bottom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_left</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_right</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>display_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>display_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>output_buffer_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>current_input_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>delay_flush</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>atomic_int</name></type> <name>serial</name></decl>;</decl_stmt>

}</block></struct></type> <name>MediaCodecDecContext</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_mediacodec_dec_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>MediaCodecDecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime</name></decl></parameter>,

<parameter><decl><type><name>FFAMediaFormat</name> <modifier>*</modifier></type><name>format</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_mediacodec_dec_send</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>MediaCodecDecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,

<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>wait</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_mediacodec_dec_receive</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>MediaCodecDecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,

<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>wait</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_mediacodec_dec_flush</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>MediaCodecDecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_mediacodec_dec_close</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>MediaCodecDecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_mediacodec_dec_is_flushing</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,

<parameter><decl><type><name>MediaCodecDecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>MediaCodecBuffer</name> <block>{

<decl_stmt><decl><type><name>MediaCodecDecContext</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>atomic_int</name></type> <name>released</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>serial</name></decl>;</decl_stmt>

}</block></struct></type> <name>MediaCodecBuffer</name>;</typedef>

</unit>
