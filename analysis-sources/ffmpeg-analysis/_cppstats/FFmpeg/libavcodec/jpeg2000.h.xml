<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\jpeg2000.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mqc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jpeg2000dwt.h"</cpp:file></cpp:include>

<enum>enum <name>Jpeg2000Markers</name> <block>{

<decl><name>JPEG2000_SOC</name> <init>= <expr><literal type="number">0xff4f</literal></expr></init></decl>, 

<decl><name>JPEG2000_SIZ</name> <init>= <expr><literal type="number">0xff51</literal></expr></init></decl>, 

<decl><name>JPEG2000_COD</name></decl>, 

<decl><name>JPEG2000_COC</name></decl>, 

<decl><name>JPEG2000_TLM</name> <init>= <expr><literal type="number">0xff55</literal></expr></init></decl>, 

<decl><name>JPEG2000_PLM</name> <init>= <expr><literal type="number">0xff57</literal></expr></init></decl>, 

<decl><name>JPEG2000_PLT</name></decl>, 

<decl><name>JPEG2000_QCD</name> <init>= <expr><literal type="number">0xff5c</literal></expr></init></decl>, 

<decl><name>JPEG2000_QCC</name></decl>, 

<decl><name>JPEG2000_RGN</name></decl>, 

<decl><name>JPEG2000_POC</name></decl>, 

<decl><name>JPEG2000_PPM</name></decl>, 

<decl><name>JPEG2000_PPT</name></decl>, 

<decl><name>JPEG2000_CRG</name> <init>= <expr><literal type="number">0xff63</literal></expr></init></decl>, 

<decl><name>JPEG2000_COM</name></decl>, 

<decl><name>JPEG2000_SOT</name> <init>= <expr><literal type="number">0xff90</literal></expr></init></decl>, 

<decl><name>JPEG2000_SOP</name></decl>, 

<decl><name>JPEG2000_EPH</name></decl>, 

<decl><name>JPEG2000_SOD</name></decl>, 

<decl><name>JPEG2000_EOC</name> <init>= <expr><literal type="number">0xffd9</literal></expr></init></decl>, 

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_SOP_FIXED_BYTES</name></cpp:macro> <cpp:value>0xFF910004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_SOP_BYTE_LENGTH</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<enum>enum <name>Jpeg2000Quantsty</name> <block>{ 

<decl><name>JPEG2000_QSTY_NONE</name></decl>, 

<decl><name>JPEG2000_QSTY_SI</name></decl>, 

<decl><name>JPEG2000_QSTY_SE</name></decl> 

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_MAX_DECLEVELS</name></cpp:macro> <cpp:value>33</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_MAX_RESLEVELS</name></cpp:macro> <cpp:value>(JPEG2000_MAX_DECLEVELS + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_MAX_PASSES</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_N</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_E</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_W</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_S</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_NE</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_NW</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_SE</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_SW</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG_NB</name></cpp:macro> <cpp:value>(JPEG2000_T1_SIG_N | JPEG2000_T1_SIG_E | JPEG2000_T1_SIG_S | JPEG2000_T1_SIG_W | JPEG2000_T1_SIG_NE | JPEG2000_T1_SIG_NW | JPEG2000_T1_SIG_SE | JPEG2000_T1_SIG_SW)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SGN_N</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SGN_S</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SGN_W</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SGN_E</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_VIS</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SIG</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_REF</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_T1_SGN</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CBLK_BYPASS</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CBLK_RESET</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CBLK_TERMALL</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CBLK_VSC</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CBLK_PREDTERM</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CBLK_SEGSYM</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CSTY_PREC</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CSTY_SOP</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_CSTY_EPH</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_PGOD_LRCP</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_PGOD_RLCP</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_PGOD_RPCL</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_PGOD_PCRL</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JPEG2000_PGOD_CPRL</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>Jpeg2000T1Context</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name><name>data</name><index>[<expr><literal type="number">6144</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>flags</name><index>[<expr><literal type="number">6156</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MqcState</name></type> <name>mqc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stride</name></decl>;</decl_stmt>

}</block></struct></type> <name>Jpeg2000T1Context</name>;</typedef>

<typedef>typedef <type><struct>struct <name>Jpeg2000TgtNode</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vis</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Jpeg2000TgtNode</name></name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt>

}</block></struct></type> <name>Jpeg2000TgtNode</name>;</typedef>

<typedef>typedef <type><struct>struct <name>Jpeg2000CodingStyle</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>nreslevels</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nreslevels2decode</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_cblk_width</name></decl>,

<name>log2_cblk_height</name>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transform</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>csty</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nlayers</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>mct</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cblk_style</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>prog_order</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>log2_prec_widths</name><index>[<expr><name>JPEG2000_MAX_RESLEVELS</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>log2_prec_heights</name><index>[<expr><name>JPEG2000_MAX_RESLEVELS</name></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>Jpeg2000CodingStyle</name>;</typedef>

<typedef>typedef <type><struct>struct <name>Jpeg2000QuantStyle</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>expn</name><index>[<expr><name>JPEG2000_MAX_DECLEVELS</name> <operator>*</operator> <literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>mant</name><index>[<expr><name>JPEG2000_MAX_DECLEVELS</name> <operator>*</operator> <literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>quantsty</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nguardbits</name></decl>;</decl_stmt> 

}</block></struct></type> <name>Jpeg2000QuantStyle</name>;</typedef>

<typedef>typedef <type><struct>struct <name>Jpeg2000Pass</name> <block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name>rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>disto</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>flushed</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flushed_len</name></decl>;</decl_stmt>

}</block></struct></type> <name>Jpeg2000Pass</name>;</typedef>

<typedef>typedef <type><struct>struct <name>Jpeg2000Cblk</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>npasses</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ninclpasses</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nonzerobits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>lengthinc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nb_lengthinc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>lblock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_allocated</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_terminations</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_terminationsinc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>data_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Jpeg2000Pass</name> <modifier>*</modifier></type><name>passes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>coord</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>Jpeg2000Cblk</name>;</typedef> 

<typedef>typedef <type><struct>struct <name>Jpeg2000Prec</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>nb_codeblocks_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_codeblocks_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Jpeg2000TgtNode</name> <modifier>*</modifier></type><name>zerobits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Jpeg2000TgtNode</name> <modifier>*</modifier></type><name>cblkincl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Jpeg2000Cblk</name> <modifier>*</modifier></type><name>cblk</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>decoded_layers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>coord</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>Jpeg2000Prec</name>;</typedef> 

<typedef>typedef <type><struct>struct <name>Jpeg2000Band</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name><name>coord</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name></type> <name>log2_cblk_width</name></decl>, <name>log2_cblk_height</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_stepsize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name>f_stepsize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Jpeg2000Prec</name> <modifier>*</modifier></type><name>prec</name></decl>;</decl_stmt>

}</block></struct></type> <name>Jpeg2000Band</name>;</typedef> 

<typedef>typedef <type><struct>struct <name>Jpeg2000ResLevel</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nbands</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>coord</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_precincts_x</name></decl>, <name>num_precincts_y</name>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_prec_width</name></decl>, <name>log2_prec_height</name>;</decl_stmt> 

<decl_stmt><decl><type><name>Jpeg2000Band</name> <modifier>*</modifier></type><name>band</name></decl>;</decl_stmt>

}</block></struct></type> <name>Jpeg2000ResLevel</name>;</typedef> 

<typedef>typedef <type><struct>struct <name>Jpeg2000Component</name> <block>{

<decl_stmt><decl><type><name>Jpeg2000ResLevel</name> <modifier>*</modifier></type><name>reslevel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>DWTContext</name></type> <name>dwt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type><name>f_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>i_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>coord</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>coord_o</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>Jpeg2000Component</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_jpeg2000_ceildivpow2</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><operator>-</operator><operator>(</operator><operator>(</operator><operator>-</operator><operator>(</operator><name>int64_t</name><operator>)</operator><name>a</name><operator>)</operator> <operator>&gt;&gt;</operator> <name>b</name><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_jpeg2000_ceildiv</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><name>a</name> <operator>+</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name>b</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>b</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>void</name></type> <name>ff_jpeg2000_init_tier1_luts</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_jpeg2000_set_significance</name><parameter_list>(<parameter><decl><type><name>Jpeg2000T1Context</name> <modifier>*</modifier></type><name>t1</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>negative</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>uint8_t</name></type> <name><name>ff_jpeg2000_sigctxno_lut</name><index>[<expr><literal type="number">256</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_jpeg2000_getsigctxno</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bandno</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>ff_jpeg2000_sigctxno_lut</name><index>[<expr><name>flag</name> <operator>&amp;</operator> <literal type="number">255</literal></expr>]</index><index>[<expr><name>bandno</name></expr>]</index></name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>refctxno_lut</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{ <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_jpeg2000_getrefctxno</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>flag</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>refctxno_lut</name><index>[<expr><operator>(</operator><name>flag</name> <operator>&gt;&gt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><operator>(</operator><name>flag</name> <operator>&amp;</operator> <literal type="number">255</literal><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>]</index></name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>extern</specifier> <name>uint8_t</name></type> <name><name>ff_jpeg2000_sgnctxno_lut</name><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>uint8_t</name></type> <name><name>ff_jpeg2000_xorbit_lut</name><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_jpeg2000_getsgnctxno</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>xorbit</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>xorbit</name> <operator>=</operator> <name><name>ff_jpeg2000_xorbit_lut</name><index>[<expr><name>flag</name> <operator>&amp;</operator> <literal type="number">15</literal></expr>]</index><index>[<expr><operator>(</operator><name>flag</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>

<return>return <expr><name><name>ff_jpeg2000_sgnctxno_lut</name><index>[<expr><name>flag</name> <operator>&amp;</operator> <literal type="number">15</literal></expr>]</index><index>[<expr><operator>(</operator><name>flag</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">15</literal></expr>]</index></name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>int</name></type> <name>ff_jpeg2000_init_component</name><parameter_list>(<parameter><decl><type><name>Jpeg2000Component</name> <modifier>*</modifier></type><name>comp</name></decl></parameter>,

<parameter><decl><type><name>Jpeg2000CodingStyle</name> <modifier>*</modifier></type><name>codsty</name></decl></parameter>,

<parameter><decl><type><name>Jpeg2000QuantStyle</name> <modifier>*</modifier></type><name>qntsty</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>cbps</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dy</name></decl></parameter>,

<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_jpeg2000_reinit</name><parameter_list>(<parameter><decl><type><name>Jpeg2000Component</name> <modifier>*</modifier></type><name>comp</name></decl></parameter>, <parameter><decl><type><name>Jpeg2000CodingStyle</name> <modifier>*</modifier></type><name>codsty</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_jpeg2000_cleanup</name><parameter_list>(<parameter><decl><type><name>Jpeg2000Component</name> <modifier>*</modifier></type><name>comp</name></decl></parameter>, <parameter><decl><type><name>Jpeg2000CodingStyle</name> <modifier>*</modifier></type><name>codsty</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>needs_termination</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>style</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>passno</name></decl></parameter>)</parameter_list> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>style</name> <operator>&amp;</operator> <name>JPEG2000_CBLK_BYPASS</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>type</name> <init>= <expr><name>passno</name> <operator>%</operator> <literal type="number">3</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>passno</name> <operator>/=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>type</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>passno</name> <operator>&gt;</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">2</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>type</name> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name>passno</name> <operator>&gt;</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>style</name> <operator>&amp;</operator> <name>JPEG2000_CBLK_TERMALL</name></expr>)</condition> <block>{<block_content>

<return>return <expr><ternary><condition><expr><name>passno</name> <operator>&gt;</operator> <literal type="number">2</literal></expr> ?</condition><then> <expr><literal type="number">2</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>style</name> <operator>&amp;</operator> <name>JPEG2000_CBLK_TERMALL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
