<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\cbs_h264.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbs_h2645.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264.h"</cpp:file></cpp:include>

<enum>enum <block>{

<decl><name>H264_MAX_SEI_PAYLOADS</name> <init>= <expr><literal type="number">64</literal></expr></init></decl>,

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>H264RawNALUnitHeader</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nal_ref_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nal_unit_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>svc_extension_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>avc_3d_extension_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawNALUnitHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawScalingList</name> <block>{

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>delta_scale</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawScalingList</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawHRD</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cpb_cnt_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_rate_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cpb_size_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>bit_rate_value_minus1</name><index>[<expr><name>H264_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>cpb_size_value_minus1</name><index>[<expr><name>H264_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cbr_flag</name><index>[<expr><name>H264_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>initial_cpb_removal_delay_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cpb_removal_delay_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dpb_output_delay_length_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>time_offset_length</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawHRD</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawVUI</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>aspect_ratio_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>aspect_ratio_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>sar_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>sar_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>overscan_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>overscan_appropriate_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>video_signal_type_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>video_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>video_full_range_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_description_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_primaries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transfer_characteristics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>matrix_coefficients</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_loc_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_sample_loc_type_top_field</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_sample_loc_type_bottom_field</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>timing_info_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>num_units_in_tick</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>time_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>fixed_frame_rate_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nal_hrd_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawHRD</name></type> <name>nal_hrd_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vcl_hrd_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawHRD</name></type> <name>vcl_hrd_parameters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>low_delay_hrd_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_struct_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bitstream_restriction_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>motion_vectors_over_pic_boundaries_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_bytes_per_pic_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_bits_per_mb_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_mv_length_horizontal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_mv_length_vertical</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_num_reorder_frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_dec_frame_buffering</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawVUI</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSPS</name> <block>{

<decl_stmt><decl><type><name>H264RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>profile_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constraint_set0_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constraint_set1_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constraint_set2_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constraint_set3_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constraint_set4_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constraint_set5_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>reserved_zero_2bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>level_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_format_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>separate_colour_plane_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_depth_luma_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_depth_chroma_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>qpprime_y_zero_transform_bypass_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_scaling_matrix_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>seq_scaling_list_present_flag</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawScalingList</name></type> <name><name>scaling_list_4x4</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawScalingList</name></type> <name><name>scaling_list_8x8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_frame_num_minus4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_order_cnt_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_max_pic_order_cnt_lsb_minus4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_pic_order_always_zero_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>offset_for_non_ref_pic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>offset_for_top_to_bottom_field</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_frames_in_pic_order_cnt_cycle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>offset_for_ref_frame</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_num_ref_frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>gaps_in_frame_num_allowed_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pic_width_in_mbs_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pic_height_in_map_units_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_mbs_only_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>mb_adaptive_frame_field_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>direct_8x8_inference_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_cropping_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>frame_crop_left_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>frame_crop_right_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>frame_crop_top_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>frame_crop_bottom_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>vui_parameters_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawVUI</name></type> <name>vui</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSPSExtension</name> <block>{

<decl_stmt><decl><type><name>H264RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>aux_format_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bit_depth_aux_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>alpha_incr_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>alpha_opaque_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>alpha_transparent_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>additional_extension_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSPSExtension</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawPPS</name> <block>{

<decl_stmt><decl><type><name>H264RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>entropy_coding_mode_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bottom_field_pic_order_in_frame_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_slice_groups_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_group_map_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>run_length_minus1</name><index>[<expr><name>H264_MAX_SLICE_GROUPS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>top_left</name><index>[<expr><name>H264_MAX_SLICE_GROUPS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>bottom_right</name><index>[<expr><name>H264_MAX_SLICE_GROUPS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_group_change_direction_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>slice_group_change_rate_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pic_size_in_map_units_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>slice_group_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>slice_group_id_ref</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l0_default_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l1_default_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_pred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_bipred_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pic_init_qp_minus26</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>pic_init_qs_minus26</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>chroma_qp_index_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>deblocking_filter_control_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>constrained_intra_pred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>more_rbsp_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>redundant_pic_cnt_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>transform_8x8_mode_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_scaling_matrix_present_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>pic_scaling_list_present_flag</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawScalingList</name></type> <name><name>scaling_list_4x4</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawScalingList</name></type> <name><name>scaling_list_8x8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>second_chroma_qp_index_offset</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawPPS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawAUD</name> <block>{

<decl_stmt><decl><type><name>H264RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>primary_pic_type</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawAUD</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIBufferingPeriod</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_parameter_set_id</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>initial_cpb_removal_delay</name><index>[<expr><name>H264_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>initial_cpb_removal_delay_offset</name><index>[<expr><name>H264_MAX_CPB_CNT</name></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name>nal</name></decl>, <name>vcl</name>;</struct>

}</block></struct></type> <name>H264RawSEIBufferingPeriod</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIPicTimestamp</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ct_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>nuit_field_based_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>counting_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>full_timestamp_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>discontinuity_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cnt_dropped_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>n_frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seconds_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seconds_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>minutes_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>minutes_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>hours_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>hours_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>time_offset</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIPicTimestamp</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIPicTiming</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>cpb_removal_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>dpb_output_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_struct</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>clock_timestamp_flag</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIPicTimestamp</name></type> <name><name>timestamp</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIPicTiming</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIPanScanRect</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>pan_scan_rect_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pan_scan_rect_cancel_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pan_scan_cnt_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_left_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_right_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_top_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>pan_scan_rect_bottom_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pan_scan_rect_repetition_period</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIPanScanRect</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIUserDataRegistered</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>itu_t_t35_country_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>itu_t_t35_country_code_extension_byte</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIUserDataRegistered</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIUserDataUnregistered</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>uuid_iso_iec_11578</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIUserDataUnregistered</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIRecoveryPoint</name> <block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name>recovery_frame_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>exact_match_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>broken_link_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>changing_slice_group_idc</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIRecoveryPoint</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIDisplayOrientation</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>display_orientation_cancel_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>hor_flip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ver_flip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>anticlockwise_rotation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>display_orientation_repetition_period</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>display_orientation_extension_flag</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIDisplayOrientation</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIMasteringDisplayColourVolume</name> <block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>display_primaries_x</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>display_primaries_y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>white_point_x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>white_point_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>max_display_mastering_luminance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>min_display_mastering_luminance</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIMasteringDisplayColourVolume</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIAlternativeTransferCharacteristics</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>preferred_transfer_characteristics</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEIAlternativeTransferCharacteristics</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEIPayload</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>payload_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>payload_size</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>H264RawSEIBufferingPeriod</name></type> <name>buffering_period</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIPicTiming</name></type> <name>pic_timing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIPanScanRect</name></type> <name>pan_scan_rect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIUserDataRegistered</name></type> <name>user_data_registered</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIUserDataUnregistered</name></type> <name>user_data_unregistered</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIRecoveryPoint</name></type> <name>recovery_point</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIDisplayOrientation</name></type> <name>display_orientation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIMasteringDisplayColourVolume</name></type> <name>mastering_display_colour_volume</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIAlternativeTransferCharacteristics</name></type>

<name>alternative_transfer_characteristics</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block> <decl><name>other</name></decl>;</struct>

}</block> <decl><name>payload</name></decl>;</union>

}</block></struct></type> <name>H264RawSEIPayload</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSEI</name> <block>{

<decl_stmt><decl><type><name>H264RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSEIPayload</name></type> <name><name>payload</name><index>[<expr><name>H264_MAX_SEI_PAYLOADS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>payload_count</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSEI</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSliceHeader</name> <block>{

<decl_stmt><decl><type><name>H264RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>first_mb_in_slice</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pic_parameter_set_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_plane_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>frame_num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>field_pic_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>bottom_field_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>idr_pic_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>pic_order_cnt_lsb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>delta_pic_order_cnt_bottom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>delta_pic_order_cnt</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>redundant_pic_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>direct_spatial_mv_pred_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_active_override_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l0_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_ref_idx_l1_active_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ref_pic_list_modification_flag_l0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>ref_pic_list_modification_flag_l1</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>modification_of_pic_nums_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>abs_diff_pic_num_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>long_term_pic_num</name></decl>;</decl_stmt>

}</block> <decl><name><name>rplm_l0</name><index>[<expr><name>H264_MAX_RPLM_COUNT</name></expr>]</index></name></decl>, <name><name>rplm_l1</name><index>[<expr><name>H264_MAX_RPLM_COUNT</name></expr>]</index></name>;</struct>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>luma_log2_weight_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_log2_weight_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>luma_weight_l0_flag</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>luma_weight_l0</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>luma_offset_l0</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>chroma_weight_l0_flag</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>chroma_weight_l0</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>chroma_offset_l0</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>luma_weight_l1_flag</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>luma_weight_l1</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>luma_offset_l1</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>chroma_weight_l1_flag</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>chroma_weight_l1</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>chroma_offset_l1</name><index>[<expr><name>H264_MAX_REFS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>no_output_of_prior_pics_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>long_term_reference_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>adaptive_ref_pic_marking_mode_flag</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name>memory_management_control_operation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>difference_of_pic_nums_minus1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>long_term_pic_num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>long_term_frame_idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>max_long_term_frame_idx_plus1</name></decl>;</decl_stmt>

}</block> <decl><name><name>mmco</name><index>[<expr><name>H264_MAX_MMCO_COUNT</name></expr>]</index></name></decl>;</struct>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cabac_init_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_qp_delta</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>sp_for_switch_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_qs_delta</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>disable_deblocking_filter_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_alpha_c0_offset_div2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name></type> <name>slice_beta_offset_div2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>slice_group_change_cycle</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSliceHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawSlice</name> <block>{

<decl_stmt><decl><type><name>H264RawSliceHeader</name></type> <name>header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>data_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>data_bit_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawSlice</name>;</typedef>

<typedef>typedef <type><struct>struct <name>H264RawFiller</name> <block>{

<decl_stmt><decl><type><name>H264RawNALUnitHeader</name></type> <name>nal_unit_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>filler_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>H264RawFiller</name>;</typedef>

<typedef>typedef <type><struct>struct <name>CodedBitstreamH264Context</name> <block>{

<decl_stmt><decl><type><name>CodedBitstreamH2645Context</name></type> <name>common</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>sps_ref</name><index>[<expr><name>H264_MAX_SPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>pps_ref</name><index>[<expr><name>H264_MAX_PPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawSPS</name> <modifier>*</modifier></type><name><name>sps</name><index>[<expr><name>H264_MAX_SPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>H264RawPPS</name> <modifier>*</modifier></type><name><name>pps</name><index>[<expr><name>H264_MAX_PPS_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>H264RawSPS</name> <modifier>*</modifier></type><name>active_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>H264RawPPS</name> <modifier>*</modifier></type><name>active_pps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>last_slice_nal_unit_type</name></decl>;</decl_stmt>

}</block></struct></type> <name>CodedBitstreamH264Context</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_cbs_h264_add_sei_message</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><name>CodedBitstreamFragment</name> <modifier>*</modifier></type><name>access_unit</name></decl></parameter>,

<parameter><decl><type><name>H264RawSEIPayload</name> <modifier>*</modifier></type><name>payload</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_cbs_h264_delete_sei_message</name><parameter_list>(<parameter><decl><type><name>CodedBitstreamContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><name>CodedBitstreamFragment</name> <modifier>*</modifier></type><name>access_unit</name></decl></parameter>,

<parameter><decl><type><name>CodedBitstreamUnit</name> <modifier>*</modifier></type><name>nal_unit</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
