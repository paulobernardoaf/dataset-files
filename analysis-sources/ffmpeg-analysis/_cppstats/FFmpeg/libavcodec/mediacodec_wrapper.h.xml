<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\mediacodec_wrapper.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodecProfile_getProfileFromAVCodecContext</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>ff_AMediaCodecList_getCodecNameByType</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>profile</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encoder</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>FFAMediaFormat</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>FFAMediaFormat</name></name></type> <name>FFAMediaFormat</name>;</typedef>

<function_decl><type><name>FFAMediaFormat</name> <modifier>*</modifier></type><name>ff_AMediaFormat_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaFormat_delete</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name><modifier>*</modifier></type> <name>ff_AMediaFormat_toString</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaFormat_getInt32</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaFormat_getInt64</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaFormat_getFloat</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaFormat_getBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaFormat_getString</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_AMediaFormat_setInt32</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_AMediaFormat_setInt64</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_AMediaFormat_setFloat</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_AMediaFormat_setString</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_AMediaFormat_setBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>FFAMediaCodec</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>FFAMediaCodec</name></name></type> <name>FFAMediaCodec</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>FFAMediaCodecCryptoInfo</name></name></type> <name>FFAMediaCodecCryptoInfo</name>;</typedef>

<struct>struct <name>FFAMediaCodecBufferInfo</name> <block>{

<decl_stmt><decl><type><name>int32_t</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>presentationTimeUs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>FFAMediaCodecBufferInfo</name></name></type> <name>FFAMediaCodecBufferInfo</name>;</typedef>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>ff_AMediaCodec_getName</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>ff_AMediaCodec_createCodecByName</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>ff_AMediaCodec_createDecoderByType</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>ff_AMediaCodec_createEncoderByType</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_configure</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>FFAMediaFormat</name><modifier>*</modifier></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>surface</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>crypto</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_start</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_stop</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_flush</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_delete</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>ff_AMediaCodec_getInputBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>out_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>ff_AMediaCodec_getOutputBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>out_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ssize_t</name></type> <name>ff_AMediaCodec_dequeueInputBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timeoutUs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_queueInputBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>off_t</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>time</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ssize_t</name></type> <name>ff_AMediaCodec_dequeueOutputBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>, <parameter><decl><type><name>FFAMediaCodecBufferInfo</name> <modifier>*</modifier></type><name>info</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timeoutUs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>FFAMediaFormat</name><modifier>*</modifier></type> <name>ff_AMediaCodec_getOutputFormat</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_releaseOutputBuffer</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name><modifier>*</modifier></type> <name>codec</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>render</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_releaseOutputBufferAtTime</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timestampNs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_infoTryAgainLater</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>, <parameter><decl><type><name>ssize_t</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_infoOutputBuffersChanged</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>, <parameter><decl><type><name>ssize_t</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_infoOutputFormatChanged</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>, <parameter><decl><type><name>ssize_t</name></type> <name>indx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_getBufferFlagCodecConfig</name> <parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_getBufferFlagEndOfStream</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_getBufferFlagKeyFrame</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_getConfigureFlagEncode</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_AMediaCodec_cleanOutputBuffers</name><parameter_list>(<parameter><decl><type><name>FFAMediaCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_Build_SDK_INT</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
