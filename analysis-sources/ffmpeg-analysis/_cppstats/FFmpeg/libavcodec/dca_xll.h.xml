<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\dca_xll.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dca.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dcadsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dca_exss.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_CHSETS_MAX</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_CHANNELS_MAX</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_BANDS_MAX</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_ADAPT_PRED_ORDER_MAX</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_DECI_HISTORY_MAX</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_DMIX_SCALES_MAX</name></cpp:macro> <cpp:value>((DCA_XLL_CHSETS_MAX - 1) * DCA_XLL_CHANNELS_MAX)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_DMIX_COEFFS_MAX</name></cpp:macro> <cpp:value>(DCA_XLL_DMIX_SCALES_MAX * DCA_XLL_CHANNELS_MAX)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_PBR_BUFFER_MAX</name></cpp:macro> <cpp:value>(240 &lt;&lt; 10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DCA_XLL_SAMPLE_BUFFERS_MAX</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>DCAXllBand</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>decor_enabled</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>orig_order</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>decor_coeff</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name> <operator>/</operator> <literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>adapt_pred_order</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>highest_pred_order</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>fixed_pred_order</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>adapt_refl_coeff</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index><index>[<expr><name>DCA_XLL_ADAPT_PRED_ORDER_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>dmix_embedded</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>lsb_section_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>nscalablelsbs</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>bit_width_adjust</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name><name>msb_sample_buffer</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name><name>lsb_sample_buffer</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>DCAXllBand</name>;</typedef>

<typedef>typedef <type><struct>struct <name>DCAXllChSet</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>nchannels</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>residual_encode</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>pcm_bit_res</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>storage_bit_res</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>freq</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>primary_chset</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>dmix_coeffs_present</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>dmix_embedded</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>dmix_type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>hier_chset</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>hier_ofs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>dmix_coeff</name><index>[<expr><name>DCA_XLL_DMIX_COEFFS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>dmix_scale</name><index>[<expr><name>DCA_XLL_DMIX_SCALES_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>dmix_scale_inv</name><index>[<expr><name>DCA_XLL_DMIX_SCALES_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>ch_mask</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>ch_remap</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nfreqbands</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nabits</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DCAXllBand</name></type> <name><name>bands</name><index>[<expr><name>DCA_XLL_BANDS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>seg_common</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>rice_code_flag</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>bitalloc_hybrid_linear</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>bitalloc_part_a</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>bitalloc_part_b</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name><name>nsamples_part_a</name><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>int32_t</name></expr></argument>, <argument><expr><name>deci_history</name></expr></argument>)</argument_list></call><index>[<expr><name>DCA_XLL_CHANNELS_MAX</name></expr>]</index><index>[<expr><name>DCA_XLL_DECI_HISTORY_MAX</name></expr>]</index></expr>;</expr_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>sample_size</name><index>[<expr><name>DCA_XLL_SAMPLE_BUFFERS_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name><name>sample_buffer</name><index>[<expr><name>DCA_XLL_SAMPLE_BUFFERS_MAX</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DCAXllChSet</name>;</typedef>

<typedef>typedef <type><struct>struct <name>DCAXllDecoder</name> <block>{

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GetBitContext</name></type> <name>gb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frame_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nchsets</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nframesegs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nsegsamples_log2</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nsegsamples</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nframesamples_log2</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nframesamples</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>seg_size_nbits</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>band_crc_present</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>scalable_lsbs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>ch_mask_nbits</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>fixed_lsb_width</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DCAXllChSet</name></type> <name><name>chset</name><index>[<expr><name>DCA_XLL_CHSETS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>navi</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>navi_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nfreqbands</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nchannels</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nreschsets</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nactivechsets</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>hd_stream_id</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pbr_buffer</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>pbr_length</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>pbr_delay</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>DCADSPContext</name> <modifier>*</modifier></type><name>dcadsp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>output_mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name><name>output_samples</name><index>[<expr><name>DCA_SPEAKER_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>DCAXllDecoder</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_dca_xll_parse</name><parameter_list>(<parameter><decl><type><name>DCAXllDecoder</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>DCAExssAsset</name> <modifier>*</modifier></type><name>asset</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_dca_xll_filter_frame</name><parameter_list>(<parameter><decl><type><name>DCAXllDecoder</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>av_cold</name> <name>void</name></type> <name>ff_dca_xll_flush</name><parameter_list>(<parameter><decl><type><name>DCAXllDecoder</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>av_cold</name> <name>void</name></type> <name>ff_dca_xll_close</name><parameter_list>(<parameter><decl><type><name>DCAXllDecoder</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
