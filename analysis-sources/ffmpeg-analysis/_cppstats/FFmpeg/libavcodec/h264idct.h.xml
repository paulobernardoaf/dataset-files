<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\h264idct.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_IDCT</name><parameter_list>(<parameter><type><name>depth</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_h264_idct8_add_ ##depth ##_c(uint8_t *dst, int16_t *block, int stride);void ff_h264_idct_add_ ##depth ##_c(uint8_t *dst, int16_t *block, int stride);void ff_h264_idct8_dc_add_ ##depth ##_c(uint8_t *dst, int16_t *block, int stride);void ff_h264_idct_dc_add_ ##depth ##_c(uint8_t *dst, int16_t *block, int stride);void ff_h264_idct_add16_ ##depth ##_c(uint8_t *dst, const int *blockoffset, int16_t *block, int stride, const uint8_t nnzc[6*8]);void ff_h264_idct_add16intra_ ##depth ##_c(uint8_t *dst, const int *blockoffset, int16_t *block, int stride, const uint8_t nnzc[6*8]);void ff_h264_idct8_add4_ ##depth ##_c(uint8_t *dst, const int *blockoffset, int16_t *block, int stride, const uint8_t nnzc[6*8]);void ff_h264_idct_add8_422_ ##depth ##_c(uint8_t **dest, const int *blockoffset, int16_t *block, int stride, const uint8_t nnzc[6*8]);void ff_h264_idct_add8_ ##depth ##_c(uint8_t **dest, const int *blockoffset, int16_t *block, int stride, const uint8_t nnzc[6*8]);void ff_h264_luma_dc_dequant_idct_ ##depth ##_c(int16_t *output, int16_t *input, int qmul);void ff_h264_chroma422_dc_dequant_idct_ ##depth ##_c(int16_t *block, int qmul);void ff_h264_chroma_dc_dequant_idct_ ##depth ##_c(int16_t *block, int qmul);</cpp:value></cpp:define>

<macro><name>H264_IDCT</name><argument_list>( <argument><literal type="number">8</literal></argument>)</argument_list></macro>

<macro><name>H264_IDCT</name><argument_list>( <argument><literal type="number">9</literal></argument>)</argument_list></macro>

<macro><name>H264_IDCT</name><argument_list>(<argument><literal type="number">10</literal></argument>)</argument_list></macro>

<macro><name>H264_IDCT</name><argument_list>(<argument><literal type="number">12</literal></argument>)</argument_list></macro>

<macro><name>H264_IDCT</name><argument_list>(<argument><literal type="number">14</literal></argument>)</argument_list></macro>

</unit>
