<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\aacsbr.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"aac.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sbr.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENVELOPE_ADJUSTMENT_OFFSET</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOISE_FLOOR_OFFSET</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<enum>enum <block>{

<decl><name>T_HUFFMAN_ENV_1_5DB</name></decl>,

<decl><name>F_HUFFMAN_ENV_1_5DB</name></decl>,

<decl><name>T_HUFFMAN_ENV_BAL_1_5DB</name></decl>,

<decl><name>F_HUFFMAN_ENV_BAL_1_5DB</name></decl>,

<decl><name>T_HUFFMAN_ENV_3_0DB</name></decl>,

<decl><name>F_HUFFMAN_ENV_3_0DB</name></decl>,

<decl><name>T_HUFFMAN_ENV_BAL_3_0DB</name></decl>,

<decl><name>F_HUFFMAN_ENV_BAL_3_0DB</name></decl>,

<decl><name>T_HUFFMAN_NOISE_3_0DB</name></decl>,

<decl><name>T_HUFFMAN_NOISE_BAL_3_0DB</name></decl>,

}</block>;</enum>

<enum>enum <block>{

<decl><name>FIXFIX</name></decl>,

<decl><name>FIXVAR</name></decl>,

<decl><name>VARFIX</name></decl>,

<decl><name>VARVAR</name></decl>,

}</block>;</enum>

<enum>enum <block>{

<decl><name>EXTENSION_ID_PS</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int8_t</name></type> <name><name>vlc_sbr_lav</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <init>=

<expr><block>{ <expr><literal type="number">60</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SBR_INIT_VLC_STATIC</name><parameter_list>(<parameter><type><name>num</name></type></parameter>, <parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>INIT_VLC_STATIC(&amp;vlc_sbr[num], 9, sbr_tmp[num].table_size / sbr_tmp[num].elem_size, sbr_tmp[num].sbr_bits , 1, 1, sbr_tmp[num].sbr_codes, sbr_tmp[num].elem_size, sbr_tmp[num].elem_size, size)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SBR_VLC_ROW</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ name ##_codes, name ##_bits, sizeof(name ##_codes), sizeof(name ##_codes[0]) }</cpp:value></cpp:define>

<function_decl><type><name>void</name> <name>AAC_RENAME</name></type>(<name>ff_aac_sbr_init</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <name>AAC_RENAME</name></type>(<name>ff_aac_sbr_ctx_init</name>)<parameter_list>(<parameter><decl><type><name>AACContext</name> <modifier>*</modifier></type><name>ac</name></decl></parameter>, <parameter><decl><type><name>SpectralBandReplication</name> <modifier>*</modifier></type><name>sbr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id_aac</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <name>AAC_RENAME</name></type>(<name>ff_aac_sbr_ctx_close</name>)<parameter_list>(<parameter><decl><type><name>SpectralBandReplication</name> <modifier>*</modifier></type><name>sbr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name> <name>AAC_RENAME</name></type>(<name>ff_decode_sbr_extension</name>)<parameter_list>(<parameter><decl><type><name>AACContext</name> <modifier>*</modifier></type><name>ac</name></decl></parameter>, <parameter><decl><type><name>SpectralBandReplication</name> <modifier>*</modifier></type><name>sbr</name></decl></parameter>,

<parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>crc</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cnt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id_aac</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <name>AAC_RENAME</name></type>(<name>ff_sbr_apply</name>)<parameter_list>(<parameter><decl><type><name>AACContext</name> <modifier>*</modifier></type><name>ac</name></decl></parameter>, <parameter><decl><type><name>SpectralBandReplication</name> <modifier>*</modifier></type><name>sbr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id_aac</name></decl></parameter>,

<parameter><decl><type><name>INTFLOAT</name><modifier>*</modifier></type> <name>L</name></decl></parameter>, <parameter><decl><type><name>INTFLOAT</name> <modifier>*</modifier></type><name>R</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_aacsbr_func_ptr_init_mips</name><parameter_list>(<parameter><decl><type><name>AACSBRContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
