<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\dirac_arith.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dirac_arith.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint16_t</name></type> <name><name>ff_dirac_prob</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">24</literal></expr>,

<expr><literal type="number">29</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">74</literal></expr>,

<expr><literal type="number">82</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">114</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">141</literal></expr>,

<expr><literal type="number">150</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">170</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">211</literal></expr>, <expr><literal type="number">222</literal></expr>,

<expr><literal type="number">233</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">256</literal></expr>, <expr><literal type="number">267</literal></expr>, <expr><literal type="number">279</literal></expr>, <expr><literal type="number">291</literal></expr>, <expr><literal type="number">303</literal></expr>, <expr><literal type="number">315</literal></expr>,

<expr><literal type="number">327</literal></expr>, <expr><literal type="number">340</literal></expr>, <expr><literal type="number">353</literal></expr>, <expr><literal type="number">366</literal></expr>, <expr><literal type="number">379</literal></expr>, <expr><literal type="number">392</literal></expr>, <expr><literal type="number">405</literal></expr>, <expr><literal type="number">419</literal></expr>,

<expr><literal type="number">433</literal></expr>, <expr><literal type="number">447</literal></expr>, <expr><literal type="number">461</literal></expr>, <expr><literal type="number">475</literal></expr>, <expr><literal type="number">489</literal></expr>, <expr><literal type="number">504</literal></expr>, <expr><literal type="number">518</literal></expr>, <expr><literal type="number">533</literal></expr>,

<expr><literal type="number">548</literal></expr>, <expr><literal type="number">563</literal></expr>, <expr><literal type="number">578</literal></expr>, <expr><literal type="number">593</literal></expr>, <expr><literal type="number">609</literal></expr>, <expr><literal type="number">624</literal></expr>, <expr><literal type="number">640</literal></expr>, <expr><literal type="number">656</literal></expr>,

<expr><literal type="number">672</literal></expr>, <expr><literal type="number">688</literal></expr>, <expr><literal type="number">705</literal></expr>, <expr><literal type="number">721</literal></expr>, <expr><literal type="number">738</literal></expr>, <expr><literal type="number">754</literal></expr>, <expr><literal type="number">771</literal></expr>, <expr><literal type="number">788</literal></expr>,

<expr><literal type="number">805</literal></expr>, <expr><literal type="number">822</literal></expr>, <expr><literal type="number">840</literal></expr>, <expr><literal type="number">857</literal></expr>, <expr><literal type="number">875</literal></expr>, <expr><literal type="number">892</literal></expr>, <expr><literal type="number">910</literal></expr>, <expr><literal type="number">928</literal></expr>,

<expr><literal type="number">946</literal></expr>, <expr><literal type="number">964</literal></expr>, <expr><literal type="number">983</literal></expr>, <expr><literal type="number">1001</literal></expr>, <expr><literal type="number">1020</literal></expr>, <expr><literal type="number">1038</literal></expr>, <expr><literal type="number">1057</literal></expr>, <expr><literal type="number">1076</literal></expr>,

<expr><literal type="number">1095</literal></expr>, <expr><literal type="number">1114</literal></expr>, <expr><literal type="number">1133</literal></expr>, <expr><literal type="number">1153</literal></expr>, <expr><literal type="number">1172</literal></expr>, <expr><literal type="number">1192</literal></expr>, <expr><literal type="number">1211</literal></expr>, <expr><literal type="number">1231</literal></expr>,

<expr><literal type="number">1251</literal></expr>, <expr><literal type="number">1271</literal></expr>, <expr><literal type="number">1291</literal></expr>, <expr><literal type="number">1311</literal></expr>, <expr><literal type="number">1332</literal></expr>, <expr><literal type="number">1352</literal></expr>, <expr><literal type="number">1373</literal></expr>, <expr><literal type="number">1393</literal></expr>,

<expr><literal type="number">1414</literal></expr>, <expr><literal type="number">1435</literal></expr>, <expr><literal type="number">1456</literal></expr>, <expr><literal type="number">1477</literal></expr>, <expr><literal type="number">1498</literal></expr>, <expr><literal type="number">1520</literal></expr>, <expr><literal type="number">1541</literal></expr>, <expr><literal type="number">1562</literal></expr>,

<expr><literal type="number">1584</literal></expr>, <expr><literal type="number">1606</literal></expr>, <expr><literal type="number">1628</literal></expr>, <expr><literal type="number">1649</literal></expr>, <expr><literal type="number">1671</literal></expr>, <expr><literal type="number">1694</literal></expr>, <expr><literal type="number">1716</literal></expr>, <expr><literal type="number">1738</literal></expr>,

<expr><literal type="number">1760</literal></expr>, <expr><literal type="number">1783</literal></expr>, <expr><literal type="number">1806</literal></expr>, <expr><literal type="number">1828</literal></expr>, <expr><literal type="number">1851</literal></expr>, <expr><literal type="number">1874</literal></expr>, <expr><literal type="number">1897</literal></expr>, <expr><literal type="number">1920</literal></expr>,

<expr><literal type="number">1935</literal></expr>, <expr><literal type="number">1942</literal></expr>, <expr><literal type="number">1949</literal></expr>, <expr><literal type="number">1955</literal></expr>, <expr><literal type="number">1961</literal></expr>, <expr><literal type="number">1968</literal></expr>, <expr><literal type="number">1974</literal></expr>, <expr><literal type="number">1980</literal></expr>,

<expr><literal type="number">1985</literal></expr>, <expr><literal type="number">1991</literal></expr>, <expr><literal type="number">1996</literal></expr>, <expr><literal type="number">2001</literal></expr>, <expr><literal type="number">2006</literal></expr>, <expr><literal type="number">2011</literal></expr>, <expr><literal type="number">2016</literal></expr>, <expr><literal type="number">2021</literal></expr>,

<expr><literal type="number">2025</literal></expr>, <expr><literal type="number">2029</literal></expr>, <expr><literal type="number">2033</literal></expr>, <expr><literal type="number">2037</literal></expr>, <expr><literal type="number">2040</literal></expr>, <expr><literal type="number">2044</literal></expr>, <expr><literal type="number">2047</literal></expr>, <expr><literal type="number">2050</literal></expr>,

<expr><literal type="number">2053</literal></expr>, <expr><literal type="number">2056</literal></expr>, <expr><literal type="number">2058</literal></expr>, <expr><literal type="number">2061</literal></expr>, <expr><literal type="number">2063</literal></expr>, <expr><literal type="number">2065</literal></expr>, <expr><literal type="number">2066</literal></expr>, <expr><literal type="number">2068</literal></expr>,

<expr><literal type="number">2069</literal></expr>, <expr><literal type="number">2070</literal></expr>, <expr><literal type="number">2071</literal></expr>, <expr><literal type="number">2072</literal></expr>, <expr><literal type="number">2072</literal></expr>, <expr><literal type="number">2072</literal></expr>, <expr><literal type="number">2072</literal></expr>, <expr><literal type="number">2072</literal></expr>,

<expr><literal type="number">2072</literal></expr>, <expr><literal type="number">2071</literal></expr>, <expr><literal type="number">2070</literal></expr>, <expr><literal type="number">2069</literal></expr>, <expr><literal type="number">2068</literal></expr>, <expr><literal type="number">2066</literal></expr>, <expr><literal type="number">2065</literal></expr>, <expr><literal type="number">2063</literal></expr>,

<expr><literal type="number">2060</literal></expr>, <expr><literal type="number">2058</literal></expr>, <expr><literal type="number">2055</literal></expr>, <expr><literal type="number">2052</literal></expr>, <expr><literal type="number">2049</literal></expr>, <expr><literal type="number">2045</literal></expr>, <expr><literal type="number">2042</literal></expr>, <expr><literal type="number">2038</literal></expr>,

<expr><literal type="number">2033</literal></expr>, <expr><literal type="number">2029</literal></expr>, <expr><literal type="number">2024</literal></expr>, <expr><literal type="number">2019</literal></expr>, <expr><literal type="number">2013</literal></expr>, <expr><literal type="number">2008</literal></expr>, <expr><literal type="number">2002</literal></expr>, <expr><literal type="number">1996</literal></expr>,

<expr><literal type="number">1989</literal></expr>, <expr><literal type="number">1982</literal></expr>, <expr><literal type="number">1975</literal></expr>, <expr><literal type="number">1968</literal></expr>, <expr><literal type="number">1960</literal></expr>, <expr><literal type="number">1952</literal></expr>, <expr><literal type="number">1943</literal></expr>, <expr><literal type="number">1934</literal></expr>,

<expr><literal type="number">1925</literal></expr>, <expr><literal type="number">1916</literal></expr>, <expr><literal type="number">1906</literal></expr>, <expr><literal type="number">1896</literal></expr>, <expr><literal type="number">1885</literal></expr>, <expr><literal type="number">1874</literal></expr>, <expr><literal type="number">1863</literal></expr>, <expr><literal type="number">1851</literal></expr>,

<expr><literal type="number">1839</literal></expr>, <expr><literal type="number">1827</literal></expr>, <expr><literal type="number">1814</literal></expr>, <expr><literal type="number">1800</literal></expr>, <expr><literal type="number">1786</literal></expr>, <expr><literal type="number">1772</literal></expr>, <expr><literal type="number">1757</literal></expr>, <expr><literal type="number">1742</literal></expr>,

<expr><literal type="number">1727</literal></expr>, <expr><literal type="number">1710</literal></expr>, <expr><literal type="number">1694</literal></expr>, <expr><literal type="number">1676</literal></expr>, <expr><literal type="number">1659</literal></expr>, <expr><literal type="number">1640</literal></expr>, <expr><literal type="number">1622</literal></expr>, <expr><literal type="number">1602</literal></expr>,

<expr><literal type="number">1582</literal></expr>, <expr><literal type="number">1561</literal></expr>, <expr><literal type="number">1540</literal></expr>, <expr><literal type="number">1518</literal></expr>, <expr><literal type="number">1495</literal></expr>, <expr><literal type="number">1471</literal></expr>, <expr><literal type="number">1447</literal></expr>, <expr><literal type="number">1422</literal></expr>,

<expr><literal type="number">1396</literal></expr>, <expr><literal type="number">1369</literal></expr>, <expr><literal type="number">1341</literal></expr>, <expr><literal type="number">1312</literal></expr>, <expr><literal type="number">1282</literal></expr>, <expr><literal type="number">1251</literal></expr>, <expr><literal type="number">1219</literal></expr>, <expr><literal type="number">1186</literal></expr>,

<expr><literal type="number">1151</literal></expr>, <expr><literal type="number">1114</literal></expr>, <expr><literal type="number">1077</literal></expr>, <expr><literal type="number">1037</literal></expr>, <expr><literal type="number">995</literal></expr>, <expr><literal type="number">952</literal></expr>, <expr><literal type="number">906</literal></expr>, <expr><literal type="number">857</literal></expr>,

<expr><literal type="number">805</literal></expr>, <expr><literal type="number">750</literal></expr>, <expr><literal type="number">690</literal></expr>, <expr><literal type="number">625</literal></expr>, <expr><literal type="number">553</literal></expr>, <expr><literal type="number">471</literal></expr>, <expr><literal type="number">376</literal></expr>, <expr><literal type="number">255</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_dirac_next_ctx</name><index>[<expr><name>DIRAC_CTX_COUNT</name></expr>]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>CTX_ZPZN_F1</name></expr>]</index> <operator>=</operator> <name>CTX_ZP_F2</name></expr>,

<expr><index>[<expr><name>CTX_ZPNN_F1</name></expr>]</index> <operator>=</operator> <name>CTX_ZP_F2</name></expr>,

<expr><index>[<expr><name>CTX_ZP_F2</name></expr>]</index> <operator>=</operator> <name>CTX_ZP_F3</name></expr>,

<expr><index>[<expr><name>CTX_ZP_F3</name></expr>]</index> <operator>=</operator> <name>CTX_ZP_F4</name></expr>,

<expr><index>[<expr><name>CTX_ZP_F4</name></expr>]</index> <operator>=</operator> <name>CTX_ZP_F5</name></expr>,

<expr><index>[<expr><name>CTX_ZP_F5</name></expr>]</index> <operator>=</operator> <name>CTX_ZP_F6</name></expr>,

<expr><index>[<expr><name>CTX_ZP_F6</name></expr>]</index> <operator>=</operator> <name>CTX_ZP_F6</name></expr>,

<expr><index>[<expr><name>CTX_NPZN_F1</name></expr>]</index> <operator>=</operator> <name>CTX_NP_F2</name></expr>,

<expr><index>[<expr><name>CTX_NPNN_F1</name></expr>]</index> <operator>=</operator> <name>CTX_NP_F2</name></expr>,

<expr><index>[<expr><name>CTX_NP_F2</name></expr>]</index> <operator>=</operator> <name>CTX_NP_F3</name></expr>,

<expr><index>[<expr><name>CTX_NP_F3</name></expr>]</index> <operator>=</operator> <name>CTX_NP_F4</name></expr>,

<expr><index>[<expr><name>CTX_NP_F4</name></expr>]</index> <operator>=</operator> <name>CTX_NP_F5</name></expr>,

<expr><index>[<expr><name>CTX_NP_F5</name></expr>]</index> <operator>=</operator> <name>CTX_NP_F6</name></expr>,

<expr><index>[<expr><name>CTX_NP_F6</name></expr>]</index> <operator>=</operator> <name>CTX_NP_F6</name></expr>,

<expr><index>[<expr><name>CTX_DELTA_Q_F</name></expr>]</index> <operator>=</operator> <name>CTX_DELTA_Q_F</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>ff_dirac_prob_branchless</name><index>[<expr><literal type="number">256</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_dirac_init_arith_tables</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>ff_dirac_prob_branchless</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>ff_dirac_prob</name><index>[<expr><literal type="number">255</literal><operator>-</operator><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ff_dirac_prob_branchless</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>-</operator><name><name>ff_dirac_prob</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_dirac_init_arith_decoder</name><parameter_list>(<parameter><decl><type><name>DiracArith</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>align_get_bits</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>length</name> <operator>=</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name>length</name></expr></argument>, <argument><expr><call><name>get_bits_left</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call><operator>/</operator><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>bytestream</name></name> <operator>=</operator> <name><name>gb</name><operator>-&gt;</operator><name>buffer</name></name> <operator>+</operator> <call><name>get_bits_count</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call><operator>/</operator><literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>bytestream_end</name></name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>bytestream</name></name> <operator>+</operator> <name>length</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>skip_bits_long</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><name>length</name><operator>*</operator><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>low</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>low</name></name> <operator>&lt;&lt;=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>c</name><operator>-&gt;</operator><name>bytestream</name></name> <operator>&lt;</operator> <name><name>c</name><operator>-&gt;</operator><name>bytestream_end</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>low</name></name> <operator>|=</operator> <operator>*</operator><name><name>c</name><operator>-&gt;</operator><name>bytestream</name></name><operator>++</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>low</name></name> <operator>|=</operator> <literal type="number">0xff</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>counter</name></name> <operator>=</operator> <operator>-</operator><literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>range</name></name> <operator>=</operator> <literal type="number">0xffff</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>overread</name></name><operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>DIRAC_CTX_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>contexts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0x8000</literal></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>

</unit>
