<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\mips\mpegvideoencdsp_msa.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h263dsp_mips.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/generic_macros_msa.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>sum_u8src_16width_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16u8</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>, <decl><type ref="prev"/><name>in6</name></decl>, <decl><type ref="prev"/><name>in7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16u8</name></type> <name>in8</name></decl>, <decl><type ref="prev"/><name>in9</name></decl>, <decl><type ref="prev"/><name>in10</name></decl>, <decl><type ref="prev"/><name>in11</name></decl>, <decl><type ref="prev"/><name>in12</name></decl>, <decl><type ref="prev"/><name>in13</name></decl>, <decl><type ref="prev"/><name>in14</name></decl>, <decl><type ref="prev"/><name>in15</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>in8</name></expr></argument>, <argument><expr><name>in9</name></expr></argument>, <argument><expr><name>in10</name></expr></argument>, <argument><expr><name>in11</name></expr></argument>, <argument><expr><name>in12</name></expr></argument>, <argument><expr><name>in13</name></expr></argument>, <argument><expr><name>in14</name></expr></argument>, <argument><expr><name>in15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>HADD_UB4_UB</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>HADD_UB4_UB</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>HADD_UB4_UB</name><argument_list>(<argument><expr><name>in8</name></expr></argument>, <argument><expr><name>in9</name></expr></argument>, <argument><expr><name>in10</name></expr></argument>, <argument><expr><name>in11</name></expr></argument>, <argument><expr><name>in8</name></expr></argument>, <argument><expr><name>in9</name></expr></argument>, <argument><expr><name>in10</name></expr></argument>, <argument><expr><name>in11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>HADD_UB4_UB</name><argument_list>(<argument><expr><name>in12</name></expr></argument>, <argument><expr><name>in13</name></expr></argument>, <argument><expr><name>in14</name></expr></argument>, <argument><expr><name>in15</name></expr></argument>, <argument><expr><name>in12</name></expr></argument>, <argument><expr><name>in13</name></expr></argument>, <argument><expr><name>in14</name></expr></argument>, <argument><expr><name>in15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>HADD_UH_U32</name><argument_list>(<argument><expr><name>in15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>sum</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_pix_sum_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>line_size</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>sum_u8src_16width_msa</name><argument_list>(<argument><expr><name>pix</name></expr></argument>, <argument><expr><name>line_size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

</unit>
