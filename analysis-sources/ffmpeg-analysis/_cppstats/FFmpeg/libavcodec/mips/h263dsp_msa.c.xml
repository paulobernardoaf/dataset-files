<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\mips\h263dsp_msa.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/generic_macros_msa.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h263dsp_mips.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>h263_loop_filter_strength_msa</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>h263_h_loop_filter_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>qscale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>strength</name> <init>= <expr><name><name>h263_loop_filter_strength_msa</name><index>[<expr><name>qscale</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16u8</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>, <decl><type ref="prev"/><name>in6</name></decl>, <decl><type ref="prev"/><name>in7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>temp0</name></decl>, <decl><type ref="prev"/><name>temp1</name></decl>, <decl><type ref="prev"/><name>temp2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>diff0</name></decl>, <decl><type ref="prev"/><name>diff2</name></decl>, <decl><type ref="prev"/><name>diff4</name></decl>, <decl><type ref="prev"/><name>diff6</name></decl>, <decl><type ref="prev"/><name>diff8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>d0</name></decl>, <decl><type ref="prev"/><name>a_d0</name></decl>, <decl><type ref="prev"/><name>str_x2</name></decl>, <decl><type ref="prev"/><name>str</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TRANSPOSE8x4_UB_UB</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>,

<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>a_d0</name> <operator>=</operator> <call><name>__msa_hsub_u_h</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <call><name>__msa_hsub_u_h</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>&lt;&lt;=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff0</name> <operator>=</operator> <name>a_d0</name> <operator>+</operator> <name>temp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>-</operator><operator>(</operator><operator>-</operator><name>diff0</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>str_x2</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>strength</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>str_x2</name> <operator>&lt;=</operator> <name>diff2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <name>str_x2</name> <operator>-</operator> <name>diff2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><operator>-</operator><name>strength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff2</name> <operator>&lt;</operator> <name>str</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>=</operator> <name>diff0</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>str_x2</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>strength</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff4</name> <operator>&lt;=</operator> <name>str_x2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <name>str_x2</name> <operator>-</operator> <name>diff4</name></expr>;</expr_stmt>

<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>strength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>str</name> <operator>&lt;</operator> <name>diff4</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <call><name>__msa_clti_s_h</name><argument_list>(<argument><expr><name>diff0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>-</operator><name>diff2</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>&gt;&gt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff8</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>(</operator><operator>-</operator><name>a_d0</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>-</operator><operator>(</operator><name>diff6</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <operator>-</operator><name>diff8</name></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff6</name> <operator>&lt;</operator> <name>temp2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <name>a_d0</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff2</name> <operator>&lt;=</operator> <name>diff8</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <call><name>__msa_clti_s_h</name><argument_list>(<argument><expr><name>a_d0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>a_d0</name></expr></argument>, <argument><expr><name>diff6</name></expr></argument>, <argument><expr><name>a_d0</name></expr></argument>, <argument><expr><name>d0</name></expr></argument>, <argument><expr><name>diff6</name></expr></argument>, <argument><expr><name>d0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in0</name> <operator>-</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <name>diff6</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>in1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in1</name> <operator>+</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <name>diff6</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>in3</name> <operator>=</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_adds_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>d0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in3</name> <operator>=</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in2</name> <operator>=</operator> <call><name>__msa_subsus_u_b</name><argument_list>(<argument><expr><name>in2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>d0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>temp0</name></expr></argument>, <argument><expr><name>temp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>temp1</name></expr></argument>, <argument><expr><name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvl_h</name><argument_list>(<argument><expr><name>temp1</name></expr></argument>, <argument><expr><name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>h263_v_loop_filter_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>qscale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>strength</name> <init>= <expr><name><name>h263_loop_filter_strength_msa</name><index>[<expr><name>qscale</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16u8</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>temp0</name></decl>, <decl><type ref="prev"/><name>temp2</name></decl>, <decl><type ref="prev"/><name>diff0</name></decl>, <decl><type ref="prev"/><name>diff2</name></decl>, <decl><type ref="prev"/><name>diff4</name></decl>, <decl><type ref="prev"/><name>diff6</name></decl>, <decl><type ref="prev"/><name>diff8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>d0</name></decl>, <decl><type ref="prev"/><name>a_d0</name></decl>, <decl><type ref="prev"/><name>str_x2</name></decl>, <decl><type ref="prev"/><name>str</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal> <operator>*</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>a_d0</name> <operator>=</operator> <call><name>__msa_hsub_u_h</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <call><name>__msa_hsub_u_h</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>&lt;&lt;=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff0</name> <operator>=</operator> <name>a_d0</name> <operator>+</operator> <name>temp2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>-</operator><operator>(</operator><operator>-</operator><name>diff0</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>str_x2</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>strength</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>str_x2</name> <operator>&lt;=</operator> <name>diff2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <name>str_x2</name> <operator>-</operator> <name>diff2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><operator>-</operator><name>strength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff2</name> <operator>&lt;</operator> <name>str</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>=</operator> <name>diff0</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>str_x2</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>strength</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff4</name> <operator>&lt;=</operator> <name>str_x2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <name>str_x2</name> <operator>-</operator> <name>diff4</name></expr>;</expr_stmt>

<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>strength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>str</name> <operator>&lt;</operator> <name>diff4</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <call><name>__msa_clti_s_h</name><argument_list>(<argument><expr><name>diff0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>-</operator><name>diff2</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff4</name> <operator>&gt;&gt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff8</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>(</operator><operator>-</operator><name>a_d0</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>-</operator><operator>(</operator><name>diff6</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>temp2</name> <operator>=</operator> <operator>-</operator><name>diff8</name></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff6</name> <operator>&lt;</operator> <name>temp2</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <name>a_d0</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <operator>(</operator><name>diff2</name> <operator>&lt;=</operator> <name>diff8</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>diff2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>temp0</name> <operator>=</operator> <call><name>__msa_clti_s_h</name><argument_list>(<argument><expr><name>a_d0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>diff6</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_bmz_v</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>diff2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>temp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>a_d0</name></expr></argument>, <argument><expr><name>diff6</name></expr></argument>, <argument><expr><name>a_d0</name></expr></argument>, <argument><expr><name>d0</name></expr></argument>, <argument><expr><name>diff6</name></expr></argument>, <argument><expr><name>d0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in0</name> <operator>-</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <name>diff6</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>in1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in1</name> <operator>+</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <name>diff6</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>in3</name> <operator>=</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_adds_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>in3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>d0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in3</name> <operator>=</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in2</name> <operator>=</operator> <call><name>__msa_subsus_u_b</name><argument_list>(<argument><expr><name>in2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>d0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>in0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>in3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res2</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>in2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res3</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>in1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_h263_h_loop_filter_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>q_scale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>h263_h_loop_filter_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>q_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_h263_v_loop_filter_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>q_scale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>h263_v_loop_filter_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>q_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
